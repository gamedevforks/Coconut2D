// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    code = Pointer_stringify(code);
    if (code[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (code.indexOf('"', 1) === code.length-1) {
        code = code.substr(1, code.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + code + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + code + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;

function jsCall() {
  var args = Array.prototype.slice.call(arguments);
  return Runtime.functionPointers[args[0]].apply(null, args.slice(1));
}








//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'size_t',
    'x': 'long long',
    'y': 'size_t long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    return rawList ? list : ret + flushList();
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 21936;


/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } });













































































































































































































































































































































































































































































































































































































































































































































































































































































var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,152,60,0,0,70,0,0,0,220,0,0,0,206,0,0,0,92,0,0,0,42,0,0,0,44,0,0,0,42,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,168,60,0,0,70,0,0,0,196,0,0,0,206,0,0,0,92,0,0,0,42,0,0,0,42,0,0,0,44,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;



































































































































































































































































































































var __ZN12b2BroadPhaseC1Ev;
var __ZN12b2BroadPhaseD1Ev;
var __ZN13b2DynamicTreeC1Ev;
var __ZN13b2DynamicTreeD1Ev;
var __ZN16b2BlockAllocatorC1Ev;
var __ZN16b2BlockAllocatorD1Ev;
var __ZN6b2DrawC1Ev;
var __ZN16b2StackAllocatorC1Ev;
var __ZN16b2StackAllocatorD1Ev;
var __ZN7b2TimerC1Ev;
var __ZN6b2BodyC1EPK9b2BodyDefP7b2World;
var __ZN6b2BodyD1Ev;
var __ZN16b2ContactManagerC1Ev;
var __ZN9b2FixtureC1Ev;
var __ZN8b2IslandC1EiiiP16b2StackAllocatorP17b2ContactListener;
var __ZN8b2IslandD1Ev;
var __ZN7b2WorldC1ERK6b2Vec2;
var __ZN7b2WorldD1Ev;
var __ZN15b2ContactSolverC1EP18b2ContactSolverDef;
var __ZN15b2ContactSolverD1Ev;
var __ZN15b2DistanceJointC1EPK18b2DistanceJointDef;
var __ZN15b2FrictionJointC1EPK18b2FrictionJointDef;
var __ZN11b2GearJointC1EPK14b2GearJointDef;
var __ZN12b2MouseJointC1EPK15b2MouseJointDef;
var __ZN16b2PrismaticJointC1EPK19b2PrismaticJointDef;
var __ZN13b2PulleyJointC1EPK16b2PulleyJointDef;
var __ZN15b2RevoluteJointC1EPK18b2RevoluteJointDef;
var __ZN11b2RopeJointC1EPK14b2RopeJointDef;
var __ZN11b2WeldJointC1EPK14b2WeldJointDef;
var __ZN12b2WheelJointC1EPK15b2WheelJointDef;
/* memory initializer */ allocate([184,53,0,0,0,0,0,0,0,55,0,0,0,0,0,0,32,32,106,100,46,109,97,120,77,111,116,111,114,84,111,114,113,117,101,32,61,32,37,46,49,53,108,101,102,59,10,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,101,110,97,98,108,101,76,105,109,105,116,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,114,101,102,101,114,101,110,99,101,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0,32,32,106,100,46,106,111,105,110,116,50,32,61,32,106,111,105,110,116,115,91,37,100,93,59,10,0,0,0,0,0,0,32,32,106,100,46,109,97,120,70,111,114,99,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,98,100,45,62,112,111,115,105,116,105,111,110,46,73,115,86,97,108,105,100,40,41,0,0,98,50,86,101,99,50,32,103,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,32,32,32,32,102,100,46,102,105,108,116,101,114,46,109,97,115,107,66,105,116,115,32,61,32,117,105,110,116,49,54,40,37,100,41,59,10,0,0,0,109,95,102,105,120,116,117,114,101,67,111,117,110,116,32,62,32,48,0,0,0,0,0,0,48,32,60,61,32,105,66,32,38,38,32,105,66,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,109,95,105,110,100,101,120,32,61,61,32,48,0,0,0,0,32,32,106,100,46,109,111,116,111,114,83,112,101,101,100,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,32,32,106,100,46,100,97,109,112,105,110,103,82,97,116,105,111,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,32,32,106,100,46,114,101,102,101,114,101,110,99,101,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0,32,32,106,100,46,103,114,111,117,110,100,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,120,105,115,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,32,32,106,100,46,106,111,105,110,116,49,32,61,32,106,111,105,110,116,115,91,37,100,93,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,100,97,109,112,105,110,103,82,97,116,105,111,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,118,101,114,116,101,120,67,111,117,110,116,32,60,61,32,56,0,0,0,0,0,0,0,0,32,32,32,32,102,100,46,102,105,108,116,101,114,46,99,97,116,101,103,111,114,121,66,105,116,115,32,61,32,117,105,110,116,49,54,40,37,100,41,59,10,0,0,0,0,0,0,0,102,105,120,116,117,114,101,45,62,109,95,98,111,100,121,32,61,61,32,116,104,105,115,0,105,65,32,33,61,32,40,45,49,41,0,0,0,0,0,0,109,95,119,111,114,108,100,45,62,73,115,76,111,99,107,101,100,40,41,32,61,61,32,102,97,108,115,101,0,0,0,0,32,32,106,100,46,101,110,97,98,108,101,77,111,116,111,114,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,32,32,106,100,46,102,114,101,113,117,101,110,99,121,72,122,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,103,114,111,117,110,100,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,102,114,101,113,117,101,110,99,121,72,122,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,106,32,60,32,98,50,95,98,108,111,99,107,83,105,122,101,115,0,0,0,0,0,0,0,97,108,112,104,97,48,32,60,32,49,46,48,102,0,0,0,32,32,32,32,102,100,46,105,115,83,101,110,115,111,114,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,99,104,105,108,100,50,32,33,61,32,40,45,49,41,0,0,98,50,73,115,86,97,108,105,100,40,98,100,45,62,108,105,110,101,97,114,68,97,109,112,105,110,103,41,32,38,38,32,98,100,45,62,108,105,110,101,97,114,68,97,109,112,105,110,103,32,62,61,32,48,46,48,102,0,0,0,0,0,0,0,99,111,117,110,116,32,62,61,32,51,0,0,0,0,0,0,51,32,60,61,32,99,111,117,110,116,32,38,38,32,99,111,117,110,116,32,60,61,32,56,0,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,120,105,115,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,32,32,106,100,46,114,101,102,101,114,101,110,99,101,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0,32,32,106,100,46,109,97,120,76,101,110,103,116,104,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,77,111,117,115,101,32,106,111,105,110,116,32,100,117,109,112,105,110,103,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,46,10,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,108,101,110,103,116,104,32,61,32,37,46,49,53,108,101,102,59,10,0,99,104,105,108,100,49,32,33,61,32,40,45,49,41,0,0,116,121,112,101,65,32,61,61,32,98,50,95,100,121,110,97,109,105,99,66,111,100,121,32,124,124,32,116,121,112,101,66,32,61,61,32,98,50,95,100,121,110,97,109,105,99,66,111,100,121,0,0,0,0,0,0,32,32,32,32,102,100,46,100,101,110,115,105,116,121,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,48,32,60,61,32,105,110,100,101,120,32,38,38,32,105,110,100,101,120,32,60,32,99,104,97,105,110,45,62,109,95,99,111,117,110,116,0,0,0,0,98,50,73,115,86,97,108,105,100,40,98,100,45,62,97,110,103,117,108,97,114,68,97,109,112,105,110,103,41,32,38,38,32,98,100,45,62,97,110,103,117,108,97,114,68,97,109,112,105,110,103,32,62,61,32,48,46,48,102,0,0,0,0,0,112,32,61,61,32,101,110,116,114,121,45,62,100,97,116,97,0,0,0,0,0,0,0,0,97,114,101,97,32,62,32,49,46,49,57,50,48,57,50,57,48,101,45,48,55,70,0,0,99,104,105,108,100,73,110,100,101,120,32,60,32,109,95,99,111,117,110,116,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,48,32,60,32,99,111,117,110,116,32,38,38,32,99,111,117,110,116,32,60,32,51,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,100,32,43,32,104,32,42,32,107,32,62,32,49,46,49,57,50,48,57,50,57,48,101,45,48,55,70,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,112,99,45,62,112,111,105,110,116,67,111,117,110,116,32,62,32,48,0,0,0,0,0,0,115,116,97,99,107,67,111,117,110,116,32,60,32,115,116,97,99,107,83,105,122,101,0,0,109,95,110,111,100,101,115,91,112,114,111,120,121,73,100,93,46,73,115,76,101,97,102,40,41,0,0,0,0,0,0,0,32,32,32,32,102,100,46,114,101,115,116,105,116,117,116,105,111,110,32,61,32,37,46,49,53,108,101,102,59,10,0,0,99,97,99,104,101,45,62,99,111,117,110,116,32,60,61,32,51,0,0,0,0,0,0,0,98,50,73,115,86,97,108,105,100,40,98,100,45,62,97,110,103,117,108,97,114,86,101,108,111,99,105,116,121,41,0,0,109,95,101,110,116,114,121,67,111,117,110,116,32,62,32,48,0,0,0,0,0,0,0,0,98,108,111,99,107,67,111,117,110,116,32,42,32,98,108,111,99,107,83,105,122,101,32,60,61,32,98,50,95,99,104,117,110,107,83,105,122,101,0,0,109,95,118,101,114,116,101,120,67,111,117,110,116,32,62,61,32,51,0,0,0,0,0,0,48,32,60,61,32,105,110,100,101,120,32,38,38,32,105,110,100,101,120,32,60,32,109,95,99,111,117,110,116,32,45,32,49,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,98,50,73,115,86,97,108,105,100,40,100,101,102,45,62,100,97,109,112,105,110,103,82,97,116,105,111,41,32,38,38,32,100,101,102,45,62,100,97,109,112,105,110,103,82,97,116,105,111,32,62,61,32,48,46,48,102,0,0,0,0,0,0,0,32,32,98,50,71,101,97,114,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,98,50,87,104,101,101,108,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,97,46,120,32,62,61,32,48,46,48,102,32,38,38,32,97,46,121,32,62,61,32,48,46,48,102,0,0,0,0,0,0,48,32,60,61,32,116,121,112,101,65,32,38,38,32,116,121,112,101,66,32,60,32,98,50,83,104,97,112,101,58,58,101,95,116,121,112,101,67,111,117,110,116,0,0,0,0,0,0,109,95,118,101,114,116,105,99,101,115,32,61,61,32,48,76,32,38,38,32,109,95,99,111,117,110,116,32,61,61,32,48,0,0,0,0,0,0,0,0,32,32,98,50,87,101,108,100,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,98,45,62,73,115,65,99,116,105,118,101,40,41,32,61,61,32,116,114,117,101,0,0,0,48,32,60,61,32,112,114,111,120,121,73,100,32,38,38,32,112,114,111,120,121,73,100,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,0,0,0,0,0,0,32,32,32,32,102,100,46,102,114,105,99,116,105,111,110,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,92,66,111,120,50,68,47,67,111,109,109,111,110,47,98,50,71,114,111,119,97,98,108,101,83,116,97,99,107,46,104,0,0,0,0,0,32,32,98,50,82,111,112,101,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,92,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,68,105,115,116,97,110,99,101,46,104,0,0,0,0,0,0,0,98,50,73,115,86,97,108,105,100,40,98,100,45,62,97,110,103,108,101,41,0,0,0,0,108,111,119,101,114,32,60,61,32,117,112,112,101,114,0,0,109,95,101,110,116,114,121,67,111,117,110,116,32,60,32,98,50,95,109,97,120,83,116,97,99,107,69,110,116,114,105,101,115,0,0,0,0,0,0,0,48,32,60,61,32,105,110,100,101,120,32,38,38,32,105,110,100,101,120,32,60,32,98,50,95,98,108,111,99,107,83,105,122,101,115,0,0,0,0,0,114,97,116,105,111,32,62,32,49,46,49,57,50,48,57,50,57,48,101,45,48,55,70,0,48,46,48,102,32,60,61,32,108,111,119,101,114,32,38,38,32,108,111,119,101,114,32,60,61,32,105,110,112,117,116,46,109,97,120,70,114,97,99,116,105,111,110,0,0,0,0,0,108,111,119,101,114,32,60,61,32,117,112,112,101,114,0,0,116,97,114,103,101,116,32,62,32,116,111,108,101,114,97,110,99,101,0,0,0,0,0,0,99,111,117,110,116,32,62,61,32,50,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,100,101,102,45,62,116,97,114,103,101,116,46,73,115,86,97,108,105,100,40,41,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,98,50,80,117,108,108,101,121,74,111,105,110,116,68,101,102,32,106,100,59,10,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,98,50,73,115,86,97,108,105,100,40,100,101,102,45,62,102,114,101,113,117,101,110,99,121,72,122,41,32,38,38,32,100,101,102,45,62,102,114,101,113,117,101,110,99,121,72,122,32,62,61,32,48,46,48,102,0,47,47,32,68,117,109,112,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,116,104,105,115,32,106,111,105,110,116,32,116,121,112,101,46,10,0,0,98,50,73,115,86,97,108,105,100,40,114,97,116,105,111,41,0,0,0,0,0,0,0,0,32,32,98,50,70,114,105,99,116,105,111,110,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,32,32,98,111,100,105,101,115,91,37,100,93,45,62,67,114,101,97,116,101,70,105,120,116,117,114,101,40,38,102,100,41,59,10,0,0,0,0,112,111,105,110,116,67,111,117,110,116,32,61,61,32,49,32,124,124,32,112,111,105,110,116,67,111,117,110,116,32,61,61,32,50,0,0,0,0,0,0,115,95,105,110,105,116,105,97,108,105,122,101,100,32,61,61,32,116,114,117,101,0,0,0,32,32,32,32,102,100,46,115,104,97,112,101,32,61,32,38,115,104,97,112,101,59,10,0,125,10,0,0,0,0,0,0,109,95,116,121,112,101,65,32,61,61,32,101,95,114,101,118,111,108,117,116,101,74,111,105,110,116,32,124,124,32,109,95,116,121,112,101,65,32,61,61,32,101,95,112,114,105,115,109,97,116,105,99,74,111,105,110,116,0,0,0,0,0,0,0,109,95,106,111,105,110,116,67,111,117,110,116,32,62,32,48,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,48,32,60,32,109,95,110,111,100,101,67,111,117,110,116,0,32,32,32,32,98,50,70,105,120,116,117,114,101,68,101,102,32,102,100,59,10,0,0,0,109,95,99,111,117,110,116,32,62,32,48,0,0,0,0,0,10,0,0,0,0,0,0,0,32,32,125,10,0,0,0,0,110,111,100,101,45,62,73,115,76,101,97,102,40,41,32,61,61,32,102,97,108,115,101,0,98,50,73,115,86,97,108,105,100,40,102,111,114,99,101,41,32,38,38,32,102,111,114,99,101,32,62,61,32,48,46,48,102,0,0,0,0,0,0,0,32,32,32,32,115,104,97,112,101,46,109,95,104,97,115,78,101,120,116,86,101,114,116,101,120,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,32,32,123,10,0,0,0,0,109,95,110,111,100,101,67,111,117,110,116,32,43,32,102,114,101,101,67,111,117,110,116,32,61,61,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,0,0,0,0,0,48,32,60,61,32,105,110,100,101,120,32,38,38,32,105,110,100,101,120,32,60,32,109,95,99,111,117,110,116,0,0,0,32,32,98,50,68,105,115,116,97,110,99,101,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,0,0,0,0,98,100,45,62,108,105,110,101,97,114,86,101,108,111,99,105,116,121,46,73,115,86,97,108,105,100,40,41,0,0,0,0,32,32,32,32,115,104,97,112,101,46,109,95,104,97,115,80,114,101,118,86,101,114,116,101,120,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,10,0,0,0,0,0,0,0,109,95,102,105,120,116,117,114,101,65,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,112,111,108,121,103,111,110,0,0,0,0,0,71,101,116,72,101,105,103,104,116,40,41,32,61,61,32,67,111,109,112,117,116,101,72,101,105,103,104,116,40,41,0,0,109,95,101,110,116,114,121,67,111,117,110,116,32,61,61,32,48,0,0,0,0,0,0,0,109,95,102,105,120,116,117,114,101,65,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,112,111,108,121,103,111,110,0,0,0,0,0,48,32,60,61,32,102,114,101,101,73,110,100,101,120,32,38,38,32,102,114,101,101,73,110,100,101,120,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,0,0,109,95,98,111,100,121,67,111,117,110,116,32,60,32,109,95,98,111,100,121,67,97,112,97,99,105,116,121,0,0,0,0,32,32,32,32,115,104,97,112,101,46,109,95,110,101,120,116,86,101,114,116,101,120,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,32,32,98,111,100,105,101,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,66,111,100,121,40,38,98,100,41,59,10,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,109,95,102,105,120,116,117,114,101,65,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,101,100,103,101,0,0,0,0,0,0,0,0,48,32,60,32,115,105,122,101,0,0,0,0,0,0,0,0,109,95,99,111,110,116,97,99,116,67,111,117,110,116,32,60,32,109,95,99,111,110,116,97,99,116,67,97,112,97,99,105,116,121,0,0,0,0,0,0,32,32,32,32,115,104,97,112,101,46,109,95,112,114,101,118,86,101,114,116,101,120,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,32,32,98,100,46,103,114,97,118,105,116,121,83,99,97,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,97,97,98,98,46,117,112,112,101,114,66,111,117,110,100,32,61,61,32,110,111,100,101,45,62,97,97,98,98,46,117,112,112,101,114,66,111,117,110,100,0,0,0,0,0,0,0,0,109,95,102,105,120,116,117,114,101,65,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,101,100,103,101,0,0,0,0,0,0,0,0,101,100,103,101,46,76,101,110,103,116,104,83,113,117,97,114,101,100,40,41,32,62,32,49,46,49,57,50,48,57,50,57,48,101,45,48,55,70,32,42,32,49,46,49,57,50,48,57,50,57,48,101,45,48,55,70,0,0,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,92,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,98,50,73,115,108,97,110,100,46,104,0,0,32,32,32,32,115,104,97,112,101,46,67,114,101,97,116,101,67,104,97,105,110,40,118,115,44,32,37,100,41,59,10,0,32,32,98,100,46,97,99,116,105,118,101,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,0,0,97,97,98,98,46,108,111,119,101,114,66,111,117,110,100,32,61,61,32,110,111,100,101,45,62,97,97,98,98,46,108,111,119,101,114,66,111,117,110,100,0,0,0,0,0,0,0,0,109,95,106,111,105,110,116,67,111,117,110,116,32,60,32,109,95,106,111,105,110,116,67,97,112,97,99,105,116,121,0,0,32,32,32,32,98,50,67,104,97,105,110,83,104,97,112,101,32,115,104,97,112,101,59,10,0,0,0,0,0,0,0,0,32,32,98,100,46,98,117,108,108,101,116,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,0,0,110,111,100,101,45,62,104,101,105,103,104,116,32,61,61,32,104,101,105,103,104,116,0,0,112,111,105,110,116,67,111,117,110,116,32,62,32,48,0,0,99,111,117,110,116,32,62,61,32,51,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,92,66,111,120,50,68,47,67,111,109,109,111,110,47,98,50,77,97,116,104,46,104,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,32,32,115,104,97,112,101,46,83,101,116,40,118,115,44,32,37,100,41,59,10,0,32,32,98,100,46,102,105,120,101,100,82,111,116,97,116,105,111,110,32,61,32,98,111,111,108,40,37,100,41,59,10,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,109,95,110,111,100,101,115,91,99,104,105,108,100,50,93,46,112,97,114,101,110,116,32,61,61,32,105,110,100,101,120,0,32,32,98,50,82,101,118,111,108,117,116,101,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,0,0,0,0,100,101,102,45,62,114,97,116,105,111,32,33,61,32,48,46,48,102,0,0,0,0,0,0,102,97,108,115,101,0,0,0,32,32,98,50,80,114,105,115,109,97,116,105,99,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,0,0,0,98,50,73,115,86,97,108,105,100,40,100,101,102,45,62,109,97,120,70,111,114,99,101,41,32,38,38,32,100,101,102,45,62,109,97,120,70,111,114,99,101,32,62,61,32,48,46,48,102,0,0,0,0,0,0,0,48,32,60,61,32,116,121,112,101,49,32,38,38,32,116,121,112,101,49,32,60,32,98,50,83,104,97,112,101,58,58,101,95,116,121,112,101,67,111,117,110,116,0,0,0,0,0,0,100,101,102,45,62,98,111,100,121,65,32,33,61,32,100,101,102,45,62,98,111,100,121,66,0,0,0,0,0,0,0,0,109,95,116,121,112,101,66,32,61,61,32,101,95,114,101,118,111,108,117,116,101,74,111,105,110,116,32,124,124,32,109,95,116,121,112,101,66,32,61,61,32,101,95,112,114,105,115,109,97,116,105,99,74,111,105,110,116,0,0,0,0,0,0,0,32,32,32,32,118,115,91,37,100,93,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,32,32,98,100,46,97,119,97,107,101,32,61,32,98,111,111,108,40,37,100,41,59,10,0,109,95,102,105,120,116,117,114,101,65,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,99,105,114,99,108,101,0,0,0,0,0,0,98,50,73,115,86,97,108,105,100,40,116,111,114,113,117,101,41,32,38,38,32,116,111,114,113,117,101,32,62,61,32,48,46,48,102,0,0,0,0,0,109,95,110,111,100,101,115,91,99,104,105,108,100,49,93,46,112,97,114,101,110,116,32,61,61,32,105,110,100,101,120,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,109,95,102,105,120,116,117,114,101,66,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,112,111,108,121,103,111,110,0,0,0,0,0,109,95,102,105,120,116,117,114,101,66,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,99,105,114,99,108,101,0,0,0,0,0,0,109,95,102,105,120,116,117,114,101,65,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,99,104,97,105,110,0,0,0,0,0,0,0,109,95,102,105,120,116,117,114,101,66,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,112,111,108,121,103,111,110,0,0,0,0,0,109,95,102,105,120,116,117,114,101,66,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,99,105,114,99,108,101,0,0,0,0,0,0,109,95,102,105,120,116,117,114,101,65,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,99,104,97,105,110,0,0,0,0,0,0,0,109,97,110,105,102,111,108,100,45,62,112,111,105,110,116,67,111,117,110,116,32,62,32,48,0,0,0,0,0,0,0,0,48,32,60,61,32,116,121,112,101,50,32,38,38,32,116,121,112,101,50,32,60,32,98,50,83,104,97,112,101,58,58,101,95,116,121,112,101,67,111,117,110,116,0,0,0,0,0,0,109,95,102,105,120,116,117,114,101,66,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,99,105,114,99,108,101,0,0,0,0,0,0,109,95,102,105,120,116,117,114,101,66,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,112,111,108,121,103,111,110,0,0,0,0,0,109,95,102,105,120,116,117,114,101,66,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,99,105,114,99,108,101,0,0,0,0,0,0,32,32,32,32,98,50,86,101,99,50,32,118,115,91,37,100,93,59,10,0,0,0,0,0,32,32,98,100,46,97,108,108,111,119,83,108,101,101,112,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,48,32,60,61,32,99,104,105,108,100,50,32,38,38,32,99,104,105,108,100,50,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,109,95,98,111,100,121,67,111,117,110,116,32,62,32,48,0,116,111,105,73,110,100,101,120,66,32,60,32,109,95,98,111,100,121,67,111,117,110,116,0,48,32,60,61,32,110,111,100,101,73,100,32,38,38,32,110,111,100,101,73,100,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,102,97,108,115,101,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,92,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,68,121,110,97,109,105,99,84,114,101,101,46,104,0,0,0,0,32,32,32,32,98,50,80,111,108,121,103,111,110,83,104,97,112,101,32,115,104,97,112,101,59,10,0,0,0,0,0,0,32,32,98,100,46,97,110,103,117,108,97,114,68,97,109,112,105,110,103,32,61,32,37,46,49,53,108,101,102,59,10,0,48,32,60,61,32,99,104,105,108,100,49,32,38,38,32,99,104,105,108,100,49,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,66,111,120,50,68,95,118,50,46,50,46,49,92,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,68,121,110,97,109,105,99,84,114,101,101,46,104,0,0,0,0,32,32,32,32,115,104,97,112,101,46,109,95,104,97,115,86,101,114,116,101,120,51,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,32,32,98,100,46,108,105,110,101,97,114,68,97,109,112,105,110,103,32,61,32,37,46,49,53,108,101,102,59,10,0,0,110,111,100,101,45,62,104,101,105,103,104,116,32,61,61,32,48,0,0,0,0,0,0,0,48,32,60,61,32,101,100,103,101,49,32,38,38,32,101,100,103,101,49,32,60,32,112,111,108,121,49,45,62,109,95,118,101,114,116,101,120,67,111,117,110,116,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,98,50,66,111,100,121,46,99,112,112,0,0,114,46,76,101,110,103,116,104,83,113,117,97,114,101,100,40,41,32,62,32,48,46,48,102,0,0,0,0,0,0,0,0,32,32,32,32,115,104,97,112,101,46,109,95,104,97,115,86,101,114,116,101,120,48,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,32,32,98,100,46,97,110,103,117,108,97,114,86,101,108,111,99,105,116,121,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,0,99,104,105,108,100,50,32,61,61,32,40,45,49,41,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,109,109,111,110,47,98,50,83,116,97,99,107,65,108,108,111,99,97,116,111,114,46,99,112,112,0,0,73,115,76,111,99,107,101,100,40,41,32,61,61,32,102,97,108,115,101,0,0,0,0,0,98,111,100,105,101,115,32,61,32,78,85,76,76,59,10,0,116,111,105,73,110,100,101,120,65,32,60,32,109,95,98,111,100,121,67,111,117,110,116,0,32,32,32,32,115,104,97,112,101,46,109,95,118,101,114,116,101,120,51,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,32,32,98,100,46,108,105,110,101,97,114,86,101,108,111,99,105,116,121,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,99,104,105,108,100,49,32,61,61,32,40,45,49,41,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,109,109,111,110,47,98,50,66,108,111,99,107,65,108,108,111,99,97,116,111,114,46,99,112,112,0,0,109,95,110,111,100,101,115,91,105,110,100,101,120,93,46,112,97,114,101,110,116,32,61,61,32,40,45,49,41,0,0,0,106,111,105,110,116,115,32,61,32,78,85,76,76,59,10,0,32,32,32,32,115,104,97,112,101,46,109,95,118,101,114,116,101,120,50,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,32,32,98,100,46,97,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,68,105,115,116,97,110,99,101,46,99,112,112,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,83,104,97,112,101,115,47,98,50,80,111,108,121,103,111,110,83,104,97,112,101,46,99,112,112,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,98,50,70,114,101,101,40,98,111,100,105,101,115,41,59,10,0,0,0,0,0,0,0,0,32,32,32,32,115,104,97,112,101,46,109,95,118,101,114,116,101,120,49,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,32,32,98,100,46,112,111,115,105,116,105,111,110,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,109,95,110,111,100,101,115,91,66,45,62,112,97,114,101,110,116,93,46,99,104,105,108,100,50,32,61,61,32,105,65,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,109,97,120,77,111,116,111,114,70,111,114,99,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,98,50,70,114,101,101,40,106,111,105,110,116,115,41,59,10,0,0,0,0,0,0,0,0,32,32,32,32,115,104,97,112,101,46,109,95,118,101,114,116,101,120,48,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,32,32,98,100,46,116,121,112,101,32,61,32,98,50,66,111,100,121,84,121,112,101,40,37,100,41,59,10,0,0,0,0,48,32,60,61,32,105,69,32,38,38,32,105,69,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,32,32,106,100,46,109,97,120,77,111,116,111,114,84,111,114,113,117,101,32,61,32,37,46,49,53,108,101,102,59,10,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,109,111,116,111,114,83,112,101,101,100,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,83,104,97,112,101,115,47,98,50,67,104,97,105,110,83,104,97,112,101,46,99,112,112,0,0,0,0,48,32,60,61,32,105,68,32,38,38,32,105,68,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,125,10,0,0,0,0,0,0,32,32,32,32,98,50,69,100,103,101,83,104,97,112,101,32,115,104,97,112,101,59,10,0,32,32,98,50,66,111,100,121,68,101,102,32,98,100,59,10,0,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,109,95,110,111,100,101,67,111,117,110,116,32,61,61,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,82,101,118,111,108,117,116,101,74,111,105,110,116,46,99,112,112,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,80,117,108,108,101,121,74,111,105,110,116,46,99,112,112,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,84,105,109,101,79,102,73,109,112,97,99,116,46,99,112,112,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,80,114,105,115,109,97,116,105,99,74,111,105,110,116,46,99,112,112,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,77,111,117,115,101,74,111,105,110,116,46,99,112,112,0,0,0,0,0,32,32,106,100,46,109,111,116,111,114,83,112,101,101,100,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,32,32,106,100,46,114,97,116,105,111,32,61,32,37,46,49,53,108,101,102,59,10,0,0,32,32,106,100,46,101,110,97,98,108,101,77,111,116,111,114,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,74,111,105,110,116,46,99,112,112,0,0,109,95,112,114,111,120,121,67,111,117,110,116,32,61,61,32,48,0,0,0,0,0,0,0,109,95,110,111,100,101,115,91,67,45,62,112,97,114,101,110,116,93,46,99,104,105,108,100,50,32,61,61,32,105,65,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,71,101,97,114,74,111,105,110,116,46,99,112,112,0,0,0,0,0,0,123,10,0,0,0,0,0,0,32,32,32,32,115,104,97,112,101,46,109,95,112,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,123,10,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,70,114,105,99,116,105,111,110,74,111,105,110,116,46,99,112,112,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,67,111,108,108,105,100,101,80,111,108,121,103,111,110,46,99,112,112,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,80,111,108,121,103,111,110,67,111,110,116,97,99,116,46,99,112,112,0,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,80,111,108,121,103,111,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,46,99,112,112,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,69,100,103,101,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,46,99,112,112,0,0,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,69,100,103,101,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,46,99,112,112,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,67,111,110,116,97,99,116,83,111], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([108,118,101,114,46,99,112,112,0,0,0,0,0,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,101,110,97,98,108,101,77,111,116,111,114,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,48,32,60,61,32,112,114,111,120,121,73,100,32,38,38,32,112,114,111,120,121,73,100,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,0,0,0,0,0,0,32,32,106,100,46,108,101,110,103,116,104,66,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,0,32,32,106,100,46,117,112,112,101,114,84,114,97,110,115,108,97,116,105,111,110,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,67,111,110,116,97,99,116,46,99,112,112,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,67,105,114,99,108,101,67,111,110,116,97,99,116,46,99,112,112,0,0,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,67,104,97,105,110,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,46,99,112,112,0,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,67,104,97,105,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,46,99,112,112,0,0,0,0,0,0,0,0,98,50,74,111,105,110,116,42,42,32,106,111,105,110,116,115,32,61,32,40,98,50,74,111,105,110,116,42,42,41,98,50,65,108,108,111,99,40,37,100,32,42,32,115,105,122,101,111,102,40,98,50,74,111,105,110,116,42,41,41,59,10,0,0,32,32,32,32,115,104,97,112,101,46,109,95,114,97,100,105,117,115,32,61,32,37,46,49,53,108,101,102,59,10,0,0,109,95,73,32,62,32,48,46,48,102,0,0,0,0,0,0,48,32,60,61,32,105,71,32,38,38,32,105,71,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,98,50,87,111,114,108,100,46,99,112,112,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,98,50,73,115,108,97,110,100,46,99,112,112,0,0,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,68,121,110,97,109,105,99,84,114,101,101,46,99,112,112,0,0,32,32,106,100,46,100,97,109,112,105,110,103,82,97,116,105,111,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,32,32,106,100,46,117,112,112,101,114,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,32,32,106,100,46,108,101,110,103,116,104,65,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,0,32,32,106,100,46,108,111,119,101,114,84,114,97,110,115,108,97,116,105,111,110,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,98,50,70,105,120,116,117,114,101,46,99,112,112,0,0,0,0,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,98,50,66,111,100,121,42,42,32,98,111,100,105,101,115,32,61,32,40,98,50,66,111,100,121,42,42,41,98,50,65,108,108,111,99,40,37,100,32,42,32,115,105,122,101,111,102,40,98,50,66,111,100,121,42,41,41,59,10,0,0,0,0,0,32,32,32,32,98,50,67,105,114,99,108,101,83,104,97,112,101,32,115,104,97,112,101,59,10,0,0,0,0,0,0,0,109,95,116,121,112,101,32,61,61,32,98,50,95,100,121,110,97,109,105,99,66,111,100,121,0,0,0,0,0,0,0,0,48,32,60,61,32,105,70,32,38,38,32,105,70,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,32,32,106,100,46,102,114,101,113,117,101,110,99,121,72,122,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,32,32,106,100,46,108,111,119,101,114,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,101,110,97,98,108,101,76,105,109,105,116,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,32,32,106,100,46,114,97,116,105,111,32,61,32,37,46,49,53,108,101,102,59,10,0,0,32,32,106,100,46,109,97,120,84,111,114,113,117,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,109,95,119,111,114,108,100,45,62,83,101,116,71,114,97,118,105,116,121,40,103,41,59,10,0,0,0,0,0,0,0,0,32,32,32,32,102,100,46,102,105,108,116,101,114,46,103,114,111,117,112,73,110,100,101,120,32,61,32,105,110,116,49,54,40,37,100,41,59,10,0,0,102,111,117,110,100,0,0,0,48,32,60,61,32,105,67,32,38,38,32,105,67,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0,0,66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,67,111,108,108,105,100,101,69,100,103,101,46,99,112,112,0,0,100,101,110,32,62,32,48,46,48,102,0,0,0,0,0,0,71,101,116,77,101,116,114,105,99,0,0,0,0,0,0,0,71,101,116,83,101,97,114,99,104,68,105,114,101,99,116,105,111,110,0,0,0,0,0,0,71,101,116,87,105,116,110,101,115,115,80,111,105,110,116,115,0,0,0,0,0,0,0,0,71,101,116,67,108,111,115,101,115,116,80,111,105,110,116,0,69,118,97,108,117,97,116,101,0,0,0,0,0,0,0,0,70,105,110,100,77,105,110,83,101,112,97,114,97,116,105,111,110,0,0,0,0,0,0,0,71,101,116,86,101,114,116,101,120,0,0,0,0,0,0,0,82,97,121,67,97,115,116,0,67,111,109,112,117,116,101,77,97,115,115,0,0,0,0,0,86,97,108,105,100,97,116,101,0,0,0,0,0,0,0,0,82,97,121,67,97,115,116,0,86,97,108,105,100,97,116,101,83,116,114,117,99,116,117,114,101,0,0,0,0,0,0,0,86,97,108,105,100,97,116,101,77,101,116,114,105,99,115,0,71,101,116,77,97,120,66,97,108,97,110,99,101,0,0,0,67,111,109,112,117,116,101,72,101,105,103,104,116,0,0,0,71,101,116,85,115,101,114,68,97,116,97,0,0,0,0,0,71,101,116,70,97,116,65,65,66,66,0,0,0,0,0,0,82,97,121,67,97,115,116,0,71,101,116,67,104,105,108,100,69,100,103,101,0,0,0,0,67,111,109,112,117,116,101,65,65,66,66,0,0,0,0,0,82,101,97,100,67,97,99,104,101,0,0,0,0,0,0,0,68,101,115,116,114,111,121,0,67,114,101,97,116,101,80,114,111,120,105,101,115,0,0,0,68,101,115,116,114,111,121,0,65,100,100,84,121,112,101,0,67,114,101,97,116,101,0,0,83,111,108,118,101,84,79,73,0,0,0,0,0,0,0,0,65,100,100,0,0,0,0,0,68,114,97,119,83,104,97,112,101,0,0,0,0,0,0,0,83,111,108,118,101,84,79,73,0,0,0,0,0,0,0,0,83,111,108,118,101,0,0,0,68,101,115,116,114,111,121,74,111,105,110,116,0,0,0,0,68,101,115,116,114,111,121,66,111,100,121,0,0,0,0,0,67,114,101,97,116,101,74,111,105,110,116,0,0,0,0,0,67,114,101,97,116,101,66,111,100,121,0,0,0,0,0,0,65,100,118,97,110,99,101,0,98,50,74,111,105,110,116,0,68,101,115,116,114,111,121,0,67,114,101,97,116,101,0,0,98,50,66,111,100,121,0,0,83,101,116,65,99,116,105,118,101,0,0,0,0,0,0,0,83,101,116,84,121,112,101,0,68,101,115,116,114,111,121,70,105,120,116,117,114,101,0,0,82,101,115,101,116,77,97,115,115,68,97,116,97,0,0,0,67,114,101,97,116,101,70,105,120,116,117,114,101,0,0,0,83,101,116,84,114,97,110,115,102,111,114,109,0,0,0,0,83,101,116,77,97,115,115,68,97,116,97,0,0,0,0,0,98,50,80,111,108,121,103,111,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,0,0,0,0,0,0,0,73,110,105,116,105,97,108,105,122,101,0,0,0,0,0,0,98,50,67,104,97,105,110,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,0,0,0,0,0,0,0,0,98,50,69,100,103,101,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,0,98,50,67,104,97,105,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,0,98,50,69,100,103,101,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,0,0,73,110,105,116,105,97,108,105,122,101,0,0,0,0,0,0,126,98,50,83,116,97,99,107,65,108,108,111,99,97,116,111,114,0,0,0,0,0,0,0,65,108,108,111,99,97,116,101,0,0,0,0,0,0,0,0,70,114,101,101,0,0,0,0,73,110,105,116,105,97,108,105,122,101,0,0,0,0,0,0,83,101,116,76,105,109,105,116,115,0,0,0,0,0,0,0,98,50,80,111,108,121,103,111,110,67,111,110,116,97,99,116,0,0,0,0,0,0,0,0,98,50,66,108,111,99,107,65,108,108,111,99,97,116,111,114,0,0,0,0,0,0,0,0,65,108,108,111,99,97,116,101,0,0,0,0,0,0,0,0,70,114,101,101,0,0,0,0,83,101,116,76,105,109,105,116,115,0,0,0,0,0,0,0,80,111,112,0,0,0,0,0,83,101,116,77,97,120,84,111,114,113,117,101,0,0,0,0,83,101,116,77,97,120,70,111,114,99,101,0,0,0,0,0,83,101,116,0,0,0,0,0,98,50,67,111,110,116,97,99,116,83,111,108,118,101,114,0,73,110,105,116,105,97,108,105,122,101,86,101,108,111,99,105,116,121,67,111,110,115,116,114,97,105,110,116,115,0,0,0,83,111,108,118,101,86,101,108,111,99,105,116,121,67,111,110,115,116,114,97,105,110,116,115,0,0,0,0,0,0,0,0,98,50,67,105,114,99,108,101,67,111,110,116,97,99,116,0,83,101,116,0,0,0,0,0,98,50,80,117,108,108,101,121,74,111,105,110,116,0,0,0,77,111,118,101,80,114,111,120,121,0,0,0,0,0,0,0,70,114,101,101,78,111,100,101,0,0,0,0,0,0,0,0,66,97,108,97,110,99,101,0,68,101,115,116,114,111,121,80,114,111,120,121,0,0,0,0,65,108,108,111,99,97,116,101,78,111,100,101,0,0,0,0,73,110,115,101,114,116,76,101,97,102,0,0,0,0,0,0,98,50,77,111,117,115,101,74,111,105,110,116,0,0,0,0,73,110,105,116,86,101,108,111,99,105,116,121,67,111,110,115,116,114,97,105,110,116,115,0,67,114,101,97,116,101,67,104,97,105,110,0,0,0,0,0,67,114,101,97,116,101,76,111,111,112,0,0,0,0,0,0,98,50,71,101,97,114,74,111,105,110,116,0,0,0,0,0,83,101,116,82,97,116,105,111,0,0,0,0,0,0,0,0,98,50,70,105,110,100,73,110,99,105,100,101,110,116,69,100,103,101,0,0,0,0,0,0,98,50,69,100,103,101,83,101,112,97,114,97,116,105,111,110,0,0,0,0,0,0,0,0,67,111,109,112,117,116,101,67,101,110,116,114,111,105,100,0,98,50,67,111,108,108,105,100,101,69,100,103,101,65,110,100,67,105,114,99,108,101,0,0,98,50,84,105,109,101,79,102,73,109,112,97,99,116,0,0,98,50,68,105,115,116,97,110,99,101,0,0,0,0,0,0,0,0,0,0,136,60,0,0,120,0,0,0,190,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,60,0,0,42,0,0,0,80,0,0,0,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,60,0,0,152,0,0,0,208,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,60,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,136,0,0,0,216,0,0,0,58,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,60,0,0,88,0,0,0,134,0,0,0,44,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,48,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,60,0,0,58,0,0,0,64,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,60,0,0,50,0,0,0,150,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,61,0,0,64,0,0,0,144,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,61,0,0,68,0,0,0,110,0,0,0,162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,61,0,0,70,0,0,0,102,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,61,0,0,174,0,0,0,122,0,0,0,86,0,0,0,148,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,61,0,0,142,0,0,0,166,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,61,0,0,116,0,0,0,56,0,0,0,72,0,0,0,84,0,0,0,46,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,61,0,0,138,0,0,0,130,0,0,0,60,0,0,0,54,0,0,0,48,0,0,0,222,0,0,0,84,0,0,0,90,0,0,0,64,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,61,0,0,56,0,0,0,118,0,0,0,156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,61,0,0,54,0,0,0,60,0,0,0,46,0,0,0,44,0,0,0,106,0,0,0,68,0,0,0,210,0,0,0,56,0,0,0,104,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,61,0,0,198,0,0,0,46,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,61,0,0,128,0,0,0,124,0,0,0,64,0,0,0,48,0,0,0,168,0,0,0,112,0,0,0,62,0,0,0,152,0,0,0,50,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,61,0,0,158,0,0,0,58,0,0,0,54,0,0,0,50,0,0,0,140,0,0,0,200,0,0,0,74,0,0,0,108,0,0,0,94,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,61,0,0,192,0,0,0,148,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,61,0,0,52,0,0,0,170,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,61,0,0,114,0,0,0,172,0,0,0,46,0,0,0,50,0,0,0,44,0,0,0,46,0,0,0,46,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,61,0,0,122,0,0,0,150,0,0,0,58,0,0,0,60,0,0,0,160,0,0,0,158,0,0,0,108,0,0,0,100,0,0,0,120,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,61,0,0,224,0,0,0,188,0,0,0,48,0,0,0,42,0,0,0,52,0,0,0,60,0,0,0,66,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,61,0,0,156,0,0,0,154,0,0,0,62,0,0,0,56,0,0,0,164,0,0,0,50,0,0,0,98,0,0,0,116,0,0,0,76,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,0,0,44,0,0,0,146,0,0,0,50,0,0,0,46,0,0,0,90,0,0,0,186,0,0,0,226,0,0,0,68,0,0,0,62,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,62,0,0,180,0,0,0,194,0,0,0,68,0,0,0,48,0,0,0,50,0,0,0,54,0,0,0,72,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,62,0,0,132,0,0,0,166,0,0,0,52,0,0,0,58,0,0,0,128,0,0,0,204,0,0,0,60,0,0,0,46,0,0,0,140,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,62,0,0,118,0,0,0,110,0,0,0,66,0,0,0,42,0,0,0,212,0,0,0,66,0,0,0,126,0,0,0,160,0,0,0,78,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,62,0,0,106,0,0,0,70,0,0,0,44,0,0,0,52,0,0,0,218,0,0,0,202,0,0,0,178,0,0,0,162,0,0,0,82,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,62,0,0,214,0,0,0,72,0,0,0,66,0,0,0,46,0,0,0,46,0,0,0,58,0,0,0,62,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,57,98,50,67,111,110,116,97,99,116,0,0,0,0,0,0,55,98,50,83,104,97,112,101,0,0,0,0,0,0,0,0,55,98,50,74,111,105,110,116,0,0,0,0,0,0,0,0,54,98,50,68,114,97,119,0,50,53,98,50,80,111,108,121,103,111,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,0,0,0,0,0,50,52,98,50,67,104,97,105,110,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,0,0,0,0,0,0,50,51,98,50,69,100,103,101,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,0,0,0,0,0,0,0,50,51,98,50,67,104,97,105,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,0,0,0,0,0,0,0,50,50,98,50,69,100,103,101,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,0,0,0,0,0,0,0,0,50,49,98,50,68,101,115,116,114,117,99,116,105,111,110,76,105,115,116,101,110,101,114,0,49,55,98,50,82,97,121,67,97,115,116,67,97,108,108,98,97,99,107,0,0,0,0,0,49,55,98,50,67,111,110,116,97,99,116,76,105,115,116,101,110,101,114,0,0,0,0,0,49,54,98,50,80,114,105,115,109,97,116,105,99,74,111,105,110,116,0,0,0,0,0,0,49,54,98,50,80,111,108,121,103,111,110,67,111,110,116,97,99,116,0,0,0,0,0,0,49,53,98,50,82,101,118,111,108,117,116,101,74,111,105,110,116,0,0,0,0,0,0,0,49,53,98,50,81,117,101,114,121,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,49,53,98,50,70,114,105,99,116,105,111,110,74,111,105,110,116,0,0,0,0,0,0,0,49,53,98,50,68,105,115,116,97,110,99,101,74,111,105,110,116,0,0,0,0,0,0,0,49,53,98,50,67,111,110,116,97,99,116,70,105,108,116,101,114,0,0,0,0,0,0,0,49,53,98,50,67,105,114,99,108,101,67,111,110,116,97,99,116,0,0,0,0,0,0,0,49,52,98,50,80,111,108,121,103,111,110,83,104,97,112,101,0,0,0,0,0,0,0,0,49,51,98,50,80,117,108,108,101,121,74,111,105,110,116,0,49,51,98,50,67,105,114,99,108,101,83,104,97,112,101,0,49,50,98,50,87,104,101,101,108,74,111,105,110,116,0,0,49,50,98,50,77,111,117,115,101,74,111,105,110,116,0,0,49,50,98,50,67,104,97,105,110,83,104,97,112,101,0,0,49,49,98,50,87,101,108,100,74,111,105,110,116,0,0,0,49,49,98,50,82,111,112,101,74,111,105,110,116,0,0,0,49,49,98,50,71,101,97,114,74,111,105,110,116,0,0,0,49,49,98,50,69,100,103,101,83,104,97,112,101,0,0,0,0,0,0,0,72,57,0,0,0,0,0,0,88,57,0,0,0,0,0,0,104,57,0,0,128,60,0,0,0,0,0,0,0,0,0,0,120,57,0,0,168,60,0,0,0,0,0,0,0,0,0,0,160,57,0,0,184,60,0,0,0,0,0,0,0,0,0,0,200,57,0,0,120,60,0,0,0,0,0,0,0,0,0,0,240,57,0,0,0,0,0,0,0,58,0,0,0,0,0,0,16,58,0,0,0,0,0,0,32,58,0,0,0,0,0,0,40,58,0,0,200,60,0,0,0,0,0,0,0,0,0,0,72,58,0,0,200,60,0,0,0,0,0,0,0,0,0,0,104,58,0,0,200,60,0,0,0,0,0,0,0,0,0,0,136,58,0,0,200,60,0,0,0,0,0,0,0,0,0,0,168,58,0,0,200,60,0,0,0,0,0,0,0,0,0,0,200,58,0,0,0,0,0,0,224,58,0,0,0,0,0,0,248,58,0,0,0,0,0,0,16,59,0,0,216,60,0,0,0,0,0,0,0,0,0,0,40,59,0,0,200,60,0,0,0,0,0,0,0,0,0,0,64,59,0,0,216,60,0,0,0,0,0,0,0,0,0,0,88,59,0,0,0,0,0,0,112,59,0,0,216,60,0,0,0,0,0,0,0,0,0,0,136,59,0,0,216,60,0,0,0,0,0,0,0,0,0,0,160,59,0,0,0,0,0,0,184,59,0,0,200,60,0,0,0,0,0,0,0,0,0,0,208,59,0,0,208,60,0,0,0,0,0,0,0,0,0,0,232,59,0,0,216,60,0,0,0,0,0,0,0,0,0,0,248,59,0,0,208,60,0,0,0,0,0,0,0,0,0,0,8,60,0,0,216,60,0,0,0,0,0,0,0,0,0,0,24,60,0,0,216,60,0,0,0,0,0,0,0,0,0,0,40,60,0,0,208,60,0,0,0,0,0,0,0,0,0,0,56,60,0,0,216,60,0,0,0,0,0,0,0,0,0,0,72,60,0,0,216,60,0,0,0,0,0,0,0,0,0,0,88,60,0,0,216,60,0,0,0,0,0,0,0,0,0,0,104,60,0,0,208,60,0,0,0,0,0,0,16,0,0,0,32,0,0,0,64,0,0,0,96,0,0,0,128,0,0,0,160,0,0,0,192,0,0,0,224,0,0,0,0,1,0,0,64,1,0,0,128,1,0,0,192,1,0,0,0,2,0,0,128,2,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);



var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}



  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }



  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }



  var ___cxa_last_thrown_exception=0;function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  var ___cxa_exception_header_size=8;function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);

      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___gxx_personality_v0() {
    }



  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }



  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    }
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  var _sqrtf=Math_sqrt;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }



  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;

  var _sinf=Math_sin;

  var _cosf=Math_cos;

  var _floorf=Math_floor;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  var _llvm_memset_p0i8_i64=_memset;

  var _llvm_va_start=undefined;






  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};

  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};


  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }

  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};

  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};

  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};

  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);

          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);

            var src = populate ? remote : local;
            var dst = populate ? local : remote;

            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }

        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;

          var fileStore;

          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }

          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;

          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};

        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };

        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));

        while (check.length) {
          var path = check.pop();
          var stat;

          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }

          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }

          entries[path] = { timestamp: stat.mtime };
        }

        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};

        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);

          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };

          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');

          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;

            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }

            entries[cursor.primaryKey] = { timestamp: cursor.key };

            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;

        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }

        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }

          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }

        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);

          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }

        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;

        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });

        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });

        if (!total) {
          return callback(null);
        }

        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);

        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };

        transaction.onerror = function() { done(this.error); };

        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });

        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};

  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }

          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }

          stream.position = position;
          return position;
        }}};

  var _stdin=allocate(1, "i32*", ALLOC_STATIC);

  var _stdout=allocate(1, "i32*", ALLOC_STATIC);

  var _stderr=allocate(1, "i32*", ALLOC_STATIC);

  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};

        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }

        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }

        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);

        // start at the root
        var current = FS.root;
        var current_path = '/';

        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }

          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);

          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }

          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);

              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;

              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }

        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;


        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };

          FS.FSNode.prototype = {};

          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;

          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }

        var node = new FS.FSNode(parent, name, mode, rdev);

        FS.hashAddNode(node);

        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];

        while (check.length) {
          var m = check.pop();

          mounts.push(m);

          check.push.apply(check, m.mounts);
        }

        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }

        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;

        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };

        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;

        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });

          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;

          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }

          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }

        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };

        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;

        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;

          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }

        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });

        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }

        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);

        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];

          while (current) {
            var next = current.name_next;

            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }

            current = next;
          }
        });

        // no longer a mountpoint
        node.mounted = null;

        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);

        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops

        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }

        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');

        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');

        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();

        FS.nameTable = new Array(4096);

        FS.mount(MEMFS, {}, '/');

        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;

        FS.ensureErrnoError();

        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];

        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes

              if (!hasByteServing) chunkSize = datalength;

              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");

                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);

                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }

                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });

              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }

          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });

          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }

        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};




  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }

        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };

        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;

        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });

        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;

        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;

          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }

          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {headers: {'websocket-protocol': ['binary']}} : ['binary'];
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }


          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };

          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);

          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }

          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;

          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };

          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer


            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }

            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };

          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }

          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;

          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }

          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }

          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }

          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }

          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }

          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }

          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;

          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });

          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);

              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;

              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }

          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);

          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }

          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }

          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }

          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }

          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);

              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }

          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };


          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }

          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }

  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }


      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }

  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      return FS.getStreamFromPtr(stream).fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }



  Module["_strlen"] = _strlen;

  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block

        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }

      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }

          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }

          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }

          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];

          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }

              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }

              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }

              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }

              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);

                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }

                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }

                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');

                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();

                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }

              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }

              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();

              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }function _vprintf(format, va_arg) {
      return _printf(format, HEAP32[((va_arg)>>2)]);
    }

  function _llvm_va_end() {}

  function _llvm_lifetime_start() {}

  function _llvm_lifetime_end() {}

  var _atan2f=Math_atan2;

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_guard_release() {}

  function __ZNK12b2WheelJoint13GetDefinitionEP15b2WheelJointDef() {
  Module['printErr']('missing function: _ZNK12b2WheelJoint13GetDefinitionEP15b2WheelJointDef'); abort(-1);
  }

  function __ZNSt9exceptionD2Ev() {}

  function _abort() {
      Module['abort']();
    }

  function ___errno_location() {
      return ___errno_state;
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }

  function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }






  var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers

        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;

        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }

        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).

        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);

        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);

        // Canvas event setup

        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);

        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }

        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);

        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };

            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }


            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";

          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;

        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }

        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }

        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }

          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;

          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (scrollX + rect.left);
              y = t.pageY - (scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (scrollX + rect.left);
            y = event.pageY - (scrollY + rect.top);
          }

          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);

          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");


var Math_min = Math.min;
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viifi(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viifi"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_fif(index,a1,a2) {
  try {
    return Module["dynCall_fif"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viifii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viifii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viif(index,a1,a2,a3) {
  try {
    Module["dynCall_viif"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_fiiiif(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_fiiiif"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var __ZTVN10__cxxabiv120__si_class_type_infoE=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;
  var __ZTVN10__cxxabiv117__class_type_infoE=env.__ZTVN10__cxxabiv117__class_type_infoE|0;
  var NaN=+env.NaN;
  var Infinity=+env.Infinity;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var abort=env.abort;
  var assert=env.assert;
  var asmPrintInt=env.asmPrintInt;
  var asmPrintFloat=env.asmPrintFloat;
  var Math_min=env.min;
  var jsCall=env.jsCall;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_viifi=env.invoke_viifi;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_ii=env.invoke_ii;
  var invoke_fif=env.invoke_fif;
  var invoke_viii=env.invoke_viii;
  var invoke_viifii=env.invoke_viifii;
  var invoke_v=env.invoke_v;
  var invoke_viif=env.invoke_viif;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_fiiiif=env.invoke_fiiiif;
  var invoke_viiii=env.invoke_viiii;
  var _llvm_va_end=env._llvm_va_end;
  var _cosf=env._cosf;
  var ___cxa_call_unexpected=env.___cxa_call_unexpected;
  var _floorf=env._floorf;
  var ___cxa_throw=env.___cxa_throw;
  var _sinf=env._sinf;
  var _abort=env._abort;
  var _fprintf=env._fprintf;
  var _printf=env._printf;
  var _fflush=env._fflush;
  var _sqrtf=env._sqrtf;
  var __ZNK12b2WheelJoint13GetDefinitionEP15b2WheelJointDef=env.__ZNK12b2WheelJoint13GetDefinitionEP15b2WheelJointDef;
  var ___assert_fail=env.___assert_fail;
  var ___setErrNo=env.___setErrNo;
  var _fwrite=env._fwrite;
  var _send=env._send;
  var _write=env._write;
  var _exit=env._exit;
  var _llvm_lifetime_end=env._llvm_lifetime_end;
  var _time=env._time;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var _atan2f=env._atan2f;
  var _sysconf=env._sysconf;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var _vprintf=env._vprintf;
  var _fileno=env._fileno;
  var __formatString=env.__formatString;
  var __reallyNegative=env.__reallyNegative;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var ___cxa_is_number_type=env.___cxa_is_number_type;
  var ___cxa_does_inherit=env.___cxa_does_inherit;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var __ZSt9terminatev=env.__ZSt9terminatev;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _pwrite=env._pwrite;
  var _sbrk=env._sbrk;
  var __ZNSt9exceptionD2Ev=env.__ZNSt9exceptionD2Ev;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var ___errno_location=env.___errno_location;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var _llvm_lifetime_start=env._llvm_lifetime_start;
  var _mkport=env._mkport;
  var ___resumeException=env.___resumeException;
  var __exit=env.__exit;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
STACKTOP = (STACKTOP + 7)&-8;
  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1|0] = HEAP8[ptr+1|0];
  HEAP8[tempDoublePtr+2|0] = HEAP8[ptr+2|0];
  HEAP8[tempDoublePtr+3|0] = HEAP8[ptr+3|0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1|0] = HEAP8[ptr+1|0];
  HEAP8[tempDoublePtr+2|0] = HEAP8[ptr+2|0];
  HEAP8[tempDoublePtr+3|0] = HEAP8[ptr+3|0];
  HEAP8[tempDoublePtr+4|0] = HEAP8[ptr+4|0];
  HEAP8[tempDoublePtr+5|0] = HEAP8[ptr+5|0];
  HEAP8[tempDoublePtr+6|0] = HEAP8[ptr+6|0];
  HEAP8[tempDoublePtr+7|0] = HEAP8[ptr+7|0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}

function setTempRet1(value) {
  value = value|0;
  tempRet1 = value;
}

function setTempRet2(value) {
  value = value|0;
  tempRet2 = value;
}

function setTempRet3(value) {
  value = value|0;
  tempRet3 = value;
}

function setTempRet4(value) {
  value = value|0;
  tempRet4 = value;
}

function setTempRet5(value) {
  value = value|0;
  tempRet5 = value;
}

function setTempRet6(value) {
  value = value|0;
  tempRet6 = value;
}

function setTempRet7(value) {
  value = value|0;
  tempRet7 = value;
}

function setTempRet8(value) {
  value = value|0;
  tempRet8 = value;
}

function setTempRet9(value) {
  value = value|0;
  tempRet9 = value;
}
function runPostSets() {

HEAP32[((15480 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15488 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15496 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15512 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15528 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15544 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15560 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15568 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15576 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15584 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15592 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15608 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15624 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15640 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15656 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15672 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15680 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15688 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15696 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15712 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15728 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15744 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15752 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15768 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15784 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15792 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15808 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15824 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15840 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15856 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15872 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15888 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15904 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15920 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15936 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15952 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
}

function __ZN12b2BroadPhaseC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=0,$20$0=0,$20$1=0,$23$0=0,$23$1=0;
 var label=0;

 $1=(($this)|0);
 __ZN13b2DynamicTreeC2Ev($1);
 $2=(($this+28)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+48)|0);
 HEAP32[(($3)>>2)]=16;
 $4=(($this+52)|0);
 HEAP32[(($4)>>2)]=0;
 $5=((HEAP32[(($3)>>2)])|0);
 $6=((($5)*(12))&-1);
 $7=((__Z7b2Alloci($6))|0);
 $9=$7;
 $10=(($this+44)|0);
 HEAP32[(($10)>>2)]=$9;
 $11=(($this+36)|0);
 HEAP32[(($11)>>2)]=16;
 $12=(($this+40)|0);
 HEAP32[(($12)>>2)]=0;
 $13=((HEAP32[(($11)>>2)])|0);
 $14=$13<<2;
 $15=((__Z7b2Alloci($14))|0);
 $17=$15;
 $18=(($this+32)|0);
 HEAP32[(($18)>>2)]=$17;
 return;
}


function __ZN12b2BroadPhaseD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$12=0,$11$0=0,$11$1=0,$15$0=0,$15$1=0,label=0;

 $1=(($this+32)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 __Z6b2FreePv($3);
 $5=(($this+44)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=$6;
 __Z6b2FreePv($7);
 $9=(($this)|0);
 __ZN13b2DynamicTreeD2Ev($9);
 return;
}


function __ZN12b2BroadPhase11CreateProxyERK6b2AABBPv($this,$aabb,$userData){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $userData=($userData)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this)|0);
 $2=((__ZN13b2DynamicTree11CreateProxyERK6b2AABBPv($1,$aabb,$userData))|0);
 $3=(($this+28)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((($4)+(1))|0);
 HEAP32[(($3)>>2)]=$5;
 __ZN12b2BroadPhase10BufferMoveEi($this,$2);
 return (($2)|0);
}


function __ZN12b2BroadPhase10BufferMoveEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0;
 var label=0;

 $1=(($this+40)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+36)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 if ($5) {
  $7=(($this+32)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=$4<<1;
  HEAP32[(($3)>>2)]=$9;
  $10=$4<<3;
  $11=((__Z7b2Alloci($10))|0);
  $12=$11;
  HEAP32[(($7)>>2)]=$12;
  $13=$8;
  $14=((HEAP32[(($1)>>2)])|0);
  $15=$14<<2;
  (_memcpy((($11)|0), (($13)|0), $15)|0);
  __Z6b2FreePv($13);
 }
 $17=((HEAP32[(($1)>>2)])|0);
 $18=(($this+32)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($19+($17<<2))|0);
 HEAP32[(($20)>>2)]=$proxyId;
 $21=((HEAP32[(($1)>>2)])|0);
 $22=((($21)+(1))|0);
 HEAP32[(($1)>>2)]=$22;
 return;
}


function __ZN12b2BroadPhase12DestroyProxyEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 __ZN12b2BroadPhase12UnBufferMoveEi($this,$proxyId);
 $1=(($this+28)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)-(1))|0);
 HEAP32[(($1)>>2)]=$3;
 $4=(($this)|0);
 __ZN13b2DynamicTree12DestroyProxyEi($4,$proxyId);
 return;
}


function __ZN12b2BroadPhase12UnBufferMoveEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,$3=0,$i_0=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,label=0;

 $1=(($this+40)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+32)|0);
 $i_0=0;
 while(1) {

  $5=($i_0|0)<($2|0);
  if (!($5)) {
   label = 5;
   break;
  }
  $7=((HEAP32[(($3)>>2)])|0);
  $8=(($7+($i_0<<2))|0);
  $9=((HEAP32[(($8)>>2)])|0);
  $10=($9|0)==($proxyId|0);
  $11=((($i_0)+(1))|0);
  if ($10) {
   break;
  } else {
   $i_0=$11;
  }
 }
 if ((label|0) == 5) {
  return;
 }
 HEAP32[(($8)>>2)]=-1;
 return;
}


function __ZN12b2BroadPhase9MoveProxyEiRK6b2AABBRK6b2Vec2($this,$proxyId,$aabb,$displacement){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 $aabb=($aabb)|0;
 $displacement=($displacement)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((__ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2($1,$proxyId,$aabb,$displacement))|0);
 if (!($2)) {
  return;
 }
 __ZN12b2BroadPhase10BufferMoveEi($this,$proxyId);
 return;
}


function __ZN12b2BroadPhase10TouchProxyEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var label=0;

 __ZN12b2BroadPhase10BufferMoveEi($this,$proxyId);
 return;
}


function __ZN12b2BroadPhase13QueryCallbackEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,label=0;

 $1=(($this+56)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==($proxyId|0);
 if ($3) {
  return ((1)|0);
 }
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($this+48)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($6|0)==($8|0);
 if ($9) {
  $11=(($this+44)|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=$8<<1;
  HEAP32[(($7)>>2)]=$13;
  $14=((($8)*(24))&-1);
  $15=((__Z7b2Alloci($14))|0);
  $16=$15;
  HEAP32[(($11)>>2)]=$16;
  $17=$12;
  $18=((HEAP32[(($5)>>2)])|0);
  $19=((($18)*(12))&-1);
  (_memcpy((($15)|0), (($17)|0), $19)|0);
  __Z6b2FreePv($17);
 }
 $21=((HEAP32[(($1)>>2)])|0);
 $22=((__Z5b2MinIiET_S0_S0_($proxyId,$21))|0);
 $23=((HEAP32[(($5)>>2)])|0);
 $24=(($this+44)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=(($25+((($23)*(12))&-1))|0);
 HEAP32[(($26)>>2)]=$22;
 $27=((HEAP32[(($1)>>2)])|0);
 $28=((__Z5b2MaxIiET_S0_S0_($proxyId,$27))|0);
 $29=((HEAP32[(($5)>>2)])|0);
 $30=((HEAP32[(($24)>>2)])|0);
 $31=(($30+((($29)*(12))&-1)+4)|0);
 HEAP32[(($31)>>2)]=$28;
 $32=((HEAP32[(($5)>>2)])|0);
 $33=((($32)+(1))|0);
 HEAP32[(($5)>>2)]=$33;
 return ((1)|0);
}


function __Z5b2MinIiET_S0_S0_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=($a|0)<($b|0);
 $2=($1?$a:$b);
 return (($2)|0);
}


function __Z5b2MaxIiET_S0_S0_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=($a|0)>($b|0);
 $2=($1?$a:$b);
 return (($2)|0);
}


function __Z16b2CollideCirclesP10b2ManifoldPK13b2CircleShapeRK11b2TransformS3_S6_($manifold,$circleA,$xfA,$circleB,$xfB){
 $manifold=($manifold)|0;
 $circleA=($circleA)|0;
 $xfA=($xfA)|0;
 $circleB=($circleB)|0;
 $xfB=($xfB)|0;
 var $pA=0,$pB=0,$d=0,$1=0,$2=0,$3=0,$4=.0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,$10=.0,$11=0,$13=0,$14=0,$15=0,$16=0,$ld$0$0=0,$17$0=0;
 var $ld$1$1=0,$17$1=0,$st$2$0=0,$st$3$1=0,$18=0,$19=0,$20=0,$ld$4$0=0,$21$0=0,$ld$5$1=0,$21$1=0,$st$6$0=0,$st$7$1=0,$22=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $pA=((sp)|0);
 $pB=(((sp)+(8))|0);
 $d=(((sp)+(16))|0);
 $1=(($manifold+60)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($circleA+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($pA,$xfA,$2);
 $3=(($circleB+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($pB,$xfB,$3);
 __ZmiRK6b2Vec2S1_($d,$pB,$pA);
 $4=(+(__Z5b2DotRK6b2Vec2S1_($d,$d)));
 $5=(($circleA+8)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($circleB+8)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($6)+($8);
 $10=($9)*($9);
 $11=$4>$10;
 if ($11) {
  STACKTOP=sp;return;
 }
 $13=(($manifold+56)|0);
 HEAP32[(($13)>>2)]=0;
 $14=(($manifold+48)|0);
 $15=$2;
 $16=$14;
 $ld$0$0=(($15)|0);
 $17$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($15+4)|0);
 $17$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($16)|0);
 HEAP32[(($st$2$0)>>2)]=$17$0;
 $st$3$1=(($16+4)|0);
 HEAP32[(($st$3$1)>>2)]=$17$1;
 $18=(($manifold+40)|0);
 __ZN6b2Vec27SetZeroEv($18);
 HEAP32[(($1)>>2)]=1;
 $19=$3;
 $20=$manifold;
 $ld$4$0=(($19)|0);
 $21$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($19+4)|0);
 $21$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($20)|0);
 HEAP32[(($st$6$0)>>2)]=$21$0;
 $st$7$1=(($20+4)|0);
 HEAP32[(($st$7$1)>>2)]=$21$1;
 $22=(($manifold+16)|0);
 HEAP32[(($22)>>2)]=0;
 STACKTOP=sp;return;
}


function __Z5b2MulRK11b2TransformRK6b2Vec2($agg_result,$T,$v){
 $agg_result=($agg_result)|0;
 $T=($T)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=.0,$15=.0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var label=0;

 $1=(($T+12)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($v)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($T+8)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($v+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)-($10);
 $12=(($T)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=($13)+($11);
 $15=($4)*($7);
 $16=($2)*($9);
 $17=($15)+($16);
 $18=(($T+4)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=($17)+($19);
 __ZN6b2Vec2C1Eff($agg_result,$14,$20);
 return;
}


function __ZmiRK6b2Vec2S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)-($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)-($9);
 __ZN6b2Vec2C1Eff($agg_result,$5,$10);
 return;
}


function __Z5b2DotRK6b2Vec2S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)+($10);
 return (+($11));
}


function __ZN6b2Vec27SetZeroEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=0.0;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=0.0;
 return;
}


function __Z25b2CollidePolygonAndCircleP10b2ManifoldPK14b2PolygonShapeRK11b2TransformPK13b2CircleShapeS6_($manifold,$polygonA,$xfA,$circleB,$xfB){
 $manifold=($manifold)|0;
 $polygonA=($polygonA)|0;
 $xfA=($xfA)|0;
 $circleB=($circleB)|0;
 $xfB=($xfB)|0;
 var $c=0,$cLocal=0,$1=0,$v1=0,$tmpcast=0,$v2=0,$tmpcast62=0,$2=0,$tmpcast66=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$tmpcast65=0,$9=0,$tmpcast64=0,$faceCenter=0,$tmpcast63=0;
 var $10=0,$11=0,$12=0,$13=0,$14=0,$15=.0,$16=0,$17=.0,$18=.0,$19=0,$20=0,$21=0,$normalIndex_071=0,$separation_070=.0,$i_069=0,$22=0,$23=0,$24=.0,$25=0,$27=0;
 var $separation_1=.0,$normalIndex_1=0,$28=0,$29=0,$phitmp=0,$normalIndex_0_lcssa=0,$separation_0_lcssa=0,$31=0,$32=0,$_=0,$33=0,$34=0,$ld$0$0=0,$35$0=0,$ld$1$1=0,$35$1=0,$st$2$0=0,$st$3$1=0,$36=0,$37=0;
 var $ld$4$0=0,$38$0=0,$ld$5$1=0,$38$1=0,$st$6$0=0,$st$7$1=0,$40=0,$41=0,$42=0,$43=0,$44=0,$ld$8$0=0,$45$0=0,$ld$9$1=0,$45$1=0,$st$10$0=0,$st$11$1=0,$46=0,$47=0,$ld$12$0=0;
 var $48$0=0,$ld$13$1=0,$48$1=0,$st$14$0=0,$st$15$1=0,$49=0,$50=0,$ld$16$0=0,$51$0=0,$ld$17$1=0,$51$1=0,$st$18$0=0,$st$19$1=0,$52=0,$54=.0,$55=0,$57=.0,$58=.0,$59=0,$61=0;
 var $62=0,$63=0,$ld$20$0=0,$64$0=0,$ld$21$1=0,$64$1=0,$st$22$0=0,$st$23$1=0,$65=.0,$66=0,$67=0,$ld$24$0=0,$68$0=0,$ld$25$1=0,$68$1=0,$st$26$0=0,$st$27$1=0,$69=0,$70=0,$ld$28$0=0;
 var $71$0=0,$ld$29$1=0,$71$1=0,$st$30$0=0,$st$31$1=0,$72=0,$74=.0,$75=0,$77=.0,$78=.0,$79=0,$81=0,$82=0,$83=0,$ld$32$0=0,$84$0=0,$ld$33$1=0,$84$1=0,$st$34$0=0,$st$35$1=0;
 var $85=.0,$86=0,$87=0,$ld$36$0=0,$88$0=0,$ld$37$1=0,$88$1=0,$st$38$0=0,$st$39$1=0,$89=0,$90=0,$ld$40$0=0,$91$0=0,$ld$41$1=0,$91$1=0,$st$42$0=0,$st$43$1=0,$92=0,$94=0,$95=.0;
 var $96=0,$98=0,$99=0,$100=0,$101=0,$ld$44$0=0,$102$0=0,$ld$45$1=0,$102$1=0,$st$46$0=0,$st$47$1=0,$103=0,$104=0,$ld$48$0=0,$105$0=0,$ld$49$1=0,$105$1=0,$st$50$0=0,$st$51$1=0,$106=0;
 var $107=0,$ld$52$0=0,$108$0=0,$ld$53$1=0,$108$1=0,$st$54$0=0,$st$55$1=0,$109=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $c=((sp)|0);
 $cLocal=(((sp)+(8))|0);
 $1=(((sp)+(16))|0);
 $v1=(((sp)+(24))|0);
 $tmpcast=$v1;
 $v2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast62=$v2;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast66=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast65=$8;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast64=$9;
 $faceCenter=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast63=$faceCenter;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=(($manifold+60)|0);
 HEAP32[(($12)>>2)]=0;
 $13=(($circleB+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($c,$xfB,$13);
 __Z6b2MulTRK11b2TransformRK6b2Vec2($cLocal,$xfA,$c);
 $14=(($polygonA+8)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=(($circleB+8)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=($15)+($17);
 $19=(($polygonA+148)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=($20|0)>0;
 do {
  if ($21) {
   $i_069=0;$separation_070=-3.4028234663852886e+38;$normalIndex_071=0;
   while(1) {



    $22=(($polygonA+84+($i_069<<3))|0);
    $23=(($polygonA+20+($i_069<<3))|0);
    __ZmiRK6b2Vec2S1_($1,$cLocal,$23);
    $24=(+(__Z5b2DotRK6b2Vec2S1_($22,$1)));
    $25=$24>$18;
    if ($25) {
     label = 15;
     break;
    }
    $27=$24>$separation_070;
    $separation_1=($27?$24:$separation_070);
    $normalIndex_1=($27?$i_069:$normalIndex_071);
    $28=((($i_069)+(1))|0);
    $29=($28|0)<($20|0);
    if ($29) {
     $i_069=$28;$separation_070=$separation_1;$normalIndex_071=$normalIndex_1;
    } else {
     label = 4;
     break;
    }
   }
   if ((label|0) == 4) {
    $phitmp=$separation_1<(1.1920928955078125e-7);
    $separation_0_lcssa=$phitmp;$normalIndex_0_lcssa=$normalIndex_1;
    break;
   }
   else if ((label|0) == 15) {
    STACKTOP=sp;return;
   }
  } else {
   $separation_0_lcssa=1;$normalIndex_0_lcssa=0;
  }
 } while(0);


 $31=((($normalIndex_0_lcssa)+(1))|0);
 $32=($31|0)<($20|0);
 $_=($32?$31:0);
 $33=(($polygonA+20+($normalIndex_0_lcssa<<3))|0);
 $34=$33;
 $ld$0$0=(($34)|0);
 $35$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($34+4)|0);
 $35$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($v1)|0);
 HEAP32[(($st$2$0)>>2)]=$35$0;
 $st$3$1=(($v1+4)|0);
 HEAP32[(($st$3$1)>>2)]=$35$1;
 $36=(($polygonA+20+($_<<3))|0);
 $37=$36;
 $ld$4$0=(($37)|0);
 $38$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($37+4)|0);
 $38$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($v2)|0);
 HEAP32[(($st$6$0)>>2)]=$38$0;
 $st$7$1=(($v2+4)|0);
 HEAP32[(($st$7$1)>>2)]=$38$1;
 if ($separation_0_lcssa) {
  HEAP32[(($12)>>2)]=1;
  $40=(($manifold+56)|0);
  HEAP32[(($40)>>2)]=1;
  $41=(($manifold+40)|0);
  $42=(($polygonA+84+($normalIndex_0_lcssa<<3))|0);
  $43=$42;
  $44=$41;
  $ld$8$0=(($43)|0);
  $45$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($43+4)|0);
  $45$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($44)|0);
  HEAP32[(($st$10$0)>>2)]=$45$0;
  $st$11$1=(($44+4)|0);
  HEAP32[(($st$11$1)>>2)]=$45$1;
  $46=(($manifold+48)|0);
  __ZplRK6b2Vec2S1_($3,$tmpcast,$tmpcast62);
  __ZmlfRK6b2Vec2($tmpcast66,0.5,$3);
  $47=$46;
  $ld$12$0=(($2)|0);
  $48$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($2+4)|0);
  $48$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($47)|0);
  HEAP32[(($st$14$0)>>2)]=$48$0;
  $st$15$1=(($47+4)|0);
  HEAP32[(($st$15$1)>>2)]=$48$1;
  $49=$13;
  $50=$manifold;
  $ld$16$0=(($49)|0);
  $51$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($49+4)|0);
  $51$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($50)|0);
  HEAP32[(($st$18$0)>>2)]=$51$0;
  $st$19$1=(($50+4)|0);
  HEAP32[(($st$19$1)>>2)]=$51$1;
  $52=(($manifold+16)|0);
  HEAP32[(($52)>>2)]=0;
  STACKTOP=sp;return;
 }
 __ZmiRK6b2Vec2S1_($4,$cLocal,$tmpcast);
 __ZmiRK6b2Vec2S1_($5,$tmpcast62,$tmpcast);
 $54=(+(__Z5b2DotRK6b2Vec2S1_($4,$5)));
 __ZmiRK6b2Vec2S1_($6,$cLocal,$tmpcast62);
 __ZmiRK6b2Vec2S1_($7,$tmpcast,$tmpcast62);
 $55=$54>(0.0);
 if (!($55)) {
  $57=(+(__Z17b2DistanceSquaredRK6b2Vec2S1_($cLocal,$tmpcast)));
  $58=($18)*($18);
  $59=$57>$58;
  if ($59) {
   STACKTOP=sp;return;
  }
  HEAP32[(($12)>>2)]=1;
  $61=(($manifold+56)|0);
  HEAP32[(($61)>>2)]=1;
  $62=(($manifold+40)|0);
  __ZmiRK6b2Vec2S1_($tmpcast65,$cLocal,$tmpcast);
  $63=$62;
  $ld$20$0=(($8)|0);
  $64$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($8+4)|0);
  $64$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($63)|0);
  HEAP32[(($st$22$0)>>2)]=$64$0;
  $st$23$1=(($63+4)|0);
  HEAP32[(($st$23$1)>>2)]=$64$1;
  $65=(+(__ZN6b2Vec29NormalizeEv($62)));
  $66=(($manifold+48)|0);
  $67=$66;
  $ld$24$0=(($v1)|0);
  $68$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($v1+4)|0);
  $68$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($67)|0);
  HEAP32[(($st$26$0)>>2)]=$68$0;
  $st$27$1=(($67+4)|0);
  HEAP32[(($st$27$1)>>2)]=$68$1;
  $69=$13;
  $70=$manifold;
  $ld$28$0=(($69)|0);
  $71$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($69+4)|0);
  $71$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($70)|0);
  HEAP32[(($st$30$0)>>2)]=$71$0;
  $st$31$1=(($70+4)|0);
  HEAP32[(($st$31$1)>>2)]=$71$1;
  $72=(($manifold+16)|0);
  HEAP32[(($72)>>2)]=0;
  STACKTOP=sp;return;
 }
 $74=(+(__Z5b2DotRK6b2Vec2S1_($6,$7)));
 $75=$74>(0.0);
 if ($75) {
  __ZplRK6b2Vec2S1_($10,$tmpcast,$tmpcast62);
  __ZmlfRK6b2Vec2($tmpcast63,0.5,$10);
  __ZmiRK6b2Vec2S1_($11,$cLocal,$tmpcast63);
  $94=(($polygonA+84+($normalIndex_0_lcssa<<3))|0);
  $95=(+(__Z5b2DotRK6b2Vec2S1_($11,$94)));
  $96=$95>$18;
  if ($96) {
   STACKTOP=sp;return;
  }
  HEAP32[(($12)>>2)]=1;
  $98=(($manifold+56)|0);
  HEAP32[(($98)>>2)]=1;
  $99=(($manifold+40)|0);
  $100=$94;
  $101=$99;
  $ld$44$0=(($100)|0);
  $102$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($100+4)|0);
  $102$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($101)|0);
  HEAP32[(($st$46$0)>>2)]=$102$0;
  $st$47$1=(($101+4)|0);
  HEAP32[(($st$47$1)>>2)]=$102$1;
  $103=(($manifold+48)|0);
  $104=$103;
  $ld$48$0=(($faceCenter)|0);
  $105$0=((HEAP32[(($ld$48$0)>>2)])|0);
  $ld$49$1=(($faceCenter+4)|0);
  $105$1=((HEAP32[(($ld$49$1)>>2)])|0);
  $st$50$0=(($104)|0);
  HEAP32[(($st$50$0)>>2)]=$105$0;
  $st$51$1=(($104+4)|0);
  HEAP32[(($st$51$1)>>2)]=$105$1;
  $106=$13;
  $107=$manifold;
  $ld$52$0=(($106)|0);
  $108$0=((HEAP32[(($ld$52$0)>>2)])|0);
  $ld$53$1=(($106+4)|0);
  $108$1=((HEAP32[(($ld$53$1)>>2)])|0);
  $st$54$0=(($107)|0);
  HEAP32[(($st$54$0)>>2)]=$108$0;
  $st$55$1=(($107+4)|0);
  HEAP32[(($st$55$1)>>2)]=$108$1;
  $109=(($manifold+16)|0);
  HEAP32[(($109)>>2)]=0;
  STACKTOP=sp;return;
 } else {
  $77=(+(__Z17b2DistanceSquaredRK6b2Vec2S1_($cLocal,$tmpcast62)));
  $78=($18)*($18);
  $79=$77>$78;
  if ($79) {
   STACKTOP=sp;return;
  }
  HEAP32[(($12)>>2)]=1;
  $81=(($manifold+56)|0);
  HEAP32[(($81)>>2)]=1;
  $82=(($manifold+40)|0);
  __ZmiRK6b2Vec2S1_($tmpcast64,$cLocal,$tmpcast62);
  $83=$82;
  $ld$32$0=(($9)|0);
  $84$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($9+4)|0);
  $84$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($83)|0);
  HEAP32[(($st$34$0)>>2)]=$84$0;
  $st$35$1=(($83+4)|0);
  HEAP32[(($st$35$1)>>2)]=$84$1;
  $85=(+(__ZN6b2Vec29NormalizeEv($82)));
  $86=(($manifold+48)|0);
  $87=$86;
  $ld$36$0=(($v2)|0);
  $88$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($v2+4)|0);
  $88$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($87)|0);
  HEAP32[(($st$38$0)>>2)]=$88$0;
  $st$39$1=(($87+4)|0);
  HEAP32[(($st$39$1)>>2)]=$88$1;
  $89=$13;
  $90=$manifold;
  $ld$40$0=(($89)|0);
  $91$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($89+4)|0);
  $91$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($90)|0);
  HEAP32[(($st$42$0)>>2)]=$91$0;
  $st$43$1=(($90+4)|0);
  HEAP32[(($st$43$1)>>2)]=$91$1;
  $92=(($manifold+16)|0);
  HEAP32[(($92)>>2)]=0;
  STACKTOP=sp;return;
 }
}


function __Z6b2MulTRK11b2TransformRK6b2Vec2($agg_result,$T,$v){
 $agg_result=($agg_result)|0;
 $T=($T)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=0,$12=.0,$13=.0,$14=0,$15=.0,$16=.0,$17=.0,$18=.0,$19=.0,$20=.0;
 var $21=.0,label=0;

 $1=(($v)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($T)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)-($4);
 $6=(($v+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($T+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)-($9);
 $11=(($T+12)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=($5)*($12);
 $14=(($T+8)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=($10)*($15);
 $17=($13)+($16);
 $18=((-.0))-($15);
 $19=($5)*($18);
 $20=($12)*($10);
 $21=($20)+($19);
 __ZN6b2Vec2C1Eff($agg_result,$17,$21);
 return;
}


function __ZmlfRK6b2Vec2($agg_result,$s,$a){
 $agg_result=($agg_result)|0;
 $s=+($s);
 $a=($a)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($s);
 $4=(($a+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($s);
 __ZN6b2Vec2C1Eff($agg_result,$3,$6);
 return;
}


function __ZplRK6b2Vec2S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)+($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)+($9);
 __ZN6b2Vec2C1Eff($agg_result,$5,$10);
 return;
}


function __Z17b2DistanceSquaredRK6b2Vec2S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $c=0,$1=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $c=((sp)|0);
 __ZmiRK6b2Vec2S1_($c,$a,$b);
 $1=(+(__Z5b2DotRK6b2Vec2S1_($c,$c)));
 STACKTOP=sp;return (+($1));
}


function __ZN6b2Vec29NormalizeEv($this){
 $this=($this)|0;
 var $1=.0,$2=0,$4=.0,$5=0,$6=.0,$7=.0,$8=0,$9=.0,$10=.0,$_0=.0,label=0;

 $1=(+(__ZNK6b2Vec26LengthEv($this)));
 $2=$1<(1.1920928955078125e-7);
 if ($2) {
  $_0=0.0;

  return (+($_0));
 }
 $4=((1.0))/($1);
 $5=(($this)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=($4)*($6);
 HEAPF32[(($5)>>2)]=$7;
 $8=(($this+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($4)*($9);
 HEAPF32[(($8)>>2)]=$10;
 $_0=$1;

 return (+($_0));
}


function __ZNK6b2Vec26LengthEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,$7=.0,$8=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($2);
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($5);
 $7=($3)+($6);
 $8=(+(Math_sqrt($7)));
 return (+($8));
}


function __ZN6b2Vec2C1Eff($this,$x,$y){
 $this=($this)|0;
 $x=+($x);
 $y=+($y);
 var label=0;

 __ZN6b2Vec2C2Eff($this,$x,$y);
 return;
}


function __ZN6b2Vec2C2Eff($this,$x,$y){
 $this=($this)|0;
 $x=+($x);
 $y=+($y);
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=$x;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=$y;
 return;
}


function __Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_($manifold,$edgeA,$xfA,$circleB,$xfB){
 $manifold=($manifold)|0;
 $edgeA=($edgeA)|0;
 $xfA=($xfA)|0;
 $circleB=($circleB)|0;
 $xfB=($xfB)|0;
 var $Q=0,$1=0,$A=0,$tmpcast=0,$B=0,$tmpcast60=0,$e=0,$2=0,$3=0,$P=0,$d=0,$A1=0,$tmpcast66=0,$B1=0,$tmpcast67=0,$e1=0,$4=0,$P1=0,$tmpcast62=0,$d2=0;
 var $B2=0,$tmpcast63=0,$A2=0,$tmpcast64=0,$e2=0,$5=0,$P4=0,$6=0,$7=0,$8=0,$d5=0,$n=0,$tmpcast61=0,$9=0,$10=0,$11=0,$12=0,$13=0,$ld$0$0=0,$14$0=0;
 var $ld$1$1=0,$14$1=0,$st$2$0=0,$st$3$1=0,$15=0,$16=0,$ld$4$0=0,$17$0=0,$ld$5$1=0,$17$1=0,$st$6$0=0,$st$7$1=0,$18=.0,$19=.0,$20=0,$21=.0,$22=0,$23=.0,$24=.0,$25=0;
 var $tmpcast65=0,$ld$8$0=0,$27$0=0,$ld$9$1=0,$27$1=0,$st$10$0=0,$st$11$1=0,$28=.0,$29=.0,$30=0,$32=0,$33=0,$34=0,$36=0,$37=0,$ld$12$0=0,$38$0=0,$ld$13$1=0,$38$1=0,$st$14$0=0;
 var $st$15$1=0,$ld$16$0=0,$39$0=0,$ld$17$1=0,$39$1=0,$st$18$0=0,$st$19$1=0,$40=.0,$41=0,$43=0,$44=0,$45=0,$46=0,$ld$20$0=0,$47$0=0,$ld$21$1=0,$47$1=0,$st$22$0=0,$st$23$1=0,$48=0;
 var $49=0,$50=0,$cf_sroa_0_0__idx4=0,$cf_sroa_1_1__idx8=0,$cf_sroa_2_2__idx12=0,$cf_sroa_3_3__idx16=0,$51=0,$52=0,$ld$24$0=0,$53$0=0,$ld$25$1=0,$53$1=0,$st$26$0=0,$st$27$1=0,$55=0,$ld$28$0=0,$57$0=0,$ld$29$1=0,$57$1=0,$st$30$0=0;
 var $st$31$1=0,$58=.0,$59=.0,$60=0,$62=0,$63=0,$64=0,$66=0,$67=0,$ld$32$0=0,$68$0=0,$ld$33$1=0,$68$1=0,$st$34$0=0,$st$35$1=0,$ld$36$0=0,$69$0=0,$ld$37$1=0,$69$1=0,$st$38$0=0;
 var $st$39$1=0,$70=.0,$71=0,$73=0,$74=0,$75=0,$76=0,$ld$40$0=0,$77$0=0,$ld$41$1=0,$77$1=0,$st$42$0=0,$st$43$1=0,$78=0,$79=0,$80=0,$cf_sroa_0_0__idx2=0,$cf_sroa_1_1__idx6=0,$cf_sroa_2_2__idx10=0,$cf_sroa_3_3__idx14=0;
 var $81=0,$82=0,$ld$44$0=0,$83$0=0,$ld$45$1=0,$83$1=0,$st$46$0=0,$st$47$1=0,$85=.0,$86=0,$89=.0,$90=.0,$91=.0,$92=0,$94=0,$95=.0,$96=.0,$97=0,$98=.0,$99=.0;
 var $100=0,$102=0,$103=.0,$104=.0,$105=0,$106=.0,$107=.0,$109=.0,$110=0,$111=0,$112=0,$ld$48$0=0,$113$0=0,$ld$49$1=0,$113$1=0,$st$50$0=0,$st$51$1=0,$114=0,$115=0,$ld$52$0=0;
 var $116$0=0,$ld$53$1=0,$116$1=0,$st$54$0=0,$st$55$1=0,$117=0,$118=0,$119=0,$cf_sroa_0_0__idx=0,$cf_sroa_1_1__idx=0,$cf_sroa_2_2__idx=0,$cf_sroa_3_3__idx=0,$120=0,$121=0,$ld$56$0=0,$122$0=0,$ld$57$1=0,$122$1=0,$st$58$0=0,$st$59$1=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $Q=((sp)|0);
 $1=(((sp)+(8))|0);
 $A=(((sp)+(16))|0);
 $tmpcast=$A;
 $B=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast60=$B;
 $e=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $A1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast66=$A1;
 $B1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast67=$B1;
 $e1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast62=$P1;
 $d2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $B2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast63=$B2;
 $A2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast64=$A2;
 $e2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $n=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast61=$n;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=(($manifold+60)|0);
 HEAP32[(($10)>>2)]=0;
 $11=(($circleB+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($1,$xfB,$11);
 __Z6b2MulTRK11b2TransformRK6b2Vec2($Q,$xfA,$1);
 $12=(($edgeA+12)|0);
 $13=$12;
 $ld$0$0=(($13)|0);
 $14$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($A)|0);
 HEAP32[(($st$2$0)>>2)]=$14$0;
 $st$3$1=(($A+4)|0);
 HEAP32[(($st$3$1)>>2)]=$14$1;
 $15=(($edgeA+20)|0);
 $16=$15;
 $ld$4$0=(($16)|0);
 $17$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($16+4)|0);
 $17$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($B)|0);
 HEAP32[(($st$6$0)>>2)]=$17$0;
 $st$7$1=(($B+4)|0);
 HEAP32[(($st$7$1)>>2)]=$17$1;
 __ZmiRK6b2Vec2S1_($e,$tmpcast60,$tmpcast);
 __ZmiRK6b2Vec2S1_($2,$tmpcast60,$Q);
 $18=(+(__Z5b2DotRK6b2Vec2S1_($e,$2)));
 __ZmiRK6b2Vec2S1_($3,$Q,$tmpcast);
 $19=(+(__Z5b2DotRK6b2Vec2S1_($e,$3)));
 $20=(($edgeA+8)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=(($circleB+8)|0);
 $23=(+(HEAPF32[(($22)>>2)]));
 $24=($21)+($23);
 $25=$19>(0.0);
 if (!($25)) {
  $tmpcast65=$P;
  $ld$8$0=(($A)|0);
  $27$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($A+4)|0);
  $27$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($P)|0);
  HEAP32[(($st$10$0)>>2)]=$27$0;
  $st$11$1=(($P+4)|0);
  HEAP32[(($st$11$1)>>2)]=$27$1;
  __ZmiRK6b2Vec2S1_($d,$Q,$tmpcast65);
  $28=(+(__Z5b2DotRK6b2Vec2S1_($d,$d)));
  $29=($24)*($24);
  $30=$28>$29;
  if ($30) {
   STACKTOP=sp;return;
  }
  $32=(($edgeA+44)|0);
  $33=((HEAP8[($32)])|0);
  $34=(($33<<24)>>24)==0;
  do {
   if (!($34)) {
    $36=(($edgeA+28)|0);
    $37=$36;
    $ld$12$0=(($37)|0);
    $38$0=((HEAP32[(($ld$12$0)>>2)])|0);
    $ld$13$1=(($37+4)|0);
    $38$1=((HEAP32[(($ld$13$1)>>2)])|0);
    $st$14$0=(($A1)|0);
    HEAP32[(($st$14$0)>>2)]=$38$0;
    $st$15$1=(($A1+4)|0);
    HEAP32[(($st$15$1)>>2)]=$38$1;
    $ld$16$0=(($A)|0);
    $39$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($A+4)|0);
    $39$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $st$18$0=(($B1)|0);
    HEAP32[(($st$18$0)>>2)]=$39$0;
    $st$19$1=(($B1+4)|0);
    HEAP32[(($st$19$1)>>2)]=$39$1;
    __ZmiRK6b2Vec2S1_($e1,$tmpcast67,$tmpcast66);
    __ZmiRK6b2Vec2S1_($4,$tmpcast67,$Q);
    $40=(+(__Z5b2DotRK6b2Vec2S1_($e1,$4)));
    $41=$40>(0.0);
    if (!($41)) {
     break;
    }
    STACKTOP=sp;return;
   }
  } while(0);
  HEAP32[(($10)>>2)]=1;
  $43=(($manifold+56)|0);
  HEAP32[(($43)>>2)]=0;
  $44=(($manifold+40)|0);
  __ZN6b2Vec27SetZeroEv($44);
  $45=(($manifold+48)|0);
  $46=$45;
  $ld$20$0=(($P)|0);
  $47$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($P+4)|0);
  $47$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($46)|0);
  HEAP32[(($st$22$0)>>2)]=$47$0;
  $st$23$1=(($46+4)|0);
  HEAP32[(($st$23$1)>>2)]=$47$1;
  $48=(($manifold+16)|0);
  $49=(($48)|0);
  HEAP32[(($49)>>2)]=0;
  $50=$48;
  $cf_sroa_0_0__idx4=$48;
  HEAP8[($cf_sroa_0_0__idx4)]=0;
  $cf_sroa_1_1__idx8=(($50+1)|0);
  HEAP8[($cf_sroa_1_1__idx8)]=0;
  $cf_sroa_2_2__idx12=(($50+2)|0);
  HEAP8[($cf_sroa_2_2__idx12)]=0;
  $cf_sroa_3_3__idx16=(($50+3)|0);
  HEAP8[($cf_sroa_3_3__idx16)]=0;
  $51=$11;
  $52=$manifold;
  $ld$24$0=(($51)|0);
  $53$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($51+4)|0);
  $53$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($52)|0);
  HEAP32[(($st$26$0)>>2)]=$53$0;
  $st$27$1=(($52+4)|0);
  HEAP32[(($st$27$1)>>2)]=$53$1;
  STACKTOP=sp;return;
 }
 $55=$18>(0.0);
 if (!($55)) {
  $ld$28$0=(($B)|0);
  $57$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($B+4)|0);
  $57$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($P1)|0);
  HEAP32[(($st$30$0)>>2)]=$57$0;
  $st$31$1=(($P1+4)|0);
  HEAP32[(($st$31$1)>>2)]=$57$1;
  __ZmiRK6b2Vec2S1_($d2,$Q,$tmpcast62);
  $58=(+(__Z5b2DotRK6b2Vec2S1_($d2,$d2)));
  $59=($24)*($24);
  $60=$58>$59;
  if ($60) {
   STACKTOP=sp;return;
  }
  $62=(($edgeA+45)|0);
  $63=((HEAP8[($62)])|0);
  $64=(($63<<24)>>24)==0;
  do {
   if (!($64)) {
    $66=(($edgeA+36)|0);
    $67=$66;
    $ld$32$0=(($67)|0);
    $68$0=((HEAP32[(($ld$32$0)>>2)])|0);
    $ld$33$1=(($67+4)|0);
    $68$1=((HEAP32[(($ld$33$1)>>2)])|0);
    $st$34$0=(($B2)|0);
    HEAP32[(($st$34$0)>>2)]=$68$0;
    $st$35$1=(($B2+4)|0);
    HEAP32[(($st$35$1)>>2)]=$68$1;
    $ld$36$0=(($B)|0);
    $69$0=((HEAP32[(($ld$36$0)>>2)])|0);
    $ld$37$1=(($B+4)|0);
    $69$1=((HEAP32[(($ld$37$1)>>2)])|0);
    $st$38$0=(($A2)|0);
    HEAP32[(($st$38$0)>>2)]=$69$0;
    $st$39$1=(($A2+4)|0);
    HEAP32[(($st$39$1)>>2)]=$69$1;
    __ZmiRK6b2Vec2S1_($e2,$tmpcast63,$tmpcast64);
    __ZmiRK6b2Vec2S1_($5,$Q,$tmpcast64);
    $70=(+(__Z5b2DotRK6b2Vec2S1_($e2,$5)));
    $71=$70>(0.0);
    if (!($71)) {
     break;
    }
    STACKTOP=sp;return;
   }
  } while(0);
  HEAP32[(($10)>>2)]=1;
  $73=(($manifold+56)|0);
  HEAP32[(($73)>>2)]=0;
  $74=(($manifold+40)|0);
  __ZN6b2Vec27SetZeroEv($74);
  $75=(($manifold+48)|0);
  $76=$75;
  $ld$40$0=(($P1)|0);
  $77$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($P1+4)|0);
  $77$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($76)|0);
  HEAP32[(($st$42$0)>>2)]=$77$0;
  $st$43$1=(($76+4)|0);
  HEAP32[(($st$43$1)>>2)]=$77$1;
  $78=(($manifold+16)|0);
  $79=(($78)|0);
  HEAP32[(($79)>>2)]=0;
  $80=$78;
  $cf_sroa_0_0__idx2=$78;
  HEAP8[($cf_sroa_0_0__idx2)]=1;
  $cf_sroa_1_1__idx6=(($80+1)|0);
  HEAP8[($cf_sroa_1_1__idx6)]=0;
  $cf_sroa_2_2__idx10=(($80+2)|0);
  HEAP8[($cf_sroa_2_2__idx10)]=0;
  $cf_sroa_3_3__idx14=(($80+3)|0);
  HEAP8[($cf_sroa_3_3__idx14)]=0;
  $81=$11;
  $82=$manifold;
  $ld$44$0=(($81)|0);
  $83$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($81+4)|0);
  $83$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($82)|0);
  HEAP32[(($st$46$0)>>2)]=$83$0;
  $st$47$1=(($82+4)|0);
  HEAP32[(($st$47$1)>>2)]=$83$1;
  STACKTOP=sp;return;
 }
 $85=(+(__Z5b2DotRK6b2Vec2S1_($e,$e)));
 $86=$85>(0.0);
 if (!($86)) {
  ___assert_fail(((11808)|0),((11760)|0),((127)|0),((13248)|0));

 }
 $89=((1.0))/($85);
 __ZmlfRK6b2Vec2($7,$18,$tmpcast);
 __ZmlfRK6b2Vec2($8,$19,$tmpcast60);
 __ZplRK6b2Vec2S1_($6,$7,$8);
 __ZmlfRK6b2Vec2($P4,$89,$6);
 __ZmiRK6b2Vec2S1_($d5,$Q,$P4);
 $90=(+(__Z5b2DotRK6b2Vec2S1_($d5,$d5)));
 $91=($24)*($24);
 $92=$90>$91;
 if ($92) {
  STACKTOP=sp;return;
 }
 $94=(($e+4)|0);
 $95=(+(HEAPF32[(($94)>>2)]));
 $96=((-.0))-($95);
 $97=(($e)|0);
 $98=(+(HEAPF32[(($97)>>2)]));
 __ZN6b2Vec2C1Eff($tmpcast61,$96,$98);
 __ZmiRK6b2Vec2S1_($9,$Q,$tmpcast);
 $99=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast61,$9)));
 $100=$99<(0.0);
 if ($100) {
  $102=$n;
  $103=(+(HEAPF32[(($102)>>2)]));
  $104=((-.0))-($103);
  $105=(($tmpcast61+4)|0);
  $106=(+(HEAPF32[(($105)>>2)]));
  $107=((-.0))-($106);
  __ZN6b2Vec23SetEff($tmpcast61,$104,$107);
 }
 $109=(+(__ZN6b2Vec29NormalizeEv($tmpcast61)));
 HEAP32[(($10)>>2)]=1;
 $110=(($manifold+56)|0);
 HEAP32[(($110)>>2)]=1;
 $111=(($manifold+40)|0);
 $112=$111;
 $ld$48$0=(($n)|0);
 $113$0=((HEAP32[(($ld$48$0)>>2)])|0);
 $ld$49$1=(($n+4)|0);
 $113$1=((HEAP32[(($ld$49$1)>>2)])|0);
 $st$50$0=(($112)|0);
 HEAP32[(($st$50$0)>>2)]=$113$0;
 $st$51$1=(($112+4)|0);
 HEAP32[(($st$51$1)>>2)]=$113$1;
 $114=(($manifold+48)|0);
 $115=$114;
 $ld$52$0=(($A)|0);
 $116$0=((HEAP32[(($ld$52$0)>>2)])|0);
 $ld$53$1=(($A+4)|0);
 $116$1=((HEAP32[(($ld$53$1)>>2)])|0);
 $st$54$0=(($115)|0);
 HEAP32[(($st$54$0)>>2)]=$116$0;
 $st$55$1=(($115+4)|0);
 HEAP32[(($st$55$1)>>2)]=$116$1;
 $117=(($manifold+16)|0);
 $118=(($117)|0);
 HEAP32[(($118)>>2)]=0;
 $119=$117;
 $cf_sroa_0_0__idx=$117;
 HEAP8[($cf_sroa_0_0__idx)]=0;
 $cf_sroa_1_1__idx=(($119+1)|0);
 HEAP8[($cf_sroa_1_1__idx)]=0;
 $cf_sroa_2_2__idx=(($119+2)|0);
 HEAP8[($cf_sroa_2_2__idx)]=1;
 $cf_sroa_3_3__idx=(($119+3)|0);
 HEAP8[($cf_sroa_3_3__idx)]=0;
 $120=$11;
 $121=$manifold;
 $ld$56$0=(($120)|0);
 $122$0=((HEAP32[(($ld$56$0)>>2)])|0);
 $ld$57$1=(($120+4)|0);
 $122$1=((HEAP32[(($ld$57$1)>>2)])|0);
 $st$58$0=(($121)|0);
 HEAP32[(($st$58$0)>>2)]=$122$0;
 $st$59$1=(($121+4)|0);
 HEAP32[(($st$59$1)>>2)]=$122$1;
 STACKTOP=sp;return;
}


function __ZN6b2Vec23SetEff($this,$x_,$y_){
 $this=($this)|0;
 $x_=+($x_);
 $y_=+($y_);
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=$x_;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=$y_;
 return;
}


function __ZN12b2EPCollider7CollideEP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS7_($this,$manifold,$edgeA,$xfA,$polygonB,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $edgeA=($edgeA)|0;
 $xfA=($xfA)|0;
 $polygonB=($polygonB)|0;
 $xfB=($xfB)|0;
 var $1=0,$2=0,$tmpcast=0,$edge1=0,$3=0,$edge0=0,$4=0,$edge2=0,$5=0,$6=0,$tmpcast133=0,$7=0,$tmpcast134=0,$8=0,$tmpcast135=0,$9=0,$tmpcast129=0,$10=0,$tmpcast130=0,$11=0;
 var $tmpcast131=0,$12=0,$tmpcast125=0,$13=0,$tmpcast126=0,$14=0,$tmpcast127=0,$15=0,$tmpcast121=0,$16=0,$tmpcast122=0,$17=0,$tmpcast123=0,$18=0,$tmpcast119=0,$19=0,$tmpcast117=0,$20=0,$tmpcast118=0,$21=0;
 var $tmpcast115=0,$22=0,$tmpcast113=0,$23=0,$tmpcast114=0,$24=0,$tmpcast111=0,$25=0,$tmpcast109=0,$26=0,$tmpcast110=0,$27=0,$tmpcast107=0,$28=0,$tmpcast105=0,$29=0,$tmpcast106=0,$30=0,$tmpcast103=0,$31=0;
 var $tmpcast104=0,$32=0,$tmpcast95=0,$33=0,$tmpcast101=0,$34=0,$tmpcast102=0,$edgeAxis=0,$polygonAxis=0,$ie97=0,$ie97_sub=0,$tmpcast96=0,$rf=0,$35=0,$tmpcast100=0,$36=0,$tmpcast98=0,$clipPoints1=0,$clipPoints2167=0,$clipPoints2167_sub=0;
 var $tmpcast166=0,$37=0,$38=0,$tmpcast99=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$ld$0$0=0,$45$0=0,$ld$1$1=0,$45$1=0,$st$2$0=0,$st$3$1=0,$46=0,$47=0,$48=0,$49=0;
 var $ld$4$0=0,$50$0=0,$ld$5$1=0,$50$1=0,$st$6$0=0,$st$7$1=0,$51=0,$52=0,$53=0,$54=0,$ld$8$0=0,$55$0=0,$ld$9$1=0,$55$1=0,$st$10$0=0,$st$11$1=0,$56=0,$57=0,$58=0,$59=0;
 var $ld$12$0=0,$60$0=0,$ld$13$1=0,$60$1=0,$st$14$0=0,$st$15$1=0,$61=0,$62=0,$63=0,$64=0,$ld$16$0=0,$65$0=0,$ld$17$1=0,$65$1=0,$st$18$0=0,$st$19$1=0,$66=0,$67=0,$68=0,$69=0;
 var $70=0,$71=0,$72=.0,$73=0,$74=0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$81=.0,$82=0,$83=0,$84=.0,$85=0,$86=.0,$87=.0,$88=.0,$89=0,$90=.0;
 var $convex1_0_off0=0,$offset0_0=.0,$93=.0,$94=0,$95=0,$96=.0,$97=0,$98=.0,$99=.0,$100=.0,$101=0,$102=.0,$brmerge_demorgan=0,$brmerge137_demorgan=0,$105=0,$106=0,$or_cond=0,$107=0,$108=0,$110=0;
 var $phitmp132=0,$111=0,$112=0,$114=0,$115=0,$116=0,$ld$20$0=0,$117$0=0,$ld$21$1=0,$117$1=0,$st$22$0=0,$st$23$1=0,$118=0,$119=0,$120=0,$121=0,$ld$24$0=0,$122$0=0,$ld$25$1=0,$122$1=0;
 var $st$26$0=0,$st$27$1=0,$123=0,$124=0,$125=0,$126=0,$ld$28$0=0,$127$0=0,$ld$29$1=0,$127$1=0,$st$30$0=0,$st$31$1=0,$129=0,$ld$32$0=0,$130$0=0,$ld$33$1=0,$130$1=0,$st$34$0=0,$st$35$1=0,$131=0;
 var $132=0,$ld$36$0=0,$133$0=0,$ld$37$1=0,$133$1=0,$st$38$0=0,$st$39$1=0,$134=0,$135=0,$ld$40$0=0,$136$0=0,$ld$41$1=0,$136$1=0,$st$42$0=0,$st$43$1=0,$139=0,$140=0,$141=0,$143=0,$144=0;
 var $145=0,$147=0,$phitmp128=0,$148=0,$149=0,$151=0,$152=0,$153=0,$ld$44$0=0,$154$0=0,$ld$45$1=0,$154$1=0,$st$46$0=0,$st$47$1=0,$155=0,$156=0,$157=0,$158=0,$ld$48$0=0,$159$0=0;
 var $ld$49$1=0,$159$1=0,$st$50$0=0,$st$51$1=0,$160=0,$161=0,$ld$52$0=0,$162$0=0,$ld$53$1=0,$162$1=0,$st$54$0=0,$st$55$1=0,$164=0,$165=0,$ld$56$0=0,$166$0=0,$ld$57$1=0,$166$1=0,$st$58$0=0,$st$59$1=0;
 var $167=0,$168=0,$169=0,$ld$60$0=0,$170$0=0,$ld$61$1=0,$170$1=0,$st$62$0=0,$st$63$1=0,$171=0,$172=0,$ld$64$0=0,$173$0=0,$ld$65$1=0,$173$1=0,$st$66$0=0,$st$67$1=0,$176=0,$177=0,$178=0;
 var $180=0,$181=0,$182=0,$184=0,$phitmp124=0,$185=0,$186=0,$188=0,$189=0,$190=0,$ld$68$0=0,$191$0=0,$ld$69$1=0,$191$1=0,$st$70$0=0,$st$71$1=0,$192=0,$193=0,$ld$72$0=0,$194$0=0;
 var $ld$73$1=0,$194$1=0,$st$74$0=0,$st$75$1=0,$195=0,$196=0,$197=0,$198=0,$ld$76$0=0,$199$0=0,$ld$77$1=0,$199$1=0,$st$78$0=0,$st$79$1=0,$201=0,$202=0,$ld$80$0=0,$203$0=0,$ld$81$1=0,$203$1=0;
 var $st$82$0=0,$st$83$1=0,$204=0,$205=0,$ld$84$0=0,$206$0=0,$ld$85$1=0,$206$1=0,$st$86$0=0,$st$87$1=0,$207=0,$208=0,$209=0,$ld$88$0=0,$210$0=0,$ld$89$1=0,$210$1=0,$st$90$0=0,$st$91$1=0,$212=0;
 var $213=0,$or_cond138=0,$214=0,$215=0,$217=0,$phitmp120=0,$218=0,$219=0,$221=0,$222=0,$ld$92$0=0,$223$0=0,$ld$93$1=0,$223$1=0,$st$94$0=0,$st$95$1=0,$224=0,$225=0,$ld$96$0=0,$226$0=0;
 var $ld$97$1=0,$226$1=0,$st$98$0=0,$st$99$1=0,$227=0,$228=0,$ld$100$0=0,$229$0=0,$ld$101$1=0,$229$1=0,$st$102$0=0,$st$103$1=0,$231=0,$232=0,$ld$104$0=0,$233$0=0,$ld$105$1=0,$233$1=0,$st$106$0=0,$st$107$1=0;
 var $234=0,$235=0,$236=0,$ld$108$0=0,$237$0=0,$ld$109$1=0,$237$1=0,$st$110$0=0,$st$111$1=0,$238=0,$239=0,$240=0,$ld$112$0=0,$241$0=0,$ld$113$1=0,$241$1=0,$st$114$0=0,$st$115$1=0,$offset2_0144=.0,$convex2_0_off0143=0;
 var $243=0,$245=0,$246=0,$248=0,$phitmp116=0,$249=0,$250=0,$252=0,$253=0,$254=0,$ld$116$0=0,$255$0=0,$ld$117$1=0,$255$1=0,$st$118$0=0,$st$119$1=0,$256=0,$257=0,$258=0,$259=0;
 var $ld$120$0=0,$260$0=0,$ld$121$1=0,$260$1=0,$st$122$0=0,$st$123$1=0,$261=0,$262=0,$ld$124$0=0,$263$0=0,$ld$125$1=0,$263$1=0,$st$126$0=0,$st$127$1=0,$265=0,$ld$128$0=0,$266$0=0,$ld$129$1=0,$266$1=0,$st$130$0=0;
 var $st$131$1=0,$267=0,$268=0,$269=0,$ld$132$0=0,$270$0=0,$ld$133$1=0,$270$1=0,$st$134$0=0,$st$135$1=0,$271=0,$272=0,$ld$136$0=0,$273$0=0,$ld$137$1=0,$273$1=0,$st$138$0=0,$st$139$1=0,$275=0,$276=0;
 var $278=0,$phitmp112=0,$279=0,$280=0,$282=0,$283=0,$ld$140$0=0,$284$0=0,$ld$141$1=0,$284$1=0,$st$142$0=0,$st$143$1=0,$285=0,$286=0,$ld$144$0=0,$287$0=0,$ld$145$1=0,$287$1=0,$st$146$0=0,$st$147$1=0;
 var $288=0,$289=0,$ld$148$0=0,$290$0=0,$ld$149$1=0,$290$1=0,$st$150$0=0,$st$151$1=0,$292=0,$293=0,$ld$152$0=0,$294$0=0,$ld$153$1=0,$294$1=0,$st$154$0=0,$st$155$1=0,$295=0,$296=0,$297=0,$ld$156$0=0;
 var $298$0=0,$ld$157$1=0,$298$1=0,$st$158$0=0,$st$159$1=0,$299=0,$300=0,$301=0,$ld$160$0=0,$302$0=0,$ld$161$1=0,$302$1=0,$st$162$0=0,$st$163$1=0,$304=0,$307=0,$308=0,$310=0,$phitmp108=0,$311=0;
 var $312=0,$314=0,$315=0,$316=0,$ld$164$0=0,$317$0=0,$ld$165$1=0,$317$1=0,$st$166$0=0,$st$167$1=0,$318=0,$319=0,$ld$168$0=0,$320$0=0,$ld$169$1=0,$320$1=0,$st$170$0=0,$st$171$1=0,$321=0,$322=0;
 var $323=0,$324=0,$ld$172$0=0,$325$0=0,$ld$173$1=0,$325$1=0,$st$174$0=0,$st$175$1=0,$327=0,$ld$176$0=0,$328$0=0,$ld$177$1=0,$328$1=0,$st$178$0=0,$st$179$1=0,$329=0,$330=0,$ld$180$0=0,$331$0=0,$ld$181$1=0;
 var $331$1=0,$st$182$0=0,$st$183$1=0,$332=0,$333=0,$334=0,$ld$184$0=0,$335$0=0,$ld$185$1=0,$335$1=0,$st$186$0=0,$st$187$1=0,$337=0,$338=0,$340=0,$phitmp=0,$341=0,$342=0,$344=0,$345=0;
 var $ld$188$0=0,$346$0=0,$ld$189$1=0,$346$1=0,$st$190$0=0,$st$191$1=0,$347=0,$348=0,$ld$192$0=0,$349$0=0,$ld$193$1=0,$349$1=0,$st$194$0=0,$st$195$1=0,$350=0,$351=0,$ld$196$0=0,$352$0=0,$ld$197$1=0,$352$1=0;
 var $st$198$0=0,$st$199$1=0,$354=0,$355=0,$ld$200$0=0,$356$0=0,$ld$201$1=0,$356$1=0,$st$202$0=0,$st$203$1=0,$357=0,$358=0,$359=0,$ld$204$0=0,$360$0=0,$ld$205$1=0,$360$1=0,$st$206$0=0,$st$207$1=0,$361=0;
 var $362=0,$363=0,$ld$208$0=0,$364$0=0,$ld$209$1=0,$364$1=0,$st$210$0=0,$st$211$1=0,$366=0,$367=0,$368=0,$370=0,$371=0,$ld$212$0=0,$372$0=0,$ld$213$1=0,$372$1=0,$st$214$0=0,$st$215$1=0,$373=0;
 var $374=0,$ld$216$0=0,$375$0=0,$ld$217$1=0,$375$1=0,$st$218$0=0,$st$219$1=0,$376=0,$377=0,$ld$220$0=0,$378$0=0,$ld$221$1=0,$378$1=0,$st$222$0=0,$st$223$1=0,$380=0,$ld$224$0=0,$381$0=0,$ld$225$1=0,$381$1=0;
 var $st$226$0=0,$st$227$1=0,$382=0,$383=0,$384=0,$ld$228$0=0,$385$0=0,$ld$229$1=0,$385$1=0,$st$230$0=0,$st$231$1=0,$386=0,$387=0,$ld$232$0=0,$388$0=0,$ld$233$1=0,$388$1=0,$st$234$0=0,$st$235$1=0,$390=0;
 var $391=0,$392=0,$393=0,$394=0,$395=0,$i_0162=0,$397=0,$398=0,$399=0,$ld$236$0=0,$400$0=0,$ld$237$1=0,$400$1=0,$st$238$0=0,$st$239$1=0,$401=0,$402=0,$403=0,$ld$240$0=0,$404$0=0;
 var $ld$241$1=0,$404$1=0,$st$242$0=0,$st$243$1=0,$405=0,$406=0,$407=0,$408=0,$409=0,$410=0,$411=0,$412=0,$414=0,$415=.0,$416=.0,$417=0,$419=0,$420=0,$421=0,$423=0;
 var $424=.0,$425=.0,$426=0,$_pr=0,$428=0,$primaryAxis_sroa_0_0_copyload31=0,$primaryAxis_sroa_1_4__idx37=0,$primaryAxis_sroa_1_4_copyload38=0,$430=0,$431=.0,$432=.0,$433=.0,$434=.0,$435=0,$primaryAxis_sroa_1_4__idx35=0,$primaryAxis_sroa_1_4_copyload36=0,$primaryAxis_sroa_0_0_copyload=0,$primaryAxis_sroa_1_4__idx34=0,$primaryAxis_sroa_1_4_copyload=0,$primaryAxis_sroa_1_0=0;
 var $primaryAxis_sroa_0_0=0,$439=0,$440=0,$441=0,$443=0,$444=0,$445=0,$446=0,$447=.0,$448=0,$i1_0160=0,$bestValue_0159=.0,$bestIndex_0158=0,$450=0,$451=.0,$452=0,$bestIndex_1=0,$bestValue_1=.0,$453=0,$454=0;
 var $_lcssa=0,$bestIndex_0_lcssa=0,$455=0,$456=0,$_=0,$457=0,$458=0,$ld$244$0=0,$459$0=0,$ld$245$1=0,$459$1=0,$st$246$0=0,$st$247$1=0,$460=0,$461=0,$462=0,$463=0,$464=0,$465=0,$466=0;
 var $467=0,$468=0,$469=0,$470=0,$ld$248$0=0,$471$0=0,$ld$249$1=0,$471$1=0,$st$250$0=0,$st$251$1=0,$472=0,$473=0,$474=0,$475=0,$476=0,$477=0,$478=0,$479=0,$480=0,$481=0;
 var $482=0,$484=0,$485=0,$486=0,$ld$252$0=0,$487$0=0,$ld$253$1=0,$487$1=0,$st$254$0=0,$st$255$1=0,$488=0,$489=0,$ld$256$0=0,$490$0=0,$ld$257$1=0,$490$1=0,$st$258$0=0,$st$259$1=0,$491=0,$492=0;
 var $493=0,$ld$260$0=0,$494$0=0,$ld$261$1=0,$494$1=0,$st$262$0=0,$st$263$1=0,$496=0,$497=0,$498=0,$ld$264$0=0,$499$0=0,$ld$265$1=0,$499$1=0,$st$266$0=0,$st$267$1=0,$500=0,$501=0,$ld$268$0=0,$502$0=0;
 var $ld$269$1=0,$502$1=0,$st$270$0=0,$st$271$1=0,$503=0,$504=0,$ld$272$0=0,$505$0=0,$ld$273$1=0,$505$1=0,$st$274$0=0,$st$275$1=0,$ld$276$0=0,$507$0=0,$ld$277$1=0,$507$1=0,$st$278$0=0,$st$279$1=0,$508=0,$509=0;
 var $510=0,$511=0,$512=0,$513=0,$514=0,$515=0,$516=0,$ld$280$0=0,$517$0=0,$ld$281$1=0,$517$1=0,$st$282$0=0,$st$283$1=0,$518=0,$519=0,$520=0,$521=0,$522=0,$523=0,$524=0;
 var $525=0,$526=0,$527=0,$_139=0,$528=0,$529=0,$530=0,$531=0,$532=0,$533=0,$ld$284$0=0,$534$0=0,$ld$285$1=0,$534$1=0,$st$286$0=0,$st$287$1=0,$535=0,$536=0,$537=0,$538=0;
 var $539=0,$ld$288$0=0,$540$0=0,$ld$289$1=0,$540$1=0,$st$290$0=0,$st$291$1=0,$541=0,$542=0,$543=0,$544=0,$545=0,$ld$292$0=0,$546$0=0,$ld$293$1=0,$546$1=0,$st$294$0=0,$st$295$1=0,$548=0,$549=0;
 var $550=0,$551=.0,$552=0,$553=.0,$554=.0,$555=0,$556=0,$ld$296$0=0,$557$0=0,$ld$297$1=0,$557$1=0,$st$298$0=0,$st$299$1=0,$558=0,$559=.0,$560=0,$561=0,$562=.0,$563=0,$564=0;
 var $565=.0,$566=0,$567=0,$568=0,$569=0,$571=0,$572=.0,$573=0,$574=0,$575=0,$576=0,$578=0,$580=0,$581=0,$ld$300$0=0,$582$0=0,$ld$301$1=0,$582$1=0,$st$302$0=0,$st$303$1=0;
 var $583=0,$584=0,$585=0,$ld$304$0=0,$586$0=0,$ld$305$1=0,$586$1=0,$st$306$0=0,$st$307$1=0,$588=0,$589=0,$590=0,$591=0,$ld$308$0=0,$592$0=0,$ld$309$1=0,$592$1=0,$st$310$0=0,$st$311$1=0,$593=0;
 var $594=0,$595=0,$596=0,$597=0,$ld$312$0=0,$598$0=0,$ld$313$1=0,$598$1=0,$st$314$0=0,$st$315$1=0,$599=0,$600=.0,$601=.0,$602=0,$605=0,$ld$316$0=0,$606$0=0,$ld$317$1=0,$606$1=0,$st$318$0=0;
 var $st$319$1=0,$607=0,$608=0,$609=0,$610=0,$612=0,$ld$320$0=0,$613$0=0,$ld$321$1=0,$613$1=0,$st$322$0=0,$st$323$1=0,$614=0,$615=0,$616=0,$617=0,$618=0,$619=0,$620=0,$621=0;
 var $622=0,$623=0,$624=0,$625=0,$626=0,$627=0,$628=0,$629=0,$pointCount_1=0,$631=0,$632=0,$633=.0,$634=.0,$635=0,$638=0,$640=0,$641=0,$ld$324$0=0,$642$0=0,$ld$325$1=0;
 var $642$1=0,$st$326$0=0,$st$327$1=0,$643=0,$644=0,$645=0,$646=0,$647=0,$648=0,$649=0,$650=0,$651=0,$652=0,$653=0,$654=0,$655=0,$656=0,$657=0,$658=0,$660=0;
 var $ld$328$0=0,$661$0=0,$ld$329$1=0,$661$1=0,$st$330$0=0,$st$331$1=0,$662=0,$663=0,$664=0,$666=0,$pointCount_1_1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $1=((sp)|0);
 $2=(((sp)+(16))|0);
 $tmpcast=$2;
 $edge1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $edge0=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $edge2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast133=$6;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast134=$7;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast135=$8;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast129=$9;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast130=$10;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast131=$11;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast125=$12;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast126=$13;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast127=$14;
 $15=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast121=$15;
 $16=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast122=$16;
 $17=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast123=$17;
 $18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast119=$18;
 $19=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast117=$19;
 $20=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast118=$20;
 $21=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast115=$21;
 $22=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast113=$22;
 $23=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast114=$23;
 $24=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast111=$24;
 $25=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast109=$25;
 $26=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast110=$26;
 $27=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast107=$27;
 $28=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast105=$28;
 $29=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast106=$29;
 $30=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast103=$30;
 $31=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast104=$31;
 $32=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast95=$32;
 $33=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast101=$33;
 $34=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast102=$34;
 $edgeAxis=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $polygonAxis=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $ie97=STACKTOP;STACKTOP = (STACKTOP + 24)|0;
 $ie97_sub=(($ie97)|0);
 $tmpcast96=$ie97;
 $rf=STACKTOP;STACKTOP = (STACKTOP + 56)|0;
 $35=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast100=$35;
 $36=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast98=$36;
 $clipPoints1=STACKTOP;STACKTOP = (STACKTOP + 24)|0;
 $clipPoints2167=STACKTOP;STACKTOP = (STACKTOP + 24)|0;
 $clipPoints2167_sub=(($clipPoints2167)|0);
 $tmpcast166=$clipPoints2167;
 $37=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $38=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast99=$38;
 $39=(($this+132)|0);
 __Z6b2MulTRK11b2TransformS1_($1,$xfA,$xfB);
 $40=$39;
 $41=$1;
 HEAP32[(($40)>>2)]=((HEAP32[(($41)>>2)])|0);HEAP32[((($40)+(4))>>2)]=((HEAP32[((($41)+(4))>>2)])|0);HEAP32[((($40)+(8))>>2)]=((HEAP32[((($41)+(8))>>2)])|0);HEAP32[((($40)+(12))>>2)]=((HEAP32[((($41)+(12))>>2)])|0);
 $42=(($this+148)|0);
 $43=(($polygonB+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast,$39,$43);
 $44=$42;
 $ld$0$0=(($2)|0);
 $45$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $45$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($44)|0);
 HEAP32[(($st$2$0)>>2)]=$45$0;
 $st$3$1=(($44+4)|0);
 HEAP32[(($st$3$1)>>2)]=$45$1;
 $46=(($this+156)|0);
 $47=(($edgeA+28)|0);
 $48=$47;
 $49=$46;
 $ld$4$0=(($48)|0);
 $50$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($48+4)|0);
 $50$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($49)|0);
 HEAP32[(($st$6$0)>>2)]=$50$0;
 $st$7$1=(($49+4)|0);
 HEAP32[(($st$7$1)>>2)]=$50$1;
 $51=(($this+164)|0);
 $52=(($edgeA+12)|0);
 $53=$52;
 $54=$51;
 $ld$8$0=(($53)|0);
 $55$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($53+4)|0);
 $55$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($54)|0);
 HEAP32[(($st$10$0)>>2)]=$55$0;
 $st$11$1=(($54+4)|0);
 HEAP32[(($st$11$1)>>2)]=$55$1;
 $56=(($this+172)|0);
 $57=(($edgeA+20)|0);
 $58=$57;
 $59=$56;
 $ld$12$0=(($58)|0);
 $60$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($58+4)|0);
 $60$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($59)|0);
 HEAP32[(($st$14$0)>>2)]=$60$0;
 $st$15$1=(($59+4)|0);
 HEAP32[(($st$15$1)>>2)]=$60$1;
 $61=(($this+180)|0);
 $62=(($edgeA+36)|0);
 $63=$62;
 $64=$61;
 $ld$16$0=(($63)|0);
 $65$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($63+4)|0);
 $65$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($64)|0);
 HEAP32[(($st$18$0)>>2)]=$65$0;
 $st$19$1=(($64+4)|0);
 HEAP32[(($st$19$1)>>2)]=$65$1;
 $66=(($edgeA+44)|0);
 $67=((HEAP8[($66)])|0);
 $68=(($67<<24)>>24)!=0;
 $69=(($edgeA+45)|0);
 $70=((HEAP8[($69)])|0);
 $71=(($70<<24)>>24)!=0;
 __ZmiRK6b2Vec2S1_($edge1,$56,$51);
 $72=(+(__ZN6b2Vec29NormalizeEv($edge1)));
 $73=(($this+196)|0);
 $74=(($edge1+4)|0);
 $75=(+(HEAPF32[(($74)>>2)]));
 $76=(($edge1)|0);
 $77=(+(HEAPF32[(($76)>>2)]));
 $78=((-.0))-($77);
 __ZN6b2Vec23SetEff($73,$75,$78);
 __ZmiRK6b2Vec2S1_($3,$42,$51);
 $79=(+(__Z5b2DotRK6b2Vec2S1_($73,$3)));
 if ($68) {
  __ZmiRK6b2Vec2S1_($edge0,$51,$46);
  $81=(+(__ZN6b2Vec29NormalizeEv($edge0)));
  $82=(($this+188)|0);
  $83=(($edge0+4)|0);
  $84=(+(HEAPF32[(($83)>>2)]));
  $85=(($edge0)|0);
  $86=(+(HEAPF32[(($85)>>2)]));
  $87=((-.0))-($86);
  __ZN6b2Vec23SetEff($82,$84,$87);
  $88=(+(__Z7b2CrossRK6b2Vec2S1_($edge0,$edge1)));
  $89=$88>=(0.0);
  __ZmiRK6b2Vec2S1_($4,$42,$46);
  $90=(+(__Z5b2DotRK6b2Vec2S1_($82,$4)));
  $offset0_0=$90;$convex1_0_off0=$89;
 } else {
  $offset0_0=0.0;$convex1_0_off0=0;
 }


 L4: do {
  if ($71) {
   __ZmiRK6b2Vec2S1_($edge2,$61,$56);
   $93=(+(__ZN6b2Vec29NormalizeEv($edge2)));
   $94=(($this+204)|0);
   $95=(($edge2+4)|0);
   $96=(+(HEAPF32[(($95)>>2)]));
   $97=(($edge2)|0);
   $98=(+(HEAPF32[(($97)>>2)]));
   $99=((-.0))-($98);
   __ZN6b2Vec23SetEff($94,$96,$99);
   $100=(+(__Z7b2CrossRK6b2Vec2S1_($edge1,$edge2)));
   $101=$100>(0.0);
   __ZmiRK6b2Vec2S1_($5,$42,$56);
   $102=(+(__Z5b2DotRK6b2Vec2S1_($94,$5)));
   $brmerge_demorgan=$68&$71;
   if (!($brmerge_demorgan)) {
    $convex2_0_off0143=$101;$offset2_0144=$102;
    label = 32;
    break;
   }
   $brmerge137_demorgan=$convex1_0_off0&$101;
   if ($brmerge137_demorgan) {
    $105=$offset0_0<(0.0);
    $106=$79<(0.0);
    $or_cond=$105&$106;
    do {
     if ($or_cond) {
      $110=$102>=(0.0);
      $phitmp132=($110&1);
      $111=(($this+248)|0);
      HEAP8[($111)]=$phitmp132;
      $112=(($this+212)|0);
      if ($110) {
       $114=$112;
       break;
      }
      __ZNK6b2Vec2ngEv($tmpcast133,$73);
      $129=$112;
      $ld$32$0=(($6)|0);
      $130$0=((HEAP32[(($ld$32$0)>>2)])|0);
      $ld$33$1=(($6+4)|0);
      $130$1=((HEAP32[(($ld$33$1)>>2)])|0);
      $st$34$0=(($129)|0);
      HEAP32[(($st$34$0)>>2)]=$130$0;
      $st$35$1=(($129+4)|0);
      HEAP32[(($st$35$1)>>2)]=$130$1;
      $131=(($this+228)|0);
      __ZNK6b2Vec2ngEv($tmpcast134,$73);
      $132=$131;
      $ld$36$0=(($7)|0);
      $133$0=((HEAP32[(($ld$36$0)>>2)])|0);
      $ld$37$1=(($7+4)|0);
      $133$1=((HEAP32[(($ld$37$1)>>2)])|0);
      $st$38$0=(($132)|0);
      HEAP32[(($st$38$0)>>2)]=$133$0;
      $st$39$1=(($132+4)|0);
      HEAP32[(($st$39$1)>>2)]=$133$1;
      $134=(($this+236)|0);
      __ZNK6b2Vec2ngEv($tmpcast135,$73);
      $135=$134;
      $ld$40$0=(($8)|0);
      $136$0=((HEAP32[(($ld$40$0)>>2)])|0);
      $ld$41$1=(($8+4)|0);
      $136$1=((HEAP32[(($ld$41$1)>>2)])|0);
      $st$42$0=(($135)|0);
      HEAP32[(($st$42$0)>>2)]=$136$0;
      $st$43$1=(($135+4)|0);
      HEAP32[(($st$43$1)>>2)]=$136$1;
      break L4;
     } else {
      $107=(($this+248)|0);
      HEAP8[($107)]=1;
      $108=(($this+212)|0);
      $114=$108;
     }
    } while(0);

    $115=$73;
    $116=$114;
    $ld$20$0=(($115)|0);
    $117$0=((HEAP32[(($ld$20$0)>>2)])|0);
    $ld$21$1=(($115+4)|0);
    $117$1=((HEAP32[(($ld$21$1)>>2)])|0);
    $st$22$0=(($116)|0);
    HEAP32[(($st$22$0)>>2)]=$117$0;
    $st$23$1=(($116+4)|0);
    HEAP32[(($st$23$1)>>2)]=$117$1;
    $118=(($this+228)|0);
    $119=(($this+188)|0);
    $120=$119;
    $121=$118;
    $ld$24$0=(($120)|0);
    $122$0=((HEAP32[(($ld$24$0)>>2)])|0);
    $ld$25$1=(($120+4)|0);
    $122$1=((HEAP32[(($ld$25$1)>>2)])|0);
    $st$26$0=(($121)|0);
    HEAP32[(($st$26$0)>>2)]=$122$0;
    $st$27$1=(($121+4)|0);
    HEAP32[(($st$27$1)>>2)]=$122$1;
    $123=(($this+236)|0);
    $124=(($this+204)|0);
    $125=$124;
    $126=$123;
    $ld$28$0=(($125)|0);
    $127$0=((HEAP32[(($ld$28$0)>>2)])|0);
    $ld$29$1=(($125+4)|0);
    $127$1=((HEAP32[(($ld$29$1)>>2)])|0);
    $st$30$0=(($126)|0);
    HEAP32[(($st$30$0)>>2)]=$127$0;
    $st$31$1=(($126+4)|0);
    HEAP32[(($st$31$1)>>2)]=$127$1;
    break;
   }
   if ($convex1_0_off0) {
    $139=$offset0_0<(0.0);
    do {
     if ($139) {
      $143=$79<(0.0);
      if ($143) {
       $144=(($this+248)|0);
       HEAP8[($144)]=0;
       $145=(($this+212)|0);
       $164=$145;
      } else {
       $147=$102>=(0.0);
       $phitmp128=($147&1);
       $148=(($this+248)|0);
       HEAP8[($148)]=$phitmp128;
       $149=(($this+212)|0);
       if ($147) {
        $151=$149;
        break;
       } else {
        $164=$149;
       }
      }

      __ZNK6b2Vec2ngEv($tmpcast129,$73);
      $165=$164;
      $ld$56$0=(($9)|0);
      $166$0=((HEAP32[(($ld$56$0)>>2)])|0);
      $ld$57$1=(($9+4)|0);
      $166$1=((HEAP32[(($ld$57$1)>>2)])|0);
      $st$58$0=(($165)|0);
      HEAP32[(($st$58$0)>>2)]=$166$0;
      $st$59$1=(($165+4)|0);
      HEAP32[(($st$59$1)>>2)]=$166$1;
      $167=(($this+228)|0);
      $168=(($this+204)|0);
      __ZNK6b2Vec2ngEv($tmpcast130,$168);
      $169=$167;
      $ld$60$0=(($10)|0);
      $170$0=((HEAP32[(($ld$60$0)>>2)])|0);
      $ld$61$1=(($10+4)|0);
      $170$1=((HEAP32[(($ld$61$1)>>2)])|0);
      $st$62$0=(($169)|0);
      HEAP32[(($st$62$0)>>2)]=$170$0;
      $st$63$1=(($169+4)|0);
      HEAP32[(($st$63$1)>>2)]=$170$1;
      $171=(($this+236)|0);
      __ZNK6b2Vec2ngEv($tmpcast131,$73);
      $172=$171;
      $ld$64$0=(($11)|0);
      $173$0=((HEAP32[(($ld$64$0)>>2)])|0);
      $ld$65$1=(($11+4)|0);
      $173$1=((HEAP32[(($ld$65$1)>>2)])|0);
      $st$66$0=(($172)|0);
      HEAP32[(($st$66$0)>>2)]=$173$0;
      $st$67$1=(($172+4)|0);
      HEAP32[(($st$67$1)>>2)]=$173$1;
      break L4;
     } else {
      $140=(($this+248)|0);
      HEAP8[($140)]=1;
      $141=(($this+212)|0);
      $151=$141;
     }
    } while(0);

    $152=$73;
    $153=$151;
    $ld$44$0=(($152)|0);
    $154$0=((HEAP32[(($ld$44$0)>>2)])|0);
    $ld$45$1=(($152+4)|0);
    $154$1=((HEAP32[(($ld$45$1)>>2)])|0);
    $st$46$0=(($153)|0);
    HEAP32[(($st$46$0)>>2)]=$154$0;
    $st$47$1=(($153+4)|0);
    HEAP32[(($st$47$1)>>2)]=$154$1;
    $155=(($this+228)|0);
    $156=(($this+188)|0);
    $157=$156;
    $158=$155;
    $ld$48$0=(($157)|0);
    $159$0=((HEAP32[(($ld$48$0)>>2)])|0);
    $ld$49$1=(($157+4)|0);
    $159$1=((HEAP32[(($ld$49$1)>>2)])|0);
    $st$50$0=(($158)|0);
    HEAP32[(($st$50$0)>>2)]=$159$0;
    $st$51$1=(($158+4)|0);
    HEAP32[(($st$51$1)>>2)]=$159$1;
    $160=(($this+236)|0);
    $161=$160;
    $ld$52$0=(($152)|0);
    $162$0=((HEAP32[(($ld$52$0)>>2)])|0);
    $ld$53$1=(($152+4)|0);
    $162$1=((HEAP32[(($ld$53$1)>>2)])|0);
    $st$54$0=(($161)|0);
    HEAP32[(($st$54$0)>>2)]=$162$0;
    $st$55$1=(($161+4)|0);
    HEAP32[(($st$55$1)>>2)]=$162$1;
    break;
   }
   if (!($101)) {
    $212=$offset0_0<(0.0);
    $213=$79<(0.0);
    $or_cond138=$212|$213;
    do {
     if ($or_cond138) {
      $214=(($this+248)|0);
      HEAP8[($214)]=0;
      $215=(($this+212)|0);
      $231=$215;
     } else {
      $217=$102>=(0.0);
      $phitmp120=($217&1);
      $218=(($this+248)|0);
      HEAP8[($218)]=$phitmp120;
      $219=(($this+212)|0);
      if (!($217)) {
       $231=$219;
       break;
      }
      $221=$73;
      $222=$219;
      $ld$92$0=(($221)|0);
      $223$0=((HEAP32[(($ld$92$0)>>2)])|0);
      $ld$93$1=(($221+4)|0);
      $223$1=((HEAP32[(($ld$93$1)>>2)])|0);
      $st$94$0=(($222)|0);
      HEAP32[(($st$94$0)>>2)]=$223$0;
      $st$95$1=(($222+4)|0);
      HEAP32[(($st$95$1)>>2)]=$223$1;
      $224=(($this+228)|0);
      $225=$224;
      $ld$96$0=(($221)|0);
      $226$0=((HEAP32[(($ld$96$0)>>2)])|0);
      $ld$97$1=(($221+4)|0);
      $226$1=((HEAP32[(($ld$97$1)>>2)])|0);
      $st$98$0=(($225)|0);
      HEAP32[(($st$98$0)>>2)]=$226$0;
      $st$99$1=(($225+4)|0);
      HEAP32[(($st$99$1)>>2)]=$226$1;
      $227=(($this+236)|0);
      $228=$227;
      $ld$100$0=(($221)|0);
      $229$0=((HEAP32[(($ld$100$0)>>2)])|0);
      $ld$101$1=(($221+4)|0);
      $229$1=((HEAP32[(($ld$101$1)>>2)])|0);
      $st$102$0=(($228)|0);
      HEAP32[(($st$102$0)>>2)]=$229$0;
      $st$103$1=(($228+4)|0);
      HEAP32[(($st$103$1)>>2)]=$229$1;
      break L4;
     }
    } while(0);

    __ZNK6b2Vec2ngEv($tmpcast121,$73);
    $232=$231;
    $ld$104$0=(($15)|0);
    $233$0=((HEAP32[(($ld$104$0)>>2)])|0);
    $ld$105$1=(($15+4)|0);
    $233$1=((HEAP32[(($ld$105$1)>>2)])|0);
    $st$106$0=(($232)|0);
    HEAP32[(($st$106$0)>>2)]=$233$0;
    $st$107$1=(($232+4)|0);
    HEAP32[(($st$107$1)>>2)]=$233$1;
    $234=(($this+228)|0);
    $235=(($this+204)|0);
    __ZNK6b2Vec2ngEv($tmpcast122,$235);
    $236=$234;
    $ld$108$0=(($16)|0);
    $237$0=((HEAP32[(($ld$108$0)>>2)])|0);
    $ld$109$1=(($16+4)|0);
    $237$1=((HEAP32[(($ld$109$1)>>2)])|0);
    $st$110$0=(($236)|0);
    HEAP32[(($st$110$0)>>2)]=$237$0;
    $st$111$1=(($236+4)|0);
    HEAP32[(($st$111$1)>>2)]=$237$1;
    $238=(($this+236)|0);
    $239=(($this+188)|0);
    __ZNK6b2Vec2ngEv($tmpcast123,$239);
    $240=$238;
    $ld$112$0=(($17)|0);
    $241$0=((HEAP32[(($ld$112$0)>>2)])|0);
    $ld$113$1=(($17+4)|0);
    $241$1=((HEAP32[(($ld$113$1)>>2)])|0);
    $st$114$0=(($240)|0);
    HEAP32[(($st$114$0)>>2)]=$241$0;
    $st$115$1=(($240+4)|0);
    HEAP32[(($st$115$1)>>2)]=$241$1;
    break;
   }
   $176=$102<(0.0);
   do {
    if ($176) {
     $180=$offset0_0<(0.0);
     if ($180) {
      $181=(($this+248)|0);
      HEAP8[($181)]=0;
      $182=(($this+212)|0);
      $201=$182;
     } else {
      $184=$79>=(0.0);
      $phitmp124=($184&1);
      $185=(($this+248)|0);
      HEAP8[($185)]=$phitmp124;
      $186=(($this+212)|0);
      if ($184) {
       $188=$186;
       break;
      } else {
       $201=$186;
      }
     }

     __ZNK6b2Vec2ngEv($tmpcast125,$73);
     $202=$201;
     $ld$80$0=(($12)|0);
     $203$0=((HEAP32[(($ld$80$0)>>2)])|0);
     $ld$81$1=(($12+4)|0);
     $203$1=((HEAP32[(($ld$81$1)>>2)])|0);
     $st$82$0=(($202)|0);
     HEAP32[(($st$82$0)>>2)]=$203$0;
     $st$83$1=(($202+4)|0);
     HEAP32[(($st$83$1)>>2)]=$203$1;
     $204=(($this+228)|0);
     __ZNK6b2Vec2ngEv($tmpcast126,$73);
     $205=$204;
     $ld$84$0=(($13)|0);
     $206$0=((HEAP32[(($ld$84$0)>>2)])|0);
     $ld$85$1=(($13+4)|0);
     $206$1=((HEAP32[(($ld$85$1)>>2)])|0);
     $st$86$0=(($205)|0);
     HEAP32[(($st$86$0)>>2)]=$206$0;
     $st$87$1=(($205+4)|0);
     HEAP32[(($st$87$1)>>2)]=$206$1;
     $207=(($this+236)|0);
     $208=(($this+188)|0);
     __ZNK6b2Vec2ngEv($tmpcast127,$208);
     $209=$207;
     $ld$88$0=(($14)|0);
     $210$0=((HEAP32[(($ld$88$0)>>2)])|0);
     $ld$89$1=(($14+4)|0);
     $210$1=((HEAP32[(($ld$89$1)>>2)])|0);
     $st$90$0=(($209)|0);
     HEAP32[(($st$90$0)>>2)]=$210$0;
     $st$91$1=(($209+4)|0);
     HEAP32[(($st$91$1)>>2)]=$210$1;
     break L4;
    } else {
     $177=(($this+248)|0);
     HEAP8[($177)]=1;
     $178=(($this+212)|0);
     $188=$178;
    }
   } while(0);

   $189=$73;
   $190=$188;
   $ld$68$0=(($189)|0);
   $191$0=((HEAP32[(($ld$68$0)>>2)])|0);
   $ld$69$1=(($189+4)|0);
   $191$1=((HEAP32[(($ld$69$1)>>2)])|0);
   $st$70$0=(($190)|0);
   HEAP32[(($st$70$0)>>2)]=$191$0;
   $st$71$1=(($190+4)|0);
   HEAP32[(($st$71$1)>>2)]=$191$1;
   $192=(($this+228)|0);
   $193=$192;
   $ld$72$0=(($189)|0);
   $194$0=((HEAP32[(($ld$72$0)>>2)])|0);
   $ld$73$1=(($189+4)|0);
   $194$1=((HEAP32[(($ld$73$1)>>2)])|0);
   $st$74$0=(($193)|0);
   HEAP32[(($st$74$0)>>2)]=$194$0;
   $st$75$1=(($193+4)|0);
   HEAP32[(($st$75$1)>>2)]=$194$1;
   $195=(($this+236)|0);
   $196=(($this+204)|0);
   $197=$196;
   $198=$195;
   $ld$76$0=(($197)|0);
   $199$0=((HEAP32[(($ld$76$0)>>2)])|0);
   $ld$77$1=(($197+4)|0);
   $199$1=((HEAP32[(($ld$77$1)>>2)])|0);
   $st$78$0=(($198)|0);
   HEAP32[(($st$78$0)>>2)]=$199$0;
   $st$79$1=(($198+4)|0);
   HEAP32[(($st$79$1)>>2)]=$199$1;
  } else {
   $convex2_0_off0143=0;$offset2_0144=0.0;
   label = 32;
  }
 } while(0);
 L42: do {
  if ((label|0) == 32) {


   if ($68) {
    $243=$offset0_0>=(0.0);
    if ($convex1_0_off0) {
     do {
      if ($243) {
       $245=(($this+248)|0);
       HEAP8[($245)]=1;
       $246=(($this+212)|0);
       $252=$246;
      } else {
       $248=$79>=(0.0);
       $phitmp116=($248&1);
       $249=(($this+248)|0);
       HEAP8[($249)]=$phitmp116;
       $250=(($this+212)|0);
       if ($248) {
        $252=$250;
        break;
       }
       __ZNK6b2Vec2ngEv($tmpcast117,$73);
       $265=$250;
       $ld$128$0=(($19)|0);
       $266$0=((HEAP32[(($ld$128$0)>>2)])|0);
       $ld$129$1=(($19+4)|0);
       $266$1=((HEAP32[(($ld$129$1)>>2)])|0);
       $st$130$0=(($265)|0);
       HEAP32[(($st$130$0)>>2)]=$266$0;
       $st$131$1=(($265+4)|0);
       HEAP32[(($st$131$1)>>2)]=$266$1;
       $267=(($this+228)|0);
       $268=$73;
       $269=$267;
       $ld$132$0=(($268)|0);
       $270$0=((HEAP32[(($ld$132$0)>>2)])|0);
       $ld$133$1=(($268+4)|0);
       $270$1=((HEAP32[(($ld$133$1)>>2)])|0);
       $st$134$0=(($269)|0);
       HEAP32[(($st$134$0)>>2)]=$270$0;
       $st$135$1=(($269+4)|0);
       HEAP32[(($st$135$1)>>2)]=$270$1;
       $271=(($this+236)|0);
       __ZNK6b2Vec2ngEv($tmpcast118,$73);
       $272=$271;
       $ld$136$0=(($20)|0);
       $273$0=((HEAP32[(($ld$136$0)>>2)])|0);
       $ld$137$1=(($20+4)|0);
       $273$1=((HEAP32[(($ld$137$1)>>2)])|0);
       $st$138$0=(($272)|0);
       HEAP32[(($st$138$0)>>2)]=$273$0;
       $st$139$1=(($272+4)|0);
       HEAP32[(($st$139$1)>>2)]=$273$1;
       break L42;
      }
     } while(0);

     $253=$73;
     $254=$252;
     $ld$116$0=(($253)|0);
     $255$0=((HEAP32[(($ld$116$0)>>2)])|0);
     $ld$117$1=(($253+4)|0);
     $255$1=((HEAP32[(($ld$117$1)>>2)])|0);
     $st$118$0=(($254)|0);
     HEAP32[(($st$118$0)>>2)]=$255$0;
     $st$119$1=(($254+4)|0);
     HEAP32[(($st$119$1)>>2)]=$255$1;
     $256=(($this+228)|0);
     $257=(($this+188)|0);
     $258=$257;
     $259=$256;
     $ld$120$0=(($258)|0);
     $260$0=((HEAP32[(($ld$120$0)>>2)])|0);
     $ld$121$1=(($258+4)|0);
     $260$1=((HEAP32[(($ld$121$1)>>2)])|0);
     $st$122$0=(($259)|0);
     HEAP32[(($st$122$0)>>2)]=$260$0;
     $st$123$1=(($259+4)|0);
     HEAP32[(($st$123$1)>>2)]=$260$1;
     $261=(($this+236)|0);
     __ZNK6b2Vec2ngEv($tmpcast119,$73);
     $262=$261;
     $ld$124$0=(($18)|0);
     $263$0=((HEAP32[(($ld$124$0)>>2)])|0);
     $ld$125$1=(($18+4)|0);
     $263$1=((HEAP32[(($ld$125$1)>>2)])|0);
     $st$126$0=(($262)|0);
     HEAP32[(($st$126$0)>>2)]=$263$0;
     $st$127$1=(($262+4)|0);
     HEAP32[(($st$127$1)>>2)]=$263$1;
     break;
    } else {
     do {
      if ($243) {
       $278=$79>=(0.0);
       $phitmp112=($278&1);
       $279=(($this+248)|0);
       HEAP8[($279)]=$phitmp112;
       $280=(($this+212)|0);
       if (!($278)) {
        $292=$280;
        break;
       }
       $282=$73;
       $283=$280;
       $ld$140$0=(($282)|0);
       $284$0=((HEAP32[(($ld$140$0)>>2)])|0);
       $ld$141$1=(($282+4)|0);
       $284$1=((HEAP32[(($ld$141$1)>>2)])|0);
       $st$142$0=(($283)|0);
       HEAP32[(($st$142$0)>>2)]=$284$0;
       $st$143$1=(($283+4)|0);
       HEAP32[(($st$143$1)>>2)]=$284$1;
       $285=(($this+228)|0);
       $286=$285;
       $ld$144$0=(($282)|0);
       $287$0=((HEAP32[(($ld$144$0)>>2)])|0);
       $ld$145$1=(($282+4)|0);
       $287$1=((HEAP32[(($ld$145$1)>>2)])|0);
       $st$146$0=(($286)|0);
       HEAP32[(($st$146$0)>>2)]=$287$0;
       $st$147$1=(($286+4)|0);
       HEAP32[(($st$147$1)>>2)]=$287$1;
       $288=(($this+236)|0);
       __ZNK6b2Vec2ngEv($tmpcast115,$73);
       $289=$288;
       $ld$148$0=(($21)|0);
       $290$0=((HEAP32[(($ld$148$0)>>2)])|0);
       $ld$149$1=(($21+4)|0);
       $290$1=((HEAP32[(($ld$149$1)>>2)])|0);
       $st$150$0=(($289)|0);
       HEAP32[(($st$150$0)>>2)]=$290$0;
       $st$151$1=(($289+4)|0);
       HEAP32[(($st$151$1)>>2)]=$290$1;
       break L42;
      } else {
       $275=(($this+248)|0);
       HEAP8[($275)]=0;
       $276=(($this+212)|0);
       $292=$276;
      }
     } while(0);

     __ZNK6b2Vec2ngEv($tmpcast113,$73);
     $293=$292;
     $ld$152$0=(($22)|0);
     $294$0=((HEAP32[(($ld$152$0)>>2)])|0);
     $ld$153$1=(($22+4)|0);
     $294$1=((HEAP32[(($ld$153$1)>>2)])|0);
     $st$154$0=(($293)|0);
     HEAP32[(($st$154$0)>>2)]=$294$0;
     $st$155$1=(($293+4)|0);
     HEAP32[(($st$155$1)>>2)]=$294$1;
     $295=(($this+228)|0);
     $296=$73;
     $297=$295;
     $ld$156$0=(($296)|0);
     $298$0=((HEAP32[(($ld$156$0)>>2)])|0);
     $ld$157$1=(($296+4)|0);
     $298$1=((HEAP32[(($ld$157$1)>>2)])|0);
     $st$158$0=(($297)|0);
     HEAP32[(($st$158$0)>>2)]=$298$0;
     $st$159$1=(($297+4)|0);
     HEAP32[(($st$159$1)>>2)]=$298$1;
     $299=(($this+236)|0);
     $300=(($this+188)|0);
     __ZNK6b2Vec2ngEv($tmpcast114,$300);
     $301=$299;
     $ld$160$0=(($23)|0);
     $302$0=((HEAP32[(($ld$160$0)>>2)])|0);
     $ld$161$1=(($23+4)|0);
     $302$1=((HEAP32[(($ld$161$1)>>2)])|0);
     $st$162$0=(($301)|0);
     HEAP32[(($st$162$0)>>2)]=$302$0;
     $st$163$1=(($301+4)|0);
     HEAP32[(($st$163$1)>>2)]=$302$1;
     break;
    }
   }
   $304=$79>=(0.0);
   if (!($71)) {
    $366=(($this+248)|0);
    $367=($304&1);
    HEAP8[($366)]=$367;
    $368=(($this+212)|0);
    if ($304) {
     $370=$73;
     $371=$368;
     $ld$212$0=(($370)|0);
     $372$0=((HEAP32[(($ld$212$0)>>2)])|0);
     $ld$213$1=(($370+4)|0);
     $372$1=((HEAP32[(($ld$213$1)>>2)])|0);
     $st$214$0=(($371)|0);
     HEAP32[(($st$214$0)>>2)]=$372$0;
     $st$215$1=(($371+4)|0);
     HEAP32[(($st$215$1)>>2)]=$372$1;
     $373=(($this+228)|0);
     __ZNK6b2Vec2ngEv($tmpcast103,$73);
     $374=$373;
     $ld$216$0=(($30)|0);
     $375$0=((HEAP32[(($ld$216$0)>>2)])|0);
     $ld$217$1=(($30+4)|0);
     $375$1=((HEAP32[(($ld$217$1)>>2)])|0);
     $st$218$0=(($374)|0);
     HEAP32[(($st$218$0)>>2)]=$375$0;
     $st$219$1=(($374+4)|0);
     HEAP32[(($st$219$1)>>2)]=$375$1;
     $376=(($this+236)|0);
     __ZNK6b2Vec2ngEv($tmpcast104,$73);
     $377=$376;
     $ld$220$0=(($31)|0);
     $378$0=((HEAP32[(($ld$220$0)>>2)])|0);
     $ld$221$1=(($31+4)|0);
     $378$1=((HEAP32[(($ld$221$1)>>2)])|0);
     $st$222$0=(($377)|0);
     HEAP32[(($st$222$0)>>2)]=$378$0;
     $st$223$1=(($377+4)|0);
     HEAP32[(($st$223$1)>>2)]=$378$1;
     break;
    } else {
     __ZNK6b2Vec2ngEv($tmpcast95,$73);
     $380=$368;
     $ld$224$0=(($32)|0);
     $381$0=((HEAP32[(($ld$224$0)>>2)])|0);
     $ld$225$1=(($32+4)|0);
     $381$1=((HEAP32[(($ld$225$1)>>2)])|0);
     $st$226$0=(($380)|0);
     HEAP32[(($st$226$0)>>2)]=$381$0;
     $st$227$1=(($380+4)|0);
     HEAP32[(($st$227$1)>>2)]=$381$1;
     $382=(($this+228)|0);
     $383=$73;
     $384=$382;
     $ld$228$0=(($383)|0);
     $385$0=((HEAP32[(($ld$228$0)>>2)])|0);
     $ld$229$1=(($383+4)|0);
     $385$1=((HEAP32[(($ld$229$1)>>2)])|0);
     $st$230$0=(($384)|0);
     HEAP32[(($st$230$0)>>2)]=$385$0;
     $st$231$1=(($384+4)|0);
     HEAP32[(($st$231$1)>>2)]=$385$1;
     $386=(($this+236)|0);
     $387=$386;
     $ld$232$0=(($383)|0);
     $388$0=((HEAP32[(($ld$232$0)>>2)])|0);
     $ld$233$1=(($383+4)|0);
     $388$1=((HEAP32[(($ld$233$1)>>2)])|0);
     $st$234$0=(($387)|0);
     HEAP32[(($st$234$0)>>2)]=$388$0;
     $st$235$1=(($387+4)|0);
     HEAP32[(($st$235$1)>>2)]=$388$1;
     break;
    }
   }
   if ($convex2_0_off0143) {
    do {
     if ($304) {
      $307=(($this+248)|0);
      HEAP8[($307)]=1;
      $308=(($this+212)|0);
      $314=$308;
     } else {
      $310=$offset2_0144>=(0.0);
      $phitmp108=($310&1);
      $311=(($this+248)|0);
      HEAP8[($311)]=$phitmp108;
      $312=(($this+212)|0);
      if ($310) {
       $314=$312;
       break;
      }
      __ZNK6b2Vec2ngEv($tmpcast109,$73);
      $327=$312;
      $ld$176$0=(($25)|0);
      $328$0=((HEAP32[(($ld$176$0)>>2)])|0);
      $ld$177$1=(($25+4)|0);
      $328$1=((HEAP32[(($ld$177$1)>>2)])|0);
      $st$178$0=(($327)|0);
      HEAP32[(($st$178$0)>>2)]=$328$0;
      $st$179$1=(($327+4)|0);
      HEAP32[(($st$179$1)>>2)]=$328$1;
      $329=(($this+228)|0);
      __ZNK6b2Vec2ngEv($tmpcast110,$73);
      $330=$329;
      $ld$180$0=(($26)|0);
      $331$0=((HEAP32[(($ld$180$0)>>2)])|0);
      $ld$181$1=(($26+4)|0);
      $331$1=((HEAP32[(($ld$181$1)>>2)])|0);
      $st$182$0=(($330)|0);
      HEAP32[(($st$182$0)>>2)]=$331$0;
      $st$183$1=(($330+4)|0);
      HEAP32[(($st$183$1)>>2)]=$331$1;
      $332=(($this+236)|0);
      $333=$73;
      $334=$332;
      $ld$184$0=(($333)|0);
      $335$0=((HEAP32[(($ld$184$0)>>2)])|0);
      $ld$185$1=(($333+4)|0);
      $335$1=((HEAP32[(($ld$185$1)>>2)])|0);
      $st$186$0=(($334)|0);
      HEAP32[(($st$186$0)>>2)]=$335$0;
      $st$187$1=(($334+4)|0);
      HEAP32[(($st$187$1)>>2)]=$335$1;
      break L42;
     }
    } while(0);

    $315=$73;
    $316=$314;
    $ld$164$0=(($315)|0);
    $317$0=((HEAP32[(($ld$164$0)>>2)])|0);
    $ld$165$1=(($315+4)|0);
    $317$1=((HEAP32[(($ld$165$1)>>2)])|0);
    $st$166$0=(($316)|0);
    HEAP32[(($st$166$0)>>2)]=$317$0;
    $st$167$1=(($316+4)|0);
    HEAP32[(($st$167$1)>>2)]=$317$1;
    $318=(($this+228)|0);
    __ZNK6b2Vec2ngEv($tmpcast111,$73);
    $319=$318;
    $ld$168$0=(($24)|0);
    $320$0=((HEAP32[(($ld$168$0)>>2)])|0);
    $ld$169$1=(($24+4)|0);
    $320$1=((HEAP32[(($ld$169$1)>>2)])|0);
    $st$170$0=(($319)|0);
    HEAP32[(($st$170$0)>>2)]=$320$0;
    $st$171$1=(($319+4)|0);
    HEAP32[(($st$171$1)>>2)]=$320$1;
    $321=(($this+236)|0);
    $322=(($this+204)|0);
    $323=$322;
    $324=$321;
    $ld$172$0=(($323)|0);
    $325$0=((HEAP32[(($ld$172$0)>>2)])|0);
    $ld$173$1=(($323+4)|0);
    $325$1=((HEAP32[(($ld$173$1)>>2)])|0);
    $st$174$0=(($324)|0);
    HEAP32[(($st$174$0)>>2)]=$325$0;
    $st$175$1=(($324+4)|0);
    HEAP32[(($st$175$1)>>2)]=$325$1;
    break;
   } else {
    do {
     if ($304) {
      $340=$offset2_0144>=(0.0);
      $phitmp=($340&1);
      $341=(($this+248)|0);
      HEAP8[($341)]=$phitmp;
      $342=(($this+212)|0);
      if (!($340)) {
       $354=$342;
       break;
      }
      $344=$73;
      $345=$342;
      $ld$188$0=(($344)|0);
      $346$0=((HEAP32[(($ld$188$0)>>2)])|0);
      $ld$189$1=(($344+4)|0);
      $346$1=((HEAP32[(($ld$189$1)>>2)])|0);
      $st$190$0=(($345)|0);
      HEAP32[(($st$190$0)>>2)]=$346$0;
      $st$191$1=(($345+4)|0);
      HEAP32[(($st$191$1)>>2)]=$346$1;
      $347=(($this+228)|0);
      __ZNK6b2Vec2ngEv($tmpcast107,$73);
      $348=$347;
      $ld$192$0=(($27)|0);
      $349$0=((HEAP32[(($ld$192$0)>>2)])|0);
      $ld$193$1=(($27+4)|0);
      $349$1=((HEAP32[(($ld$193$1)>>2)])|0);
      $st$194$0=(($348)|0);
      HEAP32[(($st$194$0)>>2)]=$349$0;
      $st$195$1=(($348+4)|0);
      HEAP32[(($st$195$1)>>2)]=$349$1;
      $350=(($this+236)|0);
      $351=$350;
      $ld$196$0=(($344)|0);
      $352$0=((HEAP32[(($ld$196$0)>>2)])|0);
      $ld$197$1=(($344+4)|0);
      $352$1=((HEAP32[(($ld$197$1)>>2)])|0);
      $st$198$0=(($351)|0);
      HEAP32[(($st$198$0)>>2)]=$352$0;
      $st$199$1=(($351+4)|0);
      HEAP32[(($st$199$1)>>2)]=$352$1;
      break L42;
     } else {
      $337=(($this+248)|0);
      HEAP8[($337)]=0;
      $338=(($this+212)|0);
      $354=$338;
     }
    } while(0);

    __ZNK6b2Vec2ngEv($tmpcast105,$73);
    $355=$354;
    $ld$200$0=(($28)|0);
    $356$0=((HEAP32[(($ld$200$0)>>2)])|0);
    $ld$201$1=(($28+4)|0);
    $356$1=((HEAP32[(($ld$201$1)>>2)])|0);
    $st$202$0=(($355)|0);
    HEAP32[(($st$202$0)>>2)]=$356$0;
    $st$203$1=(($355+4)|0);
    HEAP32[(($st$203$1)>>2)]=$356$1;
    $357=(($this+228)|0);
    $358=(($this+204)|0);
    __ZNK6b2Vec2ngEv($tmpcast106,$358);
    $359=$357;
    $ld$204$0=(($29)|0);
    $360$0=((HEAP32[(($ld$204$0)>>2)])|0);
    $ld$205$1=(($29+4)|0);
    $360$1=((HEAP32[(($ld$205$1)>>2)])|0);
    $st$206$0=(($359)|0);
    HEAP32[(($st$206$0)>>2)]=$360$0;
    $st$207$1=(($359+4)|0);
    HEAP32[(($st$207$1)>>2)]=$360$1;
    $361=(($this+236)|0);
    $362=$73;
    $363=$361;
    $ld$208$0=(($362)|0);
    $364$0=((HEAP32[(($ld$208$0)>>2)])|0);
    $ld$209$1=(($362+4)|0);
    $364$1=((HEAP32[(($ld$209$1)>>2)])|0);
    $st$210$0=(($363)|0);
    HEAP32[(($st$210$0)>>2)]=$364$0;
    $st$211$1=(($363+4)|0);
    HEAP32[(($st$211$1)>>2)]=$364$1;
    break;
   }
  }
 } while(0);
 $390=(($polygonB+148)|0);
 $391=((HEAP32[(($390)>>2)])|0);
 $392=(($this+128)|0);
 HEAP32[(($392)>>2)]=$391;
 $393=((HEAP32[(($390)>>2)])|0);
 $394=($393|0)>0;
 if ($394) {
  $395=(($this+140)|0);
  $i_0162=0;
  while(1) {

   $397=(($this+($i_0162<<3))|0);
   $398=(($polygonB+20+($i_0162<<3))|0);
   __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast101,$39,$398);
   $399=$397;
   $ld$236$0=(($33)|0);
   $400$0=((HEAP32[(($ld$236$0)>>2)])|0);
   $ld$237$1=(($33+4)|0);
   $400$1=((HEAP32[(($ld$237$1)>>2)])|0);
   $st$238$0=(($399)|0);
   HEAP32[(($st$238$0)>>2)]=$400$0;
   $st$239$1=(($399+4)|0);
   HEAP32[(($st$239$1)>>2)]=$400$1;
   $401=(($this+64+($i_0162<<3))|0);
   $402=(($polygonB+84+($i_0162<<3))|0);
   __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast102,$395,$402);
   $403=$401;
   $ld$240$0=(($34)|0);
   $404$0=((HEAP32[(($ld$240$0)>>2)])|0);
   $ld$241$1=(($34+4)|0);
   $404$1=((HEAP32[(($ld$241$1)>>2)])|0);
   $st$242$0=(($403)|0);
   HEAP32[(($st$242$0)>>2)]=$404$0;
   $st$243$1=(($403+4)|0);
   HEAP32[(($st$243$1)>>2)]=$404$1;
   $405=((($i_0162)+(1))|0);
   $406=((HEAP32[(($390)>>2)])|0);
   $407=($405|0)<($406|0);
   if ($407) {
    $i_0162=$405;
   } else {
    break;
   }
  }
 }
 $408=(($this+244)|0);
 HEAPF32[(($408)>>2)]=0.019999999552965164;
 $409=(($manifold+60)|0);
 HEAP32[(($409)>>2)]=0;
 __ZN12b2EPCollider21ComputeEdgeSeparationEv($edgeAxis,$this);
 $410=(($edgeAxis)|0);
 $411=((HEAP32[(($410)>>2)])|0);
 $412=($411|0)==0;
 if ($412) {
  STACKTOP=sp;return;
 }
 $414=(($edgeAxis+8)|0);
 $415=(+(HEAPF32[(($414)>>2)]));
 $416=(+(HEAPF32[(($408)>>2)]));
 $417=$415>$416;
 if ($417) {
  STACKTOP=sp;return;
 }
 __ZN12b2EPCollider24ComputePolygonSeparationEv($polygonAxis,$this);
 $419=(($polygonAxis)|0);
 $420=((HEAP32[(($419)>>2)])|0);
 $421=($420|0)==0;
 do {
  if ($421) {
   label = 67;
  } else {
   $423=(($polygonAxis+8)|0);
   $424=(+(HEAPF32[(($423)>>2)]));
   $425=(+(HEAPF32[(($408)>>2)]));
   $426=$424>$425;
   if ($426) {
    STACKTOP=sp;return;
   }
   $_pr=((HEAP32[(($419)>>2)])|0);
   $428=($_pr|0)==0;
   if ($428) {
    label = 67;
    break;
   }
   $430=(($polygonAxis+8)|0);
   $431=(+(HEAPF32[(($430)>>2)]));
   $432=(+(HEAPF32[(($414)>>2)]));
   $433=($432)*((0.9800000190734863));
   $434=($433)+((0.0010000000474974513));
   $435=$431>$434;
   if ($435) {
    $primaryAxis_sroa_1_4__idx35=(($polygonAxis+4)|0);
    $primaryAxis_sroa_1_4_copyload36=((HEAP32[(($primaryAxis_sroa_1_4__idx35)>>2)])|0);
    $primaryAxis_sroa_0_0=$_pr;$primaryAxis_sroa_1_0=$primaryAxis_sroa_1_4_copyload36;
    break;
   } else {
    $primaryAxis_sroa_0_0_copyload=((HEAP32[(($410)>>2)])|0);
    $primaryAxis_sroa_1_4__idx34=(($edgeAxis+4)|0);
    $primaryAxis_sroa_1_4_copyload=((HEAP32[(($primaryAxis_sroa_1_4__idx34)>>2)])|0);
    $primaryAxis_sroa_0_0=$primaryAxis_sroa_0_0_copyload;$primaryAxis_sroa_1_0=$primaryAxis_sroa_1_4_copyload;
    break;
   }
  }
 } while(0);
 if ((label|0) == 67) {
  $primaryAxis_sroa_0_0_copyload31=((HEAP32[(($410)>>2)])|0);
  $primaryAxis_sroa_1_4__idx37=(($edgeAxis+4)|0);
  $primaryAxis_sroa_1_4_copyload38=((HEAP32[(($primaryAxis_sroa_1_4__idx37)>>2)])|0);
  $primaryAxis_sroa_0_0=$primaryAxis_sroa_0_0_copyload31;$primaryAxis_sroa_1_0=$primaryAxis_sroa_1_4_copyload38;
 }


 $439=$ie97;
 $440=($primaryAxis_sroa_0_0|0)==1;
 $441=(($manifold+56)|0);
 do {
  if ($440) {
   HEAP32[(($441)>>2)]=1;
   $443=(($this+212)|0);
   $444=((HEAP32[(($392)>>2)])|0);
   $445=($444|0)>1;
   if ($445) {
    $446=(($this+64)|0);
    $447=(+(__Z5b2DotRK6b2Vec2S1_($443,$446)));
    $448=((HEAP32[(($392)>>2)])|0);
    $bestIndex_0158=0;$bestValue_0159=$447;$i1_0160=1;
    while(1) {



     $450=(($this+64+($i1_0160<<3))|0);
     $451=(+(__Z5b2DotRK6b2Vec2S1_($443,$450)));
     $452=$451<$bestValue_0159;
     $bestIndex_1=($452?$i1_0160:$bestIndex_0158);
     $bestValue_1=($452?$451:$bestValue_0159);
     $453=((($i1_0160)+(1))|0);
     $454=($453|0)<($448|0);
     if ($454) {
      $bestIndex_0158=$bestIndex_1;$bestValue_0159=$bestValue_1;$i1_0160=$453;
     } else {
      $bestIndex_0_lcssa=$bestIndex_1;$_lcssa=$448;
      break;
     }
    }
   } else {
    $bestIndex_0_lcssa=0;$_lcssa=$444;
   }


   $455=((($bestIndex_0_lcssa)+(1))|0);
   $456=($455|0)<($_lcssa|0);
   $_=($456?$455:0);
   $457=(($this+($bestIndex_0_lcssa<<3))|0);
   $458=$457;
   $ld$244$0=(($458)|0);
   $459$0=((HEAP32[(($ld$244$0)>>2)])|0);
   $ld$245$1=(($458+4)|0);
   $459$1=((HEAP32[(($ld$245$1)>>2)])|0);
   $st$246$0=(($ie97_sub)|0);
   HEAP32[(($st$246$0)>>2)]=$459$0;
   $st$247$1=(($ie97_sub+4)|0);
   HEAP32[(($st$247$1)>>2)]=$459$1;
   $460=(($ie97+8)|0);
   $461=$460;
   $462=$460;
   HEAP8[($462)]=0;
   $463=(($bestIndex_0_lcssa)&255);
   $464=(($461+1)|0);
   HEAP8[($464)]=$463;
   $465=(($461+2)|0);
   HEAP8[($465)]=1;
   $466=(($461+3)|0);
   HEAP8[($466)]=0;
   $467=(($tmpcast96+12)|0);
   $468=(($this+($_<<3))|0);
   $469=$468;
   $470=$467;
   $ld$248$0=(($469)|0);
   $471$0=((HEAP32[(($ld$248$0)>>2)])|0);
   $ld$249$1=(($469+4)|0);
   $471$1=((HEAP32[(($ld$249$1)>>2)])|0);
   $st$250$0=(($470)|0);
   HEAP32[(($st$250$0)>>2)]=$471$0;
   $st$251$1=(($470+4)|0);
   HEAP32[(($st$251$1)>>2)]=$471$1;
   $472=(($tmpcast96+20)|0);
   $473=$472;
   $474=$472;
   HEAP8[($474)]=0;
   $475=(($_)&255);
   $476=(($473+1)|0);
   HEAP8[($476)]=$475;
   $477=(($473+2)|0);
   HEAP8[($477)]=1;
   $478=(($473+3)|0);
   HEAP8[($478)]=0;
   $479=(($this+248)|0);
   $480=((HEAP8[($479)])|0);
   $481=(($480<<24)>>24)==0;
   $482=(($rf)|0);
   if ($481) {
    HEAP32[(($482)>>2)]=1;
    $496=(($rf+4)|0);
    HEAP32[(($496)>>2)]=0;
    $497=(($rf+8)|0);
    $498=$497;
    $ld$264$0=(($59)|0);
    $499$0=((HEAP32[(($ld$264$0)>>2)])|0);
    $ld$265$1=(($59+4)|0);
    $499$1=((HEAP32[(($ld$265$1)>>2)])|0);
    $st$266$0=(($498)|0);
    HEAP32[(($st$266$0)>>2)]=$499$0;
    $st$267$1=(($498+4)|0);
    HEAP32[(($st$267$1)>>2)]=$499$1;
    $500=(($rf+16)|0);
    $501=$500;
    $ld$268$0=(($54)|0);
    $502$0=((HEAP32[(($ld$268$0)>>2)])|0);
    $ld$269$1=(($54+4)|0);
    $502$1=((HEAP32[(($ld$269$1)>>2)])|0);
    $st$270$0=(($501)|0);
    HEAP32[(($st$270$0)>>2)]=$502$0;
    $st$271$1=(($501+4)|0);
    HEAP32[(($st$271$1)>>2)]=$502$1;
    $503=(($rf+24)|0);
    __ZNK6b2Vec2ngEv($tmpcast100,$73);
    $504=$503;
    $ld$272$0=(($35)|0);
    $505$0=((HEAP32[(($ld$272$0)>>2)])|0);
    $ld$273$1=(($35+4)|0);
    $505$1=((HEAP32[(($ld$273$1)>>2)])|0);
    $st$274$0=(($504)|0);
    HEAP32[(($st$274$0)>>2)]=$505$0;
    $st$275$1=(($504+4)|0);
    HEAP32[(($st$275$1)>>2)]=$505$1;
    break;
   } else {
    HEAP32[(($482)>>2)]=0;
    $484=(($rf+4)|0);
    HEAP32[(($484)>>2)]=1;
    $485=(($rf+8)|0);
    $486=$485;
    $ld$252$0=(($54)|0);
    $487$0=((HEAP32[(($ld$252$0)>>2)])|0);
    $ld$253$1=(($54+4)|0);
    $487$1=((HEAP32[(($ld$253$1)>>2)])|0);
    $st$254$0=(($486)|0);
    HEAP32[(($st$254$0)>>2)]=$487$0;
    $st$255$1=(($486+4)|0);
    HEAP32[(($st$255$1)>>2)]=$487$1;
    $488=(($rf+16)|0);
    $489=$488;
    $ld$256$0=(($59)|0);
    $490$0=((HEAP32[(($ld$256$0)>>2)])|0);
    $ld$257$1=(($59+4)|0);
    $490$1=((HEAP32[(($ld$257$1)>>2)])|0);
    $st$258$0=(($489)|0);
    HEAP32[(($st$258$0)>>2)]=$490$0;
    $st$259$1=(($489+4)|0);
    HEAP32[(($st$259$1)>>2)]=$490$1;
    $491=(($rf+24)|0);
    $492=$73;
    $493=$491;
    $ld$260$0=(($492)|0);
    $494$0=((HEAP32[(($ld$260$0)>>2)])|0);
    $ld$261$1=(($492+4)|0);
    $494$1=((HEAP32[(($ld$261$1)>>2)])|0);
    $st$262$0=(($493)|0);
    HEAP32[(($st$262$0)>>2)]=$494$0;
    $st$263$1=(($493+4)|0);
    HEAP32[(($st$263$1)>>2)]=$494$1;
    break;
   }
  } else {
   HEAP32[(($441)>>2)]=2;
   $ld$276$0=(($54)|0);
   $507$0=((HEAP32[(($ld$276$0)>>2)])|0);
   $ld$277$1=(($54+4)|0);
   $507$1=((HEAP32[(($ld$277$1)>>2)])|0);
   $st$278$0=(($ie97_sub)|0);
   HEAP32[(($st$278$0)>>2)]=$507$0;
   $st$279$1=(($ie97_sub+4)|0);
   HEAP32[(($st$279$1)>>2)]=$507$1;
   $508=(($ie97+8)|0);
   $509=$508;
   $510=$508;
   HEAP8[($510)]=0;
   $511=(($primaryAxis_sroa_1_0)&255);
   $512=(($509+1)|0);
   HEAP8[($512)]=$511;
   $513=(($509+2)|0);
   HEAP8[($513)]=0;
   $514=(($509+3)|0);
   HEAP8[($514)]=1;
   $515=(($tmpcast96+12)|0);
   $516=$515;
   $ld$280$0=(($59)|0);
   $517$0=((HEAP32[(($ld$280$0)>>2)])|0);
   $ld$281$1=(($59+4)|0);
   $517$1=((HEAP32[(($ld$281$1)>>2)])|0);
   $st$282$0=(($516)|0);
   HEAP32[(($st$282$0)>>2)]=$517$0;
   $st$283$1=(($516+4)|0);
   HEAP32[(($st$283$1)>>2)]=$517$1;
   $518=(($tmpcast96+20)|0);
   $519=$518;
   $520=$518;
   HEAP8[($520)]=0;
   $521=(($519+1)|0);
   HEAP8[($521)]=$511;
   $522=(($519+2)|0);
   HEAP8[($522)]=0;
   $523=(($519+3)|0);
   HEAP8[($523)]=1;
   $524=(($rf)|0);
   HEAP32[(($524)>>2)]=$primaryAxis_sroa_1_0;
   $525=((($primaryAxis_sroa_1_0)+(1))|0);
   $526=((HEAP32[(($392)>>2)])|0);
   $527=($525|0)<($526|0);
   $_139=($527?$525:0);
   $528=(($rf+4)|0);
   HEAP32[(($528)>>2)]=$_139;
   $529=(($rf+8)|0);
   $530=((HEAP32[(($524)>>2)])|0);
   $531=(($this+($530<<3))|0);
   $532=$531;
   $533=$529;
   $ld$284$0=(($532)|0);
   $534$0=((HEAP32[(($ld$284$0)>>2)])|0);
   $ld$285$1=(($532+4)|0);
   $534$1=((HEAP32[(($ld$285$1)>>2)])|0);
   $st$286$0=(($533)|0);
   HEAP32[(($st$286$0)>>2)]=$534$0;
   $st$287$1=(($533+4)|0);
   HEAP32[(($st$287$1)>>2)]=$534$1;
   $535=(($rf+16)|0);
   $536=((HEAP32[(($528)>>2)])|0);
   $537=(($this+($536<<3))|0);
   $538=$537;
   $539=$535;
   $ld$288$0=(($538)|0);
   $540$0=((HEAP32[(($ld$288$0)>>2)])|0);
   $ld$289$1=(($538+4)|0);
   $540$1=((HEAP32[(($ld$289$1)>>2)])|0);
   $st$290$0=(($539)|0);
   HEAP32[(($st$290$0)>>2)]=$540$0;
   $st$291$1=(($539+4)|0);
   HEAP32[(($st$291$1)>>2)]=$540$1;
   $541=(($rf+24)|0);
   $542=((HEAP32[(($524)>>2)])|0);
   $543=(($this+64+($542<<3))|0);
   $544=$543;
   $545=$541;
   $ld$292$0=(($544)|0);
   $546$0=((HEAP32[(($ld$292$0)>>2)])|0);
   $ld$293$1=(($544+4)|0);
   $546$1=((HEAP32[(($ld$293$1)>>2)])|0);
   $st$294$0=(($545)|0);
   HEAP32[(($st$294$0)>>2)]=$546$0;
   $st$295$1=(($545+4)|0);
   HEAP32[(($st$295$1)>>2)]=$546$1;
  }
 } while(0);
 $548=(($rf+32)|0);
 $549=(($rf+24)|0);
 $550=(($rf+28)|0);
 $551=(+(HEAPF32[(($550)>>2)]));
 $552=(($549)|0);
 $553=(+(HEAPF32[(($552)>>2)]));
 $554=((-.0))-($553);
 __ZN6b2Vec23SetEff($548,$551,$554);
 $555=(($rf+44)|0);
 __ZNK6b2Vec2ngEv($tmpcast98,$548);
 $556=$555;
 $ld$296$0=(($36)|0);
 $557$0=((HEAP32[(($ld$296$0)>>2)])|0);
 $ld$297$1=(($36+4)|0);
 $557$1=((HEAP32[(($ld$297$1)>>2)])|0);
 $st$298$0=(($556)|0);
 HEAP32[(($st$298$0)>>2)]=$557$0;
 $st$299$1=(($556+4)|0);
 HEAP32[(($st$299$1)>>2)]=$557$1;
 $558=(($rf+8)|0);
 $559=(+(__Z5b2DotRK6b2Vec2S1_($548,$558)));
 $560=(($rf+40)|0);
 HEAPF32[(($560)>>2)]=$559;
 $561=(($rf+16)|0);
 $562=(+(__Z5b2DotRK6b2Vec2S1_($555,$561)));
 $563=(($rf+52)|0);
 HEAPF32[(($563)>>2)]=$562;
 $564=(($clipPoints1)|0);
 $565=(+(HEAPF32[(($560)>>2)]));
 $566=(($rf)|0);
 $567=((HEAP32[(($566)>>2)])|0);
 $568=((__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($564,$439,$548,$565,$567))|0);
 $569=($568|0)<2;
 if ($569) {
  STACKTOP=sp;return;
 }
 $571=$clipPoints2167;
 $572=(+(HEAPF32[(($563)>>2)]));
 $573=(($rf+4)|0);
 $574=((HEAP32[(($573)>>2)])|0);
 $575=((__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($571,$564,$555,$572,$574))|0);
 $576=($575|0)<2;
 if ($576) {
  STACKTOP=sp;return;
 }
 $578=(($manifold+40)|0);
 if ($440) {
  $580=$549;
  $581=$578;
  $ld$300$0=(($580)|0);
  $582$0=((HEAP32[(($ld$300$0)>>2)])|0);
  $ld$301$1=(($580+4)|0);
  $582$1=((HEAP32[(($ld$301$1)>>2)])|0);
  $st$302$0=(($581)|0);
  HEAP32[(($st$302$0)>>2)]=$582$0;
  $st$303$1=(($581+4)|0);
  HEAP32[(($st$303$1)>>2)]=$582$1;
  $583=(($manifold+48)|0);
  $584=$558;
  $585=$583;
  $ld$304$0=(($584)|0);
  $586$0=((HEAP32[(($ld$304$0)>>2)])|0);
  $ld$305$1=(($584+4)|0);
  $586$1=((HEAP32[(($ld$305$1)>>2)])|0);
  $st$306$0=(($585)|0);
  HEAP32[(($st$306$0)>>2)]=$586$0;
  $st$307$1=(($585+4)|0);
  HEAP32[(($st$307$1)>>2)]=$586$1;
 } else {
  $588=((HEAP32[(($566)>>2)])|0);
  $589=(($polygonB+84+($588<<3))|0);
  $590=$589;
  $591=$578;
  $ld$308$0=(($590)|0);
  $592$0=((HEAP32[(($ld$308$0)>>2)])|0);
  $ld$309$1=(($590+4)|0);
  $592$1=((HEAP32[(($ld$309$1)>>2)])|0);
  $st$310$0=(($591)|0);
  HEAP32[(($st$310$0)>>2)]=$592$0;
  $st$311$1=(($591+4)|0);
  HEAP32[(($st$311$1)>>2)]=$592$1;
  $593=(($manifold+48)|0);
  $594=((HEAP32[(($566)>>2)])|0);
  $595=(($polygonB+20+($594<<3))|0);
  $596=$595;
  $597=$593;
  $ld$312$0=(($596)|0);
  $598$0=((HEAP32[(($ld$312$0)>>2)])|0);
  $ld$313$1=(($596+4)|0);
  $598$1=((HEAP32[(($ld$313$1)>>2)])|0);
  $st$314$0=(($597)|0);
  HEAP32[(($st$314$0)>>2)]=$598$0;
  $st$315$1=(($597+4)|0);
  HEAP32[(($st$315$1)>>2)]=$598$1;
 }
 $599=$clipPoints2167;
 __ZmiRK6b2Vec2S1_($37,$599,$558);
 $600=(+(__Z5b2DotRK6b2Vec2S1_($549,$37)));
 $601=(+(HEAPF32[(($408)>>2)]));
 $602=$600>$601;
 do {
  if ($602) {
   $pointCount_1=0;
  } else {
   if ($440) {
    __Z6b2MulTRK11b2TransformRK6b2Vec2($tmpcast99,$39,$599);
    $605=$manifold;
    $ld$316$0=(($38)|0);
    $606$0=((HEAP32[(($ld$316$0)>>2)])|0);
    $ld$317$1=(($38+4)|0);
    $606$1=((HEAP32[(($ld$317$1)>>2)])|0);
    $st$318$0=(($605)|0);
    HEAP32[(($st$318$0)>>2)]=$606$0;
    $st$319$1=(($605+4)|0);
    HEAP32[(($st$319$1)>>2)]=$606$1;
    $607=(($clipPoints2167+8)|0);
    $608=$607;
    $609=((HEAP32[(($608)>>2)])|0);
    $610=(($manifold+16)|0);
    HEAP32[(($610)>>2)]=$609;
    $pointCount_1=1;
    break;
   } else {
    $612=$manifold;
    $ld$320$0=(($clipPoints2167_sub)|0);
    $613$0=((HEAP32[(($ld$320$0)>>2)])|0);
    $ld$321$1=(($clipPoints2167_sub+4)|0);
    $613$1=((HEAP32[(($ld$321$1)>>2)])|0);
    $st$322$0=(($612)|0);
    HEAP32[(($st$322$0)>>2)]=$613$0;
    $st$323$1=(($612+4)|0);
    HEAP32[(($st$323$1)>>2)]=$613$1;
    $614=(($clipPoints2167+8)|0);
    $615=$614;
    $616=(($615+3)|0);
    $617=((HEAP8[($616)])|0);
    $618=(($manifold+16)|0);
    $619=$618;
    $620=(($619+2)|0);
    HEAP8[($620)]=$617;
    $621=(($615+2)|0);
    $622=((HEAP8[($621)])|0);
    $623=(($619+3)|0);
    HEAP8[($623)]=$622;
    $624=(($615+1)|0);
    $625=((HEAP8[($624)])|0);
    $626=$618;
    HEAP8[($626)]=$625;
    $627=$614;
    $628=((HEAP8[($627)])|0);
    $629=(($619+1)|0);
    HEAP8[($629)]=$628;
    $pointCount_1=1;
    break;
   }
  }
 } while(0);

 $631=(($tmpcast166+12)|0);
 $632=(($631)|0);
 __ZmiRK6b2Vec2S1_($37,$632,$558);
 $633=(+(__Z5b2DotRK6b2Vec2S1_($549,$37)));
 $634=(+(HEAPF32[(($408)>>2)]));
 $635=$633>$634;
 if ($635) {
  $pointCount_1_1=$pointCount_1;
 } else {
  $638=(($manifold+((($pointCount_1)*(20))&-1))|0);
  if ($440) {
   __Z6b2MulTRK11b2TransformRK6b2Vec2($tmpcast99,$39,$632);
   $660=$638;
   $ld$328$0=(($38)|0);
   $661$0=((HEAP32[(($ld$328$0)>>2)])|0);
   $ld$329$1=(($38+4)|0);
   $661$1=((HEAP32[(($ld$329$1)>>2)])|0);
   $st$330$0=(($660)|0);
   HEAP32[(($st$330$0)>>2)]=$661$0;
   $st$331$1=(($660+4)|0);
   HEAP32[(($st$331$1)>>2)]=$661$1;
   $662=(($tmpcast166+20)|0);
   $663=((HEAP32[(($662)>>2)])|0);
   $664=(($manifold+((($pointCount_1)*(20))&-1)+16)|0);
   HEAP32[(($664)>>2)]=$663;
  } else {
   $640=$631;
   $641=$638;
   $ld$324$0=(($640)|0);
   $642$0=((HEAP32[(($ld$324$0)>>2)])|0);
   $ld$325$1=(($640+4)|0);
   $642$1=((HEAP32[(($ld$325$1)>>2)])|0);
   $st$326$0=(($641)|0);
   HEAP32[(($st$326$0)>>2)]=$642$0;
   $st$327$1=(($641+4)|0);
   HEAP32[(($st$327$1)>>2)]=$642$1;
   $643=(($tmpcast166+20)|0);
   $644=$643;
   $645=(($644+3)|0);
   $646=((HEAP8[($645)])|0);
   $647=(($manifold+((($pointCount_1)*(20))&-1)+16)|0);
   $648=$647;
   $649=(($648+2)|0);
   HEAP8[($649)]=$646;
   $650=(($644+2)|0);
   $651=((HEAP8[($650)])|0);
   $652=(($648+3)|0);
   HEAP8[($652)]=$651;
   $653=(($644+1)|0);
   $654=((HEAP8[($653)])|0);
   $655=$647;
   HEAP8[($655)]=$654;
   $656=$643;
   $657=((HEAP8[($656)])|0);
   $658=(($648+1)|0);
   HEAP8[($658)]=$657;
  }
  $666=((($pointCount_1)+(1))|0);
  $pointCount_1_1=$666;
 }

 HEAP32[(($409)>>2)]=$pointCount_1_1;
 STACKTOP=sp;return;
}


function __Z6b2MulTRK11b2TransformS1_($agg_result,$A,$B){
 $agg_result=($agg_result)|0;
 $A=($A)|0;
 $B=($B)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0,$ld$4$0=0,$12$0=0;
 var $ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=(($agg_result+8)|0);
 $5=(($A+8)|0);
 $6=(($B+8)|0);
 __Z6b2MulTRK5b2RotS1_($tmpcast,$5,$6);
 $7=$4;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($B)|0);
 $10=(($A)|0);
 __ZmiRK6b2Vec2S1_($3,$9,$10);
 __Z6b2MulTRK5b2RotRK6b2Vec2($tmpcast5,$5,$3);
 $11=$agg_result;
 $ld$4$0=(($2)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 STACKTOP=sp;return;
}


function __Z7b2CrossRK6b2Vec2S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b+4)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)-($10);
 return (+($11));
}


function __ZNK6b2Vec2ngEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=((-.0))-($2);
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=((-.0))-($5);
 __ZN6b2Vec23SetEff($agg_result,$3,$6);
 return;
}


function __Z5b2MulRK5b2RotRK6b2Vec2($agg_result,$q,$v){
 $agg_result=($agg_result)|0;
 $q=($q)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=.0,$13=.0,$14=.0,label=0;

 $1=(($q+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($v)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($q)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($v+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)-($10);
 $12=($4)*($7);
 $13=($2)*($9);
 $14=($12)+($13);
 __ZN6b2Vec2C1Eff($agg_result,$11,$14);
 return;
}


function __ZN12b2EPCollider21ComputeEdgeSeparationEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$i_04=0,$15=0,$16=.0,$17=.0,$18=0,$21=0,$22=0;
 var $23=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($agg_result)|0);
 HEAP32[(($2)>>2)]=1;
 $3=(($this+248)|0);
 $4=((HEAP8[($3)])|0);
 $5=$4^1;
 $6=($5&255);
 $7=(($agg_result+4)|0);
 HEAP32[(($7)>>2)]=$6;
 $8=(($agg_result+8)|0);
 HEAPF32[(($8)>>2)]=3.4028234663852886e+38;
 $9=(($this+128)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($10|0)>0;
 if (!($11)) {
  STACKTOP=sp;return;
 }
 $12=(($this+212)|0);
 $13=(($this+164)|0);
 $i_04=0;
 while(1) {

  $15=(($this+($i_04<<3))|0);
  __ZmiRK6b2Vec2S1_($1,$15,$13);
  $16=(+(__Z5b2DotRK6b2Vec2S1_($12,$1)));
  $17=(+(HEAPF32[(($8)>>2)]));
  $18=$16<$17;
  if ($18) {
   HEAPF32[(($8)>>2)]=$16;
  }
  $21=((($i_04)+(1))|0);
  $22=((HEAP32[(($9)>>2)])|0);
  $23=($21|0)<($22|0);
  if ($23) {
   $i_04=$21;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN12b2EPCollider24ComputePolygonSeparationEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $perp=0,$n=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=.0,$11=.0,$12=0,$13=.0,$14=0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$i_011=0,$23=0,$24=0,$25=.0,$26=.0,$27=.0,$28=.0,$29=0,$32=.0,$33=0,$35=.0,$36=0,$38=.0,$39=0,$41=.0,$42=0,$45=0;
 var $46=0,$47=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $perp=((sp)|0);
 $n=(((sp)+(8))|0);
 $1=(((sp)+(16))|0);
 $2=(((sp)+(24))|0);
 $3=(((sp)+(32))|0);
 $4=(((sp)+(40))|0);
 $5=(($agg_result)|0);
 HEAP32[(($5)>>2)]=0;
 $6=(($agg_result+4)|0);
 HEAP32[(($6)>>2)]=-1;
 $7=(($agg_result+8)|0);
 HEAPF32[(($7)>>2)]=-3.4028234663852886e+38;
 $8=(($this+212)|0);
 $9=(($this+216)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=((-.0))-($10);
 $12=(($8)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 __ZN6b2Vec2C1Eff($perp,$11,$13);
 $14=(($this+128)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=($15|0)>0;
 if (!($16)) {
  STACKTOP=sp;return;
 }
 $17=(($this+164)|0);
 $18=(($this+172)|0);
 $19=(($this+244)|0);
 $20=(($this+228)|0);
 $21=(($this+236)|0);
 $i_011=0;
 while(1) {

  $23=(($this+64+($i_011<<3))|0);
  __ZNK6b2Vec2ngEv($n,$23);
  $24=(($this+($i_011<<3))|0);
  __ZmiRK6b2Vec2S1_($1,$24,$17);
  $25=(+(__Z5b2DotRK6b2Vec2S1_($n,$1)));
  __ZmiRK6b2Vec2S1_($2,$24,$18);
  $26=(+(__Z5b2DotRK6b2Vec2S1_($n,$2)));
  $27=(+(__Z5b2MinIfET_S0_S0_($25,$26)));
  $28=(+(HEAPF32[(($19)>>2)]));
  $29=$27>$28;
  if ($29) {
   break;
  }
  $32=(+(__Z5b2DotRK6b2Vec2S1_($n,$perp)));
  $33=$32<(0.0);
  if ($33) {
   __ZmiRK6b2Vec2S1_($4,$n,$20);
   $38=(+(__Z5b2DotRK6b2Vec2S1_($4,$8)));
   $39=$38<(-0.03490658849477768);
   if (!($39)) {
    label = 8;
   }
  } else {
   __ZmiRK6b2Vec2S1_($3,$n,$21);
   $35=(+(__Z5b2DotRK6b2Vec2S1_($3,$8)));
   $36=$35<(-0.03490658849477768);
   if (!($36)) {
    label = 8;
   }
  }
  do {
   if ((label|0) == 8) {
    label = 0;
    $41=(+(HEAPF32[(($7)>>2)]));
    $42=$27>$41;
    if (!($42)) {
     break;
    }
    HEAP32[(($5)>>2)]=2;
    HEAP32[(($6)>>2)]=$i_011;
    HEAPF32[(($7)>>2)]=$27;
   }
  } while(0);
  $45=((($i_011)+(1))|0);
  $46=((HEAP32[(($14)>>2)])|0);
  $47=($45|0)<($46|0);
  if ($47) {
   $i_011=$45;
  } else {
   label = 11;
   break;
  }
 }
 if ((label|0) == 11) {
  STACKTOP=sp;return;
 }
 HEAP32[(($5)>>2)]=2;
 HEAP32[(($6)>>2)]=$i_011;
 HEAPF32[(($7)>>2)]=$27;
 STACKTOP=sp;return;
}


function __Z5b2MinIfET_S0_S0_($a,$b){
 $a=+($a);
 $b=+($b);
 var $1=0,$2=.0,label=0;

 $1=$a<$b;
 $2=($1?$a:$b);
 return (+($2));
}


function __Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_($manifold,$edgeA,$xfA,$polygonB,$xfB){
 $manifold=($manifold)|0;
 $edgeA=($edgeA)|0;
 $xfA=($xfA)|0;
 $polygonB=($polygonB)|0;
 $xfB=($xfB)|0;
 var $collider=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+256)|0;
 $collider=((sp)|0);
 __ZN12b2EPCollider7CollideEP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS7_($collider,$manifold,$edgeA,$xfA,$polygonB,$xfB);
 STACKTOP=sp;return;
}


function __Z6b2MulTRK5b2RotS1_($agg_result,$q,$r){
 $agg_result=($agg_result)|0;
 $q=($q)|0;
 $r=($r)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=.0,$15=.0,$16=.0,$17=.0,$18=.0,$19=.0,$20=0;
 var label=0;

 $1=(($q+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($r)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($q)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($r+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)-($10);
 $12=(($agg_result)|0);
 HEAPF32[(($12)>>2)]=$11;
 $13=(+(HEAPF32[(($1)>>2)]));
 $14=(+(HEAPF32[(($8)>>2)]));
 $15=($13)*($14);
 $16=(+(HEAPF32[(($6)>>2)]));
 $17=(+(HEAPF32[(($3)>>2)]));
 $18=($16)*($17);
 $19=($15)+($18);
 $20=(($agg_result+4)|0);
 HEAPF32[(($20)>>2)]=$19;
 return;
}


function __Z6b2MulTRK5b2RotRK6b2Vec2($agg_result,$q,$v){
 $agg_result=($agg_result)|0;
 $q=($q)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=.0,$13=.0,$14=.0,$15=.0,label=0;

 $1=(($q+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($v)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($q)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($v+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)+($10);
 $12=((-.0))-($7);
 $13=($4)*($12);
 $14=($2)*($9);
 $15=($13)+($14);
 __ZN6b2Vec2C1Eff($agg_result,$11,$15);
 return;
}


function __Z17b2CollidePolygonsP10b2ManifoldPK14b2PolygonShapeRK11b2TransformS3_S6_($manifold,$polyA,$xfA,$polyB,$xfB){
 $manifold=($manifold)|0;
 $polyA=($polyA)|0;
 $xfA=($xfA)|0;
 $polyB=($polyB)|0;
 $xfB=($xfB)|0;
 var $edgeA=0,$edgeB=0,$xf1=0,$xf2=0,$incidentEdge=0,$v11=0,$tmpcast=0,$v12=0,$tmpcast52=0,$localTangent=0,$localNormal=0,$tmpcast55=0,$planePoint=0,$tmpcast56=0,$1=0,$tangent=0,$normal=0,$2=0,$tmpcast53=0,$3=0;
 var $tmpcast54=0,$clipPoints1=0,$clipPoints2=0,$4=0,$5=0,$tmpcast57=0,$6=0,$7=0,$8=.0,$9=0,$10=.0,$11=.0,$12=.0,$13=0,$15=.0,$16=0,$18=.0,$19=.0,$20=0,$21=0;
 var $23=0,$24=0,$25=0,$26=0,$27=0,$29=0,$30=0,$31=0,$32=0,$33=0,$flip_0=0,$edge1_0=0,$poly2_0=0,$poly1_0=0,$35=0,$36=0,$37=0,$38=0,$39=0,$_=0;
 var $40=0,$41=0,$ld$0$0=0,$42$0=0,$ld$1$1=0,$42$1=0,$st$2$0=0,$st$3$1=0,$43=0,$44=0,$ld$4$0=0,$45$0=0,$ld$5$1=0,$45$1=0,$st$6$0=0,$st$7$1=0,$46=.0,$47=0,$ld$8$0=0,$48$0=0;
 var $ld$9$1=0,$48$1=0,$st$10$0=0,$st$11$1=0,$ld$12$0=0,$49$0=0,$ld$13$1=0,$49$1=0,$st$14$0=0,$st$15$1=0,$50=.0,$51=0,$52=.0,$53=.0,$54=.0,$55=0,$56=0,$58=0,$59=.0,$60=0;
 var $61=0,$63=0,$64=0,$ld$16$0=0,$65$0=0,$ld$17$1=0,$65$1=0,$st$18$0=0,$st$19$1=0,$66=0,$67=0,$ld$20$0=0,$68$0=0,$ld$21$1=0,$68$1=0,$st$22$0=0,$st$23$1=0,$69=0,$70=0,$71=.0;
 var $72=.0,$73=0,$75=0,$ld$24$0=0,$76$0=0,$ld$25$1=0,$76$1=0,$st$26$0=0,$st$27$1=0,$77=0,$78=0,$79=0,$80=0,$82=0,$cf_sroa_0_0__idx=0,$cf_sroa_0_0_copyload=0,$cf_sroa_1_1__idx=0,$cf_sroa_1_1_copyload=0,$cf_sroa_2_2__idx=0,$cf_sroa_2_2_copyload=0;
 var $cf_sroa_3_3__idx=0,$cf_sroa_3_3_copyload=0,$pointCount_1=0,$84=0,$85=.0,$86=.0,$87=0,$90=0,$91=0,$ld$28$0=0,$92$0=0,$ld$29$1=0,$92$1=0,$st$30$0=0,$st$31$1=0,$93=0,$94=0,$95=0,$96=0,$98=0;
 var $cf_sroa_0_0__idx_1=0,$cf_sroa_0_0_copyload_1=0,$cf_sroa_1_1__idx_1=0,$cf_sroa_1_1_copyload_1=0,$cf_sroa_2_2__idx_1=0,$cf_sroa_2_2_copyload_1=0,$cf_sroa_3_3__idx_1=0,$cf_sroa_3_3_copyload_1=0,$100=0,$pointCount_1_1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+80)|0;
 $edgeA=((sp)|0);
 $edgeB=(((sp)+(8))|0);
 $xf1=(((sp)+(16))|0);
 $xf2=(((sp)+(32))|0);
 $incidentEdge=(((sp)+(48))|0);
 $v11=(((sp)+(72))|0);
 $tmpcast=$v11;
 $v12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast52=$v12;
 $localTangent=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $localNormal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast55=$localNormal;
 $planePoint=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast56=$planePoint;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tangent=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast53=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast54=$3;
 $clipPoints1=STACKTOP;STACKTOP = (STACKTOP + 24)|0;
 $clipPoints2=STACKTOP;STACKTOP = (STACKTOP + 24)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast57=$5;
 $6=(($manifold+60)|0);
 HEAP32[(($6)>>2)]=0;
 $7=(($polyA+8)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($polyB+8)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=($8)+($10);
 HEAP32[(($edgeA)>>2)]=0;
 $12=(+(__ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_($edgeA,$polyA,$xfA,$polyB,$xfB)));
 $13=$12>$11;
 if ($13) {
  STACKTOP=sp;return;
 }
 HEAP32[(($edgeB)>>2)]=0;
 $15=(+(__ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_($edgeB,$polyB,$xfB,$polyA,$xfA)));
 $16=$15>$11;
 if ($16) {
  STACKTOP=sp;return;
 }
 $18=($12)*((0.9800000190734863));
 $19=($18)+((0.0010000000474974513));
 $20=$15>$19;
 $21=$xf1;
 if ($20) {
  $23=$xfB;
  HEAP32[(($21)>>2)]=((HEAP32[(($23)>>2)])|0);HEAP32[((($21)+(4))>>2)]=((HEAP32[((($23)+(4))>>2)])|0);HEAP32[((($21)+(8))>>2)]=((HEAP32[((($23)+(8))>>2)])|0);HEAP32[((($21)+(12))>>2)]=((HEAP32[((($23)+(12))>>2)])|0);
  $24=$xf2;
  $25=$xfA;
  HEAP32[(($24)>>2)]=((HEAP32[(($25)>>2)])|0);HEAP32[((($24)+(4))>>2)]=((HEAP32[((($25)+(4))>>2)])|0);HEAP32[((($24)+(8))>>2)]=((HEAP32[((($25)+(8))>>2)])|0);HEAP32[((($24)+(12))>>2)]=((HEAP32[((($25)+(12))>>2)])|0);
  $26=((HEAP32[(($edgeB)>>2)])|0);
  $27=(($manifold+56)|0);
  HEAP32[(($27)>>2)]=2;
  $poly1_0=$polyB;$poly2_0=$polyA;$edge1_0=$26;$flip_0=1;
 } else {
  $29=$xfA;
  HEAP32[(($21)>>2)]=((HEAP32[(($29)>>2)])|0);HEAP32[((($21)+(4))>>2)]=((HEAP32[((($29)+(4))>>2)])|0);HEAP32[((($21)+(8))>>2)]=((HEAP32[((($29)+(8))>>2)])|0);HEAP32[((($21)+(12))>>2)]=((HEAP32[((($29)+(12))>>2)])|0);
  $30=$xf2;
  $31=$xfB;
  HEAP32[(($30)>>2)]=((HEAP32[(($31)>>2)])|0);HEAP32[((($30)+(4))>>2)]=((HEAP32[((($31)+(4))>>2)])|0);HEAP32[((($30)+(8))>>2)]=((HEAP32[((($31)+(8))>>2)])|0);HEAP32[((($30)+(12))>>2)]=((HEAP32[((($31)+(12))>>2)])|0);
  $32=((HEAP32[(($edgeA)>>2)])|0);
  $33=(($manifold+56)|0);
  HEAP32[(($33)>>2)]=1;
  $poly1_0=$polyA;$poly2_0=$polyB;$edge1_0=$32;$flip_0=0;
 }




 $35=(($incidentEdge)|0);
 __ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_($35,$poly1_0,$xf1,$edge1_0,$poly2_0,$xf2);
 $36=(($poly1_0+148)|0);
 $37=((HEAP32[(($36)>>2)])|0);
 $38=((($edge1_0)+(1))|0);
 $39=($38|0)<($37|0);
 $_=($39?$38:0);
 $40=(($poly1_0+20+($edge1_0<<3))|0);
 $41=$40;
 $ld$0$0=(($41)|0);
 $42$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($41+4)|0);
 $42$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($v11)|0);
 HEAP32[(($st$2$0)>>2)]=$42$0;
 $st$3$1=(($v11+4)|0);
 HEAP32[(($st$3$1)>>2)]=$42$1;
 $43=(($poly1_0+20+($_<<3))|0);
 $44=$43;
 $ld$4$0=(($44)|0);
 $45$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($44+4)|0);
 $45$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($v12)|0);
 HEAP32[(($st$6$0)>>2)]=$45$0;
 $st$7$1=(($v12+4)|0);
 HEAP32[(($st$7$1)>>2)]=$45$1;
 __ZmiRK6b2Vec2S1_($localTangent,$tmpcast52,$tmpcast);
 $46=(+(__ZN6b2Vec29NormalizeEv($localTangent)));
 __Z7b2CrossRK6b2Vec2f($tmpcast55,$localTangent,1.0);
 __ZplRK6b2Vec2S1_($1,$tmpcast,$tmpcast52);
 __ZmlfRK6b2Vec2($tmpcast56,0.5,$1);
 $47=(($xf1+8)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($tangent,$47,$localTangent);
 __Z7b2CrossRK6b2Vec2f($normal,$tangent,1.0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast53,$xf1,$tmpcast);
 $ld$8$0=(($2)|0);
 $48$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($2+4)|0);
 $48$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($v11)|0);
 HEAP32[(($st$10$0)>>2)]=$48$0;
 $st$11$1=(($v11+4)|0);
 HEAP32[(($st$11$1)>>2)]=$48$1;
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast54,$xf1,$tmpcast52);
 $ld$12$0=(($3)|0);
 $49$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($3+4)|0);
 $49$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($v12)|0);
 HEAP32[(($st$14$0)>>2)]=$49$0;
 $st$15$1=(($v12+4)|0);
 HEAP32[(($st$15$1)>>2)]=$49$1;
 $50=(+(__Z5b2DotRK6b2Vec2S1_($normal,$tmpcast)));
 $51=(($clipPoints1)|0);
 $52=(+(__Z5b2DotRK6b2Vec2S1_($tangent,$tmpcast52)));
 $53=(+(__Z5b2DotRK6b2Vec2S1_($tangent,$tmpcast)));
 $54=($11)-($53);
 __ZNK6b2Vec2ngEv($4,$tangent);
 $55=((__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($51,$35,$4,$54,$edge1_0))|0);
 $56=($55|0)<2;
 if ($56) {
  STACKTOP=sp;return;
 }
 $58=(($clipPoints2)|0);
 $59=($11)+($52);
 $60=((__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($58,$51,$tangent,$59,$_))|0);
 $61=($60|0)<2;
 if ($61) {
  STACKTOP=sp;return;
 }
 $63=(($manifold+40)|0);
 $64=$63;
 $ld$16$0=(($localNormal)|0);
 $65$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($localNormal+4)|0);
 $65$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($64)|0);
 HEAP32[(($st$18$0)>>2)]=$65$0;
 $st$19$1=(($64+4)|0);
 HEAP32[(($st$19$1)>>2)]=$65$1;
 $66=(($manifold+48)|0);
 $67=$66;
 $ld$20$0=(($planePoint)|0);
 $68$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($planePoint+4)|0);
 $68$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($67)|0);
 HEAP32[(($st$22$0)>>2)]=$68$0;
 $st$23$1=(($67+4)|0);
 HEAP32[(($st$23$1)>>2)]=$68$1;
 $69=(($flip_0<<24)>>24)==0;
 $70=(($clipPoints2)|0);
 $71=(+(__Z5b2DotRK6b2Vec2S1_($normal,$70)));
 $72=($71)-($50);
 $73=$72>$11;
 do {
  if ($73) {
   $pointCount_1=0;
  } else {
   __Z6b2MulTRK11b2TransformRK6b2Vec2($tmpcast57,$xf2,$70);
   $75=$manifold;
   $ld$24$0=(($5)|0);
   $76$0=((HEAP32[(($ld$24$0)>>2)])|0);
   $ld$25$1=(($5+4)|0);
   $76$1=((HEAP32[(($ld$25$1)>>2)])|0);
   $st$26$0=(($75)|0);
   HEAP32[(($st$26$0)>>2)]=$76$0;
   $st$27$1=(($75+4)|0);
   HEAP32[(($st$27$1)>>2)]=$76$1;
   $77=(($manifold+16)|0);
   $78=(($clipPoints2+8)|0);
   $79=((HEAP32[(($78)>>2)])|0);
   $80=(($77)|0);
   HEAP32[(($80)>>2)]=$79;
   if ($69) {
    $pointCount_1=1;
    break;
   }
   $82=$77;
   $cf_sroa_0_0__idx=$77;
   $cf_sroa_0_0_copyload=((HEAP8[($cf_sroa_0_0__idx)])|0);
   $cf_sroa_1_1__idx=(($82+1)|0);
   $cf_sroa_1_1_copyload=((HEAP8[($cf_sroa_1_1__idx)])|0);
   $cf_sroa_2_2__idx=(($82+2)|0);
   $cf_sroa_2_2_copyload=((HEAP8[($cf_sroa_2_2__idx)])|0);
   $cf_sroa_3_3__idx=(($82+3)|0);
   $cf_sroa_3_3_copyload=((HEAP8[($cf_sroa_3_3__idx)])|0);
   HEAP8[($cf_sroa_0_0__idx)]=$cf_sroa_1_1_copyload;
   HEAP8[($cf_sroa_1_1__idx)]=$cf_sroa_0_0_copyload;
   HEAP8[($cf_sroa_2_2__idx)]=$cf_sroa_3_3_copyload;
   HEAP8[($cf_sroa_3_3__idx)]=$cf_sroa_2_2_copyload;
   $pointCount_1=1;
  }
 } while(0);

 $84=(($clipPoints2+12)|0);
 $85=(+(__Z5b2DotRK6b2Vec2S1_($normal,$84)));
 $86=($85)-($50);
 $87=$86>$11;
 if ($87) {
  $pointCount_1_1=$pointCount_1;
 } else {
  $90=(($manifold+((($pointCount_1)*(20))&-1))|0);
  __Z6b2MulTRK11b2TransformRK6b2Vec2($tmpcast57,$xf2,$84);
  $91=$90;
  $ld$28$0=(($5)|0);
  $92$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($5+4)|0);
  $92$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($91)|0);
  HEAP32[(($st$30$0)>>2)]=$92$0;
  $st$31$1=(($91+4)|0);
  HEAP32[(($st$31$1)>>2)]=$92$1;
  $93=(($manifold+((($pointCount_1)*(20))&-1)+16)|0);
  $94=(($clipPoints2+20)|0);
  $95=((HEAP32[(($94)>>2)])|0);
  $96=(($93)|0);
  HEAP32[(($96)>>2)]=$95;
  if (!($69)) {
   $98=$93;
   $cf_sroa_0_0__idx_1=$93;
   $cf_sroa_0_0_copyload_1=((HEAP8[($cf_sroa_0_0__idx_1)])|0);
   $cf_sroa_1_1__idx_1=(($98+1)|0);
   $cf_sroa_1_1_copyload_1=((HEAP8[($cf_sroa_1_1__idx_1)])|0);
   $cf_sroa_2_2__idx_1=(($98+2)|0);
   $cf_sroa_2_2_copyload_1=((HEAP8[($cf_sroa_2_2__idx_1)])|0);
   $cf_sroa_3_3__idx_1=(($98+3)|0);
   $cf_sroa_3_3_copyload_1=((HEAP8[($cf_sroa_3_3__idx_1)])|0);
   HEAP8[($cf_sroa_0_0__idx_1)]=$cf_sroa_1_1_copyload_1;
   HEAP8[($cf_sroa_1_1__idx_1)]=$cf_sroa_0_0_copyload_1;
   HEAP8[($cf_sroa_2_2__idx_1)]=$cf_sroa_3_3_copyload_1;
   HEAP8[($cf_sroa_3_3__idx_1)]=$cf_sroa_2_2_copyload_1;
  }
  $100=((($pointCount_1)+(1))|0);
  $pointCount_1_1=$100;
 }

 HEAP32[(($6)>>2)]=$pointCount_1_1;
 STACKTOP=sp;return;
}


function __ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_($edgeIndex,$poly1,$xf1,$poly2,$xf2){
 $edgeIndex=($edgeIndex)|0;
 $poly1=($poly1)|0;
 $xf1=($xf1)|0;
 $poly2=($poly2)|0;
 $xf2=($xf2)|0;
 var $d=0,$1=0,$2=0,$dLocal1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$edge_059=0,$maxDot_058=.0,$i_057=0,$9=0,$10=.0,$11=0,$maxDot_1=.0,$edge_1=0,$12=0,$13=0;
 var $edge_0_lcssa=0,$14=.0,$15=0,$_sink=0,$16=0,$17=.0,$18=0,$19=0,$_=0,$20=.0,$21=0,$22=0,$or_cond=0,$24=0,$bestEdge_0_ph=0,$bestSeparation_0_ph=.0,$increment_0_ph=0,$bestEdge_0=0,$bestSeparation_0=.0,$27=0;
 var $_sink1=0,$28=0,$30=0,$31=0,$_56=0,$edge_2=0,$33=.0,$34=0,$storemerge=0,$_0=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $d=((sp)|0);
 $1=(((sp)+(8))|0);
 $2=(((sp)+(16))|0);
 $dLocal1=(((sp)+(24))|0);
 $3=(($poly1+148)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($poly2+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($1,$xf2,$5);
 $6=(($poly1+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($2,$xf1,$6);
 __ZmiRK6b2Vec2S1_($d,$1,$2);
 $7=(($xf1+8)|0);
 __Z6b2MulTRK5b2RotRK6b2Vec2($dLocal1,$7,$d);
 $8=($4|0)>0;
 if ($8) {
  $i_057=0;$maxDot_058=-3.4028234663852886e+38;$edge_059=0;
  while(1) {



   $9=(($poly1+84+($i_057<<3))|0);
   $10=(+(__Z5b2DotRK6b2Vec2S1_($9,$dLocal1)));
   $11=$10>$maxDot_058;
   $maxDot_1=($11?$10:$maxDot_058);
   $edge_1=($11?$i_057:$edge_059);
   $12=((($i_057)+(1))|0);
   $13=($12|0)<($4|0);
   if ($13) {
    $i_057=$12;$maxDot_058=$maxDot_1;$edge_059=$edge_1;
   } else {
    $edge_0_lcssa=$edge_1;
    break;
   }
  }
 } else {
  $edge_0_lcssa=0;
 }

 $14=(+(__ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_($poly1,$xf1,$edge_0_lcssa,$poly2,$xf2)));
 $15=($edge_0_lcssa|0)>0;
 $_sink=($15?$edge_0_lcssa:$4);
 $16=((($_sink)-(1))|0);
 $17=(+(__ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_($poly1,$xf1,$16,$poly2,$xf2)));
 $18=((($edge_0_lcssa)+(1))|0);
 $19=($18|0)<($4|0);
 $_=($19?$18:0);
 $20=(+(__ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_($poly1,$xf1,$_,$poly2,$xf2)));
 $21=$17>$14;
 $22=$17>$20;
 $or_cond=$21&$22;
 do {
  if ($or_cond) {
   $increment_0_ph=1;$bestSeparation_0_ph=$17;$bestEdge_0_ph=$16;
  } else {
   $24=$20>$14;
   if ($24) {
    $increment_0_ph=0;$bestSeparation_0_ph=$20;$bestEdge_0_ph=$_;
    break;
   } else {
    $_0=$14;$storemerge=$edge_0_lcssa;
   }


   HEAP32[(($edgeIndex)>>2)]=$storemerge;
   STACKTOP=sp;return (+($_0));
  }
 } while(0);



 $bestSeparation_0=$bestSeparation_0_ph;$bestEdge_0=$bestEdge_0_ph;
 while(1) {


  if ($increment_0_ph) {
   $27=($bestEdge_0|0)>0;
   $_sink1=($27?$bestEdge_0:$4);
   $28=((($_sink1)-(1))|0);
   $edge_2=$28;
  } else {
   $30=((($bestEdge_0)+(1))|0);
   $31=($30|0)<($4|0);
   $_56=($31?$30:0);
   $edge_2=$_56;
  }

  $33=(+(__ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_($poly1,$xf1,$edge_2,$poly2,$xf2)));
  $34=$33>$bestSeparation_0;
  if ($34) {
   $bestSeparation_0=$33;$bestEdge_0=$edge_2;
  } else {
   $_0=$bestSeparation_0;$storemerge=$bestEdge_0;
   break;
  }
 }


 HEAP32[(($edgeIndex)>>2)]=$storemerge;
 STACKTOP=sp;return (+($_0));
}


function __ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_($c,$poly1,$xf1,$edge1,$poly2,$xf2){
 $c=($c)|0;
 $poly1=($poly1)|0;
 $xf1=($xf1)|0;
 $edge1=($edge1)|0;
 $poly2=($poly2)|0;
 $xf2=($xf2)|0;
 var $normal1=0,$1=0,$2=0,$tmpcast=0,$3=0,$tmpcast34=0,$4=0,$5=0,$6=0,$8=0,$9=0,$10=0,$13=0,$14=0,$15=0,$16=0,$index_037=0,$minDot_036=.0,$i_035=0,$17=0;
 var $18=.0,$19=0,$minDot_1=.0,$index_1=0,$20=0,$21=0,$index_0_lcssa=0,$22=0,$23=0,$_=0,$24=0,$25=0,$ld$0$0=0,$26$0=0,$ld$1$1=0,$26$1=0,$st$2$0=0,$st$3$1=0,$27=0,$28=0;
 var $29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$ld$4$0=0,$38$0=0,$ld$5$1=0,$38$1=0,$st$6$0=0,$st$7$1=0,$39=0,$40=0,$41=0,$42=0,$43=0;
 var $44=0,$45=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $normal1=((sp)|0);
 $1=(((sp)+(8))|0);
 $2=(((sp)+(16))|0);
 $tmpcast=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$3;
 $4=(($poly2+148)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($edge1|0)>-1;
 if (!($6)) {
  ___assert_fail(((7704)|0),((9840)|0),((151)|0),((13184)|0));

 }
 $8=(($poly1+148)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=($9|0)>($edge1|0);
 if (!($10)) {
  ___assert_fail(((7704)|0),((9840)|0),((151)|0),((13184)|0));

 }
 $13=(($xf2+8)|0);
 $14=(($xf1+8)|0);
 $15=(($poly1+84+($edge1<<3))|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($1,$14,$15);
 __Z6b2MulTRK5b2RotRK6b2Vec2($normal1,$13,$1);
 $16=($5|0)>0;
 if ($16) {
  $i_035=0;$minDot_036=3.4028234663852886e+38;$index_037=0;
  while(1) {



   $17=(($poly2+84+($i_035<<3))|0);
   $18=(+(__Z5b2DotRK6b2Vec2S1_($normal1,$17)));
   $19=$18<$minDot_036;
   $minDot_1=($19?$18:$minDot_036);
   $index_1=($19?$i_035:$index_037);
   $20=((($i_035)+(1))|0);
   $21=($20|0)<($5|0);
   if ($21) {
    $i_035=$20;$minDot_036=$minDot_1;$index_037=$index_1;
   } else {
    $index_0_lcssa=$index_1;
    break;
   }
  }
 } else {
  $index_0_lcssa=0;
 }

 $22=((($index_0_lcssa)+(1))|0);
 $23=($22|0)<($5|0);
 $_=($23?$22:0);
 $24=(($poly2+20+($index_0_lcssa<<3))|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast,$xf2,$24);
 $25=$c;
 $ld$0$0=(($2)|0);
 $26$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $26$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($25)|0);
 HEAP32[(($st$2$0)>>2)]=$26$0;
 $st$3$1=(($25+4)|0);
 HEAP32[(($st$3$1)>>2)]=$26$1;
 $27=(($edge1)&255);
 $28=(($c+8)|0);
 $29=$28;
 $30=$28;
 HEAP8[($30)]=$27;
 $31=(($index_0_lcssa)&255);
 $32=(($29+1)|0);
 HEAP8[($32)]=$31;
 $33=(($29+2)|0);
 HEAP8[($33)]=1;
 $34=(($29+3)|0);
 HEAP8[($34)]=0;
 $35=(($c+12)|0);
 $36=(($poly2+20+($_<<3))|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast34,$xf2,$36);
 $37=$35;
 $ld$4$0=(($3)|0);
 $38$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($3+4)|0);
 $38$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($37)|0);
 HEAP32[(($st$6$0)>>2)]=$38$0;
 $st$7$1=(($37+4)|0);
 HEAP32[(($st$7$1)>>2)]=$38$1;
 $39=(($c+20)|0);
 $40=$39;
 $41=$39;
 HEAP8[($41)]=$27;
 $42=(($_)&255);
 $43=(($40+1)|0);
 HEAP8[($43)]=$42;
 $44=(($40+2)|0);
 HEAP8[($44)]=1;
 $45=(($40+3)|0);
 HEAP8[($45)]=0;
 STACKTOP=sp;return;
}


function __Z7b2CrossRK6b2Vec2f($agg_result,$a,$s){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $s=+($s);
 var $1=0,$2=.0,$3=.0,$4=.0,$5=0,$6=.0,$7=.0,label=0;

 $1=(($a+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($s);
 $4=((-.0))-($s);
 $5=(($a)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=($6)*($4);
 __ZN6b2Vec2C1Eff($agg_result,$3,$7);
 return;
}


function __ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_($poly1,$xf1,$edge1,$poly2,$xf2){
 $poly1=($poly1)|0;
 $xf1=($xf1)|0;
 $edge1=($edge1)|0;
 $poly2=($poly2)|0;
 $xf2=($xf2)|0;
 var $normal1World=0,$normal1=0,$v1=0,$v2=0,$1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$11=0,$12=0,$13=0,$14=0,$index_020=0,$minDot_019=.0,$i_018=0,$15=0,$16=.0;
 var $17=0,$minDot_1=.0,$index_1=0,$18=0,$19=0,$index_0_lcssa=0,$20=0,$21=0,$22=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $normal1World=((sp)|0);
 $normal1=(((sp)+(8))|0);
 $v1=(((sp)+(16))|0);
 $v2=(((sp)+(24))|0);
 $1=(((sp)+(32))|0);
 $2=(($poly2+148)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=($edge1|0)>-1;
 if (!($4)) {
  ___assert_fail(((7704)|0),((9840)|0),((32)|0),((13208)|0));
  return 0.0;
 }
 $6=(($poly1+148)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)>($edge1|0);
 if (!($8)) {
  ___assert_fail(((7704)|0),((9840)|0),((32)|0),((13208)|0));
  return 0.0;
 }
 $11=(($xf1+8)|0);
 $12=(($poly1+84+($edge1<<3))|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($normal1World,$11,$12);
 $13=(($xf2+8)|0);
 __Z6b2MulTRK5b2RotRK6b2Vec2($normal1,$13,$normal1World);
 $14=($3|0)>0;
 if ($14) {
  $i_018=0;$minDot_019=3.4028234663852886e+38;$index_020=0;
  while(1) {



   $15=(($poly2+20+($i_018<<3))|0);
   $16=(+(__Z5b2DotRK6b2Vec2S1_($15,$normal1)));
   $17=$16<$minDot_019;
   $minDot_1=($17?$16:$minDot_019);
   $index_1=($17?$i_018:$index_020);
   $18=((($i_018)+(1))|0);
   $19=($18|0)<($3|0);
   if ($19) {
    $i_018=$18;$minDot_019=$minDot_1;$index_020=$index_1;
   } else {
    $index_0_lcssa=$index_1;
    break;
   }
  }
 } else {
  $index_0_lcssa=0;
 }

 $20=(($poly1+20+($edge1<<3))|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($v1,$xf1,$20);
 $21=(($poly2+20+($index_0_lcssa<<3))|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($v2,$xf2,$21);
 __ZmiRK6b2Vec2S1_($1,$v2,$v1);
 $22=(+(__Z5b2DotRK6b2Vec2S1_($1,$normal1World)));
 STACKTOP=sp;return (+($22));
}


function __ZN15b2WorldManifold10InitializeEPK10b2ManifoldRK11b2TransformfS5_f($this,$manifold,$xfA,$radiusA,$xfB,$radiusB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $radiusA=+($radiusA);
 $xfB=($xfB)|0;
 $radiusB=+($radiusB);
 var $pointA=0,$pointB=0,$1=0,$tmpcast38=0,$cA=0,$2=0,$cB=0,$3=0,$4=0,$tmpcast37=0,$5=0,$6=0,$tmpcast35=0,$planePoint=0,$clipPoint=0,$cA1=0,$7=0,$8=0,$cB2=0,$9=0;
 var $10=0,$tmpcast36=0,$11=0,$12=0,$tmpcast=0,$planePoint3=0,$clipPoint5=0,$cB6=0,$13=0,$14=0,$cA7=0,$15=0,$16=0,$tmpcast34=0,$17=0,$18=0,$tmpcast33=0,$19=0,$20=0,$21=0;
 var $23=0,$24=0,$26=0,$27=0,$28=0,$29=.0,$30=0,$32=0,$ld$0$0=0,$33$0=0,$ld$1$1=0,$33$1=0,$st$2$0=0,$st$3$1=0,$34=.0,$36=0,$37=0,$ld$4$0=0,$38$0=0,$ld$5$1=0;
 var $38$1=0,$st$6$0=0,$st$7$1=0,$40=0,$41=0,$42=0,$43=0,$ld$8$0=0,$44$0=0,$ld$9$1=0,$44$1=0,$st$10$0=0,$st$11$1=0,$45=0,$46=0,$47=0,$i_039=0,$48=0,$49=.0,$50=.0;
 var $51=0,$52=0,$ld$12$0=0,$53$0=0,$ld$13$1=0,$53$1=0,$st$14$0=0,$st$15$1=0,$54=0,$55=0,$56=0,$58=0,$59=0,$60=0,$61=0,$ld$16$0=0,$62$0=0,$ld$17$1=0,$62$1=0,$st$18$0=0;
 var $st$19$1=0,$63=0,$64=0,$65=0,$i4_040=0,$66=0,$67=.0,$68=.0,$69=0,$70=0,$ld$20$0=0,$71$0=0,$ld$21$1=0,$71$1=0,$st$22$0=0,$st$23$1=0,$72=0,$73=0,$74=0,$ld$24$0=0;
 var $75$0=0,$ld$25$1=0,$75$1=0,$st$26$0=0,$st$27$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $pointA=((sp)|0);
 $pointB=(((sp)+(8))|0);
 $1=(((sp)+(16))|0);
 $tmpcast38=$1;
 $cA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast37=$4;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$6;
 $planePoint=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $clipPoint=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $cA1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $cB2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$10;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$12;
 $planePoint3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $clipPoint5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $cB6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $cA7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $16=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$16;
 $17=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$18;
 $19=(($manifold+60)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=($20|0)==0;
 if ($21) {
  STACKTOP=sp;return;
 }
 $23=(($manifold+56)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 if (((($24|0))|0)==((0)|0)) {
  $26=(($this)|0);
  __ZN6b2Vec23SetEff($26,1.0,0.0);
  $27=(($manifold+48)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA,$xfA,$27);
  $28=(($manifold)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB,$xfB,$28);
  $29=(+(__Z17b2DistanceSquaredRK6b2Vec2S1_($pointA,$pointB)));
  $30=$29>(1.4210854715202004e-14);
  if ($30) {
   __ZmiRK6b2Vec2S1_($tmpcast38,$pointB,$pointA);
   $32=$this;
   $ld$0$0=(($1)|0);
   $33$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($1+4)|0);
   $33$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($32)|0);
   HEAP32[(($st$2$0)>>2)]=$33$0;
   $st$3$1=(($32+4)|0);
   HEAP32[(($st$3$1)>>2)]=$33$1;
   $34=(+(__ZN6b2Vec29NormalizeEv($26)));
  }
  __ZmlfRK6b2Vec2($2,$radiusA,$26);
  __ZplRK6b2Vec2S1_($cA,$pointA,$2);
  __ZmlfRK6b2Vec2($3,$radiusB,$26);
  __ZmiRK6b2Vec2S1_($cB,$pointB,$3);
  $36=(($this+8)|0);
  __ZplRK6b2Vec2S1_($5,$cA,$cB);
  __ZmlfRK6b2Vec2($tmpcast37,0.5,$5);
  $37=$36;
  $ld$4$0=(($4)|0);
  $38$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($4+4)|0);
  $38$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($37)|0);
  HEAP32[(($st$6$0)>>2)]=$38$0;
  $st$7$1=(($37+4)|0);
  HEAP32[(($st$7$1)>>2)]=$38$1;
  STACKTOP=sp;return;
 } else if (((($24|0))|0)==((1)|0)) {
  $40=(($this)|0);
  $41=(($xfA+8)|0);
  $42=(($manifold+40)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast35,$41,$42);
  $43=$this;
  $ld$8$0=(($6)|0);
  $44$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($6+4)|0);
  $44$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($43)|0);
  HEAP32[(($st$10$0)>>2)]=$44$0;
  $st$11$1=(($43+4)|0);
  HEAP32[(($st$11$1)>>2)]=$44$1;
  $45=(($manifold+48)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($planePoint,$xfA,$45);
  $46=((HEAP32[(($19)>>2)])|0);
  $47=($46|0)>0;
  if ($47) {
   $i_039=0;
  } else {
   STACKTOP=sp;return;
  }
  while(1) {

   $48=(($manifold+((($i_039)*(20))&-1))|0);
   __Z5b2MulRK11b2TransformRK6b2Vec2($clipPoint,$xfB,$48);
   __ZmiRK6b2Vec2S1_($8,$clipPoint,$planePoint);
   $49=(+(__Z5b2DotRK6b2Vec2S1_($8,$40)));
   $50=($radiusA)-($49);
   __ZmlfRK6b2Vec2($7,$50,$40);
   __ZplRK6b2Vec2S1_($cA1,$clipPoint,$7);
   __ZmlfRK6b2Vec2($9,$radiusB,$40);
   __ZmiRK6b2Vec2S1_($cB2,$clipPoint,$9);
   $51=(($this+8+($i_039<<3))|0);
   __ZplRK6b2Vec2S1_($11,$cA1,$cB2);
   __ZmlfRK6b2Vec2($tmpcast36,0.5,$11);
   $52=$51;
   $ld$12$0=(($10)|0);
   $53$0=((HEAP32[(($ld$12$0)>>2)])|0);
   $ld$13$1=(($10+4)|0);
   $53$1=((HEAP32[(($ld$13$1)>>2)])|0);
   $st$14$0=(($52)|0);
   HEAP32[(($st$14$0)>>2)]=$53$0;
   $st$15$1=(($52+4)|0);
   HEAP32[(($st$15$1)>>2)]=$53$1;
   $54=((($i_039)+(1))|0);
   $55=((HEAP32[(($19)>>2)])|0);
   $56=($54|0)<($55|0);
   if ($56) {
    $i_039=$54;
   } else {
    break;
   }
  }
  STACKTOP=sp;return;
 } else if (((($24|0))|0)==((2)|0)) {
  $58=(($this)|0);
  $59=(($xfB+8)|0);
  $60=(($manifold+40)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast,$59,$60);
  $61=$this;
  $ld$16$0=(($12)|0);
  $62$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($12+4)|0);
  $62$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($61)|0);
  HEAP32[(($st$18$0)>>2)]=$62$0;
  $st$19$1=(($61+4)|0);
  HEAP32[(($st$19$1)>>2)]=$62$1;
  $63=(($manifold+48)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($planePoint3,$xfB,$63);
  $64=((HEAP32[(($19)>>2)])|0);
  $65=($64|0)>0;
  if ($65) {
   $i4_040=0;
   while(1) {

    $66=(($manifold+((($i4_040)*(20))&-1))|0);
    __Z5b2MulRK11b2TransformRK6b2Vec2($clipPoint5,$xfA,$66);
    __ZmiRK6b2Vec2S1_($14,$clipPoint5,$planePoint3);
    $67=(+(__Z5b2DotRK6b2Vec2S1_($14,$58)));
    $68=($radiusB)-($67);
    __ZmlfRK6b2Vec2($13,$68,$58);
    __ZplRK6b2Vec2S1_($cB6,$clipPoint5,$13);
    __ZmlfRK6b2Vec2($15,$radiusA,$58);
    __ZmiRK6b2Vec2S1_($cA7,$clipPoint5,$15);
    $69=(($this+8+($i4_040<<3))|0);
    __ZplRK6b2Vec2S1_($17,$cA7,$cB6);
    __ZmlfRK6b2Vec2($tmpcast34,0.5,$17);
    $70=$69;
    $ld$20$0=(($16)|0);
    $71$0=((HEAP32[(($ld$20$0)>>2)])|0);
    $ld$21$1=(($16+4)|0);
    $71$1=((HEAP32[(($ld$21$1)>>2)])|0);
    $st$22$0=(($70)|0);
    HEAP32[(($st$22$0)>>2)]=$71$0;
    $st$23$1=(($70+4)|0);
    HEAP32[(($st$23$1)>>2)]=$71$1;
    $72=((($i4_040)+(1))|0);
    $73=((HEAP32[(($19)>>2)])|0);
    $74=($72|0)<($73|0);
    if ($74) {
     $i4_040=$72;
    } else {
     break;
    }
   }
  }
  __ZNK6b2Vec2ngEv($tmpcast33,$58);
  $ld$24$0=(($18)|0);
  $75$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($18+4)|0);
  $75$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($61)|0);
  HEAP32[(($st$26$0)>>2)]=$75$0;
  $st$27$1=(($61+4)|0);
  HEAP32[(($st$27$1)>>2)]=$75$1;
  STACKTOP=sp;return;
 } else {
  STACKTOP=sp;return;
 }
}


function __ZNK6b2AABB7RayCastEP15b2RayCastOutputRK14b2RayCastInput($this,$output,$input){
 $this=($this)|0;
 $output=($output)|0;
 $input=($input)|0;
 var $p=0,$tmpcast=0,$d=0,$absD=0,$normal=0,$tmpcast25=0,$t1=0,$t2=0,$1=0,$2=0,$ld$0$0=0,$3$0=0,$ld$1$1=0,$3$1=0,$st$2$0=0,$st$3$1=0,$4=0,$5=0,$6=0,$7=0;
 var $8=0,$9=0,$10=.0,$11=0,$13=0,$14=.0,$15=.0,$16=0,$18=.0,$19=0,$21=0,$22=.0,$23=.0,$24=.0,$25=0,$26=.0,$27=.0,$28=.0,$29=.0,$30=.0;
 var $31=.0,$32=.0,$33=0,$s_0=.0,$36=.0,$37=0,$39=0,$40=.0,$tmin_1=.0,$42=.0,$43=.0,$44=0,$tmin_2=.0,$tmax_1=.0,$46=0,$47=.0,$48=0,$50=0,$51=.0,$52=0;
 var $54=0,$55=0,$ld$4$0=0,$56$0=0,$ld$5$1=0,$56$1=0,$st$6$0=0,$st$7$1=0,$_0=0,$58=0,$59=.0,$60=.0,$61=.0,$62=0,$63=.0,$64=.0,$65=.0,$66=.0,$67=.0,$68=.0;
 var $69=.0,$70=0,$s_0_1=.0,$73=.0,$74=0,$76=0,$77=.0,$tmin_1_1=.0,$79=.0,$80=.0,$81=0,$83=0,$84=.0,$85=.0,$86=0,$88=.0,$89=0,$tmin_2_1=.0,$91=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $p=((sp)|0);
 $tmpcast=$p;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $absD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast25=$normal;
 $t1=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $t2=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $1=(($input)|0);
 $2=$input;
 $ld$0$0=(($2)|0);
 $3$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $3$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($p)|0);
 HEAP32[(($st$2$0)>>2)]=$3$0;
 $st$3$1=(($p+4)|0);
 HEAP32[(($st$3$1)>>2)]=$3$1;
 $4=(($input+8)|0);
 __ZmiRK6b2Vec2S1_($d,$4,$1);
 __Z5b2AbsRK6b2Vec2($absD,$d);
 $5=(($this)|0);
 $6=(($this+8)|0);
 $7=(($this)|0);
 $8=(($this+8)|0);
 $9=((__ZN6b2Vec2clEi($absD,0))|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=$10<(1.1920928955078125e-7);
 do {
  if ($11) {
   $13=((__ZN6b2Vec2clEi($tmpcast,0))|0);
   $14=(+(HEAPF32[(($13)>>2)]));
   $15=(+(__ZNK6b2Vec2clEi($5,0)));
   $16=$14<$15;
   if ($16) {
    $_0=0;

    STACKTOP=sp;return (($_0)|0);
   }
   $18=(+(__ZNK6b2Vec2clEi($6,0)));
   $19=$18<$14;
   if ($19) {
    $_0=0;
   } else {
    $tmax_1=3.4028234663852886e+38;$tmin_2=-3.4028234663852886e+38;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  } else {
   $21=((__ZN6b2Vec2clEi($d,0))|0);
   $22=(+(HEAPF32[(($21)>>2)]));
   $23=((1.0))/($22);
   $24=(+(__ZNK6b2Vec2clEi($7,0)));
   $25=((__ZN6b2Vec2clEi($tmpcast,0))|0);
   $26=(+(HEAPF32[(($25)>>2)]));
   $27=($24)-($26);
   $28=($23)*($27);
   HEAPF32[(($t1)>>2)]=$28;
   $29=(+(__ZNK6b2Vec2clEi($8,0)));
   $30=(+(HEAPF32[(($25)>>2)]));
   $31=($29)-($30);
   $32=($23)*($31);
   HEAPF32[(($t2)>>2)]=$32;
   $33=$28>$32;
   if ($33) {
    __Z6b2SwapIfEvRT_S1_($t1,$t2);
    $s_0=1.0;
   } else {
    $s_0=-1.0;
   }

   $36=(+(HEAPF32[(($t1)>>2)]));
   $37=$36>(-3.4028234663852886e+38);
   if ($37) {
    __ZN6b2Vec27SetZeroEv($tmpcast25);
    $39=((__ZN6b2Vec2clEi($tmpcast25,0))|0);
    HEAPF32[(($39)>>2)]=$s_0;
    $40=(+(HEAPF32[(($t1)>>2)]));
    $tmin_1=$40;
   } else {
    $tmin_1=-3.4028234663852886e+38;
   }

   $42=(+(HEAPF32[(($t2)>>2)]));
   $43=(+(__Z5b2MinIfET_S0_S0_(3.4028234663852886e+38,$42)));
   $44=$tmin_1>$43;
   if ($44) {
    $_0=0;
   } else {
    $tmax_1=$43;$tmin_2=$tmin_1;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);


 $46=((__ZN6b2Vec2clEi($absD,1))|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=$47<(1.1920928955078125e-7);
 do {
  if ($48) {
   $83=((__ZN6b2Vec2clEi($tmpcast,1))|0);
   $84=(+(HEAPF32[(($83)>>2)]));
   $85=(+(__ZNK6b2Vec2clEi($5,1)));
   $86=$84<$85;
   if ($86) {
    $_0=0;

    STACKTOP=sp;return (($_0)|0);
   }
   $88=(+(__ZNK6b2Vec2clEi($6,1)));
   $89=$88<$84;
   if ($89) {
    $_0=0;
   } else {
    $tmin_2_1=$tmin_2;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  } else {
   $58=((__ZN6b2Vec2clEi($d,1))|0);
   $59=(+(HEAPF32[(($58)>>2)]));
   $60=((1.0))/($59);
   $61=(+(__ZNK6b2Vec2clEi($7,1)));
   $62=((__ZN6b2Vec2clEi($tmpcast,1))|0);
   $63=(+(HEAPF32[(($62)>>2)]));
   $64=($61)-($63);
   $65=($60)*($64);
   HEAPF32[(($t1)>>2)]=$65;
   $66=(+(__ZNK6b2Vec2clEi($8,1)));
   $67=(+(HEAPF32[(($62)>>2)]));
   $68=($66)-($67);
   $69=($60)*($68);
   HEAPF32[(($t2)>>2)]=$69;
   $70=$65>$69;
   if ($70) {
    __Z6b2SwapIfEvRT_S1_($t1,$t2);
    $s_0_1=1.0;
   } else {
    $s_0_1=-1.0;
   }

   $73=(+(HEAPF32[(($t1)>>2)]));
   $74=$73>$tmin_2;
   if ($74) {
    __ZN6b2Vec27SetZeroEv($tmpcast25);
    $76=((__ZN6b2Vec2clEi($tmpcast25,1))|0);
    HEAPF32[(($76)>>2)]=$s_0_1;
    $77=(+(HEAPF32[(($t1)>>2)]));
    $tmin_1_1=$77;
   } else {
    $tmin_1_1=$tmin_2;
   }

   $79=(+(HEAPF32[(($t2)>>2)]));
   $80=(+(__Z5b2MinIfET_S0_S0_($tmax_1,$79)));
   $81=$tmin_1_1>$80;
   if ($81) {
    $_0=0;
   } else {
    $tmin_2_1=$tmin_1_1;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $91=$tmin_2_1<(0.0);
 if ($91) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $50=(($input+16)|0);
 $51=(+(HEAPF32[(($50)>>2)]));
 $52=$51<$tmin_2_1;
 if ($52) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $54=(($output+8)|0);
 HEAPF32[(($54)>>2)]=$tmin_2_1;
 $55=$output;
 $ld$4$0=(($normal)|0);
 $56$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($normal+4)|0);
 $56$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($55)|0);
 HEAP32[(($st$6$0)>>2)]=$56$0;
 $st$7$1=(($55+4)|0);
 HEAP32[(($st$7$1)>>2)]=$56$1;
 $_0=1;

 STACKTOP=sp;return (($_0)|0);
}


function __Z5b2AbsRK6b2Vec2($agg_result,$a){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(+(__Z5b2AbsIfET_S0_($2)));
 $4=(($a+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(+(__Z5b2AbsIfET_S0_($5)));
 __ZN6b2Vec2C1Eff($agg_result,$3,$6);
 return;
}


function __ZN6b2Vec2clEi($this,$i){
 $this=($this)|0;
 $i=($i)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=(($1+($i<<2))|0);
 return (($2)|0);
}


function __ZNK6b2Vec2clEi($this,$i){
 $this=($this)|0;
 $i=($i)|0;
 var $1=0,$2=0,$3=.0,label=0;

 $1=(($this)|0);
 $2=(($1+($i<<2))|0);
 $3=(+(HEAPF32[(($2)>>2)]));
 return (+($3));
}


function __Z6b2SwapIfEvRT_S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=.0,$2=.0,label=0;

 $1=(+(HEAPF32[(($a)>>2)]));
 $2=(+(HEAPF32[(($b)>>2)]));
 HEAPF32[(($a)>>2)]=$2;
 HEAPF32[(($b)>>2)]=$1;
 return;
}


function __Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($vOut,$vIn,$normal,$offset,$vertexIndexA){
 $vOut=($vOut)|0;
 $vIn=($vIn)|0;
 $normal=($normal)|0;
 $offset=+($offset);
 $vertexIndexA=($vertexIndexA)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=.0,$6=.0,$7=0,$8=0,$9=.0,$10=.0,$11=0,$13=0,$14=0,$numOut_0=0,$16=0,$18=0,$19=0,$20=0,$21=0;
 var $numOut_1=0,$23=.0,$24=0,$26=.0,$27=.0,$28=0,$29=0,$ld$0$0=0,$30$0=0,$ld$1$1=0,$30$1=0,$st$2$0=0,$st$3$1=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0;
 var $38=0,$39=0,$40=0,$41=0,$42=0,$numOut_2=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=(($vIn)|0);
 $5=(+(__Z5b2DotRK6b2Vec2S1_($normal,$4)));
 $6=($5)-($offset);
 $7=(($vIn+12)|0);
 $8=(($7)|0);
 $9=(+(__Z5b2DotRK6b2Vec2S1_($normal,$8)));
 $10=($9)-($offset);
 $11=$6>(0.0);
 if ($11) {
  $numOut_0=0;
 } else {
  $13=$vOut;
  $14=$vIn;
  HEAP32[(($13)>>2)]=((HEAP32[(($14)>>2)])|0);HEAP32[((($13)+(4))>>2)]=((HEAP32[((($14)+(4))>>2)])|0);HEAP32[((($13)+(8))>>2)]=((HEAP32[((($14)+(8))>>2)])|0);
  $numOut_0=1;
 }

 $16=$10>(0.0);
 if ($16) {
  $numOut_1=$numOut_0;
 } else {
  $18=((($numOut_0)+(1))|0);
  $19=(($vOut+((($numOut_0)*(12))&-1))|0);
  $20=$19;
  $21=$7;
  HEAP32[(($20)>>2)]=((HEAP32[(($21)>>2)])|0);HEAP32[((($20)+(4))>>2)]=((HEAP32[((($21)+(4))>>2)])|0);HEAP32[((($20)+(8))>>2)]=((HEAP32[((($21)+(8))>>2)])|0);
  $numOut_1=$18;
 }

 $23=($6)*($10);
 $24=$23<(0.0);
 if (!($24)) {
  $numOut_2=$numOut_1;

  STACKTOP=sp;return (($numOut_2)|0);
 }
 $26=($6)-($10);
 $27=($6)/($26);
 $28=(($vOut+((($numOut_1)*(12))&-1))|0);
 __ZmiRK6b2Vec2S1_($3,$8,$4);
 __ZmlfRK6b2Vec2($2,$27,$3);
 __ZplRK6b2Vec2S1_($tmpcast,$4,$2);
 $29=$28;
 $ld$0$0=(($1)|0);
 $30$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $30$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($29)|0);
 HEAP32[(($st$2$0)>>2)]=$30$0;
 $st$3$1=(($29+4)|0);
 HEAP32[(($st$3$1)>>2)]=$30$1;
 $31=(($vertexIndexA)&255);
 $32=(($vOut+((($numOut_1)*(12))&-1)+8)|0);
 $33=$32;
 $34=$32;
 HEAP8[($34)]=$31;
 $35=(($vIn+8)|0);
 $36=$35;
 $37=(($36+1)|0);
 $38=((HEAP8[($37)])|0);
 $39=(($33+1)|0);
 HEAP8[($39)]=$38;
 $40=(($33+2)|0);
 HEAP8[($40)]=0;
 $41=(($33+3)|0);
 HEAP8[($41)]=1;
 $42=((($numOut_1)+(1))|0);
 $numOut_2=$42;

 STACKTOP=sp;return (($numOut_2)|0);
}


function __Z13b2TestOverlapPK7b2ShapeiS1_iRK11b2TransformS4_($shapeA,$indexA,$shapeB,$indexB,$xfA,$xfB){
 $shapeA=($shapeA)|0;
 $indexA=($indexA)|0;
 $shapeB=($shapeB)|0;
 $indexB=($indexB)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $input=0,$cache=0,$output=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=.0,$13=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+136)|0;
 $input=((sp)|0);
 $cache=(((sp)+(96))|0);
 $output=(((sp)+(112))|0);
 __ZN15b2DistanceInputC1Ev($input);
 $1=(($input)|0);
 __ZN15b2DistanceProxy3SetEPK7b2Shapei($1,$shapeA,$indexA);
 $2=(($input+28)|0);
 __ZN15b2DistanceProxy3SetEPK7b2Shapei($2,$shapeB,$indexB);
 $3=(($input+56)|0);
 $4=$3;
 $5=$xfA;
 HEAP32[(($4)>>2)]=((HEAP32[(($5)>>2)])|0);HEAP32[((($4)+(4))>>2)]=((HEAP32[((($5)+(4))>>2)])|0);HEAP32[((($4)+(8))>>2)]=((HEAP32[((($5)+(8))>>2)])|0);HEAP32[((($4)+(12))>>2)]=((HEAP32[((($5)+(12))>>2)])|0);
 $6=(($input+72)|0);
 $7=$6;
 $8=$xfB;
 HEAP32[(($7)>>2)]=((HEAP32[(($8)>>2)])|0);HEAP32[((($7)+(4))>>2)]=((HEAP32[((($8)+(4))>>2)])|0);HEAP32[((($7)+(8))>>2)]=((HEAP32[((($8)+(8))>>2)])|0);HEAP32[((($7)+(12))>>2)]=((HEAP32[((($8)+(12))>>2)])|0);
 $9=(($input+88)|0);
 HEAP8[($9)]=1;
 $10=(($cache+4)|0);
 HEAP16[(($10)>>1)]=0;
 __Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput($output,$cache,$input);
 $11=(($output+16)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=$12<(0.0000011920928955078125);
 STACKTOP=sp;return (($13)|0);
}


function __ZN15b2DistanceInputC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2DistanceInputC2Ev($this);
 return;
}


function __ZN15b2DistanceInputC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN15b2DistanceProxyC1Ev($1);
 $2=(($this+28)|0);
 __ZN15b2DistanceProxyC1Ev($2);
 return;
}


function __ZN15b2DistanceProxyC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2DistanceProxyC2Ev($this);
 return;
}


function __ZN15b2DistanceProxyC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+20)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+24)|0);
 HEAPF32[(($3)>>2)]=0.0;
 return;
}


function __Z5b2AbsIfET_S0_($a){
 $a=+($a);
 var $1=0,$3=.0,$5=.0,label=0;

 $1=$a>(0.0);
 if ($1) {
  $5=$a;
 } else {
  $3=((-.0))-($a);
  $5=$3;
 }

 return (+($5));
}


function __ZN15b2DistanceProxy3SetEPK7b2Shapei($this,$shape,$index){
 $this=($this)|0;
 $shape=($shape)|0;
 $index=($index)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=.0,$19=0,$21=0,$23=0,$24=0;
 var $25=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$ld$0$0=0,$35$0=0,$ld$1$1=0,$35$1=0,$st$2$0=0,$st$3$1=0,$36=0,$37=0,$38=0,$39=0,$40=0,$42=0;
 var $43=0,$44=0,$ld$4$0=0,$45$0=0,$ld$5$1=0,$45$1=0,$st$6$0=0,$st$7$1=0,$47=0,$48=0,$ld$8$0=0,$49$0=0,$ld$9$1=0,$49$1=0,$st$10$0=0,$st$11$1=0,$51=0,$52=0,$53=0,$54=.0;
 var $55=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=.0,$63=0,label=0;

 $1=((__ZNK7b2Shape7GetTypeEv($shape))|0);
 if (((($1|0))|0)==((3)|0)) {
  $21=($index|0)>-1;
  if (!($21)) {
   ___assert_fail(((1992)|0),((8312)|0),((53)|0),((12864)|0));

  }
  $23=(($shape+16)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $25=($24|0)>($index|0);
  if (!($25)) {
   ___assert_fail(((1992)|0),((8312)|0),((53)|0),((12864)|0));

  }
  $28=(($this)|0);
  $29=(($shape+12)|0);
  $30=$29;
  $31=((HEAP32[(($30)>>2)])|0);
  $32=(($31+($index<<3))|0);
  $33=$32;
  $34=$this;
  $ld$0$0=(($33)|0);
  $35$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($33+4)|0);
  $35$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($34)|0);
  HEAP32[(($st$2$0)>>2)]=$35$0;
  $st$3$1=(($34+4)|0);
  HEAP32[(($st$3$1)>>2)]=$35$1;
  $36=((($index)+(1))|0);
  $37=((HEAP32[(($23)>>2)])|0);
  $38=($36|0)<($37|0);
  $39=(($this+8)|0);
  $40=((HEAP32[(($30)>>2)])|0);
  if ($38) {
   $42=(($40+($36<<3))|0);
   $43=$42;
   $44=$39;
   $ld$4$0=(($43)|0);
   $45$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($43+4)|0);
   $45$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($44)|0);
   HEAP32[(($st$6$0)>>2)]=$45$0;
   $st$7$1=(($44+4)|0);
   HEAP32[(($st$7$1)>>2)]=$45$1;
  } else {
   $47=$40;
   $48=$39;
   $ld$8$0=(($47)|0);
   $49$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($47+4)|0);
   $49$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($48)|0);
   HEAP32[(($st$10$0)>>2)]=$49$0;
   $st$11$1=(($48+4)|0);
   HEAP32[(($st$11$1)>>2)]=$49$1;
  }
  $51=(($this+16)|0);
  HEAP32[(($51)>>2)]=$28;
  $52=(($this+20)|0);
  HEAP32[(($52)>>2)]=2;
  $53=(($shape+8)|0);
  $54=(+(HEAPF32[(($53)>>2)]));
  $55=(($this+24)|0);
  HEAPF32[(($55)>>2)]=$54;
  return;
 } else if (((($1|0))|0)==((2)|0)) {
  $11=(($shape+20)|0);
  $12=$11;
  $13=(($this+16)|0);
  HEAP32[(($13)>>2)]=$12;
  $14=(($shape+148)|0);
  $15=((HEAP32[(($14)>>2)])|0);
  $16=(($this+20)|0);
  HEAP32[(($16)>>2)]=$15;
  $17=(($shape+8)|0);
  $18=(+(HEAPF32[(($17)>>2)]));
  $19=(($this+24)|0);
  HEAPF32[(($19)>>2)]=$18;
  return;
 } else if (((($1|0))|0)==((0)|0)) {
  $3=(($shape+12)|0);
  $4=$3;
  $5=(($this+16)|0);
  HEAP32[(($5)>>2)]=$4;
  $6=(($this+20)|0);
  HEAP32[(($6)>>2)]=1;
  $7=(($shape+8)|0);
  $8=(+(HEAPF32[(($7)>>2)]));
  $9=(($this+24)|0);
  HEAPF32[(($9)>>2)]=$8;
  return;
 } else if (((($1|0))|0)==((1)|0)) {
  $57=(($shape+12)|0);
  $58=$57;
  $59=(($this+16)|0);
  HEAP32[(($59)>>2)]=$58;
  $60=(($this+20)|0);
  HEAP32[(($60)>>2)]=2;
  $61=(($shape+8)|0);
  $62=(+(HEAPF32[(($61)>>2)]));
  $63=(($this+24)|0);
  HEAPF32[(($63)>>2)]=$62;
  return;
 } else {
  ___assert_fail(((5320)|0),((8312)|0),((81)|0),((12864)|0));

 }
}


function __ZNK7b2Shape7GetTypeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN9b2Simplex6Solve2Ev($this){
 $this=($this)|0;
 var $w1=0,$tmpcast=0,$w2=0,$tmpcast6=0,$e12=0,$1=0,$2=0,$ld$0$0=0,$3$0=0,$ld$1$1=0,$3$1=0,$st$2$0=0,$st$3$1=0,$4=0,$5=0,$6=0,$ld$4$0=0,$7$0=0,$ld$5$1=0,$7$1=0;
 var $st$6$0=0,$st$7$1=0,$8=.0,$9=.0,$10=0,$12=0,$13=0,$15=.0,$16=0,$18=0,$19=0,$20=0,$21=0,$23=.0,$24=.0,$25=.0,$26=0,$27=.0,$28=0,$29=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $w1=((sp)|0);
 $tmpcast=$w1;
 $w2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast6=$w2;
 $e12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=(($this+16)|0);
 $2=$1;
 $ld$0$0=(($2)|0);
 $3$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $3$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($w1)|0);
 HEAP32[(($st$2$0)>>2)]=$3$0;
 $st$3$1=(($w1+4)|0);
 HEAP32[(($st$3$1)>>2)]=$3$1;
 $4=(($this+36)|0);
 $5=(($this+52)|0);
 $6=$5;
 $ld$4$0=(($6)|0);
 $7$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($6+4)|0);
 $7$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($w2)|0);
 HEAP32[(($st$6$0)>>2)]=$7$0;
 $st$7$1=(($w2+4)|0);
 HEAP32[(($st$7$1)>>2)]=$7$1;
 __ZmiRK6b2Vec2S1_($e12,$tmpcast6,$tmpcast);
 $8=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast,$e12)));
 $9=((-.0))-($8);
 $10=$8<(-.0);
 if (!($10)) {
  $12=(($this+24)|0);
  HEAPF32[(($12)>>2)]=1.0;
  $13=(($this+108)|0);
  HEAP32[(($13)>>2)]=1;
  STACKTOP=sp;return;
 }
 $15=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast6,$e12)));
 $16=$15>(0.0);
 if ($16) {
  $23=($15)-($8);
  $24=((1.0))/($23);
  $25=($15)*($24);
  $26=(($this+24)|0);
  HEAPF32[(($26)>>2)]=$25;
  $27=($24)*($9);
  $28=(($this+60)|0);
  HEAPF32[(($28)>>2)]=$27;
  $29=(($this+108)|0);
  HEAP32[(($29)>>2)]=2;
  STACKTOP=sp;return;
 } else {
  $18=(($this+60)|0);
  HEAPF32[(($18)>>2)]=1.0;
  $19=(($this+108)|0);
  HEAP32[(($19)>>2)]=1;
  $20=$this;
  $21=$4;
  (_memcpy((($20)|0), (($21)|0), 36)|0);
  STACKTOP=sp;return;
 }
}


function __ZN9b2Simplex6Solve3Ev($this){
 $this=($this)|0;
 var $w1=0,$tmpcast=0,$w2=0,$tmpcast32=0,$w3=0,$tmpcast33=0,$e12=0,$e13=0,$e23=0,$1=0,$2=0,$ld$0$0=0,$3$0=0,$ld$1$1=0,$3$1=0,$st$2$0=0,$st$3$1=0,$4=0,$5=0,$6=0;
 var $ld$4$0=0,$7$0=0,$ld$5$1=0,$7$1=0,$st$6$0=0,$st$7$1=0,$8=0,$9=0,$10=0,$ld$8$0=0,$11$0=0,$ld$9$1=0,$11$1=0,$st$10$0=0,$st$11$1=0,$12=.0,$13=.0,$14=.0,$15=.0,$16=.0;
 var $17=.0,$18=.0,$19=.0,$20=.0,$21=.0,$22=.0,$23=.0,$24=.0,$25=.0,$26=.0,$27=.0,$28=0,$29=0,$or_cond=0,$31=0,$32=0,$notlhs=0,$notrhs=0,$or_cond34_not=0,$34=0;
 var $or_cond35=0,$36=.0,$37=.0,$38=.0,$39=0,$40=.0,$41=0,$42=0,$notlhs42=0,$notrhs43=0,$or_cond36_not=0,$44=0,$or_cond37=0,$46=.0,$47=.0,$48=.0,$49=0,$50=.0,$51=0,$52=0;
 var $53=0,$54=0,$56=0,$57=0,$or_cond38=0,$59=0,$60=0,$61=0,$62=0,$64=0,$65=0,$or_cond39=0,$67=0,$68=0,$69=0,$70=0,$notlhs44=0,$notrhs45=0,$or_cond40_not=0,$72=0;
 var $or_cond41=0,$74=.0,$75=.0,$76=.0,$77=0,$78=.0,$79=0,$80=0,$81=0,$82=0,$84=.0,$85=.0,$86=.0,$87=.0,$88=0,$89=.0,$90=0,$91=.0,$92=0,$93=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $w1=((sp)|0);
 $tmpcast=$w1;
 $w2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast32=$w2;
 $w3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$w3;
 $e12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $e13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $e23=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=(($this+16)|0);
 $2=$1;
 $ld$0$0=(($2)|0);
 $3$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $3$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($w1)|0);
 HEAP32[(($st$2$0)>>2)]=$3$0;
 $st$3$1=(($w1+4)|0);
 HEAP32[(($st$3$1)>>2)]=$3$1;
 $4=(($this+36)|0);
 $5=(($this+52)|0);
 $6=$5;
 $ld$4$0=(($6)|0);
 $7$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($6+4)|0);
 $7$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($w2)|0);
 HEAP32[(($st$6$0)>>2)]=$7$0;
 $st$7$1=(($w2+4)|0);
 HEAP32[(($st$7$1)>>2)]=$7$1;
 $8=(($this+72)|0);
 $9=(($this+88)|0);
 $10=$9;
 $ld$8$0=(($10)|0);
 $11$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($10+4)|0);
 $11$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($w3)|0);
 HEAP32[(($st$10$0)>>2)]=$11$0;
 $st$11$1=(($w3+4)|0);
 HEAP32[(($st$11$1)>>2)]=$11$1;
 __ZmiRK6b2Vec2S1_($e12,$tmpcast32,$tmpcast);
 $12=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast,$e12)));
 $13=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast32,$e12)));
 $14=((-.0))-($12);
 __ZmiRK6b2Vec2S1_($e13,$tmpcast33,$tmpcast);
 $15=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast,$e13)));
 $16=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast33,$e13)));
 $17=((-.0))-($15);
 __ZmiRK6b2Vec2S1_($e23,$tmpcast33,$tmpcast32);
 $18=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast32,$e23)));
 $19=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast33,$e23)));
 $20=((-.0))-($18);
 $21=(+(__Z7b2CrossRK6b2Vec2S1_($e12,$e13)));
 $22=(+(__Z7b2CrossRK6b2Vec2S1_($tmpcast32,$tmpcast33)));
 $23=($21)*($22);
 $24=(+(__Z7b2CrossRK6b2Vec2S1_($tmpcast33,$tmpcast)));
 $25=($21)*($24);
 $26=(+(__Z7b2CrossRK6b2Vec2S1_($tmpcast,$tmpcast32)));
 $27=($21)*($26);
 $28=$12<(-.0);
 $29=$15<(-.0);
 $or_cond=$28|$29;
 if (!($or_cond)) {
  $31=(($this+24)|0);
  HEAPF32[(($31)>>2)]=1.0;
  $32=(($this+108)|0);
  HEAP32[(($32)>>2)]=1;
  STACKTOP=sp;return;
 }
 $notlhs=$13<=(0.0);
 $notrhs=$12>=(-.0);
 $or_cond34_not=$notrhs|$notlhs;
 $34=$27>(0.0);
 $or_cond35=$or_cond34_not|$34;
 if (!($or_cond35)) {
  $36=($13)-($12);
  $37=((1.0))/($36);
  $38=($13)*($37);
  $39=(($this+24)|0);
  HEAPF32[(($39)>>2)]=$38;
  $40=($37)*($14);
  $41=(($this+60)|0);
  HEAPF32[(($41)>>2)]=$40;
  $42=(($this+108)|0);
  HEAP32[(($42)>>2)]=2;
  STACKTOP=sp;return;
 }
 $notlhs42=$16<=(0.0);
 $notrhs43=$15>=(-.0);
 $or_cond36_not=$notrhs43|$notlhs42;
 $44=$25>(0.0);
 $or_cond37=$or_cond36_not|$44;
 if (!($or_cond37)) {
  $46=($16)-($15);
  $47=((1.0))/($46);
  $48=($16)*($47);
  $49=(($this+24)|0);
  HEAPF32[(($49)>>2)]=$48;
  $50=($47)*($17);
  $51=(($this+96)|0);
  HEAPF32[(($51)>>2)]=$50;
  $52=(($this+108)|0);
  HEAP32[(($52)>>2)]=2;
  $53=$4;
  $54=$8;
  (_memcpy((($53)|0), (($54)|0), 36)|0);
  STACKTOP=sp;return;
 }
 $56=$13>(0.0);
 $57=$18<(-.0);
 $or_cond38=$56|$57;
 if (!($or_cond38)) {
  $59=(($this+60)|0);
  HEAPF32[(($59)>>2)]=1.0;
  $60=(($this+108)|0);
  HEAP32[(($60)>>2)]=1;
  $61=$this;
  $62=$4;
  (_memcpy((($61)|0), (($62)|0), 36)|0);
  STACKTOP=sp;return;
 }
 $64=$16>(0.0);
 $65=$19>(0.0);
 $or_cond39=$64|$65;
 if (!($or_cond39)) {
  $67=(($this+96)|0);
  HEAPF32[(($67)>>2)]=1.0;
  $68=(($this+108)|0);
  HEAP32[(($68)>>2)]=1;
  $69=$this;
  $70=$8;
  (_memcpy((($69)|0), (($70)|0), 36)|0);
  STACKTOP=sp;return;
 }
 $notlhs44=$19<=(0.0);
 $notrhs45=$18>=(-.0);
 $or_cond40_not=$notrhs45|$notlhs44;
 $72=$23>(0.0);
 $or_cond41=$or_cond40_not|$72;
 if ($or_cond41) {
  $84=($23)+($25);
  $85=($84)+($27);
  $86=((1.0))/($85);
  $87=($23)*($86);
  $88=(($this+24)|0);
  HEAPF32[(($88)>>2)]=$87;
  $89=($25)*($86);
  $90=(($this+60)|0);
  HEAPF32[(($90)>>2)]=$89;
  $91=($27)*($86);
  $92=(($this+96)|0);
  HEAPF32[(($92)>>2)]=$91;
  $93=(($this+108)|0);
  HEAP32[(($93)>>2)]=3;
  STACKTOP=sp;return;
 } else {
  $74=($19)-($18);
  $75=((1.0))/($74);
  $76=($19)*($75);
  $77=(($this+60)|0);
  HEAPF32[(($77)>>2)]=$76;
  $78=($75)*($20);
  $79=(($this+96)|0);
  HEAPF32[(($79)>>2)]=$78;
  $80=(($this+108)|0);
  HEAP32[(($80)>>2)]=2;
  $81=$this;
  $82=$8;
  (_memcpy((($81)|0), (($82)|0), 36)|0);
  STACKTOP=sp;return;
 }
}


function __Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput($output,$cache,$input){
 $output=($output)|0;
 $cache=($cache)|0;
 $input=($input)|0;
 var $transformA=0,$transformB=0,$simplex=0,$saveA=0,$saveB=0,$closestPoint=0,$p=0,$d=0,$1=0,$2=0,$3=0,$tmpcast61=0,$4=0,$5=0,$tmpcast62=0,$6=0,$tmpcast63=0,$normal=0,$7=0,$8=0;
 var $p2=0,$tmpcast=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$_pr72=0,$25=0,$iter_071=0;
 var $26=0,$i_064=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$_pr=0,$40=0,$41=.0,$42=0,$44=0,$45=0,$46=0,$47=0,$48=0;
 var $49=0,$50=0,$ld$0$0=0,$51$0=0,$ld$1$1=0,$51$1=0,$st$2$0=0,$st$3$1=0,$52=0,$53=0,$54=0,$55=0,$56=0,$ld$4$0=0,$57$0=0,$ld$5$1=0,$57$1=0,$st$6$0=0,$st$7$1=0,$58=0;
 var $59=0,$ld$8$0=0,$60$0=0,$ld$9$1=0,$60$1=0,$st$10$0=0,$st$11$1=0,$61=0,$62=0,$63=0,$64=0,$65=0,$i1_065=0,$67=0,$68=0,$69=0,$71=0,$72=0,$73=0,$74=0;
 var $76=0,$77=0,$78=0,$79=0,$80=0,$iter_1=0,$81=0,$82=0,$83=0,$84=0,$85=.0,$86=0,$87=0,$88=0,$89=0,$90=0,$92=0,$93=.0,$94=0,$95=.0;
 var $96=.0,$97=.0,$98=0,$99=0,$or_cond=0,$101=.0,$102=.0,$104=0,$ld$12$0=0,$105$0=0,$ld$13$1=0,$105$1=0,$st$14$0=0,$st$15$1=0,$106=0,$ld$16$0=0,$107$0=0,$ld$17$1=0,$107$1=0,$st$18$0=0;
 var $st$19$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+224)|0;
 $transformA=((sp)|0);
 $transformB=(((sp)+(16))|0);
 $simplex=(((sp)+(32))|0);
 $saveA=(((sp)+(144))|0);
 $saveB=(((sp)+(160))|0);
 $closestPoint=(((sp)+(176))|0);
 $p=(((sp)+(184))|0);
 $d=(((sp)+(192))|0);
 $1=(((sp)+(200))|0);
 $2=(((sp)+(208))|0);
 $3=(((sp)+(216))|0);
 $tmpcast61=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast62=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast63=$6;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $p2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$p2;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=((HEAP32[((20192)>>2)])|0);
 $11=((($10)+(1))|0);
 HEAP32[((20192)>>2)]=$11;
 $12=(($input)|0);
 $13=(($input+28)|0);
 $14=(($input+56)|0);
 $15=$transformA;
 $16=$14;
 HEAP32[(($15)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($15)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($15)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);HEAP32[((($15)+(12))>>2)]=((HEAP32[((($16)+(12))>>2)])|0);
 $17=(($input+72)|0);
 $18=$transformB;
 $19=$17;
 HEAP32[(($18)>>2)]=((HEAP32[(($19)>>2)])|0);HEAP32[((($18)+(4))>>2)]=((HEAP32[((($19)+(4))>>2)])|0);HEAP32[((($18)+(8))>>2)]=((HEAP32[((($19)+(8))>>2)])|0);HEAP32[((($18)+(12))>>2)]=((HEAP32[((($19)+(12))>>2)])|0);
 __ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_($simplex,$cache,$12,$transformA,$13,$transformB);
 $20=(($simplex)|0);
 __ZNK9b2Simplex15GetClosestPointEv($closestPoint,$simplex);
 $21=(($simplex+108)|0);
 $22=(($transformA+8)|0);
 $23=(($transformB+8)|0);
 $_pr72=((HEAP32[(($21)>>2)])|0);
 $iter_071=0;$25=$_pr72;
 L1: while(1) {


  $26=($25|0)>0;
  if ($26) {
   $i_064=0;
   while(1) {

    $27=(($20+((($i_064)*(36))&-1)+28)|0);
    $28=((HEAP32[(($27)>>2)])|0);
    $29=(($saveA+($i_064<<2))|0);
    HEAP32[(($29)>>2)]=$28;
    $30=(($20+((($i_064)*(36))&-1)+32)|0);
    $31=((HEAP32[(($30)>>2)])|0);
    $32=(($saveB+($i_064<<2))|0);
    HEAP32[(($32)>>2)]=$31;
    $33=((($i_064)+(1))|0);
    $34=($33|0)<($25|0);
    if ($34) {
     $i_064=$33;
    } else {
     break;
    }
   }
  }
  $35=((HEAP32[(($21)>>2)])|0);
  if (((($35|0))|0)==((2)|0)) {
   __ZN9b2Simplex6Solve2Ev($simplex);
   label = 8;
  } else if (((($35|0))|0)==((3)|0)) {
   __ZN9b2Simplex6Solve3Ev($simplex);
   label = 8;
  } else if (!(((($35|0))|0)==((1)|0))) {
   label = 7;
   break;
  }
  if ((label|0) == 8) {
   label = 0;
   $_pr=((HEAP32[(($21)>>2)])|0);
   $40=($_pr|0)==3;
   if ($40) {
    $iter_1=$iter_071;
    break;
   }
  }
  __ZNK9b2Simplex15GetClosestPointEv($p,$simplex);
  __ZNK9b2Simplex18GetSearchDirectionEv($d,$simplex);
  $41=(+(__ZNK6b2Vec213LengthSquaredEv($d)));
  $42=$41<(1.4210854715202004e-14);
  if ($42) {
   $iter_1=$iter_071;
   break;
  }
  $44=((HEAP32[(($21)>>2)])|0);
  $45=(($20+((($44)*(36))&-1))|0);
  __ZNK6b2Vec2ngEv($2,$d);
  __Z6b2MulTRK5b2RotRK6b2Vec2($1,$22,$2);
  $46=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($12,$1))|0);
  $47=(($20+((($44)*(36))&-1)+28)|0);
  HEAP32[(($47)>>2)]=$46;
  $48=(($45)|0);
  $49=((__ZNK15b2DistanceProxy9GetVertexEi($12,$46))|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast61,$transformA,$49);
  $50=$45;
  $ld$0$0=(($3)|0);
  $51$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($3+4)|0);
  $51$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($50)|0);
  HEAP32[(($st$2$0)>>2)]=$51$0;
  $st$3$1=(($50+4)|0);
  HEAP32[(($st$3$1)>>2)]=$51$1;
  __Z6b2MulTRK5b2RotRK6b2Vec2($4,$23,$d);
  $52=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($13,$4))|0);
  $53=(($20+((($44)*(36))&-1)+32)|0);
  HEAP32[(($53)>>2)]=$52;
  $54=(($20+((($44)*(36))&-1)+8)|0);
  $55=((__ZNK15b2DistanceProxy9GetVertexEi($13,$52))|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast62,$transformB,$55);
  $56=$54;
  $ld$4$0=(($5)|0);
  $57$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($5+4)|0);
  $57$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($56)|0);
  HEAP32[(($st$6$0)>>2)]=$57$0;
  $st$7$1=(($56+4)|0);
  HEAP32[(($st$7$1)>>2)]=$57$1;
  $58=(($20+((($44)*(36))&-1)+16)|0);
  __ZmiRK6b2Vec2S1_($tmpcast63,$54,$48);
  $59=$58;
  $ld$8$0=(($6)|0);
  $60$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($6+4)|0);
  $60$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($59)|0);
  HEAP32[(($st$10$0)>>2)]=$60$0;
  $st$11$1=(($59+4)|0);
  HEAP32[(($st$11$1)>>2)]=$60$1;
  $61=((($iter_071)+(1))|0);
  $62=((HEAP32[((20184)>>2)])|0);
  $63=((($62)+(1))|0);
  HEAP32[((20184)>>2)]=$63;
  $64=($25|0)>0;
  if ($64) {
   $65=((HEAP32[(($47)>>2)])|0);
   $i1_065=0;
   while(1) {

    $67=(($saveA+($i1_065<<2))|0);
    $68=((HEAP32[(($67)>>2)])|0);
    $69=($65|0)==($68|0);
    if ($69) {
     $71=((HEAP32[(($53)>>2)])|0);
     $72=(($saveB+($i1_065<<2))|0);
     $73=((HEAP32[(($72)>>2)])|0);
     $74=($71|0)==($73|0);
     if ($74) {
      $iter_1=$61;
      break L1;
     }
    }
    $76=((($i1_065)+(1))|0);
    $77=($76|0)<($25|0);
    if ($77) {
     $i1_065=$76;
    } else {
     break;
    }
   }
  }
  $78=((HEAP32[(($21)>>2)])|0);
  $79=((($78)+(1))|0);
  HEAP32[(($21)>>2)]=$79;
  $80=($61|0)<20;
  if ($80) {
   $iter_071=$61;$25=$79;
  } else {
   $iter_1=$61;
   break;
  }
 }
 if ((label|0) == 7) {
  ___assert_fail(((5320)|0),((8312)|0),((498)|0),((13288)|0));

 }

 $81=((HEAP32[((20176)>>2)])|0);
 $82=((__Z5b2MaxIiET_S0_S0_($81,$iter_1))|0);
 HEAP32[((20176)>>2)]=$82;
 $83=(($output)|0);
 $84=(($output+8)|0);
 __ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_($simplex,$83,$84);
 $85=(+(__Z10b2DistanceRK6b2Vec2S1_($83,$84)));
 $86=(($output+16)|0);
 HEAPF32[(($86)>>2)]=$85;
 $87=(($output+20)|0);
 HEAP32[(($87)>>2)]=$iter_1;
 __ZNK9b2Simplex10WriteCacheEP14b2SimplexCache($simplex,$cache);
 $88=(($input+88)|0);
 $89=((HEAP8[($88)])|0);
 $90=(($89<<24)>>24)==0;
 if ($90) {
  STACKTOP=sp;return;
 }
 $92=(($input+24)|0);
 $93=(+(HEAPF32[(($92)>>2)]));
 $94=(($input+52)|0);
 $95=(+(HEAPF32[(($94)>>2)]));
 $96=(+(HEAPF32[(($86)>>2)]));
 $97=($93)+($95);
 $98=$96>$97;
 $99=$96>(1.1920928955078125e-7);
 $or_cond=$98&$99;
 if ($or_cond) {
  $101=($96)-($97);
  HEAPF32[(($86)>>2)]=$101;
  __ZmiRK6b2Vec2S1_($normal,$84,$83);
  $102=(+(__ZN6b2Vec29NormalizeEv($normal)));
  __ZmlfRK6b2Vec2($7,$93,$normal);
  __ZN6b2Vec2pLERKS_($83,$7);
  __ZmlfRK6b2Vec2($8,$95,$normal);
  __ZN6b2Vec2mIERKS_($84,$8);
  STACKTOP=sp;return;
 } else {
  __ZplRK6b2Vec2S1_($9,$83,$84);
  __ZmlfRK6b2Vec2($tmpcast,0.5,$9);
  $104=$output;
  $ld$12$0=(($p2)|0);
  $105$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($p2+4)|0);
  $105$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($104)|0);
  HEAP32[(($st$14$0)>>2)]=$105$0;
  $st$15$1=(($104+4)|0);
  HEAP32[(($st$15$1)>>2)]=$105$1;
  $106=$84;
  $ld$16$0=(($p2)|0);
  $107$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($p2+4)|0);
  $107$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($106)|0);
  HEAP32[(($st$18$0)>>2)]=$107$0;
  $st$19$1=(($106+4)|0);
  HEAP32[(($st$19$1)>>2)]=$107$1;
  HEAPF32[(($86)>>2)]=0.0;
  STACKTOP=sp;return;
 }
}


function __ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_($this,$cache,$proxyA,$transformA,$proxyB,$transformB){
 $this=($this)|0;
 $cache=($cache)|0;
 $proxyA=($proxyA)|0;
 $transformA=($transformA)|0;
 $proxyB=($proxyB)|0;
 $transformB=($transformB)|0;
 var $wALocal=0,$tmpcast42=0,$wBLocal=0,$tmpcast43=0,$1=0,$tmpcast44=0,$2=0,$tmpcast45=0,$3=0,$tmpcast46=0,$wALocal2=0,$tmpcast=0,$wBLocal3=0,$tmpcast38=0,$4=0,$tmpcast39=0,$5=0,$tmpcast40=0,$6=0,$tmpcast41=0;
 var $7=0,$8=0,$9=0,$12=0,$13=0,$14=0,$15=0,$i_048=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0;
 var $ld$0$0=0,$28$0=0,$ld$1$1=0,$28$1=0,$st$2$0=0,$st$3$1=0,$29=0,$30=0,$31=0,$ld$4$0=0,$32$0=0,$ld$5$1=0,$32$1=0,$st$6$0=0,$st$7$1=0,$33=0,$34=0,$ld$8$0=0,$35$0=0,$ld$9$1=0;
 var $35$1=0,$st$10$0=0,$st$11$1=0,$36=0,$37=0,$ld$12$0=0,$38$0=0,$ld$13$1=0,$38$1=0,$st$14$0=0,$st$15$1=0,$39=0,$40=0,$ld$16$0=0,$41$0=0,$ld$17$1=0,$41$1=0,$st$18$0=0,$st$19$1=0,$42=0;
 var $43=0,$_pr=0,$44=0,$_lcssa=0,$45=0,$47=0,$48=.0,$49=.0,$50=.0,$51=0,$53=.0,$54=0,$55=0,$or_cond=0,$_pr47=0,$57=0,$59=0,$60=0,$61=0,$62=0;
 var $ld$20$0=0,$63$0=0,$ld$21$1=0,$63$1=0,$st$22$0=0,$st$23$1=0,$64=0,$65=0,$ld$24$0=0,$66$0=0,$ld$25$1=0,$66$1=0,$st$26$0=0,$st$27$1=0,$67=0,$68=0,$ld$28$0=0,$69$0=0,$ld$29$1=0,$69$1=0;
 var $st$30$0=0,$st$31$1=0,$70=0,$71=0,$ld$32$0=0,$72$0=0,$ld$33$1=0,$72$1=0,$st$34$0=0,$st$35$1=0,$73=0,$74=0,$ld$36$0=0,$75$0=0,$ld$37$1=0,$75$1=0,$st$38$0=0,$st$39$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $wALocal=((sp)|0);
 $tmpcast42=$wALocal;
 $wBLocal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast43=$wBLocal;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast44=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast45=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast46=$3;
 $wALocal2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$wALocal2;
 $wBLocal3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast38=$wBLocal3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast39=$4;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast40=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast41=$6;
 $7=(($cache+4)|0);
 $8=((HEAP16[(($7)>>1)])|0);
 $9=((($8&65535))>>>0)<((4)>>>0);
 if (!($9)) {
  ___assert_fail(((2704)|0),((8312)|0),((102)|0),((12152)|0));

 }
 $12=($8&65535);
 $13=(($this+108)|0);
 HEAP32[(($13)>>2)]=$12;
 $14=(($this)|0);
 $15=(($8<<16)>>16)==0;
 if ($15) {
  $_lcssa=$12;
 } else {
  $i_048=0;
  while(1) {

   $16=(($14+((($i_048)*(36))&-1))|0);
   $17=(($cache+6+$i_048)|0);
   $18=((HEAP8[($17)])|0);
   $19=($18&255);
   $20=(($14+((($i_048)*(36))&-1)+28)|0);
   HEAP32[(($20)>>2)]=$19;
   $21=(($cache+9+$i_048)|0);
   $22=((HEAP8[($21)])|0);
   $23=($22&255);
   $24=(($14+((($i_048)*(36))&-1)+32)|0);
   HEAP32[(($24)>>2)]=$23;
   $25=((HEAP32[(($20)>>2)])|0);
   $26=((__ZNK15b2DistanceProxy9GetVertexEi($proxyA,$25))|0);
   $27=$26;
   $ld$0$0=(($27)|0);
   $28$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($27+4)|0);
   $28$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($wALocal)|0);
   HEAP32[(($st$2$0)>>2)]=$28$0;
   $st$3$1=(($wALocal+4)|0);
   HEAP32[(($st$3$1)>>2)]=$28$1;
   $29=((HEAP32[(($24)>>2)])|0);
   $30=((__ZNK15b2DistanceProxy9GetVertexEi($proxyB,$29))|0);
   $31=$30;
   $ld$4$0=(($31)|0);
   $32$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($31+4)|0);
   $32$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($wBLocal)|0);
   HEAP32[(($st$6$0)>>2)]=$32$0;
   $st$7$1=(($wBLocal+4)|0);
   HEAP32[(($st$7$1)>>2)]=$32$1;
   $33=(($16)|0);
   __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast44,$transformA,$tmpcast42);
   $34=$16;
   $ld$8$0=(($1)|0);
   $35$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($1+4)|0);
   $35$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($34)|0);
   HEAP32[(($st$10$0)>>2)]=$35$0;
   $st$11$1=(($34+4)|0);
   HEAP32[(($st$11$1)>>2)]=$35$1;
   $36=(($14+((($i_048)*(36))&-1)+8)|0);
   __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast45,$transformB,$tmpcast43);
   $37=$36;
   $ld$12$0=(($2)|0);
   $38$0=((HEAP32[(($ld$12$0)>>2)])|0);
   $ld$13$1=(($2+4)|0);
   $38$1=((HEAP32[(($ld$13$1)>>2)])|0);
   $st$14$0=(($37)|0);
   HEAP32[(($st$14$0)>>2)]=$38$0;
   $st$15$1=(($37+4)|0);
   HEAP32[(($st$15$1)>>2)]=$38$1;
   $39=(($14+((($i_048)*(36))&-1)+16)|0);
   __ZmiRK6b2Vec2S1_($tmpcast46,$36,$33);
   $40=$39;
   $ld$16$0=(($3)|0);
   $41$0=((HEAP32[(($ld$16$0)>>2)])|0);
   $ld$17$1=(($3+4)|0);
   $41$1=((HEAP32[(($ld$17$1)>>2)])|0);
   $st$18$0=(($40)|0);
   HEAP32[(($st$18$0)>>2)]=$41$0;
   $st$19$1=(($40+4)|0);
   HEAP32[(($st$19$1)>>2)]=$41$1;
   $42=(($14+((($i_048)*(36))&-1)+24)|0);
   HEAPF32[(($42)>>2)]=0.0;
   $43=((($i_048)+(1))|0);
   $_pr=((HEAP32[(($13)>>2)])|0);
   $44=($43|0)<($_pr|0);
   if ($44) {
    $i_048=$43;
   } else {
    $_lcssa=$_pr;
    break;
   }
  }
 }

 $45=($_lcssa|0)>1;
 do {
  if ($45) {
   $47=(($cache)|0);
   $48=(+(HEAPF32[(($47)>>2)]));
   $49=(+(__ZNK9b2Simplex9GetMetricEv($this)));
   $50=($48)*((0.5));
   $51=$49<$50;
   if (!($51)) {
    $53=($48)*((2.0));
    $54=$53<$49;
    $55=$49<(1.1920928955078125e-7);
    $or_cond=$54|$55;
    if (!($or_cond)) {
     label = 9;
     break;
    }
   }
   HEAP32[(($13)>>2)]=0;
  } else {
   label = 9;
  }
 } while(0);
 do {
  if ((label|0) == 9) {
   $_pr47=((HEAP32[(($13)>>2)])|0);
   $57=($_pr47|0)==0;
   if ($57) {
    break;
   }
   STACKTOP=sp;return;
  }
 } while(0);
 $59=(($this+28)|0);
 HEAP32[(($59)>>2)]=0;
 $60=(($this+32)|0);
 HEAP32[(($60)>>2)]=0;
 $61=((__ZNK15b2DistanceProxy9GetVertexEi($proxyA,0))|0);
 $62=$61;
 $ld$20$0=(($62)|0);
 $63$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($62+4)|0);
 $63$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($wALocal2)|0);
 HEAP32[(($st$22$0)>>2)]=$63$0;
 $st$23$1=(($wALocal2+4)|0);
 HEAP32[(($st$23$1)>>2)]=$63$1;
 $64=((__ZNK15b2DistanceProxy9GetVertexEi($proxyB,0))|0);
 $65=$64;
 $ld$24$0=(($65)|0);
 $66$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($65+4)|0);
 $66$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($wBLocal3)|0);
 HEAP32[(($st$26$0)>>2)]=$66$0;
 $st$27$1=(($wBLocal3+4)|0);
 HEAP32[(($st$27$1)>>2)]=$66$1;
 $67=(($this)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast39,$transformA,$tmpcast);
 $68=$this;
 $ld$28$0=(($4)|0);
 $69$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($4+4)|0);
 $69$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($68)|0);
 HEAP32[(($st$30$0)>>2)]=$69$0;
 $st$31$1=(($68+4)|0);
 HEAP32[(($st$31$1)>>2)]=$69$1;
 $70=(($this+8)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast40,$transformB,$tmpcast38);
 $71=$70;
 $ld$32$0=(($5)|0);
 $72$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($5+4)|0);
 $72$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($71)|0);
 HEAP32[(($st$34$0)>>2)]=$72$0;
 $st$35$1=(($71+4)|0);
 HEAP32[(($st$35$1)>>2)]=$72$1;
 $73=(($this+16)|0);
 __ZmiRK6b2Vec2S1_($tmpcast41,$70,$67);
 $74=$73;
 $ld$36$0=(($6)|0);
 $75$0=((HEAP32[(($ld$36$0)>>2)])|0);
 $ld$37$1=(($6+4)|0);
 $75$1=((HEAP32[(($ld$37$1)>>2)])|0);
 $st$38$0=(($74)|0);
 HEAP32[(($st$38$0)>>2)]=$75$0;
 $st$39$1=(($74+4)|0);
 HEAP32[(($st$39$1)>>2)]=$75$1;
 HEAP32[(($13)>>2)]=1;
 STACKTOP=sp;return;
}


function __ZNK9b2Simplex15GetClosestPointEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$12=0,$13=.0,$14=0,$15=0,$16=.0,$17=0,$19=0;
 var $$etemp$4=0,$ld$5$0=0,$20$0=0,$ld$6$1=0,$20$1=0,$st$7$0=0,$st$8$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(($this+108)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 if (((($4|0))|0)==((1)|0)) {
  $7=(($this+16)|0);
  $8=$7;
  $9=$agg_result;
  $ld$0$0=(($8)|0);
  $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($8+4)|0);
  $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($9)|0);
  HEAP32[(($st$2$0)>>2)]=$10$0;
  $st$3$1=(($9+4)|0);
  HEAP32[(($st$3$1)>>2)]=$10$1;
  STACKTOP=sp;return;
 } else if (((($4|0))|0)==((0)|0)) {
  ___assert_fail(((5320)|0),((8312)|0),((194)|0),((11888)|0));

 } else if (((($4|0))|0)==((2)|0)) {
  $12=(($this+24)|0);
  $13=(+(HEAPF32[(($12)>>2)]));
  $14=(($this+16)|0);
  __ZmlfRK6b2Vec2($1,$13,$14);
  $15=(($this+60)|0);
  $16=(+(HEAPF32[(($15)>>2)]));
  $17=(($this+52)|0);
  __ZmlfRK6b2Vec2($2,$16,$17);
  __ZplRK6b2Vec2S1_($agg_result,$1,$2);
  STACKTOP=sp;return;
 } else if (((($4|0))|0)==((3)|0)) {
  $19=$agg_result;
  $$etemp$4=20200;
  $ld$5$0=(($$etemp$4)|0);
  $20$0=((HEAP32[(($ld$5$0)>>2)])|0);
  $ld$6$1=(($$etemp$4+4)|0);
  $20$1=((HEAP32[(($ld$6$1)>>2)])|0);
  $st$7$0=(($19)|0);
  HEAP32[(($st$7$0)>>2)]=$20$0;
  $st$8$1=(($19+4)|0);
  HEAP32[(($st$8$1)>>2)]=$20$1;
  STACKTOP=sp;return;
 } else {
  ___assert_fail(((5320)|0),((8312)|0),((207)|0),((11888)|0));

 }
}


function __ZNK6b2Vec213LengthSquaredEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,$7=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($2);
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($5);
 $7=($3)+($6);
 return (+($7));
}


function __ZNK9b2Simplex18GetSearchDirectionEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $e12=0,$1=0,$2=0,$3=0,$5=0,$7=0,$8=0,$9=.0,$10=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $e12=((sp)|0);
 $1=(((sp)+(8))|0);
 $2=(($this+108)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 if (((($3|0))|0)==((2)|0)) {
  $7=(($this+52)|0);
  $8=(($this+16)|0);
  __ZmiRK6b2Vec2S1_($e12,$7,$8);
  __ZNK6b2Vec2ngEv($1,$8);
  $9=(+(__Z7b2CrossRK6b2Vec2S1_($e12,$1)));
  $10=$9>(0.0);
  if ($10) {
   __Z7b2CrossfRK6b2Vec2($agg_result,1.0,$e12);
   STACKTOP=sp;return;
  } else {
   __Z7b2CrossRK6b2Vec2f($agg_result,$e12,1.0);
   STACKTOP=sp;return;
  }
 } else if (((($3|0))|0)==((1)|0)) {
  $5=(($this+16)|0);
  __ZNK6b2Vec2ngEv($agg_result,$5);
  STACKTOP=sp;return;
 } else {
  ___assert_fail(((5320)|0),((8312)|0),((184)|0),((11840)|0));

 }
}


function __ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($this,$d){
 $this=($this)|0;
 $d=($d)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$bestIndex_09=0,$i_08=0,$bestValue_07=.0,$9=0,$10=.0,$11=0,$bestValue_1=.0,$bestIndex_1=0,$12=0,$13=0,$bestIndex_0_lcssa=0,label=0;

 $1=(($this+20)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>1;
 if (!($3)) {
  $bestIndex_0_lcssa=0;

  return (($bestIndex_0_lcssa)|0);
 }
 $4=(($this+16)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(+(__Z5b2DotRK6b2Vec2S1_($5,$d)));
 $7=((HEAP32[(($1)>>2)])|0);
 $bestValue_07=$6;$i_08=1;$bestIndex_09=0;
 while(1) {



  $9=(($5+($i_08<<3))|0);
  $10=(+(__Z5b2DotRK6b2Vec2S1_($9,$d)));
  $11=$10>$bestValue_07;
  $bestValue_1=($11?$10:$bestValue_07);
  $bestIndex_1=($11?$i_08:$bestIndex_09);
  $12=((($i_08)+(1))|0);
  $13=($12|0)<($7|0);
  if ($13) {
   $bestValue_07=$bestValue_1;$i_08=$12;$bestIndex_09=$bestIndex_1;
  } else {
   $bestIndex_0_lcssa=$bestIndex_1;
   break;
  }
 }

 return (($bestIndex_0_lcssa)|0);
}


function __ZNK15b2DistanceProxy9GetVertexEi($this,$index){
 $this=($this)|0;
 $index=($index)|0;
 var $1=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,label=0;

 $1=($index|0)>-1;
 do {
  if ($1) {
   $3=(($this+20)|0);
   $4=((HEAP32[(($3)>>2)])|0);
   $5=($4|0)>($index|0);
   if (!($5)) {
    break;
   }
   $8=(($this+16)|0);
   $9=((HEAP32[(($8)>>2)])|0);
   $10=(($9+($index<<3))|0);
   return (($10)|0);
  }
 } while(0);
 ___assert_fail(((4848)|0),((3640)|0),((103)|0),((11944)|0));
 return ((0)|0);
}


function __ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_($this,$pA,$pB){
 $this=($this)|0;
 $pA=($pA)|0;
 $pB=($pB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$16=0,$17=0,$ld$0$0=0,$18$0=0,$ld$1$1=0,$18$1=0,$st$2$0=0;
 var $st$3$1=0,$19=0,$20=0,$21=0,$ld$4$0=0,$22$0=0,$ld$5$1=0,$22$1=0,$st$6$0=0,$st$7$1=0,$tmpcast9=0,$tmpcast8=0,$24=0,$25=.0,$26=0,$27=0,$28=.0,$29=0,$30=0,$ld$8$0=0;
 var $31$0=0,$ld$9$1=0,$31$1=0,$st$10$0=0,$st$11$1=0,$32=.0,$33=0,$34=.0,$35=0,$36=0,$ld$12$0=0,$37$0=0,$ld$13$1=0,$37$1=0,$st$14$0=0,$st$15$1=0,$tmpcast=0,$39=0,$40=.0,$41=0;
 var $42=0,$43=.0,$44=0,$45=0,$46=.0,$47=0,$48=0,$ld$16$0=0,$49$0=0,$ld$17$1=0,$49$1=0,$st$18$0=0,$st$19$1=0,$50=0,$st$20$0=0,$st$21$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+88)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(((sp)+(16))|0);
 $4=(((sp)+(24))|0);
 $5=(((sp)+(32))|0);
 $6=(((sp)+(40))|0);
 $7=(((sp)+(48))|0);
 $8=(((sp)+(56))|0);
 $9=(((sp)+(64))|0);
 $10=(((sp)+(72))|0);
 $11=(((sp)+(80))|0);
 $12=(($this+108)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 if (((($13|0))|0)==((1)|0)) {
  $16=$this;
  $17=$pA;
  $ld$0$0=(($16)|0);
  $18$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($16+4)|0);
  $18$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($17)|0);
  HEAP32[(($st$2$0)>>2)]=$18$0;
  $st$3$1=(($17+4)|0);
  HEAP32[(($st$3$1)>>2)]=$18$1;
  $19=(($this+8)|0);
  $20=$19;
  $21=$pB;
  $ld$4$0=(($20)|0);
  $22$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($20+4)|0);
  $22$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($21)|0);
  HEAP32[(($st$6$0)>>2)]=$22$0;
  $st$7$1=(($21+4)|0);
  HEAP32[(($st$7$1)>>2)]=$22$1;
  STACKTOP=sp;return;
 } else if (((($13|0))|0)==((0)|0)) {
  ___assert_fail(((5320)|0),((8312)|0),((217)|0),((11864)|0));

 } else if (((($13|0))|0)==((2)|0)) {
  $tmpcast9=$4;
  $tmpcast8=$1;
  $24=(($this+24)|0);
  $25=(+(HEAPF32[(($24)>>2)]));
  $26=(($this)|0);
  __ZmlfRK6b2Vec2($2,$25,$26);
  $27=(($this+60)|0);
  $28=(+(HEAPF32[(($27)>>2)]));
  $29=(($this+36)|0);
  __ZmlfRK6b2Vec2($3,$28,$29);
  __ZplRK6b2Vec2S1_($tmpcast8,$2,$3);
  $30=$pA;
  $ld$8$0=(($1)|0);
  $31$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($1+4)|0);
  $31$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($30)|0);
  HEAP32[(($st$10$0)>>2)]=$31$0;
  $st$11$1=(($30+4)|0);
  HEAP32[(($st$11$1)>>2)]=$31$1;
  $32=(+(HEAPF32[(($24)>>2)]));
  $33=(($this+8)|0);
  __ZmlfRK6b2Vec2($5,$32,$33);
  $34=(+(HEAPF32[(($27)>>2)]));
  $35=(($this+44)|0);
  __ZmlfRK6b2Vec2($6,$34,$35);
  __ZplRK6b2Vec2S1_($tmpcast9,$5,$6);
  $36=$pB;
  $ld$12$0=(($4)|0);
  $37$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($4+4)|0);
  $37$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($36)|0);
  HEAP32[(($st$14$0)>>2)]=$37$0;
  $st$15$1=(($36+4)|0);
  HEAP32[(($st$15$1)>>2)]=$37$1;
  STACKTOP=sp;return;
 } else if (((($13|0))|0)==((3)|0)) {
  $tmpcast=$7;
  $39=(($this+24)|0);
  $40=(+(HEAPF32[(($39)>>2)]));
  $41=(($this)|0);
  __ZmlfRK6b2Vec2($9,$40,$41);
  $42=(($this+60)|0);
  $43=(+(HEAPF32[(($42)>>2)]));
  $44=(($this+36)|0);
  __ZmlfRK6b2Vec2($10,$43,$44);
  __ZplRK6b2Vec2S1_($8,$9,$10);
  $45=(($this+96)|0);
  $46=(+(HEAPF32[(($45)>>2)]));
  $47=(($this+72)|0);
  __ZmlfRK6b2Vec2($11,$46,$47);
  __ZplRK6b2Vec2S1_($tmpcast,$8,$11);
  $48=$pA;
  $ld$16$0=(($7)|0);
  $49$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($7+4)|0);
  $49$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($48)|0);
  HEAP32[(($st$18$0)>>2)]=$49$0;
  $st$19$1=(($48+4)|0);
  HEAP32[(($st$19$1)>>2)]=$49$1;
  $50=$pB;
  $st$20$0=(($50)|0);
  HEAP32[(($st$20$0)>>2)]=$49$0;
  $st$21$1=(($50+4)|0);
  HEAP32[(($st$21$1)>>2)]=$49$1;
  STACKTOP=sp;return;
 } else {
  ___assert_fail(((5320)|0),((8312)|0),((236)|0),((11864)|0));

 }
}


function __Z10b2DistanceRK6b2Vec2S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $c=0,$1=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $c=((sp)|0);
 __ZmiRK6b2Vec2S1_($c,$a,$b);
 $1=(+(__ZNK6b2Vec26LengthEv($c)));
 STACKTOP=sp;return (+($1));
}


function __ZNK9b2Simplex10WriteCacheEP14b2SimplexCache($this,$cache){
 $this=($this)|0;
 $cache=($cache)|0;
 var $1=.0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$i_011=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0;
 var $20=0,label=0;

 $1=(+(__ZNK9b2Simplex9GetMetricEv($this)));
 $2=(($cache)|0);
 HEAPF32[(($2)>>2)]=$1;
 $3=(($this+108)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4)&65535);
 $6=(($cache+4)|0);
 HEAP16[(($6)>>1)]=$5;
 $7=(($this)|0);
 $8=((HEAP32[(($3)>>2)])|0);
 $9=($8|0)>0;
 if ($9) {
  $i_011=0;
 } else {
  return;
 }
 while(1) {

  $10=(($7+((($i_011)*(36))&-1)+28)|0);
  $11=((HEAP32[(($10)>>2)])|0);
  $12=(($11)&255);
  $13=(($cache+6+$i_011)|0);
  HEAP8[($13)]=$12;
  $14=(($7+((($i_011)*(36))&-1)+32)|0);
  $15=((HEAP32[(($14)>>2)])|0);
  $16=(($15)&255);
  $17=(($cache+9+$i_011)|0);
  HEAP8[($17)]=$16;
  $18=((($i_011)+(1))|0);
  $19=((HEAP32[(($3)>>2)])|0);
  $20=($18|0)<($19|0);
  if ($20) {
   $i_011=$18;
  } else {
   break;
  }
 }
 return;
}


function __ZN6b2Vec2pLERKS_($this,$v){
 $this=($this)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($v)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)+($4);
 HEAPF32[(($3)>>2)]=$5;
 $6=(($v+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($this+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)+($9);
 HEAPF32[(($8)>>2)]=$10;
 return;
}


function __ZN6b2Vec2mIERKS_($this,$v){
 $this=($this)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($v)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($4)-($2);
 HEAPF32[(($3)>>2)]=$5;
 $6=(($v+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($this+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($9)-($7);
 HEAPF32[(($8)>>2)]=$10;
 return;
}


function __ZNK9b2Simplex9GetMetricEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$7=0,$8=0,$9=.0,$11=0,$12=0,$13=0,$14=.0,$_0=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(($this+108)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 if (((($4|0))|0)==((2)|0)) {
  $7=(($this+16)|0);
  $8=(($this+52)|0);
  $9=(+(__Z10b2DistanceRK6b2Vec2S1_($7,$8)));
  $_0=$9;

  STACKTOP=sp;return (+($_0));
 } else if (((($4|0))|0)==((0)|0)) {
  ___assert_fail(((5320)|0),((8312)|0),((246)|0),((11824)|0));
  return 0.0;
 } else if (((($4|0))|0)==((3)|0)) {
  $11=(($this+52)|0);
  $12=(($this+16)|0);
  __ZmiRK6b2Vec2S1_($1,$11,$12);
  $13=(($this+88)|0);
  __ZmiRK6b2Vec2S1_($2,$13,$12);
  $14=(+(__Z7b2CrossRK6b2Vec2S1_($1,$2)));
  $_0=$14;

  STACKTOP=sp;return (+($_0));
 } else if (((($4|0))|0)==((1)|0)) {
  $_0=0.0;

  STACKTOP=sp;return (+($_0));
 } else {
  ___assert_fail(((5320)|0),((8312)|0),((259)|0),((11824)|0));
  return 0.0;
 }
  return .0;
}


function __Z7b2CrossfRK6b2Vec2($agg_result,$s,$a){
 $agg_result=($agg_result)|0;
 $s=+($s);
 $a=($a)|0;
 var $1=.0,$2=0,$3=.0,$4=.0,$5=0,$6=.0,$7=.0,label=0;

 $1=((-.0))-($s);
 $2=(($a+4)|0);
 $3=(+(HEAPF32[(($2)>>2)]));
 $4=($3)*($1);
 $5=(($a)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=($6)*($s);
 __ZN6b2Vec2C1Eff($agg_result,$4,$7);
 return;
}


function __ZN13b2DynamicTreeC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$i_05=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$_lcssa=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=-1;
 $2=(($this+12)|0);
 HEAP32[(($2)>>2)]=16;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=0;
 $4=((HEAP32[(($2)>>2)])|0);
 $5=((($4)*(36))&-1);
 $6=((__Z7b2Alloci($5))|0);
 $7=$6;
 $8=(($this+4)|0);
 HEAP32[(($8)>>2)]=$7;
 $9=((HEAP32[(($2)>>2)])|0);
 $10=((($9)*(36))&-1);
 _memset((((($6)|0))|0), ((((0)|0))|0), (((($10)|0))|0))|0;
 $11=((HEAP32[(($2)>>2)])|0);
 $12=((($11)-(1))|0);
 $13=($12|0)>0;
 if ($13) {
  $14=((HEAP32[(($8)>>2)])|0);
  $i_05=0;
  while(1) {

   $16=((($i_05)+(1))|0);
   $17=(($14+((($i_05)*(36))&-1)+20)|0);
   HEAP32[(($17)>>2)]=$16;
   $18=(($14+((($i_05)*(36))&-1)+32)|0);
   HEAP32[(($18)>>2)]=-1;
   $19=((HEAP32[(($2)>>2)])|0);
   $20=((($19)-(1))|0);
   $21=($16|0)<($20|0);
   if ($21) {
    $i_05=$16;
   } else {
    $_lcssa=$20;
    break;
   }
  }
 } else {
  $_lcssa=$12;
 }

 $22=((HEAP32[(($8)>>2)])|0);
 $23=(($22+((($_lcssa)*(36))&-1)+20)|0);
 HEAP32[(($23)>>2)]=-1;
 $24=((HEAP32[(($2)>>2)])|0);
 $25=((($24)-(1))|0);
 $26=((HEAP32[(($8)>>2)])|0);
 $27=(($26+((($25)*(36))&-1)+32)|0);
 HEAP32[(($27)>>2)]=-1;
 $28=(($this+16)|0);
 HEAP32[(($28)>>2)]=0;
 $29=(($this+20)|0);
 HEAP32[(($29)>>2)]=0;
 $30=(($this+24)|0);
 HEAP32[(($30)>>2)]=0;
 return;
}


function __ZN13b2DynamicTreeD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 __Z6b2FreePv($3);
 return;
}


function __ZN13b2DynamicTree12AllocateNodeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$i_012=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$_lcssa=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$41=0,$42=0,$43=0;
 var $44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==-1;
 if ($3) {
  $5=(($this+8)|0);
  $6=((HEAP32[(($5)>>2)])|0);
  $7=(($this+12)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=($6|0)==($8|0);
  if (!($9)) {
   ___assert_fail(((9176)|0),((10960)|0),((61)|0),((13048)|0));
   return ((0)|0);
  }
  $12=(($this+4)|0);
  $13=((HEAP32[(($12)>>2)])|0);
  $14=$8<<1;
  HEAP32[(($7)>>2)]=$14;
  $15=((($8)*(72))&-1);
  $16=((__Z7b2Alloci($15))|0);
  $17=$16;
  HEAP32[(($12)>>2)]=$17;
  $18=$13;
  $19=((HEAP32[(($5)>>2)])|0);
  $20=((($19)*(36))&-1);
  (_memcpy((($16)|0), (($18)|0), $20)|0);
  __Z6b2FreePv($18);
  $21=((HEAP32[(($5)>>2)])|0);
  $22=((HEAP32[(($7)>>2)])|0);
  $23=((($22)-(1))|0);
  $24=($21|0)<($23|0);
  if ($24) {
   $25=((HEAP32[(($12)>>2)])|0);
   $i_012=$21;
   while(1) {

    $27=((($i_012)+(1))|0);
    $28=(($25+((($i_012)*(36))&-1)+20)|0);
    HEAP32[(($28)>>2)]=$27;
    $29=(($25+((($i_012)*(36))&-1)+32)|0);
    HEAP32[(($29)>>2)]=-1;
    $30=((HEAP32[(($7)>>2)])|0);
    $31=((($30)-(1))|0);
    $32=($27|0)<($31|0);
    if ($32) {
     $i_012=$27;
    } else {
     $_lcssa=$31;
     break;
    }
   }
  } else {
   $_lcssa=$23;
  }

  $33=((HEAP32[(($12)>>2)])|0);
  $34=(($33+((($_lcssa)*(36))&-1)+20)|0);
  HEAP32[(($34)>>2)]=-1;
  $35=((HEAP32[(($7)>>2)])|0);
  $36=((($35)-(1))|0);
  $37=((HEAP32[(($12)>>2)])|0);
  $38=(($37+((($36)*(36))&-1)+32)|0);
  HEAP32[(($38)>>2)]=-1;
  $39=((HEAP32[(($5)>>2)])|0);
  HEAP32[(($1)>>2)]=$39;
 }
 $41=((HEAP32[(($1)>>2)])|0);
 $42=(($this+4)|0);
 $43=((HEAP32[(($42)>>2)])|0);
 $44=(($43+((($41)*(36))&-1)+20)|0);
 $45=((HEAP32[(($44)>>2)])|0);
 HEAP32[(($1)>>2)]=$45;
 $46=((HEAP32[(($42)>>2)])|0);
 $47=(($46+((($41)*(36))&-1)+20)|0);
 HEAP32[(($47)>>2)]=-1;
 $48=((HEAP32[(($42)>>2)])|0);
 $49=(($48+((($41)*(36))&-1)+24)|0);
 HEAP32[(($49)>>2)]=-1;
 $50=((HEAP32[(($42)>>2)])|0);
 $51=(($50+((($41)*(36))&-1)+28)|0);
 HEAP32[(($51)>>2)]=-1;
 $52=((HEAP32[(($42)>>2)])|0);
 $53=(($52+((($41)*(36))&-1)+32)|0);
 HEAP32[(($53)>>2)]=0;
 $54=((HEAP32[(($42)>>2)])|0);
 $55=(($54+((($41)*(36))&-1)+16)|0);
 HEAP32[(($55)>>2)]=0;
 $56=(($this+8)|0);
 $57=((HEAP32[(($56)>>2)])|0);
 $58=((($57)+(1))|0);
 HEAP32[(($56)>>2)]=$58;
 return (($41)|0);
}


function __ZN13b2DynamicTree8FreeNodeEi($this,$nodeId){
 $this=($this)|0;
 $nodeId=($nodeId)|0;
 var $1=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,label=0;

 $1=($nodeId|0)>-1;
 if (!($1)) {
  ___assert_fail(((7360)|0),((10960)|0),((97)|0),((13008)|0));

 }
 $3=(($this+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)>($nodeId|0);
 if (!($5)) {
  ___assert_fail(((7360)|0),((10960)|0),((97)|0),((13008)|0));

 }
 $8=(($this+8)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=($9|0)>0;
 if ($10) {
  $13=(($this+16)|0);
  $14=((HEAP32[(($13)>>2)])|0);
  $15=(($this+4)|0);
  $16=((HEAP32[(($15)>>2)])|0);
  $17=(($16+((($nodeId)*(36))&-1)+20)|0);
  HEAP32[(($17)>>2)]=$14;
  $18=((HEAP32[(($15)>>2)])|0);
  $19=(($18+((($nodeId)*(36))&-1)+32)|0);
  HEAP32[(($19)>>2)]=-1;
  HEAP32[(($13)>>2)]=$nodeId;
  $20=((HEAP32[(($8)>>2)])|0);
  $21=((($20)-(1))|0);
  HEAP32[(($8)>>2)]=$21;
  return;
 } else {
  ___assert_fail(((4616)|0),((10960)|0),((98)|0),((13008)|0));

 }
}


function __ZN13b2DynamicTree11CreateProxyERK6b2AABBPv($this,$aabb,$userData){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $userData=($userData)|0;
 var $r=0,$1=0,$tmpcast=0,$2=0,$tmpcast9=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0;
 var $13=0,$ld$4$0=0,$14$0=0,$ld$5$1=0,$14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=0,$17=0,$18=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $r=((sp)|0);
 $1=(((sp)+(8))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast9=$2;
 $3=((__ZN13b2DynamicTree12AllocateNodeEv($this))|0);
 __ZN6b2Vec2C1Eff($r,0.10000000149011612,0.10000000149011612);
 $4=(($this+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5+((($3)*(36))&-1))|0);
 $7=(($aabb)|0);
 __ZmiRK6b2Vec2S1_($tmpcast,$7,$r);
 $8=$6;
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=((HEAP32[(($4)>>2)])|0);
 $11=(($10+((($3)*(36))&-1)+8)|0);
 $12=(($aabb+8)|0);
 __ZplRK6b2Vec2S1_($tmpcast9,$12,$r);
 $13=$11;
 $ld$4$0=(($2)|0);
 $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($13)|0);
 HEAP32[(($st$6$0)>>2)]=$14$0;
 $st$7$1=(($13+4)|0);
 HEAP32[(($st$7$1)>>2)]=$14$1;
 $15=((HEAP32[(($4)>>2)])|0);
 $16=(($15+((($3)*(36))&-1)+16)|0);
 HEAP32[(($16)>>2)]=$userData;
 $17=((HEAP32[(($4)>>2)])|0);
 $18=(($17+((($3)*(36))&-1)+32)|0);
 HEAP32[(($18)>>2)]=0;
 __ZN13b2DynamicTree10InsertLeafEi($this,$3);
 STACKTOP=sp;return (($3)|0);
}


function __ZN13b2DynamicTree10InsertLeafEi($this,$leaf){
 $this=($this)|0;
 $leaf=($leaf)|0;
 var $leafAABB=0,$combinedAABB=0,$aabb=0,$aabb1=0,$aabb2=0,$aabb3=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$8=0,$9=0,$10=0,$12=0,$13=0,$14=0,$15=0,$16=0;
 var $17=0,$18=0,$19=0,$20=0,$21=0,$index_064=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=.0,$28=.0,$29=.0,$30=.0,$31=.0,$32=0,$33=0,$34=0,$35=0;
 var $37=.0,$39=0,$40=0,$41=.0,$42=.0,$43=.0,$_pn=.0,$cost1_0=.0,$45=0,$46=0,$47=0,$48=0,$50=.0,$52=0,$53=0,$54=.0,$55=.0,$56=.0,$_pn61=.0,$cost2_0=.0;
 var $58=0,$59=0,$or_cond=0,$61=0,$_=0,$62=0,$63=0,$64=0,$index_0_lcssa=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0;
 var $76=0,$77=0,$78=0,$79=0,$80=0,$81=0,$82=0,$84=0,$85=0,$86=0,$89=0,$91=0,$92=0,$93=0,$94=0,$95=0,$96=0,$97=0,$98=0,$100=0;
 var $101=0,$102=0,$103=0,$104=0,$105=0,$106=0,$108=0,$109=0,$index_162=0,$110=0,$index_163=0,$111=0,$112=0,$113=0,$114=0,$115=0,$116=0,$117=0,$120=0,$123=0;
 var $124=0,$125=0,$126=0,$127=0,$128=0,$129=0,$130=0,$131=0,$132=0,$133=0,$134=0,$135=0,$index_1=0,$136=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+96)|0;
 $leafAABB=((sp)|0);
 $combinedAABB=(((sp)+(16))|0);
 $aabb=(((sp)+(32))|0);
 $aabb1=(((sp)+(48))|0);
 $aabb2=(((sp)+(64))|0);
 $aabb3=(((sp)+(80))|0);
 $1=(($this+24)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)+(1))|0);
 HEAP32[(($1)>>2)]=$3;
 $4=(($this)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($5|0)==-1;
 if ($6) {
  HEAP32[(($4)>>2)]=$leaf;
  $8=(($this+4)|0);
  $9=((HEAP32[(($8)>>2)])|0);
  $10=(($9+((($leaf)*(36))&-1)+20)|0);
  HEAP32[(($10)>>2)]=-1;
  STACKTOP=sp;return;
 }
 $12=(($this+4)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($13+((($leaf)*(36))&-1))|0);
 $15=$leafAABB;
 $16=$14;
 HEAP32[(($15)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($15)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($15)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);HEAP32[((($15)+(12))>>2)]=((HEAP32[((($16)+(12))>>2)])|0);
 $17=((HEAP32[(($4)>>2)])|0);
 $18=((HEAP32[(($12)>>2)])|0);
 $19=(($18+((($17)*(36))&-1))|0);
 $20=((__ZNK10b2TreeNode6IsLeafEv($19))|0);
 L5: do {
  if ($20) {
   $index_0_lcssa=$17;
  } else {
   $index_064=$17;$21=$18;
   while(1) {


    $22=(($21+((($index_064)*(36))&-1)+24)|0);
    $23=((HEAP32[(($22)>>2)])|0);
    $24=(($21+((($index_064)*(36))&-1)+28)|0);
    $25=((HEAP32[(($24)>>2)])|0);
    $26=(($21+((($index_064)*(36))&-1))|0);
    $27=(+(__ZNK6b2AABB12GetPerimeterEv($26)));
    __ZN6b2AABB7CombineERKS_S1_($combinedAABB,$26,$leafAABB);
    $28=(+(__ZNK6b2AABB12GetPerimeterEv($combinedAABB)));
    $29=($28)*((2.0));
    $30=($28)-($27);
    $31=($30)*((2.0));
    $32=((HEAP32[(($12)>>2)])|0);
    $33=(($32+((($23)*(36))&-1))|0);
    $34=((__ZNK10b2TreeNode6IsLeafEv($33))|0);
    $35=(($32+((($23)*(36))&-1))|0);
    if ($34) {
     __ZN6b2AABB7CombineERKS_S1_($aabb,$leafAABB,$35);
     $37=(+(__ZNK6b2AABB12GetPerimeterEv($aabb)));
     $_pn=$37;
    } else {
     __ZN6b2AABB7CombineERKS_S1_($aabb1,$leafAABB,$35);
     $39=((HEAP32[(($12)>>2)])|0);
     $40=(($39+((($23)*(36))&-1))|0);
     $41=(+(__ZNK6b2AABB12GetPerimeterEv($40)));
     $42=(+(__ZNK6b2AABB12GetPerimeterEv($aabb1)));
     $43=($42)-($41);
     $_pn=$43;
    }

    $cost1_0=($31)+($_pn);
    $45=((HEAP32[(($12)>>2)])|0);
    $46=(($45+((($25)*(36))&-1))|0);
    $47=((__ZNK10b2TreeNode6IsLeafEv($46))|0);
    $48=(($45+((($25)*(36))&-1))|0);
    if ($47) {
     __ZN6b2AABB7CombineERKS_S1_($aabb2,$leafAABB,$48);
     $50=(+(__ZNK6b2AABB12GetPerimeterEv($aabb2)));
     $_pn61=$50;
    } else {
     __ZN6b2AABB7CombineERKS_S1_($aabb3,$leafAABB,$48);
     $52=((HEAP32[(($12)>>2)])|0);
     $53=(($52+((($25)*(36))&-1))|0);
     $54=(+(__ZNK6b2AABB12GetPerimeterEv($53)));
     $55=(+(__ZNK6b2AABB12GetPerimeterEv($aabb3)));
     $56=($55)-($54);
     $_pn61=$56;
    }

    $cost2_0=($31)+($_pn61);
    $58=$29<$cost1_0;
    $59=$29<$cost2_0;
    $or_cond=$58&$59;
    if ($or_cond) {
     $index_0_lcssa=$index_064;
     break L5;
    }
    $61=$cost1_0<$cost2_0;
    $_=($61?$23:$25);
    $62=((HEAP32[(($12)>>2)])|0);
    $63=(($62+((($_)*(36))&-1))|0);
    $64=((__ZNK10b2TreeNode6IsLeafEv($63))|0);
    if ($64) {
     $index_0_lcssa=$_;
     break;
    } else {
     $index_064=$_;$21=$62;
    }
   }
  }
 } while(0);

 $65=((HEAP32[(($12)>>2)])|0);
 $66=(($65+((($index_0_lcssa)*(36))&-1)+20)|0);
 $67=((HEAP32[(($66)>>2)])|0);
 $68=((__ZN13b2DynamicTree12AllocateNodeEv($this))|0);
 $69=((HEAP32[(($12)>>2)])|0);
 $70=(($69+((($68)*(36))&-1)+20)|0);
 HEAP32[(($70)>>2)]=$67;
 $71=((HEAP32[(($12)>>2)])|0);
 $72=(($71+((($68)*(36))&-1)+16)|0);
 HEAP32[(($72)>>2)]=0;
 $73=((HEAP32[(($12)>>2)])|0);
 $74=(($73+((($68)*(36))&-1))|0);
 $75=(($73+((($index_0_lcssa)*(36))&-1))|0);
 __ZN6b2AABB7CombineERKS_S1_($74,$leafAABB,$75);
 $76=((HEAP32[(($12)>>2)])|0);
 $77=(($76+((($index_0_lcssa)*(36))&-1)+32)|0);
 $78=((HEAP32[(($77)>>2)])|0);
 $79=((($78)+(1))|0);
 $80=(($76+((($68)*(36))&-1)+32)|0);
 HEAP32[(($80)>>2)]=$79;
 $81=($67|0)==-1;
 $82=((HEAP32[(($12)>>2)])|0);
 if ($81) {
  $100=(($82+((($68)*(36))&-1)+24)|0);
  HEAP32[(($100)>>2)]=$index_0_lcssa;
  $101=((HEAP32[(($12)>>2)])|0);
  $102=(($101+((($68)*(36))&-1)+28)|0);
  HEAP32[(($102)>>2)]=$leaf;
  $103=((HEAP32[(($12)>>2)])|0);
  $104=(($103+((($index_0_lcssa)*(36))&-1)+20)|0);
  HEAP32[(($104)>>2)]=$68;
  $105=((HEAP32[(($12)>>2)])|0);
  $106=(($105+((($leaf)*(36))&-1)+20)|0);
  HEAP32[(($106)>>2)]=$68;
  HEAP32[(($4)>>2)]=$68;
 } else {
  $84=(($82+((($67)*(36))&-1)+24)|0);
  $85=((HEAP32[(($84)>>2)])|0);
  $86=($85|0)==($index_0_lcssa|0);
  if ($86) {
   HEAP32[(($84)>>2)]=$68;
  } else {
   $89=(($82+((($67)*(36))&-1)+28)|0);
   HEAP32[(($89)>>2)]=$68;
  }
  $91=((HEAP32[(($12)>>2)])|0);
  $92=(($91+((($68)*(36))&-1)+24)|0);
  HEAP32[(($92)>>2)]=$index_0_lcssa;
  $93=((HEAP32[(($12)>>2)])|0);
  $94=(($93+((($68)*(36))&-1)+28)|0);
  HEAP32[(($94)>>2)]=$leaf;
  $95=((HEAP32[(($12)>>2)])|0);
  $96=(($95+((($index_0_lcssa)*(36))&-1)+20)|0);
  HEAP32[(($96)>>2)]=$68;
  $97=((HEAP32[(($12)>>2)])|0);
  $98=(($97+((($leaf)*(36))&-1)+20)|0);
  HEAP32[(($98)>>2)]=$68;
 }
 $108=((HEAP32[(($12)>>2)])|0);
 $109=(($108+((($leaf)*(36))&-1)+20)|0);
 $index_162=((HEAP32[(($109)>>2)])|0);
 $110=($index_162|0)==-1;
 if ($110) {
  STACKTOP=sp;return;
 } else {
  $index_163=$index_162;
 }
 while(1) {

  $111=((__ZN13b2DynamicTree7BalanceEi($this,$index_163))|0);
  $112=((HEAP32[(($12)>>2)])|0);
  $113=(($112+((($111)*(36))&-1)+24)|0);
  $114=((HEAP32[(($113)>>2)])|0);
  $115=(($112+((($111)*(36))&-1)+28)|0);
  $116=((HEAP32[(($115)>>2)])|0);
  $117=($114|0)==-1;
  if ($117) {
   label = 20;
   break;
  }
  $120=($116|0)==-1;
  if ($120) {
   label = 22;
   break;
  }
  $123=(($112+((($114)*(36))&-1)+32)|0);
  $124=((HEAP32[(($123)>>2)])|0);
  $125=(($112+((($116)*(36))&-1)+32)|0);
  $126=((HEAP32[(($125)>>2)])|0);
  $127=((__Z5b2MaxIiET_S0_S0_($124,$126))|0);
  $128=((($127)+(1))|0);
  $129=(($112+((($111)*(36))&-1)+32)|0);
  HEAP32[(($129)>>2)]=$128;
  $130=((HEAP32[(($12)>>2)])|0);
  $131=(($130+((($111)*(36))&-1))|0);
  $132=(($130+((($114)*(36))&-1))|0);
  $133=(($130+((($116)*(36))&-1))|0);
  __ZN6b2AABB7CombineERKS_S1_($131,$132,$133);
  $134=((HEAP32[(($12)>>2)])|0);
  $135=(($134+((($111)*(36))&-1)+20)|0);
  $index_1=((HEAP32[(($135)>>2)])|0);
  $136=($index_1|0)==-1;
  if ($136) {
   label = 24;
   break;
  } else {
   $index_163=$index_1;
  }
 }
 if ((label|0) == 20) {
  ___assert_fail(((1888)|0),((10960)|0),((307)|0),((13064)|0));

 }
 else if ((label|0) == 22) {
  ___assert_fail(((1384)|0),((10960)|0),((308)|0),((13064)|0));

 }
 else if ((label|0) == 24) {
  STACKTOP=sp;return;
 }
}


function __ZN13b2DynamicTree12DestroyProxyEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,label=0;

 $1=($proxyId|0)>-1;
 if (!($1)) {
  ___assert_fail(((3488)|0),((10960)|0),((126)|0),((13032)|0));

 }
 $3=(($this+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)>($proxyId|0);
 if (!($5)) {
  ___assert_fail(((3488)|0),((10960)|0),((126)|0),((13032)|0));

 }
 $8=(($this+4)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+((($proxyId)*(36))&-1))|0);
 $11=((__ZNK10b2TreeNode6IsLeafEv($10))|0);
 if ($11) {
  __ZN13b2DynamicTree10RemoveLeafEi($this,$proxyId);
  __ZN13b2DynamicTree8FreeNodeEi($this,$proxyId);
  return;
 } else {
  ___assert_fail(((2640)|0),((10960)|0),((127)|0),((13032)|0));

 }
}


function __ZNK10b2TreeNode6IsLeafEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+24)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==-1;
 return (($3)|0);
}


function __ZN13b2DynamicTree10RemoveLeafEi($this,$leaf){
 $this=($this)|0;
 $leaf=($leaf)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$16=0,$17=0,$sibling_0=0,$19=0,$21=0,$22=0,$23=0,$24=0;
 var $27=0,$29=0,$30=0,$31=0,$index_024=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0;
 var $47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$54=0,$55=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==($leaf|0);
 if ($3) {
  HEAP32[(($1)>>2)]=-1;
  return;
 }
 $6=(($this+4)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($7+((($leaf)*(36))&-1)+20)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($7+((($9)*(36))&-1)+20)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($7+((($9)*(36))&-1)+24)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=($13|0)==($leaf|0);
 if ($14) {
  $16=(($7+((($9)*(36))&-1)+28)|0);
  $17=((HEAP32[(($16)>>2)])|0);
  $sibling_0=$17;
 } else {
  $sibling_0=$13;
 }

 $19=($11|0)==-1;
 if ($19) {
  HEAP32[(($1)>>2)]=$sibling_0;
  $54=((HEAP32[(($6)>>2)])|0);
  $55=(($54+((($sibling_0)*(36))&-1)+20)|0);
  HEAP32[(($55)>>2)]=-1;
  __ZN13b2DynamicTree8FreeNodeEi($this,$9);
  return;
 }
 $21=((HEAP32[(($6)>>2)])|0);
 $22=(($21+((($11)*(36))&-1)+24)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=($23|0)==($9|0);
 if ($24) {
  HEAP32[(($22)>>2)]=$sibling_0;
 } else {
  $27=(($21+((($11)*(36))&-1)+28)|0);
  HEAP32[(($27)>>2)]=$sibling_0;
 }
 $29=((HEAP32[(($6)>>2)])|0);
 $30=(($29+((($sibling_0)*(36))&-1)+20)|0);
 HEAP32[(($30)>>2)]=$11;
 __ZN13b2DynamicTree8FreeNodeEi($this,$9);
 $31=($11|0)==-1;
 if ($31) {
  return;
 } else {
  $index_024=$11;
 }
 while(1) {

  $32=((__ZN13b2DynamicTree7BalanceEi($this,$index_024))|0);
  $33=((HEAP32[(($6)>>2)])|0);
  $34=(($33+((($32)*(36))&-1)+24)|0);
  $35=((HEAP32[(($34)>>2)])|0);
  $36=(($33+((($32)*(36))&-1)+28)|0);
  $37=((HEAP32[(($36)>>2)])|0);
  $38=(($33+((($32)*(36))&-1))|0);
  $39=(($33+((($35)*(36))&-1))|0);
  $40=(($33+((($37)*(36))&-1))|0);
  __ZN6b2AABB7CombineERKS_S1_($38,$39,$40);
  $41=((HEAP32[(($6)>>2)])|0);
  $42=(($41+((($35)*(36))&-1)+32)|0);
  $43=((HEAP32[(($42)>>2)])|0);
  $44=(($41+((($37)*(36))&-1)+32)|0);
  $45=((HEAP32[(($44)>>2)])|0);
  $46=((__Z5b2MaxIiET_S0_S0_($43,$45))|0);
  $47=((($46)+(1))|0);
  $48=(($41+((($32)*(36))&-1)+32)|0);
  HEAP32[(($48)>>2)]=$47;
  $49=((HEAP32[(($6)>>2)])|0);
  $50=(($49+((($32)*(36))&-1)+20)|0);
  $51=((HEAP32[(($50)>>2)])|0);
  $52=($51|0)==-1;
  if ($52) {
   break;
  } else {
   $index_024=$51;
  }
 }
 return;
}


function __ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2($this,$proxyId,$aabb,$displacement){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 $aabb=($aabb)|0;
 $displacement=($displacement)|0;
 var $b12=0,$b12_sub=0,$r=0,$1=0,$tmpcast13=0,$2=0,$tmpcast=0,$d=0,$3=0,$5=0,$6=0,$7=0,$10=0,$11=0,$12=0,$13=0,$16=0,$17=0,$19=0,$20=0;
 var $21=0,$ld$0$0=0,$22$0=0,$ld$1$1=0,$22$1=0,$st$2$0=0,$st$3$1=0,$23=0,$24=0,$ld$4$0=0,$25$0=0,$ld$5$1=0,$25$1=0,$st$6$0=0,$st$7$1=0,$26=0,$27=.0,$28=0,$30=0,$31=.0;
 var $32=.0,$34=0,$35=.0,$36=.0,$38=0,$39=.0,$40=0,$42=0,$43=.0,$44=.0,$46=0,$47=.0,$48=.0,$50=0,$51=0,$52=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $b12=((sp)|0);
 $b12_sub=(($b12)|0);
 $r=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast13=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$2;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=($proxyId|0)>-1;
 if (!($3)) {
  ___assert_fail(((3488)|0),((10960)|0),((135)|0),((12992)|0));
  return ((0)|0);
 }
 $5=(($this+12)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>($proxyId|0);
 if (!($7)) {
  ___assert_fail(((3488)|0),((10960)|0),((135)|0),((12992)|0));
  return ((0)|0);
 }
 $10=(($this+4)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+((($proxyId)*(36))&-1))|0);
 $13=((__ZNK10b2TreeNode6IsLeafEv($12))|0);
 if (!($13)) {
  ___assert_fail(((2640)|0),((10960)|0),((137)|0),((12992)|0));
  return ((0)|0);
 }
 $16=(($11+((($proxyId)*(36))&-1))|0);
 $17=((__ZNK6b2AABB8ContainsERKS_($16,$aabb))|0);
 if ($17) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 __ZN13b2DynamicTree10RemoveLeafEi($this,$proxyId);
 $19=$b12;
 $20=$aabb;
 HEAP32[(($19)>>2)]=((HEAP32[(($20)>>2)])|0);HEAP32[((($19)+(4))>>2)]=((HEAP32[((($20)+(4))>>2)])|0);HEAP32[((($19)+(8))>>2)]=((HEAP32[((($20)+(8))>>2)])|0);HEAP32[((($19)+(12))>>2)]=((HEAP32[((($20)+(12))>>2)])|0);
 __ZN6b2Vec2C1Eff($r,0.10000000149011612,0.10000000149011612);
 $21=$b12;
 __ZmiRK6b2Vec2S1_($tmpcast13,$21,$r);
 $ld$0$0=(($1)|0);
 $22$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $22$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($b12_sub)|0);
 HEAP32[(($st$2$0)>>2)]=$22$0;
 $st$3$1=(($b12_sub+4)|0);
 HEAP32[(($st$3$1)>>2)]=$22$1;
 $23=(($b12+8)|0);
 $24=$23;
 __ZplRK6b2Vec2S1_($tmpcast,$24,$r);
 $ld$4$0=(($2)|0);
 $25$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $25$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($23)|0);
 HEAP32[(($st$6$0)>>2)]=$25$0;
 $st$7$1=(($23+4)|0);
 HEAP32[(($st$7$1)>>2)]=$25$1;
 __ZmlfRK6b2Vec2($d,2.0,$displacement);
 $26=(($d)|0);
 $27=(+(HEAPF32[(($26)>>2)]));
 $28=$27<(0.0);
 if ($28) {
  $30=$b12;
  $31=(+(HEAPF32[(($30)>>2)]));
  $32=($27)+($31);
  HEAPF32[(($30)>>2)]=$32;
 } else {
  $34=$23;
  $35=(+(HEAPF32[(($34)>>2)]));
  $36=($27)+($35);
  HEAPF32[(($34)>>2)]=$36;
 }
 $38=(($d+4)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=$39<(0.0);
 if ($40) {
  $42=(($21+4)|0);
  $43=(+(HEAPF32[(($42)>>2)]));
  $44=($39)+($43);
  HEAPF32[(($42)>>2)]=$44;
 } else {
  $46=(($24+4)|0);
  $47=(+(HEAPF32[(($46)>>2)]));
  $48=($39)+($47);
  HEAPF32[(($46)>>2)]=$48;
 }
 $50=((HEAP32[(($10)>>2)])|0);
 $51=(($50+((($proxyId)*(36))&-1))|0);
 $52=$51;
 HEAP32[(($52)>>2)]=((HEAP32[(($19)>>2)])|0);HEAP32[((($52)+(4))>>2)]=((HEAP32[((($19)+(4))>>2)])|0);HEAP32[((($52)+(8))>>2)]=((HEAP32[((($19)+(8))>>2)])|0);HEAP32[((($52)+(12))>>2)]=((HEAP32[((($19)+(12))>>2)])|0);
 __ZN13b2DynamicTree10InsertLeafEi($this,$proxyId);
 $_0=1;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNK6b2AABB8ContainsERKS_($this,$aabb){
 $this=($this)|0;
 $aabb=($aabb)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$7=0,$8=.0,$9=0,$10=.0,$11=0,$12=0,$13=.0,$14=0,$15=.0,$16=0,$18=0,$19=.0,$20=0,$21=.0,$22=0;
 var $23=0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($aabb)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=$2>$4;
 if ($5) {
  $23=0;

  return (($23)|0);
 }
 $7=(($this+4)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($aabb+4)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=$8>$10;
 if ($11) {
  $23=0;

  return (($23)|0);
 }
 $12=(($aabb+8)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=(($this+8)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=$13>$15;
 if ($16) {
  $23=0;

  return (($23)|0);
 }
 $18=(($aabb+12)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=(($this+12)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=$19<=$21;
 $23=$22;

 return (($23)|0);
}


function __ZNK6b2AABB12GetPerimeterEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=.0,label=0;

 $1=(($this+8)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)-($4);
 $6=(($this+12)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($this+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)-($9);
 $11=($5)+($10);
 $12=($11)*((2.0));
 return (+($12));
}


function __ZN6b2AABB7CombineERKS_S1_($this,$aabb1,$aabb2){
 $this=($this)|0;
 $aabb1=($aabb1)|0;
 $aabb2=($aabb2)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$st$2$0=0,$st$3$1=0,$7=0,$8=0,$9=0,$10=0,$ld$4$0=0,$11$0=0,$ld$5$1=0;
 var $11$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=(($aabb1)|0);
 $4=(($aabb2)|0);
 __Z5b2MinRK6b2Vec2S1_($tmpcast,$3,$4);
 $5=$this;
 $ld$0$0=(($1)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($5)|0);
 HEAP32[(($st$2$0)>>2)]=$6$0;
 $st$3$1=(($5+4)|0);
 HEAP32[(($st$3$1)>>2)]=$6$1;
 $7=(($this+8)|0);
 $8=(($aabb1+8)|0);
 $9=(($aabb2+8)|0);
 __Z5b2MaxRK6b2Vec2S1_($tmpcast5,$8,$9);
 $10=$7;
 $ld$4$0=(($2)|0);
 $11$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $11$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($10)|0);
 HEAP32[(($st$6$0)>>2)]=$11$0;
 $st$7$1=(($10+4)|0);
 HEAP32[(($st$7$1)>>2)]=$11$1;
 STACKTOP=sp;return;
}


function __ZN13b2DynamicTree7BalanceEi($this,$iA){
 $this=($this)|0;
 $iA=($iA)|0;
 var $1=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$16=0,$17=0,$19=0,$20=0,$21=0,$24=0,$25=0,$or_cond=0,$28=0;
 var $29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$or_cond133=0,$47=0,$48=0,$or_cond134=0,$51=0;
 var $52=0,$53=0,$54=0,$55=0,$57=0,$58=0,$59=0,$60=0,$63=0,$64=0,$65=0,$69=0,$71=0,$72=0,$73=0,$74=0,$75=0,$77=0,$78=0,$79=0;
 var $80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$90=0,$91=0,$92=0,$93=0,$94=0,$95=0,$96=0,$97=0,$98=0,$99=0,$100=0;
 var $101=0,$storemerge132_in=0,$storemerge132=0,$104=0,$106=0,$107=0,$108=0,$109=0,$110=0,$111=0,$112=0,$113=0,$or_cond135=0,$116=0,$117=0,$or_cond136=0,$120=0,$121=0,$122=0,$123=0;
 var $124=0,$126=0,$127=0,$128=0,$129=0,$132=0,$133=0,$134=0,$138=0,$140=0,$141=0,$142=0,$143=0,$144=0,$146=0,$147=0,$148=0,$149=0,$150=0,$151=0;
 var $152=0,$153=0,$154=0,$155=0,$156=0,$157=0,$159=0,$160=0,$161=0,$162=0,$163=0,$164=0,$165=0,$166=0,$167=0,$168=0,$169=0,$170=0,$storemerge_in=0,$storemerge=0;
 var $_0=0,label=0;

 $1=($iA|0)==-1;
 if ($1) {
  ___assert_fail(((888)|0),((10960)|0),((382)|0),((13024)|0));
  return ((0)|0);
 }
 $4=(($this+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5+((($iA)*(36))&-1))|0);
 $7=((__ZNK10b2TreeNode6IsLeafEv($6))|0);
 if ($7) {
  $_0=$iA;

  return (($_0)|0);
 }
 $9=(($5+((($iA)*(36))&-1)+32)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($10|0)<2;
 if ($11) {
  $_0=$iA;

  return (($_0)|0);
 }
 $13=(($5+((($iA)*(36))&-1)+24)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($5+((($iA)*(36))&-1)+28)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=($14|0)>-1;
 if (!($17)) {
  ___assert_fail(((448)|0),((10960)|0),((392)|0),((13024)|0));
  return ((0)|0);
 }
 $19=(($this+12)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=($14|0)<($20|0);
 if (!($21)) {
  ___assert_fail(((448)|0),((10960)|0),((392)|0),((13024)|0));
  return ((0)|0);
 }
 $24=($16|0)>-1;
 $25=($16|0)<($20|0);
 $or_cond=$24&$25;
 if (!($or_cond)) {
  ___assert_fail(((11728)|0),((10960)|0),((393)|0),((13024)|0));
  return ((0)|0);
 }
 $28=(($5+((($14)*(36))&-1))|0);
 $29=(($5+((($16)*(36))&-1))|0);
 $30=(($5+((($16)*(36))&-1)+32)|0);
 $31=((HEAP32[(($30)>>2)])|0);
 $32=(($5+((($14)*(36))&-1)+32)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=((($31)-($33))|0);
 $35=($34|0)>1;
 if ($35) {
  $37=(($5+((($16)*(36))&-1)+24)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $39=(($5+((($16)*(36))&-1)+28)|0);
  $40=((HEAP32[(($39)>>2)])|0);
  $41=(($5+((($38)*(36))&-1))|0);
  $42=(($5+((($40)*(36))&-1))|0);
  $43=($38|0)>-1;
  $44=($38|0)<($20|0);
  $or_cond133=$43&$44;
  if (!($or_cond133)) {
   ___assert_fail(((11416)|0),((10960)|0),((407)|0),((13024)|0));
   return ((0)|0);
  }
  $47=($40|0)>-1;
  $48=($40|0)<($20|0);
  $or_cond134=$47&$48;
  if (!($or_cond134)) {
   ___assert_fail(((10840)|0),((10960)|0),((408)|0),((13024)|0));
   return ((0)|0);
  }
  HEAP32[(($37)>>2)]=$iA;
  $51=(($5+((($iA)*(36))&-1)+20)|0);
  $52=((HEAP32[(($51)>>2)])|0);
  $53=(($5+((($16)*(36))&-1)+20)|0);
  HEAP32[(($53)>>2)]=$52;
  HEAP32[(($51)>>2)]=$16;
  $54=((HEAP32[(($53)>>2)])|0);
  $55=($54|0)==-1;
  do {
   if ($55) {
    $69=(($this)|0);
    HEAP32[(($69)>>2)]=$16;
   } else {
    $57=((HEAP32[(($4)>>2)])|0);
    $58=(($57+((($54)*(36))&-1)+24)|0);
    $59=((HEAP32[(($58)>>2)])|0);
    $60=($59|0)==($iA|0);
    if ($60) {
     HEAP32[(($58)>>2)]=$16;
     break;
    }
    $63=(($57+((($54)*(36))&-1)+28)|0);
    $64=((HEAP32[(($63)>>2)])|0);
    $65=($64|0)==($iA|0);
    if ($65) {
     HEAP32[(($63)>>2)]=$16;
     break;
    } else {
     ___assert_fail(((9640)|0),((10960)|0),((424)|0),((13024)|0));
     return ((0)|0);
    }
   }
  } while(0);
  $71=(($5+((($38)*(36))&-1)+32)|0);
  $72=((HEAP32[(($71)>>2)])|0);
  $73=(($5+((($40)*(36))&-1)+32)|0);
  $74=((HEAP32[(($73)>>2)])|0);
  $75=($72|0)>($74|0);
  if ($75) {
   HEAP32[(($39)>>2)]=$38;
   HEAP32[(($15)>>2)]=$40;
   $77=(($5+((($40)*(36))&-1)+20)|0);
   HEAP32[(($77)>>2)]=$iA;
   $78=(($6)|0);
   $79=(($28)|0);
   $80=(($42)|0);
   __ZN6b2AABB7CombineERKS_S1_($78,$79,$80);
   $81=(($29)|0);
   $82=(($41)|0);
   __ZN6b2AABB7CombineERKS_S1_($81,$78,$82);
   $83=((HEAP32[(($32)>>2)])|0);
   $84=((HEAP32[(($73)>>2)])|0);
   $85=((__Z5b2MaxIiET_S0_S0_($83,$84))|0);
   $86=((($85)+(1))|0);
   HEAP32[(($9)>>2)]=$86;
   $87=((HEAP32[(($71)>>2)])|0);
   $88=((__Z5b2MaxIiET_S0_S0_($86,$87))|0);
   $storemerge132_in=$88;
  } else {
   HEAP32[(($39)>>2)]=$40;
   HEAP32[(($15)>>2)]=$38;
   $90=(($5+((($38)*(36))&-1)+20)|0);
   HEAP32[(($90)>>2)]=$iA;
   $91=(($6)|0);
   $92=(($28)|0);
   $93=(($41)|0);
   __ZN6b2AABB7CombineERKS_S1_($91,$92,$93);
   $94=(($29)|0);
   $95=(($42)|0);
   __ZN6b2AABB7CombineERKS_S1_($94,$91,$95);
   $96=((HEAP32[(($32)>>2)])|0);
   $97=((HEAP32[(($71)>>2)])|0);
   $98=((__Z5b2MaxIiET_S0_S0_($96,$97))|0);
   $99=((($98)+(1))|0);
   HEAP32[(($9)>>2)]=$99;
   $100=((HEAP32[(($73)>>2)])|0);
   $101=((__Z5b2MaxIiET_S0_S0_($99,$100))|0);
   $storemerge132_in=$101;
  }

  $storemerge132=((($storemerge132_in)+(1))|0);
  HEAP32[(($30)>>2)]=$storemerge132;
  $_0=$16;

  return (($_0)|0);
 }
 $104=($34|0)<-1;
 if (!($104)) {
  $_0=$iA;

  return (($_0)|0);
 }
 $106=(($5+((($14)*(36))&-1)+24)|0);
 $107=((HEAP32[(($106)>>2)])|0);
 $108=(($5+((($14)*(36))&-1)+28)|0);
 $109=((HEAP32[(($108)>>2)])|0);
 $110=(($5+((($107)*(36))&-1))|0);
 $111=(($5+((($109)*(36))&-1))|0);
 $112=($107|0)>-1;
 $113=($107|0)<($20|0);
 $or_cond135=$112&$113;
 if (!($or_cond135)) {
  ___assert_fail(((9024)|0),((10960)|0),((467)|0),((13024)|0));
  return ((0)|0);
 }
 $116=($109|0)>-1;
 $117=($109|0)<($20|0);
 $or_cond136=$116&$117;
 if (!($or_cond136)) {
  ___assert_fail(((8792)|0),((10960)|0),((468)|0),((13024)|0));
  return ((0)|0);
 }
 HEAP32[(($106)>>2)]=$iA;
 $120=(($5+((($iA)*(36))&-1)+20)|0);
 $121=((HEAP32[(($120)>>2)])|0);
 $122=(($5+((($14)*(36))&-1)+20)|0);
 HEAP32[(($122)>>2)]=$121;
 HEAP32[(($120)>>2)]=$14;
 $123=((HEAP32[(($122)>>2)])|0);
 $124=($123|0)==-1;
 do {
  if ($124) {
   $138=(($this)|0);
   HEAP32[(($138)>>2)]=$14;
  } else {
   $126=((HEAP32[(($4)>>2)])|0);
   $127=(($126+((($123)*(36))&-1)+24)|0);
   $128=((HEAP32[(($127)>>2)])|0);
   $129=($128|0)==($iA|0);
   if ($129) {
    HEAP32[(($127)>>2)]=$14;
    break;
   }
   $132=(($126+((($123)*(36))&-1)+28)|0);
   $133=((HEAP32[(($132)>>2)])|0);
   $134=($133|0)==($iA|0);
   if ($134) {
    HEAP32[(($132)>>2)]=$14;
    break;
   } else {
    ___assert_fail(((8576)|0),((10960)|0),((484)|0),((13024)|0));
    return ((0)|0);
   }
  }
 } while(0);
 $140=(($5+((($107)*(36))&-1)+32)|0);
 $141=((HEAP32[(($140)>>2)])|0);
 $142=(($5+((($109)*(36))&-1)+32)|0);
 $143=((HEAP32[(($142)>>2)])|0);
 $144=($141|0)>($143|0);
 if ($144) {
  HEAP32[(($108)>>2)]=$107;
  HEAP32[(($13)>>2)]=$109;
  $146=(($5+((($109)*(36))&-1)+20)|0);
  HEAP32[(($146)>>2)]=$iA;
  $147=(($6)|0);
  $148=(($29)|0);
  $149=(($111)|0);
  __ZN6b2AABB7CombineERKS_S1_($147,$148,$149);
  $150=(($28)|0);
  $151=(($110)|0);
  __ZN6b2AABB7CombineERKS_S1_($150,$147,$151);
  $152=((HEAP32[(($30)>>2)])|0);
  $153=((HEAP32[(($142)>>2)])|0);
  $154=((__Z5b2MaxIiET_S0_S0_($152,$153))|0);
  $155=((($154)+(1))|0);
  HEAP32[(($9)>>2)]=$155;
  $156=((HEAP32[(($140)>>2)])|0);
  $157=((__Z5b2MaxIiET_S0_S0_($155,$156))|0);
  $storemerge_in=$157;
 } else {
  HEAP32[(($108)>>2)]=$109;
  HEAP32[(($13)>>2)]=$107;
  $159=(($5+((($107)*(36))&-1)+20)|0);
  HEAP32[(($159)>>2)]=$iA;
  $160=(($6)|0);
  $161=(($29)|0);
  $162=(($110)|0);
  __ZN6b2AABB7CombineERKS_S1_($160,$161,$162);
  $163=(($28)|0);
  $164=(($111)|0);
  __ZN6b2AABB7CombineERKS_S1_($163,$160,$164);
  $165=((HEAP32[(($30)>>2)])|0);
  $166=((HEAP32[(($140)>>2)])|0);
  $167=((__Z5b2MaxIiET_S0_S0_($165,$166))|0);
  $168=((($167)+(1))|0);
  HEAP32[(($9)>>2)]=$168;
  $169=((HEAP32[(($142)>>2)])|0);
  $170=((__Z5b2MaxIiET_S0_S0_($168,$169))|0);
  $storemerge_in=$170;
 }

 $storemerge=((($storemerge_in)+(1))|0);
 HEAP32[(($32)>>2)]=$storemerge;
 $_0=$14;

 return (($_0)|0);
}


function __ZNK13b2DynamicTree9GetHeightEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$_0=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==-1;
 if ($3) {
  $_0=0;

  return (($_0)|0);
 }
 $5=(($this+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+((($2)*(36))&-1)+32)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $_0=$8;

 return (($_0)|0);
}


function __ZNK13b2DynamicTree12GetAreaRatioEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$10=0,$11=0,$12=0,$13=0,$i_07=0,$totalArea_06=.0,$15=0,$16=0,$17=0,$19=0,$20=.0,$21=.0;
 var $totalArea_1=.0,$23=0,$24=0,$totalArea_0_lcssa=.0,$25=.0,$_0=.0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==-1;
 if ($3) {
  $_0=0.0;

  return (+($_0));
 }
 $5=(($this+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+((($2)*(36))&-1))|0);
 $8=(+(__ZNK6b2AABB12GetPerimeterEv($7)));
 $9=(($this+12)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($10|0)>0;
 if ($11) {
  $12=((HEAP32[(($5)>>2)])|0);
  $13=((HEAP32[(($9)>>2)])|0);
  $totalArea_06=0.0;$i_07=0;
  while(1) {


   $15=(($12+((($i_07)*(36))&-1)+32)|0);
   $16=((HEAP32[(($15)>>2)])|0);
   $17=($16|0)<0;
   if ($17) {
    $totalArea_1=$totalArea_06;
   } else {
    $19=(($12+((($i_07)*(36))&-1))|0);
    $20=(+(__ZNK6b2AABB12GetPerimeterEv($19)));
    $21=($totalArea_06)+($20);
    $totalArea_1=$21;
   }

   $23=((($i_07)+(1))|0);
   $24=($23|0)<($13|0);
   if ($24) {
    $totalArea_06=$totalArea_1;$i_07=$23;
   } else {
    $totalArea_0_lcssa=$totalArea_1;
    break;
   }
  }
 } else {
  $totalArea_0_lcssa=0.0;
 }

 $25=($totalArea_0_lcssa)/($8);
 $_0=$25;

 return (+($_0));
}


function __ZNK13b2DynamicTree13ComputeHeightEi($this,$nodeId){
 $this=($this)|0;
 $nodeId=($nodeId)|0;
 var $1=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,label=0;

 $1=($nodeId|0)>-1;
 if (!($1)) {
  ___assert_fail(((7360)|0),((10960)|0),((563)|0),((12064)|0));
  return ((0)|0);
 }
 $3=(($this+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)>($nodeId|0);
 if (!($5)) {
  ___assert_fail(((7360)|0),((10960)|0),((563)|0),((12064)|0));
  return ((0)|0);
 }
 $8=(($this+4)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+((($nodeId)*(36))&-1))|0);
 $11=((__ZNK10b2TreeNode6IsLeafEv($10))|0);
 if ($11) {
  return ((0)|0);
 } else {
  $13=(($9+((($nodeId)*(36))&-1)+24)|0);
  $14=((HEAP32[(($13)>>2)])|0);
  $15=((__ZNK13b2DynamicTree13ComputeHeightEi($this,$14))|0);
  $16=(($9+((($nodeId)*(36))&-1)+28)|0);
  $17=((HEAP32[(($16)>>2)])|0);
  $18=((__ZNK13b2DynamicTree13ComputeHeightEi($this,$17))|0);
  $19=((__Z5b2MaxIiET_S0_S0_($15,$18))|0);
  $20=((($19)+(1))|0);
  return (($20)|0);
 }
  return 0;
}


function __ZNK13b2DynamicTree13ComputeHeightEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK13b2DynamicTree13ComputeHeightEi($this,$2))|0);
 return (($3)|0);
}


function __ZNK13b2DynamicTree17ValidateStructureEi($this,$index){
 $this=($this)|0;
 $index=($index)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$index_tr37=0,$7=0,$8=0,$10=0,$11=0,$12=0,$13=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$24=0;
 var $27=0,$30=0,$31=0,$32=0,$35=0,$37=0,$38=0,$41=0,$42=0,$or_cond=0,$45=0,$46=0,$47=0,$50=0,$51=0,$52=0,$54=0,label=0;

 $1=($index|0)==-1;
 if ($1) {
  return;
 }
 $2=(($this)|0);
 $3=(($this+4)|0);
 $4=(($this+4)|0);
 $5=(($this+12)|0);
 $index_tr37=$index;
 while(1) {

  $7=((HEAP32[(($2)>>2)])|0);
  $8=($7|0)==($index_tr37|0);
  if ($8) {
   $10=((HEAP32[(($3)>>2)])|0);
   $11=(($10+((($index_tr37)*(36))&-1)+20)|0);
   $12=((HEAP32[(($11)>>2)])|0);
   $13=($12|0)==-1;
   if (!($13)) {
    label = 5;
    break;
   }
  }
  $16=((HEAP32[(($4)>>2)])|0);
  $17=(($16+((($index_tr37)*(36))&-1))|0);
  $18=(($16+((($index_tr37)*(36))&-1)+24)|0);
  $19=((HEAP32[(($18)>>2)])|0);
  $20=(($16+((($index_tr37)*(36))&-1)+28)|0);
  $21=((HEAP32[(($20)>>2)])|0);
  $22=((__ZNK10b2TreeNode6IsLeafEv($17))|0);
  if ($22) {
   label = 7;
   break;
  }
  $35=($19|0)>-1;
  if (!($35)) {
   label = 15;
   break;
  }
  $37=((HEAP32[(($5)>>2)])|0);
  $38=($19|0)<($37|0);
  if (!($38)) {
   label = 15;
   break;
  }
  $41=($21|0)>-1;
  $42=($21|0)<($37|0);
  $or_cond=$41&$42;
  if (!($or_cond)) {
   label = 17;
   break;
  }
  $45=(($16+((($19)*(36))&-1)+20)|0);
  $46=((HEAP32[(($45)>>2)])|0);
  $47=($46|0)==($index_tr37|0);
  if (!($47)) {
   label = 19;
   break;
  }
  $50=(($16+((($21)*(36))&-1)+20)|0);
  $51=((HEAP32[(($50)>>2)])|0);
  $52=($51|0)==($index_tr37|0);
  if (!($52)) {
   label = 21;
   break;
  }
  __ZNK13b2DynamicTree17ValidateStructureEi($this,$19);
  $54=($21|0)==-1;
  if ($54) {
   label = 23;
   break;
  } else {
   $index_tr37=$21;
  }
 }
 if ((label|0) == 5) {
  ___assert_fail(((8192)|0),((10960)|0),((591)|0),((12008)|0));

 }
 else if ((label|0) == 7) {
  $24=($19|0)==-1;
  if (!($24)) {
   ___assert_fail(((8128)|0),((10960)|0),((601)|0),((12008)|0));

  }
  $27=($21|0)==-1;
  if (!($27)) {
   ___assert_fail(((7904)|0),((10960)|0),((602)|0),((12008)|0));

  }
  $30=(($16+((($index_tr37)*(36))&-1)+32)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=($31|0)==0;
  if ($32) {
   return;
  } else {
   ___assert_fail(((7680)|0),((10960)|0),((603)|0),((12008)|0));

  }
 }
 else if ((label|0) == 15) {
  ___assert_fail(((7520)|0),((10960)|0),((607)|0),((12008)|0));

 }
 else if ((label|0) == 17) {
  ___assert_fail(((7280)|0),((10960)|0),((608)|0),((12008)|0));

 }
 else if ((label|0) == 19) {
  ___assert_fail(((6648)|0),((10960)|0),((610)|0),((12008)|0));

 }
 else if ((label|0) == 21) {
  ___assert_fail(((6168)|0),((10960)|0),((611)|0),((12008)|0));

 }
 else if ((label|0) == 23) {
  return;
 }
}


function __ZNK13b2DynamicTree15ValidateMetricsEi($this,$index){
 $this=($this)|0;
 $index=($index)|0;
 var $aabb=0,$1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$12=0,$15=0,$18=0,$19=0,$20=0,$23=0,$25=0,$26=0,$27=0,$30=0;
 var $31=0,$or_cond=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$45=0,$46=0,$47=0,$48=0,$49=0,$52=0,$53=0,$54=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $aabb=((sp)|0);
 $1=($index|0)==-1;
 if ($1) {
  STACKTOP=sp;return;
 }
 $3=(($this+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+((($index)*(36))&-1))|0);
 $6=(($4+((($index)*(36))&-1)+24)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($4+((($index)*(36))&-1)+28)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=((__ZNK10b2TreeNode6IsLeafEv($5))|0);
 if ($10) {
  $12=($7|0)==-1;
  if (!($12)) {
   ___assert_fail(((8128)|0),((10960)|0),((631)|0),((12032)|0));

  }
  $15=($9|0)==-1;
  if (!($15)) {
   ___assert_fail(((7904)|0),((10960)|0),((632)|0),((12032)|0));

  }
  $18=(($4+((($index)*(36))&-1)+32)|0);
  $19=((HEAP32[(($18)>>2)])|0);
  $20=($19|0)==0;
  if ($20) {
   STACKTOP=sp;return;
  } else {
   ___assert_fail(((7680)|0),((10960)|0),((633)|0),((12032)|0));

  }
 }
 $23=($7|0)>-1;
 if (!($23)) {
  ___assert_fail(((7520)|0),((10960)|0),((637)|0),((12032)|0));

 }
 $25=(($this+12)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=($7|0)<($26|0);
 if (!($27)) {
  ___assert_fail(((7520)|0),((10960)|0),((637)|0),((12032)|0));

 }
 $30=($9|0)>-1;
 $31=($9|0)<($26|0);
 $or_cond=$30&$31;
 if (!($or_cond)) {
  ___assert_fail(((7280)|0),((10960)|0),((638)|0),((12032)|0));

 }
 $34=(($4+((($7)*(36))&-1)+32)|0);
 $35=((HEAP32[(($34)>>2)])|0);
 $36=(($4+((($9)*(36))&-1)+32)|0);
 $37=((HEAP32[(($36)>>2)])|0);
 $38=((__Z5b2MaxIiET_S0_S0_($35,$37))|0);
 $39=((($38)+(1))|0);
 $40=(($4+((($index)*(36))&-1)+32)|0);
 $41=((HEAP32[(($40)>>2)])|0);
 $42=($41|0)==($39|0);
 if (!($42)) {
  ___assert_fail(((5920)|0),((10960)|0),((644)|0),((12032)|0));

 }
 $45=(($4+((($7)*(36))&-1))|0);
 $46=(($4+((($9)*(36))&-1))|0);
 __ZN6b2AABB7CombineERKS_S1_($aabb,$45,$46);
 $47=(($aabb)|0);
 $48=(($5)|0);
 $49=((__ZeqRK6b2Vec2S1_($47,$48))|0);
 if (!($49)) {
  ___assert_fail(((5776)|0),((10960)|0),((649)|0),((12032)|0));

 }
 $52=(($aabb+8)|0);
 $53=(($4+((($index)*(36))&-1)+8)|0);
 $54=((__ZeqRK6b2Vec2S1_($52,$53))|0);
 if (!($54)) {
  ___assert_fail(((5512)|0),((10960)|0),((650)|0),((12032)|0));

 }
 __ZNK13b2DynamicTree15ValidateMetricsEi($this,$7);
 __ZNK13b2DynamicTree15ValidateMetricsEi($this,$9);
 STACKTOP=sp;return;
}


function __ZeqRK6b2Vec2S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$7=0,$8=.0,$9=0,$10=.0,$11=0,$13=0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=$2==$4;
 if (!($5)) {
  $13=0;

  return (($13)|0);
 }
 $7=(($a+4)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($b+4)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=$8==$10;
 $13=$11;

 return (($13)|0);
}


function __ZNK13b2DynamicTree8ValidateEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$freeIndex_06=0,$5=0,$6=0,$7=0,$freeIndex_08=0,$freeCount_07=0,$9=0,$11=0,$12=0,$15=0,$16=0,$17=0,$freeIndex_0=0,$18=0,$freeCount_0_lcssa=0,$19=0;
 var $20=0,$21=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZNK13b2DynamicTree17ValidateStructureEi($this,$2);
 $3=((HEAP32[(($1)>>2)])|0);
 __ZNK13b2DynamicTree15ValidateMetricsEi($this,$3);
 $4=(($this+16)|0);
 $freeIndex_06=((HEAP32[(($4)>>2)])|0);
 $5=($freeIndex_06|0)==-1;
 L1: do {
  if ($5) {
   $freeCount_0_lcssa=0;
  } else {
   $6=(($this+12)|0);
   $7=(($this+4)|0);
   $freeCount_07=0;$freeIndex_08=$freeIndex_06;
   while(1) {


    $9=($freeIndex_08|0)>-1;
    if (!($9)) {
     label = 5;
     break;
    }
    $11=((HEAP32[(($6)>>2)])|0);
    $12=($freeIndex_08|0)<($11|0);
    if (!($12)) {
     label = 5;
     break;
    }
    $15=((HEAP32[(($7)>>2)])|0);
    $16=(($15+((($freeIndex_08)*(36))&-1)+20)|0);
    $17=((($freeCount_07)+(1))|0);
    $freeIndex_0=((HEAP32[(($16)>>2)])|0);
    $18=($freeIndex_0|0)==-1;
    if ($18) {
     $freeCount_0_lcssa=$17;
     break L1;
    } else {
     $freeCount_07=$17;$freeIndex_08=$freeIndex_0;
    }
   }
   if ((label|0) == 5) {
    ___assert_fail(((5144)|0),((10960)|0),((665)|0),((11984)|0));

   }
  }
 } while(0);

 $19=((__ZNK13b2DynamicTree9GetHeightEv($this))|0);
 $20=((__ZNK13b2DynamicTree13ComputeHeightEv($this))|0);
 $21=($19|0)==($20|0);
 if (!($21)) {
  ___assert_fail(((5040)|0),((10960)|0),((670)|0),((11984)|0));

 }
 $24=(($this+8)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($25)+($freeCount_0_lcssa))|0);
 $27=(($this+12)|0);
 $28=((HEAP32[(($27)>>2)])|0);
 $29=($26|0)==($28|0);
 if ($29) {
  return;
 } else {
  ___assert_fail(((4800)|0),((10960)|0),((672)|0),((11984)|0));

 }
}


function __ZNK13b2DynamicTree13GetMaxBalanceEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$maxBalance_09=0,$i_08=0,$7=0,$8=0,$9=0,$11=0,$12=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$25=0,$maxBalance_1=0,$27=0,$28=0,$29=0,$maxBalance_0_lcssa=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 if (!($3)) {
  $maxBalance_0_lcssa=0;

  return (($maxBalance_0_lcssa)|0);
 }
 $4=(($this+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $i_08=0;$maxBalance_09=0;
 while(1) {


  $7=(($5+((($i_08)*(36))&-1)+32)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=($8|0)<2;
  if ($9) {
   $maxBalance_1=$maxBalance_09;
  } else {
   $11=(($5+((($i_08)*(36))&-1))|0);
   $12=((__ZNK10b2TreeNode6IsLeafEv($11))|0);
   if ($12) {
    label = 5;
    break;
   }
   $15=(($5+((($i_08)*(36))&-1)+24)|0);
   $16=((HEAP32[(($15)>>2)])|0);
   $17=(($5+((($i_08)*(36))&-1)+28)|0);
   $18=((HEAP32[(($17)>>2)])|0);
   $19=(($5+((($18)*(36))&-1)+32)|0);
   $20=((HEAP32[(($19)>>2)])|0);
   $21=(($5+((($16)*(36))&-1)+32)|0);
   $22=((HEAP32[(($21)>>2)])|0);
   $23=((($20)-($22))|0);
   $24=((__Z5b2AbsIiET_S0_($23))|0);
   $25=((__Z5b2MaxIiET_S0_S0_($maxBalance_09,$24))|0);
   $maxBalance_1=$25;
  }

  $27=((($i_08)+(1))|0);
  $28=((HEAP32[(($1)>>2)])|0);
  $29=($27|0)<($28|0);
  if ($29) {
   $i_08=$27;$maxBalance_09=$maxBalance_1;
  } else {
   $maxBalance_0_lcssa=$maxBalance_1;
   label = 8;
   break;
  }
 }
 if ((label|0) == 5) {
  ___assert_fail(((4688)|0),((10960)|0),((686)|0),((12048)|0));
  return ((0)|0);
 }
 else if ((label|0) == 8) {

  return (($maxBalance_0_lcssa)|0);
 }
  return 0;
}


function __Z5b2AbsIiET_S0_($a){
 $a=($a)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=($a|0)>0;
 $2=(((-$a))|0);
 $3=($1?$a:$2);
 return (($3)|0);
}


function __ZN13b2DynamicTree15RebuildBottomUpEv($this){
 $this=($this)|0;
 var $aabbi=0,$aabbj=0,$b=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$count_062=0,$i_061=0,$16=0;
 var $17=0,$18=0,$19=0,$21=0,$22=0,$24=0,$25=0,$26=0,$count_1=0,$29=0,$30=0,$31=0,$count_258=0,$minCost_1_lcssa=.0,$iMin_1_lcssa=0,$jMin_1_lcssa=0,$32=0,$minCost_053=.0,$iMin_052=0,$jMin_051=0;
 var $i1_050=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$minCost_147=.0,$iMin_146=0,$jMin_145=0,$j_044=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=.0,$47=0,$jMin_2=0;
 var $iMin_2=0,$minCost_2=.0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$65=0;
 var $66=0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $aabbi=((sp)|0);
 $aabbj=(((sp)+(16))|0);
 $b=(((sp)+(32))|0);
 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2<<2;
 $4=((__Z7b2Alloci($3))|0);
 $5=$4;
 $6=(($this+12)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)>0;
 if (!($8)) {
  $76=((HEAP32[(($5)>>2)])|0);
  $77=(($this)|0);
  HEAP32[(($77)>>2)]=$76;
  __Z6b2FreePv($4);
  __ZNK13b2DynamicTree8ValidateEv($this);
  STACKTOP=sp;return;
 }
 $9=(($this+4)|0);
 $i_061=0;$count_062=0;
 while(1) {


  $16=((HEAP32[(($9)>>2)])|0);
  $17=(($16+((($i_061)*(36))&-1)+32)|0);
  $18=((HEAP32[(($17)>>2)])|0);
  $19=($18|0)<0;
  do {
   if ($19) {
    $count_1=$count_062;
   } else {
    $21=(($16+((($i_061)*(36))&-1))|0);
    $22=((__ZNK10b2TreeNode6IsLeafEv($21))|0);
    if ($22) {
     $24=(($16+((($i_061)*(36))&-1)+20)|0);
     HEAP32[(($24)>>2)]=-1;
     $25=(($5+($count_062<<2))|0);
     HEAP32[(($25)>>2)]=$i_061;
     $26=((($count_062)+(1))|0);
     $count_1=$26;
     break;
    } else {
     __ZN13b2DynamicTree8FreeNodeEi($this,$i_061);
     $count_1=$count_062;
     break;
    }
   }
  } while(0);

  $29=((($i_061)+(1))|0);
  $30=((HEAP32[(($6)>>2)])|0);
  $31=($29|0)<($30|0);
  if ($31) {
   $i_061=$29;$count_062=$count_1;
  } else {
   break;
  }
 }
 $10=($count_1|0)>1;
 if (!($10)) {
  $76=((HEAP32[(($5)>>2)])|0);
  $77=(($this)|0);
  HEAP32[(($77)>>2)]=$76;
  __Z6b2FreePv($4);
  __ZNK13b2DynamicTree8ValidateEv($this);
  STACKTOP=sp;return;
 }
 $11=(($this+4)|0);
 $12=(($this+4)|0);
 $13=$aabbi;
 $14=$aabbj;
 $count_258=$count_1;
 while(1) {

  $i1_050=0;$jMin_051=-1;$iMin_052=-1;$minCost_053=3.4028234663852886e+38;
  while(1) {




   $34=(($5+($i1_050<<2))|0);
   $35=((HEAP32[(($34)>>2)])|0);
   $36=((HEAP32[(($12)>>2)])|0);
   $37=(($36+((($35)*(36))&-1))|0);
   $38=$37;
   HEAP32[(($13)>>2)]=((HEAP32[(($38)>>2)])|0);HEAP32[((($13)+(4))>>2)]=((HEAP32[((($38)+(4))>>2)])|0);HEAP32[((($13)+(8))>>2)]=((HEAP32[((($38)+(8))>>2)])|0);HEAP32[((($13)+(12))>>2)]=((HEAP32[((($38)+(12))>>2)])|0);
   $39=((($i1_050)+(1))|0);
   $40=($39|0)<($count_258|0);
   if ($40) {
    $j_044=$39;$jMin_145=$jMin_051;$iMin_146=$iMin_052;$minCost_147=$minCost_053;
    while(1) {




     $41=(($5+($j_044<<2))|0);
     $42=((HEAP32[(($41)>>2)])|0);
     $43=((HEAP32[(($12)>>2)])|0);
     $44=(($43+((($42)*(36))&-1))|0);
     $45=$44;
     HEAP32[(($14)>>2)]=((HEAP32[(($45)>>2)])|0);HEAP32[((($14)+(4))>>2)]=((HEAP32[((($45)+(4))>>2)])|0);HEAP32[((($14)+(8))>>2)]=((HEAP32[((($45)+(8))>>2)])|0);HEAP32[((($14)+(12))>>2)]=((HEAP32[((($45)+(12))>>2)])|0);
     __ZN6b2AABB7CombineERKS_S1_($b,$aabbi,$aabbj);
     $46=(+(__ZNK6b2AABB12GetPerimeterEv($b)));
     $47=$46<$minCost_147;
     $jMin_2=($47?$j_044:$jMin_145);
     $iMin_2=($47?$i1_050:$iMin_146);
     $minCost_2=($47?$46:$minCost_147);
     $48=((($j_044)+(1))|0);
     $49=($48|0)<($count_258|0);
     if ($49) {
      $j_044=$48;$jMin_145=$jMin_2;$iMin_146=$iMin_2;$minCost_147=$minCost_2;
     } else {
      $jMin_1_lcssa=$jMin_2;$iMin_1_lcssa=$iMin_2;$minCost_1_lcssa=$minCost_2;
      break;
     }
    }
   } else {
    $jMin_1_lcssa=$jMin_051;$iMin_1_lcssa=$iMin_052;$minCost_1_lcssa=$minCost_053;
   }



   $32=($39|0)<($count_258|0);
   if ($32) {
    $i1_050=$39;$jMin_051=$jMin_1_lcssa;$iMin_052=$iMin_1_lcssa;$minCost_053=$minCost_1_lcssa;
   } else {
    break;
   }
  }
  $50=(($5+($iMin_1_lcssa<<2))|0);
  $51=((HEAP32[(($50)>>2)])|0);
  $52=(($5+($jMin_1_lcssa<<2))|0);
  $53=((HEAP32[(($52)>>2)])|0);
  $54=((HEAP32[(($11)>>2)])|0);
  $55=((__ZN13b2DynamicTree12AllocateNodeEv($this))|0);
  $56=((HEAP32[(($11)>>2)])|0);
  $57=(($56+((($55)*(36))&-1)+24)|0);
  HEAP32[(($57)>>2)]=$51;
  $58=(($56+((($55)*(36))&-1)+28)|0);
  HEAP32[(($58)>>2)]=$53;
  $59=(($54+((($51)*(36))&-1)+32)|0);
  $60=((HEAP32[(($59)>>2)])|0);
  $61=(($54+((($53)*(36))&-1)+32)|0);
  $62=((HEAP32[(($61)>>2)])|0);
  $63=((__Z5b2MaxIiET_S0_S0_($60,$62))|0);
  $64=((($63)+(1))|0);
  $65=(($56+((($55)*(36))&-1)+32)|0);
  HEAP32[(($65)>>2)]=$64;
  $66=(($56+((($55)*(36))&-1))|0);
  $67=(($54+((($51)*(36))&-1))|0);
  $68=(($54+((($53)*(36))&-1))|0);
  __ZN6b2AABB7CombineERKS_S1_($66,$67,$68);
  $69=(($56+((($55)*(36))&-1)+20)|0);
  HEAP32[(($69)>>2)]=-1;
  $70=(($54+((($51)*(36))&-1)+20)|0);
  HEAP32[(($70)>>2)]=$55;
  $71=(($54+((($53)*(36))&-1)+20)|0);
  HEAP32[(($71)>>2)]=$55;
  $72=((($count_258)-(1))|0);
  $73=(($5+($72<<2))|0);
  $74=((HEAP32[(($73)>>2)])|0);
  HEAP32[(($52)>>2)]=$74;
  HEAP32[(($50)>>2)]=$55;
  $75=($72|0)>1;
  if ($75) {
   $count_258=$72;
  } else {
   break;
  }
 }
 $76=((HEAP32[(($5)>>2)])|0);
 $77=(($this)|0);
 HEAP32[(($77)>>2)]=$76;
 __Z6b2FreePv($4);
 __ZNK13b2DynamicTree8ValidateEv($this);
 STACKTOP=sp;return;
}


function __Z5b2MinRK6b2Vec2S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(+(__Z5b2MinIfET_S0_S0_($2,$4)));
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=(+(__Z5b2MinIfET_S0_S0_($7,$9)));
 __ZN6b2Vec2C1Eff($agg_result,$5,$10);
 return;
}


function __Z5b2MaxRK6b2Vec2S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(+(__Z5b2MaxIfET_S0_S0_($2,$4)));
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=(+(__Z5b2MaxIfET_S0_S0_($7,$9)));
 __ZN6b2Vec2C1Eff($agg_result,$5,$10);
 return;
}


function __Z5b2MaxIfET_S0_S0_($a,$b){
 $a=+($a);
 $b=+($b);
 var $1=0,$2=.0,label=0;

 $1=$a>$b;
 $2=($1?$a:$b);
 return (+($2));
}


function __Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput($output,$input){
 $output=($output)|0;
 $input=($input)|0;
 var $sweepA=0,$sweepB=0,$cache=0,$distanceInput=0,$xfA=0,$xfB=0,$distanceOutput=0,$fcn=0,$indexA=0,$indexB=0,$1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=0,$8=0,$9=0,$10=0;
 var $11=0,$12=0,$13=0,$14=0,$15=.0,$16=0,$17=.0,$18=0,$19=.0,$20=.0,$21=.0,$22=.0,$23=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0;
 var $33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=.0,$41=.0,$iter_0=0,$t1_0=.0,$43=.0,$44=0,$47=0,$50=.0,$t2_0=.0,$pushBackIter_0=0,$52=.0,$53=0,$56=0;
 var $58=0,$59=0,$60=.0,$61=0,$64=0,$65=0,$66=0,$s2_0=.0,$s1_0=.0,$rootIterCount_0=0,$a1_0=.0,$a2_0=.0,$69=0,$70=0,$72=.0,$73=.0,$74=.0,$75=.0,$76=.0,$77=.0;
 var $79=.0,$80=.0,$t_0=.0,$82=.0,$83=.0,$84=.0,$85=0,$87=0,$s2_0_=.0,$_s1_0=.0,$t_0_a1_0=.0,$a2_0_t_0=.0,$88=0,$89=0,$90=0,$91=0,$t2_1=.0,$rootIterCount_1=0,$93=0,$94=0;
 var $95=0,$96=0,$97=0,$98=0,$99=0,$t1_1=.0,$101=0,$102=0,$103=0,$104=0,$iter_1=0,$107=0,$108=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+368)|0;
 $sweepA=((sp)|0);
 $sweepB=(((sp)+(40))|0);
 $cache=(((sp)+(80))|0);
 $distanceInput=(((sp)+(96))|0);
 $xfA=(((sp)+(192))|0);
 $xfB=(((sp)+(208))|0);
 $distanceOutput=(((sp)+(224))|0);
 $fcn=(((sp)+(248))|0);
 $indexA=(((sp)+(352))|0);
 $indexB=(((sp)+(360))|0);
 $1=((HEAP32[((20168)>>2)])|0);
 $2=((($1)+(1))|0);
 HEAP32[((20168)>>2)]=$2;
 $3=(($output)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($input+128)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(($output+4)|0);
 HEAPF32[(($6)>>2)]=$5;
 $7=(($input)|0);
 $8=(($input+28)|0);
 $9=(($input+56)|0);
 $10=$sweepA;
 $11=$9;
 (_memcpy((($10)|0), (($11)|0), 36)|0);
 $12=(($input+92)|0);
 $13=$sweepB;
 $14=$12;
 (_memcpy((($13)|0), (($14)|0), 36)|0);
 __ZN7b2Sweep9NormalizeEv($sweepA);
 __ZN7b2Sweep9NormalizeEv($sweepB);
 $15=(+(HEAPF32[(($4)>>2)]));
 $16=(($input+24)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($input+52)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=($17)+($19);
 $21=($20)+((-0.014999999664723873));
 $22=(+(__Z5b2MaxIfET_S0_S0_(0.004999999888241291,$21)));
 $23=$22>(0.0012499999720603228);
 if (!($23)) {
  ___assert_fail(((3896)|0),((9320)|0),((280)|0),((13272)|0));

 }
 $26=(($cache+4)|0);
 HEAP16[(($26)>>1)]=0;
 __ZN15b2DistanceInputC1Ev($distanceInput);
 $27=$distanceInput;
 $28=$input;
 HEAP32[(($27)>>2)]=((HEAP32[(($28)>>2)])|0);HEAP32[((($27)+(4))>>2)]=((HEAP32[((($28)+(4))>>2)])|0);HEAP32[((($27)+(8))>>2)]=((HEAP32[((($28)+(8))>>2)])|0);HEAP32[((($27)+(12))>>2)]=((HEAP32[((($28)+(12))>>2)])|0);HEAP32[((($27)+(16))>>2)]=((HEAP32[((($28)+(16))>>2)])|0);HEAP32[((($27)+(20))>>2)]=((HEAP32[((($28)+(20))>>2)])|0);HEAP32[((($27)+(24))>>2)]=((HEAP32[((($28)+(24))>>2)])|0);
 $29=(($distanceInput+28)|0);
 $30=$29;
 $31=$8;
 HEAP32[(($30)>>2)]=((HEAP32[(($31)>>2)])|0);HEAP32[((($30)+(4))>>2)]=((HEAP32[((($31)+(4))>>2)])|0);HEAP32[((($30)+(8))>>2)]=((HEAP32[((($31)+(8))>>2)])|0);HEAP32[((($30)+(12))>>2)]=((HEAP32[((($31)+(12))>>2)])|0);HEAP32[((($30)+(16))>>2)]=((HEAP32[((($31)+(16))>>2)])|0);HEAP32[((($30)+(20))>>2)]=((HEAP32[((($31)+(20))>>2)])|0);HEAP32[((($30)+(24))>>2)]=((HEAP32[((($31)+(24))>>2)])|0);
 $32=(($distanceInput+88)|0);
 HEAP8[($32)]=0;
 $33=(($distanceInput+56)|0);
 $34=$33;
 $35=$xfA;
 $36=(($distanceInput+72)|0);
 $37=$36;
 $38=$xfB;
 $39=(($distanceOutput+16)|0);
 $40=($22)+((0.0012499999720603228));
 $41=($22)+((-0.0012499999720603228));
 $t1_0=0.0;$iter_0=0;
 L4: while(1) {


  __ZNK7b2Sweep12GetTransformEP11b2Transformf($sweepA,$xfA,$t1_0);
  __ZNK7b2Sweep12GetTransformEP11b2Transformf($sweepB,$xfB,$t1_0);
  HEAP32[(($34)>>2)]=((HEAP32[(($35)>>2)])|0);HEAP32[((($34)+(4))>>2)]=((HEAP32[((($35)+(4))>>2)])|0);HEAP32[((($34)+(8))>>2)]=((HEAP32[((($35)+(8))>>2)])|0);HEAP32[((($34)+(12))>>2)]=((HEAP32[((($35)+(12))>>2)])|0);
  HEAP32[(($37)>>2)]=((HEAP32[(($38)>>2)])|0);HEAP32[((($37)+(4))>>2)]=((HEAP32[((($38)+(4))>>2)])|0);HEAP32[((($37)+(8))>>2)]=((HEAP32[((($38)+(8))>>2)])|0);HEAP32[((($37)+(12))>>2)]=((HEAP32[((($38)+(12))>>2)])|0);
  __Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput($distanceOutput,$cache,$distanceInput);
  $43=(+(HEAPF32[(($39)>>2)]));
  $44=$43>(0.0);
  if (!($44)) {
   label = 5;
   break;
  }
  $47=$43<$40;
  if ($47) {
   label = 7;
   break;
  }
  $50=(+(__ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f($fcn,$cache,$7,$sweepA,$8,$sweepB,$t1_0)));
  $pushBackIter_0=0;$t2_0=$15;
  while(1) {


   $52=(+(__ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f($fcn,$indexA,$indexB,$t2_0)));
   $53=$52>$40;
   if ($53) {
    label = 10;
    break L4;
   }
   $56=$52>$41;
   if ($56) {
    $t1_1=$t2_0;
    break;
   }
   $58=((HEAP32[(($indexA)>>2)])|0);
   $59=((HEAP32[(($indexB)>>2)])|0);
   $60=(+(__ZNK20b2SeparationFunction8EvaluateEiif($fcn,$58,$59,$t1_0)));
   $61=$60<$41;
   if ($61) {
    label = 13;
    break L4;
   }
   $64=$60>$40;
   if (!($64)) {
    label = 16;
    break L4;
   }
   $65=((HEAP32[(($indexA)>>2)])|0);
   $66=((HEAP32[(($indexB)>>2)])|0);
   $a2_0=$t2_0;$a1_0=$t1_0;$rootIterCount_0=0;$s1_0=$60;$s2_0=$52;
   while(1) {





    $69=$rootIterCount_0&1;
    $70=($69|0)==0;
    if ($70) {
     $79=($a1_0)+($a2_0);
     $80=($79)*((0.5));
     $t_0=$80;
    } else {
     $72=($22)-($s1_0);
     $73=($a2_0)-($a1_0);
     $74=($72)*($73);
     $75=($s2_0)-($s1_0);
     $76=($74)/($75);
     $77=($a1_0)+($76);
     $t_0=$77;
    }

    $82=(+(__ZNK20b2SeparationFunction8EvaluateEiif($fcn,$65,$66,$t_0)));
    $83=($82)-($22);
    $84=(+(__Z5b2AbsIfET_S0_($83)));
    $85=$84<(0.0012499999720603228);
    if ($85) {
     $rootIterCount_1=$rootIterCount_0;$t2_1=$t_0;
     break;
    }
    $87=$82>$22;
    $s2_0_=($87?$s2_0:$82);
    $_s1_0=($87?$82:$s1_0);
    $t_0_a1_0=($87?$t_0:$a1_0);
    $a2_0_t_0=($87?$a2_0:$t_0);
    $88=((($rootIterCount_0)+(1))|0);
    $89=((HEAP32[((20136)>>2)])|0);
    $90=((($89)+(1))|0);
    HEAP32[((20136)>>2)]=$90;
    $91=($88|0)==50;
    if ($91) {
     $rootIterCount_1=50;$t2_1=$t2_0;
     break;
    } else {
     $a2_0=$a2_0_t_0;$a1_0=$t_0_a1_0;$rootIterCount_0=$88;$s1_0=$_s1_0;$s2_0=$s2_0_;
    }
   }


   $93=((HEAP32[((20144)>>2)])|0);
   $94=((__Z5b2MaxIiET_S0_S0_($93,$rootIterCount_1))|0);
   HEAP32[((20144)>>2)]=$94;
   $95=((($pushBackIter_0)+(1))|0);
   $96=($95|0)==8;
   if ($96) {
    $t1_1=$t1_0;
    break;
   } else {
    $pushBackIter_0=$95;$t2_0=$t2_1;
   }
  }

  $101=((($iter_0)+(1))|0);
  $102=((HEAP32[((20160)>>2)])|0);
  $103=((($102)+(1))|0);
  HEAP32[((20160)>>2)]=$103;
  $104=($101|0)==20;
  if ($104) {
   label = 25;
   break;
  } else {
   $t1_0=$t1_1;$iter_0=$101;
  }
 }
 if ((label|0) == 5) {
  HEAP32[(($3)>>2)]=2;
  HEAPF32[(($6)>>2)]=0.0;
  $iter_1=$iter_0;

  $107=((HEAP32[((20152)>>2)])|0);
  $108=((__Z5b2MaxIiET_S0_S0_($107,$iter_1))|0);
  HEAP32[((20152)>>2)]=$108;
  STACKTOP=sp;return;
 }
 else if ((label|0) == 7) {
  HEAP32[(($3)>>2)]=3;
  HEAPF32[(($6)>>2)]=$t1_0;
  $iter_1=$iter_0;

  $107=((HEAP32[((20152)>>2)])|0);
  $108=((__Z5b2MaxIiET_S0_S0_($107,$iter_1))|0);
  HEAP32[((20152)>>2)]=$108;
  STACKTOP=sp;return;
 }
 else if ((label|0) == 10) {
  HEAP32[(($3)>>2)]=4;
  HEAPF32[(($6)>>2)]=$15;
 }
 else if ((label|0) == 13) {
  HEAP32[(($3)>>2)]=1;
  HEAPF32[(($6)>>2)]=$t1_0;
 }
 else if ((label|0) == 16) {
  HEAP32[(($3)>>2)]=3;
  HEAPF32[(($6)>>2)]=$t1_0;
 }
 else if ((label|0) == 25) {
  HEAP32[(($3)>>2)]=1;
  HEAPF32[(($6)>>2)]=$t1_1;
  $iter_1=20;

  $107=((HEAP32[((20152)>>2)])|0);
  $108=((__Z5b2MaxIiET_S0_S0_($107,$iter_1))|0);
  HEAP32[((20152)>>2)]=$108;
  STACKTOP=sp;return;
 }
 $97=((($iter_0)+(1))|0);
 $98=((HEAP32[((20160)>>2)])|0);
 $99=((($98)+(1))|0);
 HEAP32[((20160)>>2)]=$99;
 $iter_1=$97;

 $107=((HEAP32[((20152)>>2)])|0);
 $108=((__Z5b2MaxIiET_S0_S0_($107,$iter_1))|0);
 HEAP32[((20152)>>2)]=$108;
 STACKTOP=sp;return;
}


function __ZN7b2Sweep9NormalizeEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=.0,$5=.0,$6=.0,$7=0,$8=.0,$9=.0,label=0;

 $1=(($this+24)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)/((6.2831854820251465));
 $4=(+(Math_floor($3)));
 $5=($4)*((6.2831854820251465));
 $6=($2)-($5);
 HEAPF32[(($1)>>2)]=$6;
 $7=(($this+28)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($8)-($5);
 HEAPF32[(($7)>>2)]=$9;
 return;
}


function __ZNK7b2Sweep12GetTransformEP11b2Transformf($this,$xf,$beta){
 $this=($this)|0;
 $xf=($xf)|0;
 $beta=+($beta);
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$11=0,$12=.0,$13=.0,$14=0;
 var $15=.0,$16=.0,$17=.0,$18=0,$19=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=(($xf)|0);
 $6=((1.0))-($beta);
 $7=(($this+8)|0);
 __ZmlfRK6b2Vec2($2,$6,$7);
 $8=(($this+16)|0);
 __ZmlfRK6b2Vec2($3,$beta,$8);
 __ZplRK6b2Vec2S1_($tmpcast,$2,$3);
 $9=$xf;
 $ld$0$0=(($1)|0);
 $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($9)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 $st$3$1=(($9+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 $11=(($this+24)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=($6)*($12);
 $14=(($this+28)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=($15)*($beta);
 $17=($13)+($16);
 $18=(($xf+8)|0);
 __ZN5b2Rot3SetEf($18,$17);
 $19=(($this)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($4,$18,$19);
 __ZN6b2Vec2mIERKS_($5,$4);
 STACKTOP=sp;return;
}


function __ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f($this,$cache,$proxyA,$sweepA,$proxyB,$sweepB,$t1){
 $this=($this)|0;
 $cache=($cache)|0;
 $proxyA=($proxyA)|0;
 $sweepA=($sweepA)|0;
 $proxyB=($proxyB)|0;
 $sweepB=($sweepB)|0;
 $t1=+($t1);
 var $xfA=0,$xfB=0,$localPointA=0,$tmpcast40=0,$localPointB=0,$tmpcast41=0,$pointA=0,$pointB=0,$1=0,$tmpcast42=0,$localPointB1=0,$tmpcast34=0,$localPointB2=0,$tmpcast35=0,$2=0,$tmpcast36=0,$3=0,$normal=0,$4=0,$tmpcast37=0;
 var $5=0,$pointB1=0,$localPointA2=0,$tmpcast38=0,$pointA3=0,$6=0,$7=0,$tmpcast39=0,$localPointA1=0,$tmpcast=0,$localPointA25=0,$tmpcast29=0,$8=0,$tmpcast30=0,$9=0,$normal6=0,$10=0,$tmpcast31=0,$11=0,$pointA7=0;
 var $localPointB8=0,$tmpcast32=0,$pointB9=0,$12=0,$13=0,$tmpcast33=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$or_cond=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0;
 var $30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$ld$0$0=0,$37$0=0,$ld$1$1=0,$37$1=0,$st$2$0=0,$st$3$1=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$ld$4$0=0;
 var $44$0=0,$ld$5$1=0,$44$1=0,$st$6$0=0,$st$7$1=0,$45=0,$46=0,$ld$8$0=0,$47$0=0,$ld$9$1=0,$47$1=0,$st$10$0=0,$st$11$1=0,$48=.0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0;
 var $57=0,$58=0,$59=0,$60=0,$61=0,$ld$12$0=0,$62$0=0,$ld$13$1=0,$62$1=0,$st$14$0=0,$st$15$1=0,$63=0,$64=0,$65=0,$66=0,$67=0,$ld$16$0=0,$68$0=0,$ld$17$1=0,$68$1=0;
 var $st$18$0=0,$st$19$1=0,$69=0,$70=0,$ld$20$0=0,$71$0=0,$ld$21$1=0,$71$1=0,$st$22$0=0,$st$23$1=0,$72=.0,$73=0,$74=0,$75=0,$ld$24$0=0,$76$0=0,$ld$25$1=0,$76$1=0,$st$26$0=0,$st$27$1=0;
 var $77=0,$78=0,$79=0,$80=0,$ld$28$0=0,$81$0=0,$ld$29$1=0,$81$1=0,$st$30$0=0,$st$31$1=0,$82=.0,$83=0,$ld$32$0=0,$85$0=0,$ld$33$1=0,$85$1=0,$st$34$0=0,$st$35$1=0,$86=.0,$88=0;
 var $89=0,$90=0,$91=0,$92=0,$ld$36$0=0,$93$0=0,$ld$37$1=0,$93$1=0,$st$38$0=0,$st$39$1=0,$94=0,$95=0,$96=0,$97=0,$98=0,$ld$40$0=0,$99$0=0,$ld$41$1=0,$99$1=0,$st$42$0=0;
 var $st$43$1=0,$100=0,$101=0,$ld$44$0=0,$102$0=0,$ld$45$1=0,$102$1=0,$st$46$0=0,$st$47$1=0,$103=.0,$104=0,$105=0,$106=0,$ld$48$0=0,$107$0=0,$ld$49$1=0,$107$1=0,$st$50$0=0,$st$51$1=0,$108=0;
 var $109=0,$110=0,$111=0,$112=0,$113=0,$ld$52$0=0,$114$0=0,$ld$53$1=0,$114$1=0,$st$54$0=0,$st$55$1=0,$115=.0,$116=0,$ld$56$0=0,$118$0=0,$ld$57$1=0,$118$1=0,$st$58$0=0,$st$59$1=0,$119=.0;
 var $_0=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $xfA=((sp)|0);
 $xfB=(((sp)+(16))|0);
 $localPointA=(((sp)+(32))|0);
 $tmpcast40=$localPointA;
 $localPointB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast41=$localPointB;
 $pointA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pointB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast42=$1;
 $localPointB1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$localPointB1;
 $localPointB2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$localPointB2;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast37=$4;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pointB1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $localPointA2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast38=$localPointA2;
 $pointA3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast39=$7;
 $localPointA1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$localPointA1;
 $localPointA25=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast29=$localPointA25;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast30=$8;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $normal6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast31=$10;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pointA7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $localPointB8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast32=$localPointB8;
 $pointB9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$13;
 $14=(($this)|0);
 HEAP32[(($14)>>2)]=$proxyA;
 $15=(($this+4)|0);
 HEAP32[(($15)>>2)]=$proxyB;
 $16=(($cache+4)|0);
 $17=((HEAP16[(($16)>>1)])|0);
 $18=(($17<<16)>>16)!=0;
 $19=((($17&65535))>>>0)<((3)>>>0);
 $or_cond=$18&$19;
 if (!($or_cond)) {
  ___assert_fail(((2312)|0),((9320)|0),((50)|0),((12640)|0));
  return 0.0;
 }
 $22=(($this+8)|0);
 $23=$22;
 $24=$sweepA;
 (_memcpy((($23)|0), (($24)|0), 36)|0);
 $25=(($this+44)|0);
 $26=$25;
 $27=$sweepB;
 (_memcpy((($26)|0), (($27)|0), 36)|0);
 __ZNK7b2Sweep12GetTransformEP11b2Transformf($22,$xfA,$t1);
 __ZNK7b2Sweep12GetTransformEP11b2Transformf($25,$xfB,$t1);
 $28=(($17<<16)>>16)==1;
 if ($28) {
  $30=(($this+80)|0);
  HEAP32[(($30)>>2)]=0;
  $31=((HEAP32[(($14)>>2)])|0);
  $32=(($cache+6)|0);
  $33=((HEAP8[($32)])|0);
  $34=($33&255);
  $35=((__ZNK15b2DistanceProxy9GetVertexEi($31,$34))|0);
  $36=$35;
  $ld$0$0=(($36)|0);
  $37$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($36+4)|0);
  $37$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($localPointA)|0);
  HEAP32[(($st$2$0)>>2)]=$37$0;
  $st$3$1=(($localPointA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$37$1;
  $38=((HEAP32[(($15)>>2)])|0);
  $39=(($cache+9)|0);
  $40=((HEAP8[($39)])|0);
  $41=($40&255);
  $42=((__ZNK15b2DistanceProxy9GetVertexEi($38,$41))|0);
  $43=$42;
  $ld$4$0=(($43)|0);
  $44$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($43+4)|0);
  $44$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($localPointB)|0);
  HEAP32[(($st$6$0)>>2)]=$44$0;
  $st$7$1=(($localPointB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$44$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA,$xfA,$tmpcast40);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB,$xfB,$tmpcast41);
  $45=(($this+92)|0);
  __ZmiRK6b2Vec2S1_($tmpcast42,$pointB,$pointA);
  $46=$45;
  $ld$8$0=(($1)|0);
  $47$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($1+4)|0);
  $47$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($46)|0);
  HEAP32[(($st$10$0)>>2)]=$47$0;
  $st$11$1=(($46+4)|0);
  HEAP32[(($st$11$1)>>2)]=$47$1;
  $48=(+(__ZN6b2Vec29NormalizeEv($45)));
  $_0=$48;

  STACKTOP=sp;return (+($_0));
 }
 $50=(($cache+6)|0);
 $51=((HEAP8[($50)])|0);
 $52=(($cache+7)|0);
 $53=((HEAP8[($52)])|0);
 $54=(($51<<24)>>24)==(($53<<24)>>24);
 $55=(($this+80)|0);
 if ($54) {
  HEAP32[(($55)>>2)]=2;
  $57=(($cache+9)|0);
  $58=((HEAP8[($57)])|0);
  $59=($58&255);
  $60=((__ZNK15b2DistanceProxy9GetVertexEi($proxyB,$59))|0);
  $61=$60;
  $ld$12$0=(($61)|0);
  $62$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($61+4)|0);
  $62$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($localPointB1)|0);
  HEAP32[(($st$14$0)>>2)]=$62$0;
  $st$15$1=(($localPointB1+4)|0);
  HEAP32[(($st$15$1)>>2)]=$62$1;
  $63=(($cache+10)|0);
  $64=((HEAP8[($63)])|0);
  $65=($64&255);
  $66=((__ZNK15b2DistanceProxy9GetVertexEi($proxyB,$65))|0);
  $67=$66;
  $ld$16$0=(($67)|0);
  $68$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($67+4)|0);
  $68$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($localPointB2)|0);
  HEAP32[(($st$18$0)>>2)]=$68$0;
  $st$19$1=(($localPointB2+4)|0);
  HEAP32[(($st$19$1)>>2)]=$68$1;
  $69=(($this+92)|0);
  __ZmiRK6b2Vec2S1_($3,$tmpcast35,$tmpcast34);
  __Z7b2CrossRK6b2Vec2f($tmpcast36,$3,1.0);
  $70=$69;
  $ld$20$0=(($2)|0);
  $71$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($2+4)|0);
  $71$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($70)|0);
  HEAP32[(($st$22$0)>>2)]=$71$0;
  $st$23$1=(($70+4)|0);
  HEAP32[(($st$23$1)>>2)]=$71$1;
  $72=(+(__ZN6b2Vec29NormalizeEv($69)));
  $73=(($xfB+8)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal,$73,$69);
  $74=(($this+84)|0);
  __ZplRK6b2Vec2S1_($5,$tmpcast34,$tmpcast35);
  __ZmlfRK6b2Vec2($tmpcast37,0.5,$5);
  $75=$74;
  $ld$24$0=(($4)|0);
  $76$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($4+4)|0);
  $76$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($75)|0);
  HEAP32[(($st$26$0)>>2)]=$76$0;
  $st$27$1=(($75+4)|0);
  HEAP32[(($st$27$1)>>2)]=$76$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB1,$xfB,$74);
  $77=((HEAP8[($50)])|0);
  $78=($77&255);
  $79=((__ZNK15b2DistanceProxy9GetVertexEi($proxyA,$78))|0);
  $80=$79;
  $ld$28$0=(($80)|0);
  $81$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($80+4)|0);
  $81$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($localPointA2)|0);
  HEAP32[(($st$30$0)>>2)]=$81$0;
  $st$31$1=(($localPointA2+4)|0);
  HEAP32[(($st$31$1)>>2)]=$81$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA3,$xfA,$tmpcast38);
  __ZmiRK6b2Vec2S1_($6,$pointA3,$pointB1);
  $82=(+(__Z5b2DotRK6b2Vec2S1_($6,$normal)));
  $83=$82<(0.0);
  if (!($83)) {
   $_0=$82;

   STACKTOP=sp;return (+($_0));
  }
  __ZNK6b2Vec2ngEv($tmpcast39,$69);
  $ld$32$0=(($7)|0);
  $85$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($7+4)|0);
  $85$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($70)|0);
  HEAP32[(($st$34$0)>>2)]=$85$0;
  $st$35$1=(($70+4)|0);
  HEAP32[(($st$35$1)>>2)]=$85$1;
  $86=((-.0))-($82);
  $_0=$86;

  STACKTOP=sp;return (+($_0));
 } else {
  HEAP32[(($55)>>2)]=1;
  $88=((HEAP32[(($14)>>2)])|0);
  $89=((HEAP8[($50)])|0);
  $90=($89&255);
  $91=((__ZNK15b2DistanceProxy9GetVertexEi($88,$90))|0);
  $92=$91;
  $ld$36$0=(($92)|0);
  $93$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($92+4)|0);
  $93$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($localPointA1)|0);
  HEAP32[(($st$38$0)>>2)]=$93$0;
  $st$39$1=(($localPointA1+4)|0);
  HEAP32[(($st$39$1)>>2)]=$93$1;
  $94=((HEAP32[(($14)>>2)])|0);
  $95=((HEAP8[($52)])|0);
  $96=($95&255);
  $97=((__ZNK15b2DistanceProxy9GetVertexEi($94,$96))|0);
  $98=$97;
  $ld$40$0=(($98)|0);
  $99$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($98+4)|0);
  $99$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($localPointA25)|0);
  HEAP32[(($st$42$0)>>2)]=$99$0;
  $st$43$1=(($localPointA25+4)|0);
  HEAP32[(($st$43$1)>>2)]=$99$1;
  $100=(($this+92)|0);
  __ZmiRK6b2Vec2S1_($9,$tmpcast29,$tmpcast);
  __Z7b2CrossRK6b2Vec2f($tmpcast30,$9,1.0);
  $101=$100;
  $ld$44$0=(($8)|0);
  $102$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($8+4)|0);
  $102$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($101)|0);
  HEAP32[(($st$46$0)>>2)]=$102$0;
  $st$47$1=(($101+4)|0);
  HEAP32[(($st$47$1)>>2)]=$102$1;
  $103=(+(__ZN6b2Vec29NormalizeEv($100)));
  $104=(($xfA+8)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal6,$104,$100);
  $105=(($this+84)|0);
  __ZplRK6b2Vec2S1_($11,$tmpcast,$tmpcast29);
  __ZmlfRK6b2Vec2($tmpcast31,0.5,$11);
  $106=$105;
  $ld$48$0=(($10)|0);
  $107$0=((HEAP32[(($ld$48$0)>>2)])|0);
  $ld$49$1=(($10+4)|0);
  $107$1=((HEAP32[(($ld$49$1)>>2)])|0);
  $st$50$0=(($106)|0);
  HEAP32[(($st$50$0)>>2)]=$107$0;
  $st$51$1=(($106+4)|0);
  HEAP32[(($st$51$1)>>2)]=$107$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA7,$xfA,$105);
  $108=((HEAP32[(($15)>>2)])|0);
  $109=(($cache+9)|0);
  $110=((HEAP8[($109)])|0);
  $111=($110&255);
  $112=((__ZNK15b2DistanceProxy9GetVertexEi($108,$111))|0);
  $113=$112;
  $ld$52$0=(($113)|0);
  $114$0=((HEAP32[(($ld$52$0)>>2)])|0);
  $ld$53$1=(($113+4)|0);
  $114$1=((HEAP32[(($ld$53$1)>>2)])|0);
  $st$54$0=(($localPointB8)|0);
  HEAP32[(($st$54$0)>>2)]=$114$0;
  $st$55$1=(($localPointB8+4)|0);
  HEAP32[(($st$55$1)>>2)]=$114$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB9,$xfB,$tmpcast32);
  __ZmiRK6b2Vec2S1_($12,$pointB9,$pointA7);
  $115=(+(__Z5b2DotRK6b2Vec2S1_($12,$normal6)));
  $116=$115<(0.0);
  if (!($116)) {
   $_0=$115;

   STACKTOP=sp;return (+($_0));
  }
  __ZNK6b2Vec2ngEv($tmpcast33,$100);
  $ld$56$0=(($13)|0);
  $118$0=((HEAP32[(($ld$56$0)>>2)])|0);
  $ld$57$1=(($13+4)|0);
  $118$1=((HEAP32[(($ld$57$1)>>2)])|0);
  $st$58$0=(($101)|0);
  HEAP32[(($st$58$0)>>2)]=$118$0;
  $st$59$1=(($101+4)|0);
  HEAP32[(($st$59$1)>>2)]=$118$1;
  $119=((-.0))-($115);
  $_0=$119;

  STACKTOP=sp;return (+($_0));
 }
  return .0;
}


function __ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f($this,$indexA,$indexB,$t){
 $this=($this)|0;
 $indexA=($indexA)|0;
 $indexB=($indexB)|0;
 $t=+($t);
 var $xfA=0,$xfB=0,$axisA=0,$axisB=0,$1=0,$localPointA=0,$localPointB=0,$pointA=0,$pointB=0,$2=0,$normal=0,$pointA1=0,$axisB2=0,$3=0,$localPointB3=0,$pointB4=0,$4=0,$normal6=0,$pointB7=0,$axisA8=0;
 var $5=0,$localPointA9=0,$pointA10=0,$6=0,$7=0,$8=0,$9=0,$10=0,$tmpcast16=0,$tmpcast15=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0;
 var $22=0,$23=0,$24=0,$ld$0$0=0,$25$0=0,$ld$1$1=0,$25$1=0,$st$2$0=0,$st$3$1=0,$26=0,$27=0,$28=0,$29=0,$ld$4$0=0,$30$0=0,$ld$5$1=0,$30$1=0,$st$6$0=0,$st$7$1=0,$31=.0;
 var $tmpcast14=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$ld$8$0=0,$43$0=0,$ld$9$1=0,$43$1=0,$st$10$0=0,$st$11$1=0,$44=.0,$tmpcast=0,$46=0;
 var $47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$ld$12$0=0,$56$0=0,$ld$13$1=0,$56$1=0,$st$14$0=0,$st$15$1=0,$57=.0,$_0=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+208)|0;
 $xfA=((sp)|0);
 $xfB=(((sp)+(16))|0);
 $axisA=(((sp)+(32))|0);
 $axisB=(((sp)+(40))|0);
 $1=(((sp)+(48))|0);
 $localPointA=(((sp)+(56))|0);
 $localPointB=(((sp)+(64))|0);
 $pointA=(((sp)+(72))|0);
 $pointB=(((sp)+(80))|0);
 $2=(((sp)+(88))|0);
 $normal=(((sp)+(96))|0);
 $pointA1=(((sp)+(104))|0);
 $axisB2=(((sp)+(112))|0);
 $3=(((sp)+(120))|0);
 $localPointB3=(((sp)+(128))|0);
 $pointB4=(((sp)+(136))|0);
 $4=(((sp)+(144))|0);
 $normal6=(((sp)+(152))|0);
 $pointB7=(((sp)+(160))|0);
 $axisA8=(((sp)+(168))|0);
 $5=(((sp)+(176))|0);
 $localPointA9=(((sp)+(184))|0);
 $pointA10=(((sp)+(192))|0);
 $6=(((sp)+(200))|0);
 $7=(($this+8)|0);
 __ZNK7b2Sweep12GetTransformEP11b2Transformf($7,$xfA,$t);
 $8=(($this+44)|0);
 __ZNK7b2Sweep12GetTransformEP11b2Transformf($8,$xfB,$t);
 $9=(($this+80)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 if (((($10|0))|0)==((1)|0)) {
  $tmpcast14=$localPointB3;
  $33=(($xfA+8)|0);
  $34=(($this+92)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal,$33,$34);
  $35=(($this+84)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA1,$xfA,$35);
  $36=(($xfB+8)|0);
  __ZNK6b2Vec2ngEv($3,$normal);
  __Z6b2MulTRK5b2RotRK6b2Vec2($axisB2,$36,$3);
  HEAP32[(($indexA)>>2)]=-1;
  $37=(($this+4)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $39=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($38,$axisB2))|0);
  HEAP32[(($indexB)>>2)]=$39;
  $40=((HEAP32[(($37)>>2)])|0);
  $41=((__ZNK15b2DistanceProxy9GetVertexEi($40,$39))|0);
  $42=$41;
  $ld$8$0=(($42)|0);
  $43$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($42+4)|0);
  $43$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($localPointB3)|0);
  HEAP32[(($st$10$0)>>2)]=$43$0;
  $st$11$1=(($localPointB3+4)|0);
  HEAP32[(($st$11$1)>>2)]=$43$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB4,$xfB,$tmpcast14);
  __ZmiRK6b2Vec2S1_($4,$pointB4,$pointA1);
  $44=(+(__Z5b2DotRK6b2Vec2S1_($4,$normal)));
  $_0=$44;

  STACKTOP=sp;return (+($_0));
 } else if (((($10|0))|0)==((0)|0)) {
  $tmpcast16=$localPointB;
  $tmpcast15=$localPointA;
  $12=(($xfA+8)|0);
  $13=(($this+92)|0);
  __Z6b2MulTRK5b2RotRK6b2Vec2($axisA,$12,$13);
  $14=(($xfB+8)|0);
  __ZNK6b2Vec2ngEv($1,$13);
  __Z6b2MulTRK5b2RotRK6b2Vec2($axisB,$14,$1);
  $15=(($this)|0);
  $16=((HEAP32[(($15)>>2)])|0);
  $17=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($16,$axisA))|0);
  HEAP32[(($indexA)>>2)]=$17;
  $18=(($this+4)|0);
  $19=((HEAP32[(($18)>>2)])|0);
  $20=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($19,$axisB))|0);
  HEAP32[(($indexB)>>2)]=$20;
  $21=((HEAP32[(($15)>>2)])|0);
  $22=((HEAP32[(($indexA)>>2)])|0);
  $23=((__ZNK15b2DistanceProxy9GetVertexEi($21,$22))|0);
  $24=$23;
  $ld$0$0=(($24)|0);
  $25$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($24+4)|0);
  $25$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($localPointA)|0);
  HEAP32[(($st$2$0)>>2)]=$25$0;
  $st$3$1=(($localPointA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$25$1;
  $26=((HEAP32[(($18)>>2)])|0);
  $27=((HEAP32[(($indexB)>>2)])|0);
  $28=((__ZNK15b2DistanceProxy9GetVertexEi($26,$27))|0);
  $29=$28;
  $ld$4$0=(($29)|0);
  $30$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($29+4)|0);
  $30$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($localPointB)|0);
  HEAP32[(($st$6$0)>>2)]=$30$0;
  $st$7$1=(($localPointB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$30$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA,$xfA,$tmpcast15);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB,$xfB,$tmpcast16);
  __ZmiRK6b2Vec2S1_($2,$pointB,$pointA);
  $31=(+(__Z5b2DotRK6b2Vec2S1_($2,$13)));
  $_0=$31;

  STACKTOP=sp;return (+($_0));
 } else if (((($10|0))|0)==((2)|0)) {
  $tmpcast=$localPointA9;
  $46=(($xfB+8)|0);
  $47=(($this+92)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal6,$46,$47);
  $48=(($this+84)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB7,$xfB,$48);
  $49=(($xfA+8)|0);
  __ZNK6b2Vec2ngEv($5,$normal6);
  __Z6b2MulTRK5b2RotRK6b2Vec2($axisA8,$49,$5);
  HEAP32[(($indexB)>>2)]=-1;
  $50=(($this)|0);
  $51=((HEAP32[(($50)>>2)])|0);
  $52=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($51,$axisA8))|0);
  HEAP32[(($indexA)>>2)]=$52;
  $53=((HEAP32[(($50)>>2)])|0);
  $54=((__ZNK15b2DistanceProxy9GetVertexEi($53,$52))|0);
  $55=$54;
  $ld$12$0=(($55)|0);
  $56$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($55+4)|0);
  $56$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($localPointA9)|0);
  HEAP32[(($st$14$0)>>2)]=$56$0;
  $st$15$1=(($localPointA9+4)|0);
  HEAP32[(($st$15$1)>>2)]=$56$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA10,$xfA,$tmpcast);
  __ZmiRK6b2Vec2S1_($6,$pointA10,$pointB7);
  $57=(+(__Z5b2DotRK6b2Vec2S1_($6,$normal6)));
  $_0=$57;

  STACKTOP=sp;return (+($_0));
 } else {
  ___assert_fail(((6256)|0),((9320)|0),((183)|0),((11920)|0));
  return 0.0;
 }
  return .0;
}


function __ZNK20b2SeparationFunction8EvaluateEiif($this,$indexA,$indexB,$t){
 $this=($this)|0;
 $indexA=($indexA)|0;
 $indexB=($indexB)|0;
 $t=+($t);
 var $xfA=0,$xfB=0,$axisA=0,$axisB=0,$1=0,$localPointA=0,$localPointB=0,$pointA=0,$pointB=0,$2=0,$normal=0,$pointA1=0,$axisB2=0,$3=0,$localPointB3=0,$pointB4=0,$4=0,$normal6=0,$pointB7=0,$axisA8=0;
 var $5=0,$localPointA9=0,$pointA10=0,$6=0,$7=0,$8=0,$9=0,$10=0,$tmpcast10=0,$tmpcast9=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$ld$0$0=0,$19$0=0,$ld$1$1=0;
 var $19$1=0,$st$2$0=0,$st$3$1=0,$20=0,$21=0,$22=0,$23=0,$ld$4$0=0,$24$0=0,$ld$5$1=0,$24$1=0,$st$6$0=0,$st$7$1=0,$25=.0,$tmpcast8=0,$27=0,$28=0,$29=0,$30=0,$31=0;
 var $32=0,$33=0,$34=0,$ld$8$0=0,$35$0=0,$ld$9$1=0,$35$1=0,$st$10$0=0,$st$11$1=0,$36=.0,$tmpcast=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$ld$12$0=0;
 var $46$0=0,$ld$13$1=0,$46$1=0,$st$14$0=0,$st$15$1=0,$47=.0,$_0=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+208)|0;
 $xfA=((sp)|0);
 $xfB=(((sp)+(16))|0);
 $axisA=(((sp)+(32))|0);
 $axisB=(((sp)+(40))|0);
 $1=(((sp)+(48))|0);
 $localPointA=(((sp)+(56))|0);
 $localPointB=(((sp)+(64))|0);
 $pointA=(((sp)+(72))|0);
 $pointB=(((sp)+(80))|0);
 $2=(((sp)+(88))|0);
 $normal=(((sp)+(96))|0);
 $pointA1=(((sp)+(104))|0);
 $axisB2=(((sp)+(112))|0);
 $3=(((sp)+(120))|0);
 $localPointB3=(((sp)+(128))|0);
 $pointB4=(((sp)+(136))|0);
 $4=(((sp)+(144))|0);
 $normal6=(((sp)+(152))|0);
 $pointB7=(((sp)+(160))|0);
 $axisA8=(((sp)+(168))|0);
 $5=(((sp)+(176))|0);
 $localPointA9=(((sp)+(184))|0);
 $pointA10=(((sp)+(192))|0);
 $6=(((sp)+(200))|0);
 $7=(($this+8)|0);
 __ZNK7b2Sweep12GetTransformEP11b2Transformf($7,$xfA,$t);
 $8=(($this+44)|0);
 __ZNK7b2Sweep12GetTransformEP11b2Transformf($8,$xfB,$t);
 $9=(($this+80)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 if (((($10|0))|0)==((0)|0)) {
  $tmpcast10=$localPointB;
  $tmpcast9=$localPointA;
  $12=(($xfA+8)|0);
  $13=(($this+92)|0);
  __Z6b2MulTRK5b2RotRK6b2Vec2($axisA,$12,$13);
  $14=(($xfB+8)|0);
  __ZNK6b2Vec2ngEv($1,$13);
  __Z6b2MulTRK5b2RotRK6b2Vec2($axisB,$14,$1);
  $15=(($this)|0);
  $16=((HEAP32[(($15)>>2)])|0);
  $17=((__ZNK15b2DistanceProxy9GetVertexEi($16,$indexA))|0);
  $18=$17;
  $ld$0$0=(($18)|0);
  $19$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($18+4)|0);
  $19$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($localPointA)|0);
  HEAP32[(($st$2$0)>>2)]=$19$0;
  $st$3$1=(($localPointA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$19$1;
  $20=(($this+4)|0);
  $21=((HEAP32[(($20)>>2)])|0);
  $22=((__ZNK15b2DistanceProxy9GetVertexEi($21,$indexB))|0);
  $23=$22;
  $ld$4$0=(($23)|0);
  $24$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($23+4)|0);
  $24$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($localPointB)|0);
  HEAP32[(($st$6$0)>>2)]=$24$0;
  $st$7$1=(($localPointB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$24$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA,$xfA,$tmpcast9);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB,$xfB,$tmpcast10);
  __ZmiRK6b2Vec2S1_($2,$pointB,$pointA);
  $25=(+(__Z5b2DotRK6b2Vec2S1_($2,$13)));
  $_0=$25;

  STACKTOP=sp;return (+($_0));
 } else if (((($10|0))|0)==((1)|0)) {
  $tmpcast8=$localPointB3;
  $27=(($xfA+8)|0);
  $28=(($this+92)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal,$27,$28);
  $29=(($this+84)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA1,$xfA,$29);
  $30=(($xfB+8)|0);
  __ZNK6b2Vec2ngEv($3,$normal);
  __Z6b2MulTRK5b2RotRK6b2Vec2($axisB2,$30,$3);
  $31=(($this+4)|0);
  $32=((HEAP32[(($31)>>2)])|0);
  $33=((__ZNK15b2DistanceProxy9GetVertexEi($32,$indexB))|0);
  $34=$33;
  $ld$8$0=(($34)|0);
  $35$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($34+4)|0);
  $35$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($localPointB3)|0);
  HEAP32[(($st$10$0)>>2)]=$35$0;
  $st$11$1=(($localPointB3+4)|0);
  HEAP32[(($st$11$1)>>2)]=$35$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB4,$xfB,$tmpcast8);
  __ZmiRK6b2Vec2S1_($4,$pointB4,$pointA1);
  $36=(+(__Z5b2DotRK6b2Vec2S1_($4,$normal)));
  $_0=$36;

  STACKTOP=sp;return (+($_0));
 } else if (((($10|0))|0)==((2)|0)) {
  $tmpcast=$localPointA9;
  $38=(($xfB+8)|0);
  $39=(($this+92)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal6,$38,$39);
  $40=(($this+84)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB7,$xfB,$40);
  $41=(($xfA+8)|0);
  __ZNK6b2Vec2ngEv($5,$normal6);
  __Z6b2MulTRK5b2RotRK6b2Vec2($axisA8,$41,$5);
  $42=(($this)|0);
  $43=((HEAP32[(($42)>>2)])|0);
  $44=((__ZNK15b2DistanceProxy9GetVertexEi($43,$indexA))|0);
  $45=$44;
  $ld$12$0=(($45)|0);
  $46$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($45+4)|0);
  $46$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($localPointA9)|0);
  HEAP32[(($st$14$0)>>2)]=$46$0;
  $st$15$1=(($localPointA9+4)|0);
  HEAP32[(($st$15$1)>>2)]=$46$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA10,$xfA,$tmpcast);
  __ZmiRK6b2Vec2S1_($6,$pointA10,$pointB7);
  $47=(+(__Z5b2DotRK6b2Vec2S1_($6,$normal6)));
  $_0=$47;

  STACKTOP=sp;return (+($_0));
 } else {
  ___assert_fail(((6256)|0),((9320)|0),((242)|0),((11904)|0));
  return 0.0;
 }
  return .0;
}


function __ZN5b2Rot3SetEf($this,$angle){
 $this=($this)|0;
 $angle=+($angle);
 var $1=.0,$2=0,$3=.0,$4=0,label=0;

 $1=(+(Math_sin($angle)));
 $2=(($this)|0);
 HEAPF32[(($2)>>2)]=$1;
 $3=(+(Math_cos($angle)));
 $4=(($this+4)|0);
 HEAPF32[(($4)>>2)]=$3;
 return;
}


function __ZN12b2ChainShapeD0Ev($this){
 $this=($this)|0;
 var $2=0,$5=0,$4$0=0,$4$1=0,label=0;

 __ZN12b2ChainShapeD2Ev($this);
 $2=$this;
 __ZdlPv($2);
 return;
}


function __ZN12b2ChainShapeD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=14408;
 $2=(($this+12)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=$3;
 __Z6b2FreePv($4);
 HEAP32[(($2)>>2)]=0;
 $5=(($this+16)|0);
 HEAP32[(($5)>>2)]=0;
 return;
}


function __ZN12b2ChainShape10CreateLoopEPK6b2Vec2i($this,$vertices,$count){
 $this=($this)|0;
 $vertices=($vertices)|0;
 $count=($count)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$10=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$ld$0$0=0,$23$0=0,$ld$1$1=0;
 var $23$1=0,$st$2$0=0,$st$3$1=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$ld$4$0=0,$31$0=0,$ld$5$1=0,$31$1=0,$st$6$0=0,$st$7$1=0,$32=0,$33=0,$34=0,$35=0;
 var $36=0,$ld$8$0=0,$37$0=0,$ld$9$1=0,$37$1=0,$st$10$0=0,$st$11$1=0,$38=0,$39=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  ___assert_fail(((3400)|0),((8968)|0),((34)|0),((13136)|0));

 }
 $5=(($this+16)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)==0;
 if (!($7)) {
  ___assert_fail(((3400)|0),((8968)|0),((34)|0),((13136)|0));

 }
 $10=($count|0)>2;
 if ($10) {
  $13=((($count)+(1))|0);
  HEAP32[(($5)>>2)]=$13;
  $14=$13<<3;
  $15=((__Z7b2Alloci($14))|0);
  $16=$15;
  HEAP32[(($1)>>2)]=$16;
  $17=$vertices;
  $18=$count<<3;
  (_memcpy((($15)|0), (($17)|0), $18)|0);
  $19=((HEAP32[(($1)>>2)])|0);
  $20=(($19+($count<<3))|0);
  $21=$19;
  $22=$20;
  $ld$0$0=(($21)|0);
  $23$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($21+4)|0);
  $23$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($22)|0);
  HEAP32[(($st$2$0)>>2)]=$23$0;
  $st$3$1=(($22+4)|0);
  HEAP32[(($st$3$1)>>2)]=$23$1;
  $24=(($this+20)|0);
  $25=((HEAP32[(($5)>>2)])|0);
  $26=((($25)-(2))|0);
  $27=((HEAP32[(($1)>>2)])|0);
  $28=(($27+($26<<3))|0);
  $29=$28;
  $30=$24;
  $ld$4$0=(($29)|0);
  $31$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($29+4)|0);
  $31$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($30)|0);
  HEAP32[(($st$6$0)>>2)]=$31$0;
  $st$7$1=(($30+4)|0);
  HEAP32[(($st$7$1)>>2)]=$31$1;
  $32=(($this+28)|0);
  $33=((HEAP32[(($1)>>2)])|0);
  $34=(($33+8)|0);
  $35=$34;
  $36=$32;
  $ld$8$0=(($35)|0);
  $37$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($35+4)|0);
  $37$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($36)|0);
  HEAP32[(($st$10$0)>>2)]=$37$0;
  $st$11$1=(($36+4)|0);
  HEAP32[(($st$11$1)>>2)]=$37$1;
  $38=(($this+36)|0);
  HEAP8[($38)]=1;
  $39=(($this+37)|0);
  HEAP8[($39)]=1;
  return;
 } else {
  ___assert_fail(((5960)|0),((8968)|0),((35)|0),((13136)|0));

 }
}


function __ZN12b2ChainShape11CreateChainEPK6b2Vec2i($this,$vertices,$count){
 $this=($this)|0;
 $vertices=($vertices)|0;
 $count=($count)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$10=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  ___assert_fail(((3400)|0),((8968)|0),((48)|0),((13120)|0));

 }
 $5=(($this+16)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)==0;
 if (!($7)) {
  ___assert_fail(((3400)|0),((8968)|0),((48)|0),((13120)|0));

 }
 $10=($count|0)>1;
 if ($10) {
  HEAP32[(($5)>>2)]=$count;
  $13=$count<<3;
  $14=((__Z7b2Alloci($13))|0);
  $15=$14;
  HEAP32[(($1)>>2)]=$15;
  $16=$vertices;
  $17=((HEAP32[(($5)>>2)])|0);
  $18=$17<<3;
  (_memcpy((($14)|0), (($16)|0), $18)|0);
  $19=(($this+36)|0);
  HEAP8[($19)]=0;
  $20=(($this+37)|0);
  HEAP8[($20)]=0;
  return;
 } else {
  ___assert_fail(((3920)|0),((8968)|0),((49)|0),((13120)|0));

 }
}


function __ZN12b2ChainShape13SetPrevVertexERK6b2Vec2($this,$prevVertex){
 $this=($this)|0;
 $prevVertex=($prevVertex)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,$5=0,label=0;

 $1=(($this+20)|0);
 $2=$prevVertex;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 $5=(($this+36)|0);
 HEAP8[($5)]=1;
 return;
}


function __ZN12b2ChainShape13SetNextVertexERK6b2Vec2($this,$nextVertex){
 $this=($this)|0;
 $nextVertex=($nextVertex)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,$5=0,label=0;

 $1=(($this+28)|0);
 $2=$nextVertex;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 $5=(($this+37)|0);
 HEAP8[($5)]=1;
 return;
}


function __ZNK12b2ChainShape5CloneEP16b2BlockAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$ld$0$0=0,$15$0=0,$ld$1$1=0,$15$1=0,$st$2$0=0,$st$3$1=0,$16=0,$17=0;
 var $18=0,$19=0,$ld$4$0=0,$20$0=0,$ld$5$1=0,$20$1=0,$st$6$0=0,$st$7$1=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($allocator,40))|0);
 $2=($1|0)==0;
 if ($2) {
  $6=0;
 } else {
  $4=$1;
  __ZN12b2ChainShapeC1Ev($4);
  $6=$4;
 }

 $7=(($this+12)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($this+16)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 __ZN12b2ChainShape11CreateChainEPK6b2Vec2i($6,$8,$10);
 $11=(($6+20)|0);
 $12=(($this+20)|0);
 $13=$12;
 $14=$11;
 $ld$0$0=(($13)|0);
 $15$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $15$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($14)|0);
 HEAP32[(($st$2$0)>>2)]=$15$0;
 $st$3$1=(($14+4)|0);
 HEAP32[(($st$3$1)>>2)]=$15$1;
 $16=(($6+28)|0);
 $17=(($this+28)|0);
 $18=$17;
 $19=$16;
 $ld$4$0=(($18)|0);
 $20$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($18+4)|0);
 $20$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($19)|0);
 HEAP32[(($st$6$0)>>2)]=$20$0;
 $st$7$1=(($19+4)|0);
 HEAP32[(($st$7$1)>>2)]=$20$1;
 $21=(($this+36)|0);
 $22=((HEAP8[($21)])|0);
 $23=(($6+36)|0);
 HEAP8[($23)]=$22;
 $24=(($this+37)|0);
 $25=((HEAP8[($24)])|0);
 $26=(($6+37)|0);
 HEAP8[($26)]=$25;
 $27=(($6)|0);
 return (($27)|0);
}


function __ZN12b2ChainShapeC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN12b2ChainShapeC2Ev($this);
 return;
}


function __ZNK12b2ChainShape13GetChildCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)-(1))|0);
 return (($3)|0);
}


function __ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei($this,$edge,$index){
 $this=($this)|0;
 $edge=($edge)|0;
 $index=($index)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$9=0,$10=0,$11=.0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$ld$0$0=0,$19$0=0,$ld$1$1=0,$19$1=0,$st$2$0=0;
 var $st$3$1=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$ld$4$0=0,$26$0=0,$ld$5$1=0,$26$1=0,$st$6$0=0,$st$7$1=0,$27=0,$28=0,$30=0,$31=0,$32=0,$33=0,$34=0;
 var $ld$8$0=0,$35$0=0,$ld$9$1=0,$35$1=0,$st$10$0=0,$st$11$1=0,$36=0,$38=0,$39=0,$40=0,$ld$12$0=0,$41$0=0,$ld$13$1=0,$41$1=0,$st$14$0=0,$st$15$1=0,$42=0,$43=0,$44=0,$46=0;
 var $47=0,$48=0,$49=0,$51=0,$52=0,$53=0,$54=0,$55=0,$ld$16$0=0,$56$0=0,$ld$17$1=0,$56$1=0,$st$18$0=0,$st$19$1=0,$57=0,$59=0,$60=0,$61=0,$ld$20$0=0,$62$0=0;
 var $ld$21$1=0,$62$1=0,$st$22$0=0,$st$23$1=0,$63=0,$64=0,$65=0,label=0;

 $1=($index|0)>-1;
 if (!($1)) {
  ___assert_fail(((2848)|0),((8968)|0),((89)|0),((12120)|0));

 }
 $3=(($this+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((($4)-(1))|0);
 $6=($5|0)>($index|0);
 if (!($6)) {
  ___assert_fail(((2848)|0),((8968)|0),((89)|0),((12120)|0));

 }
 $9=(($edge+4)|0);
 HEAP32[(($9)>>2)]=1;
 $10=(($this+8)|0);
 $11=(+(HEAPF32[(($10)>>2)]));
 $12=(($edge+8)|0);
 HEAPF32[(($12)>>2)]=$11;
 $13=(($edge+12)|0);
 $14=(($this+12)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=(($15+($index<<3))|0);
 $17=$16;
 $18=$13;
 $ld$0$0=(($17)|0);
 $19$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($17+4)|0);
 $19$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($18)|0);
 HEAP32[(($st$2$0)>>2)]=$19$0;
 $st$3$1=(($18+4)|0);
 HEAP32[(($st$3$1)>>2)]=$19$1;
 $20=(($edge+20)|0);
 $21=((($index)+(1))|0);
 $22=((HEAP32[(($14)>>2)])|0);
 $23=(($22+($21<<3))|0);
 $24=$23;
 $25=$20;
 $ld$4$0=(($24)|0);
 $26$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($24+4)|0);
 $26$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($25)|0);
 HEAP32[(($st$6$0)>>2)]=$26$0;
 $st$7$1=(($25+4)|0);
 HEAP32[(($st$7$1)>>2)]=$26$1;
 $27=($index|0)>0;
 $28=(($edge+28)|0);
 if ($27) {
  $30=((($index)-(1))|0);
  $31=((HEAP32[(($14)>>2)])|0);
  $32=(($31+($30<<3))|0);
  $33=$32;
  $34=$28;
  $ld$8$0=(($33)|0);
  $35$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($33+4)|0);
  $35$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($34)|0);
  HEAP32[(($st$10$0)>>2)]=$35$0;
  $st$11$1=(($34+4)|0);
  HEAP32[(($st$11$1)>>2)]=$35$1;
  $36=(($edge+44)|0);
  HEAP8[($36)]=1;
 } else {
  $38=(($this+20)|0);
  $39=$38;
  $40=$28;
  $ld$12$0=(($39)|0);
  $41$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($39+4)|0);
  $41$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($40)|0);
  HEAP32[(($st$14$0)>>2)]=$41$0;
  $st$15$1=(($40+4)|0);
  HEAP32[(($st$15$1)>>2)]=$41$1;
  $42=(($this+36)|0);
  $43=((HEAP8[($42)])|0);
  $44=(($edge+44)|0);
  HEAP8[($44)]=$43;
 }
 $46=((HEAP32[(($3)>>2)])|0);
 $47=((($46)-(2))|0);
 $48=($47|0)>($index|0);
 $49=(($edge+36)|0);
 if ($48) {
  $51=((($index)+(2))|0);
  $52=((HEAP32[(($14)>>2)])|0);
  $53=(($52+($51<<3))|0);
  $54=$53;
  $55=$49;
  $ld$16$0=(($54)|0);
  $56$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($54+4)|0);
  $56$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($55)|0);
  HEAP32[(($st$18$0)>>2)]=$56$0;
  $st$19$1=(($55+4)|0);
  HEAP32[(($st$19$1)>>2)]=$56$1;
  $57=(($edge+45)|0);
  HEAP8[($57)]=1;
  return;
 } else {
  $59=(($this+28)|0);
  $60=$59;
  $61=$49;
  $ld$20$0=(($60)|0);
  $62$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($60+4)|0);
  $62$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($61)|0);
  HEAP32[(($st$22$0)>>2)]=$62$0;
  $st$23$1=(($61+4)|0);
  HEAP32[(($st$23$1)>>2)]=$62$1;
  $63=(($this+37)|0);
  $64=((HEAP8[($63)])|0);
  $65=(($edge+45)|0);
  HEAP8[($65)]=$64;
  return;
 }
}


function __ZNK12b2ChainShape9TestPointERK11b2TransformRK6b2Vec2($this,$xf,$p){
 $this=($this)|0;
 $xf=($xf)|0;
 $p=($p)|0;
 var label=0;

 return ((0)|0);
}


function __ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($this,$output,$input,$xf,$childIndex){
 $this=($this)|0;
 $output=($output)|0;
 $input=($input)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $edgeShape=0,$1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$_=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$ld$0$0=0,$15$0=0,$ld$1$1=0,$15$1=0,$st$2$0=0,$st$3$1=0;
 var $16=0,$17=0,$18=0,$19=0,$20=0,$ld$4$0=0,$21$0=0,$ld$5$1=0,$21$1=0,$st$6$0=0,$st$7$1=0,$22=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $edgeShape=((sp)|0);
 $1=(($this+16)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>($childIndex|0);
 if ($3) {
  __ZN11b2EdgeShapeC1Ev($edgeShape);
  $6=((($childIndex)+(1))|0);
  $7=((HEAP32[(($1)>>2)])|0);
  $8=($6|0)==($7|0);
  $_=($8?0:$6);
  $9=(($edgeShape+12)|0);
  $10=(($this+12)|0);
  $11=((HEAP32[(($10)>>2)])|0);
  $12=(($11+($childIndex<<3))|0);
  $13=$12;
  $14=$9;
  $ld$0$0=(($13)|0);
  $15$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($13+4)|0);
  $15$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($14)|0);
  HEAP32[(($st$2$0)>>2)]=$15$0;
  $st$3$1=(($14+4)|0);
  HEAP32[(($st$3$1)>>2)]=$15$1;
  $16=(($edgeShape+20)|0);
  $17=((HEAP32[(($10)>>2)])|0);
  $18=(($17+($_<<3))|0);
  $19=$18;
  $20=$16;
  $ld$4$0=(($19)|0);
  $21$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($19+4)|0);
  $21$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($20)|0);
  HEAP32[(($st$6$0)>>2)]=$21$0;
  $st$7$1=(($20+4)|0);
  HEAP32[(($st$7$1)>>2)]=$21$1;
  $22=((__ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($edgeShape,$output,$input,$xf,0))|0);
  STACKTOP=sp;return (($22)|0);
 } else {
  ___assert_fail(((2144)|0),((8968)|0),((129)|0),((12112)|0));
  return ((0)|0);
 }
  return 0;
}


function __ZN11b2EdgeShapeC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN11b2EdgeShapeC2Ev($this);
 return;
}


function __ZN11b2EdgeShapeD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi($this,$aabb,$xf,$childIndex){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $v1=0,$v2=0,$1=0,$2=0,$3=0,$4=0,$5=0,$tmpcast9=0,$tmpcast=0,$8=0,$9=0,$_=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$ld$0$0=0,$16$0=0;
 var $ld$1$1=0,$16$1=0,$st$2$0=0,$st$3$1=0,$17=0,$18=0,$ld$4$0=0,$19$0=0,$ld$5$1=0,$19$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $v1=((sp)|0);
 $v2=(((sp)+(8))|0);
 $1=(((sp)+(16))|0);
 $2=(((sp)+(24))|0);
 $3=(($this+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)>($childIndex|0);
 if ($5) {
  $tmpcast9=$2;
  $tmpcast=$1;
  $8=((($childIndex)+(1))|0);
  $9=($8|0)==($4|0);
  $_=($9?0:$8);
  $10=(($this+12)|0);
  $11=((HEAP32[(($10)>>2)])|0);
  $12=(($11+($childIndex<<3))|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($v1,$xf,$12);
  $13=((HEAP32[(($10)>>2)])|0);
  $14=(($13+($_<<3))|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($v2,$xf,$14);
  __Z5b2MinRK6b2Vec2S1_($tmpcast,$v1,$v2);
  $15=$aabb;
  $ld$0$0=(($1)|0);
  $16$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($1+4)|0);
  $16$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($15)|0);
  HEAP32[(($st$2$0)>>2)]=$16$0;
  $st$3$1=(($15+4)|0);
  HEAP32[(($st$3$1)>>2)]=$16$1;
  $17=(($aabb+8)|0);
  __Z5b2MaxRK6b2Vec2S1_($tmpcast9,$v1,$v2);
  $18=$17;
  $ld$4$0=(($2)|0);
  $19$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($2+4)|0);
  $19$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($18)|0);
  HEAP32[(($st$6$0)>>2)]=$19$0;
  $st$7$1=(($18+4)|0);
  HEAP32[(($st$7$1)>>2)]=$19$1;
  STACKTOP=sp;return;
 } else {
  ___assert_fail(((2144)|0),((8968)|0),((148)|0),((12136)|0));

 }
}


function __ZNK12b2ChainShape11ComputeMassEP10b2MassDataf($this,$massData,$density){
 $this=($this)|0;
 $massData=($massData)|0;
 $density=+($density);
 var $1=0,$2=0,$3=0,label=0;

 $1=(($massData)|0);
 HEAPF32[(($1)>>2)]=0.0;
 $2=(($massData+4)|0);
 __ZN6b2Vec27SetZeroEv($2);
 $3=(($massData+12)|0);
 HEAPF32[(($3)>>2)]=0.0;
 return;
}


function __ZN11b2EdgeShapeC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this)|0);
 __ZN7b2ShapeC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=14624;
 $3=(($this+4)|0);
 HEAP32[(($3)>>2)]=1;
 $4=(($this+8)|0);
 HEAPF32[(($4)>>2)]=0.009999999776482582;
 $5=(($this+28)|0);
 $6=$5;
 _memset((((($6)|0))|0), ((((0)|0))|0), ((((18)|0))|0))|0;
 return;
}


function __ZN7b2ShapeC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=13376;
 return;
}


function __ZN11b2EdgeShapeD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN7b2ShapeD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN7b2ShapeD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN12b2ChainShapeC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this)|0);
 __ZN7b2ShapeC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=14408;
 $3=(($this+4)|0);
 HEAP32[(($3)>>2)]=3;
 $4=(($this+8)|0);
 HEAPF32[(($4)>>2)]=0.009999999776482582;
 $5=(($this+12)|0);
 HEAP32[(($5)>>2)]=0;
 $6=(($this+16)|0);
 HEAP32[(($6)>>2)]=0;
 $7=(($this+36)|0);
 HEAP8[($7)]=0;
 $8=(($this+37)|0);
 HEAP8[($8)]=0;
 return;
}


function __ZNK13b2CircleShape5CloneEP16b2BlockAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,$8=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($allocator,20))|0);
 $2=($1|0)==0;
 if ($2) {
  $6=0;
 } else {
  $4=$1;
  __ZN13b2CircleShapeC1Ev($4);
  $6=$4;
 }

 $7=((__ZN13b2CircleShapeaSERKS_($6,$this))|0);
 $8=(($6)|0);
 return (($8)|0);
}


function __ZN13b2CircleShapeC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN13b2CircleShapeC2Ev($this);
 return;
}


function __ZN13b2CircleShapeaSERKS_($this,$0){
 $this=($this)|0;
 $0=($0)|0;
 var $2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $2=(($this)|0);
 $3=(($0)|0);
 $4=((__ZN7b2ShapeaSERKS_($2,$3))|0);
 $5=(($this+12)|0);
 $6=(($0+12)|0);
 $7=$6;
 $8=$5;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 return (($this)|0);
}


function __ZNK13b2CircleShape13GetChildCountEv($this){
 $this=($this)|0;
 var label=0;

 return ((1)|0);
}


function __ZNK13b2CircleShape9TestPointERK11b2TransformRK6b2Vec2($this,$transform,$p){
 $this=($this)|0;
 $transform=($transform)|0;
 $p=($p)|0;
 var $center=0,$1=0,$d=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=.0,$8=.0,$9=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $center=((sp)|0);
 $1=(((sp)+(8))|0);
 $d=(((sp)+(16))|0);
 $2=(($transform)|0);
 $3=(($transform+8)|0);
 $4=(($this+12)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($1,$3,$4);
 __ZplRK6b2Vec2S1_($center,$2,$1);
 __ZmiRK6b2Vec2S1_($d,$p,$center);
 $5=(+(__Z5b2DotRK6b2Vec2S1_($d,$d)));
 $6=(($this+8)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=($7)*($7);
 $9=$5<=$8;
 STACKTOP=sp;return (($9)|0);
}


function __ZNK13b2CircleShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($this,$output,$input,$transform,$childIndex){
 $this=($this)|0;
 $output=($output)|0;
 $input=($input)|0;
 $transform=($transform)|0;
 $childIndex=($childIndex)|0;
 var $position=0,$1=0,$s=0,$r=0,$2=0,$tmpcast=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$10=.0,$11=.0,$12=.0,$13=0,$14=.0,$15=.0,$16=.0;
 var $17=.0,$18=.0,$19=0,$20=0,$or_cond=0,$22=.0,$23=.0,$24=.0,$25=0,$27=0,$28=.0,$29=.0,$30=0,$32=.0,$33=0,$34=0,$35=0,$ld$0$0=0,$36$0=0,$ld$1$1=0;
 var $36$1=0,$st$2$0=0,$st$3$1=0,$37=.0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $position=((sp)|0);
 $1=(((sp)+(8))|0);
 $s=(((sp)+(16))|0);
 $r=(((sp)+(24))|0);
 $2=(((sp)+(32))|0);
 $tmpcast=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=(($transform)|0);
 $5=(($transform+8)|0);
 $6=(($this+12)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($1,$5,$6);
 __ZplRK6b2Vec2S1_($position,$4,$1);
 $7=(($input)|0);
 __ZmiRK6b2Vec2S1_($s,$7,$position);
 $8=(+(__Z5b2DotRK6b2Vec2S1_($s,$s)));
 $9=(($this+8)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=($10)*($10);
 $12=($8)-($11);
 $13=(($input+8)|0);
 __ZmiRK6b2Vec2S1_($r,$13,$7);
 $14=(+(__Z5b2DotRK6b2Vec2S1_($s,$r)));
 $15=(+(__Z5b2DotRK6b2Vec2S1_($r,$r)));
 $16=($14)*($14);
 $17=($12)*($15);
 $18=($16)-($17);
 $19=$18<(0.0);
 $20=$15<(1.1920928955078125e-7);
 $or_cond=$19|$20;
 if ($or_cond) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $22=(+(Math_sqrt($18)));
 $23=($14)+($22);
 $24=((-.0))-($23);
 $25=$23>(-.0);
 if ($25) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $27=(($input+16)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=($15)*($28);
 $30=$29<$24;
 if ($30) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $32=($24)/($15);
 $33=(($output+8)|0);
 HEAPF32[(($33)>>2)]=$32;
 $34=(($output)|0);
 __ZmlfRK6b2Vec2($3,$32,$r);
 __ZplRK6b2Vec2S1_($tmpcast,$s,$3);
 $35=$output;
 $ld$0$0=(($2)|0);
 $36$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $36$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($35)|0);
 HEAP32[(($st$2$0)>>2)]=$36$0;
 $st$3$1=(($35+4)|0);
 HEAP32[(($st$3$1)>>2)]=$36$1;
 $37=(+(__ZN6b2Vec29NormalizeEv($34)));
 $_0=1;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNK13b2CircleShape11ComputeAABBEP6b2AABBRK11b2Transformi($this,$aabb,$transform,$childIndex){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $transform=($transform)|0;
 $childIndex=($childIndex)|0;
 var $p=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=0,$12=.0,$13=.0,$14=0,$15=.0,$16=.0,$17=.0,$18=.0,$19=.0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $p=((sp)|0);
 $1=(((sp)+(8))|0);
 $2=(($transform)|0);
 $3=(($transform+8)|0);
 $4=(($this+12)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($1,$3,$4);
 __ZplRK6b2Vec2S1_($p,$2,$1);
 $5=(($aabb)|0);
 $6=(($p)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($this+8)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)-($9);
 $11=(($p+4)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=($12)-($9);
 __ZN6b2Vec23SetEff($5,$10,$13);
 $14=(($aabb+8)|0);
 $15=(+(HEAPF32[(($6)>>2)]));
 $16=(+(HEAPF32[(($8)>>2)]));
 $17=($15)+($16);
 $18=(+(HEAPF32[(($11)>>2)]));
 $19=($16)+($18);
 __ZN6b2Vec23SetEff($14,$17,$19);
 STACKTOP=sp;return;
}


function __ZNK13b2CircleShape11ComputeMassEP10b2MassDataf($this,$massData,$density){
 $this=($this)|0;
 $massData=($massData)|0;
 $density=+($density);
 var $1=.0,$2=0,$3=.0,$4=.0,$5=.0,$6=0,$7=0,$8=0,$9=0,$10=0,$ld$0$0=0,$11$0=0,$ld$1$1=0,$11$1=0,$st$2$0=0,$st$3$1=0,$12=.0,$13=.0,$14=.0,$15=.0;
 var $16=.0,$17=.0,$18=.0,$19=0,label=0;

 $1=($density)*((3.1415927410125732));
 $2=(($this+8)|0);
 $3=(+(HEAPF32[(($2)>>2)]));
 $4=($1)*($3);
 $5=($3)*($4);
 $6=(($massData)|0);
 HEAPF32[(($6)>>2)]=$5;
 $7=(($massData+4)|0);
 $8=(($this+12)|0);
 $9=$8;
 $10=$7;
 $ld$0$0=(($9)|0);
 $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($9+4)|0);
 $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($10)|0);
 HEAP32[(($st$2$0)>>2)]=$11$0;
 $st$3$1=(($10+4)|0);
 HEAP32[(($st$3$1)>>2)]=$11$1;
 $12=(+(HEAPF32[(($6)>>2)]));
 $13=(+(HEAPF32[(($2)>>2)]));
 $14=($13)*((0.5));
 $15=($13)*($14);
 $16=(+(__Z5b2DotRK6b2Vec2S1_($8,$8)));
 $17=($16)+($15);
 $18=($12)*($17);
 $19=(($massData+12)|0);
 HEAPF32[(($19)>>2)]=$18;
 return;
}


function __ZN13b2CircleShapeD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN13b2CircleShapeD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN7b2ShapeaSERKS_($this,$0){
 $this=($this)|0;
 $0=($0)|0;
 var $2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,label=0;

 $2=(($0+4)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($this+4)|0);
 HEAP32[(($4)>>2)]=$3;
 $5=(($0+8)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($this+8)|0);
 HEAPF32[(($7)>>2)]=$6;
 return (($this)|0);
}


function __ZN13b2CircleShapeC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this)|0);
 __ZN7b2ShapeC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=14248;
 $3=(($this+12)|0);
 $4=(($this+4)|0);
 HEAP32[(($4)>>2)]=0;
 $5=(($this+8)|0);
 HEAPF32[(($5)>>2)]=0.0;
 __ZN6b2Vec27SetZeroEv($3);
 return;
}


function __ZN11b2EdgeShape3SetERK6b2Vec2S2_($this,$v1,$v2){
 $this=($this)|0;
 $v1=($v1)|0;
 $v2=($v2)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,$5=0,$6=0,$7=0,$ld$4$0=0,$8$0=0,$ld$5$1=0,$8$1=0,$st$6$0=0,$st$7$1=0,$9=0,$10=0;
 var label=0;

 $1=(($this+12)|0);
 $2=$v1;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 $5=(($this+20)|0);
 $6=$v2;
 $7=$5;
 $ld$4$0=(($6)|0);
 $8$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($6+4)|0);
 $8$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($7)|0);
 HEAP32[(($st$6$0)>>2)]=$8$0;
 $st$7$1=(($7+4)|0);
 HEAP32[(($st$7$1)>>2)]=$8$1;
 $9=(($this+44)|0);
 HEAP8[($9)]=0;
 $10=(($this+45)|0);
 HEAP8[($10)]=0;
 return;
}


function __ZNK11b2EdgeShape5CloneEP16b2BlockAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,$8=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($allocator,48))|0);
 $2=($1|0)==0;
 if ($2) {
  $6=0;
 } else {
  $4=$1;
  __ZN11b2EdgeShapeC1Ev($4);
  $6=$4;
 }

 $7=((__ZN11b2EdgeShapeaSERKS_($6,$this))|0);
 $8=(($6)|0);
 return (($8)|0);
}


function __ZN11b2EdgeShapeaSERKS_($this,$0){
 $this=($this)|0;
 $0=($0)|0;
 var $2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0,$13=0,$ld$4$0=0,$14$0=0,$ld$5$1=0;
 var $14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=0,$17=0,$18=0,$ld$8$0=0,$19$0=0,$ld$9$1=0,$19$1=0,$st$10$0=0,$st$11$1=0,$20=0,$21=0,$22=0,$23=0,$ld$12$0=0,$24$0=0,$ld$13$1=0;
 var $24$1=0,$st$14$0=0,$st$15$1=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,label=0;

 $2=(($this)|0);
 $3=(($0)|0);
 $4=((__ZN7b2ShapeaSERKS_($2,$3))|0);
 $5=(($this+12)|0);
 $6=(($0+12)|0);
 $7=$6;
 $8=$5;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($this+20)|0);
 $11=(($0+20)|0);
 $12=$11;
 $13=$10;
 $ld$4$0=(($12)|0);
 $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($12+4)|0);
 $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($13)|0);
 HEAP32[(($st$6$0)>>2)]=$14$0;
 $st$7$1=(($13+4)|0);
 HEAP32[(($st$7$1)>>2)]=$14$1;
 $15=(($this+28)|0);
 $16=(($0+28)|0);
 $17=$16;
 $18=$15;
 $ld$8$0=(($17)|0);
 $19$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($17+4)|0);
 $19$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($18)|0);
 HEAP32[(($st$10$0)>>2)]=$19$0;
 $st$11$1=(($18+4)|0);
 HEAP32[(($st$11$1)>>2)]=$19$1;
 $20=(($this+36)|0);
 $21=(($0+36)|0);
 $22=$21;
 $23=$20;
 $ld$12$0=(($22)|0);
 $24$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($22+4)|0);
 $24$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($23)|0);
 HEAP32[(($st$14$0)>>2)]=$24$0;
 $st$15$1=(($23+4)|0);
 HEAP32[(($st$15$1)>>2)]=$24$1;
 $25=(($0+44)|0);
 $26=((HEAP8[($25)])|0);
 $27=(($this+44)|0);
 HEAP8[($27)]=$26;
 $28=(($0+45)|0);
 $29=((HEAP8[($28)])|0);
 $30=(($this+45)|0);
 HEAP8[($30)]=$29;
 return (($this)|0);
}


function __ZNK11b2EdgeShape13GetChildCountEv($this){
 $this=($this)|0;
 var label=0;

 return ((1)|0);
}


function __ZNK11b2EdgeShape9TestPointERK11b2TransformRK6b2Vec2($this,$xf,$p){
 $this=($this)|0;
 $xf=($xf)|0;
 $p=($p)|0;
 var label=0;

 return ((0)|0);
}


function __ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($this,$output,$input,$xf,$childIndex){
 $this=($this)|0;
 $output=($output)|0;
 $input=($input)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $p1=0,$1=0,$p2=0,$2=0,$d=0,$v1=0,$tmpcast=0,$v2=0,$tmpcast19=0,$e=0,$normal=0,$tmpcast20=0,$3=0,$q=0,$4=0,$r=0,$5=0,$6=0,$tmpcast21=0,$7=0;
 var $8=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$st$2$0=0,$st$3$1=0,$14=0,$15=0,$ld$4$0=0,$16$0=0,$ld$5$1=0,$16$1=0,$st$6$0=0,$st$7$1=0,$17=0;
 var $18=.0,$19=0,$20=.0,$21=.0,$22=.0,$23=.0,$24=.0,$25=0,$27=.0,$28=0,$30=0,$31=.0,$32=0,$34=.0,$35=0,$37=.0,$38=.0,$39=0,$40=0,$or_cond=0;
 var $42=0,$43=0,$45=0,$ld$8$0=0,$46$0=0,$ld$9$1=0,$46$1=0,$st$10$0=0,$st$11$1=0,$48=0,$ld$12$0=0,$49$0=0,$ld$13$1=0,$49$1=0,$st$14$0=0,$st$15$1=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $p1=((sp)|0);
 $1=(((sp)+(8))|0);
 $p2=(((sp)+(16))|0);
 $2=(((sp)+(24))|0);
 $d=(((sp)+(32))|0);
 $v1=(((sp)+(40))|0);
 $tmpcast=$v1;
 $v2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast19=$v2;
 $e=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast20=$normal;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $q=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $r=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast21=$6;
 $7=(($xf+8)|0);
 $8=(($input)|0);
 $9=(($xf)|0);
 __ZmiRK6b2Vec2S1_($1,$8,$9);
 __Z6b2MulTRK5b2RotRK6b2Vec2($p1,$7,$1);
 $10=(($input+8)|0);
 __ZmiRK6b2Vec2S1_($2,$10,$9);
 __Z6b2MulTRK5b2RotRK6b2Vec2($p2,$7,$2);
 __ZmiRK6b2Vec2S1_($d,$p2,$p1);
 $11=(($this+12)|0);
 $12=$11;
 $ld$0$0=(($12)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($12+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($v1)|0);
 HEAP32[(($st$2$0)>>2)]=$13$0;
 $st$3$1=(($v1+4)|0);
 HEAP32[(($st$3$1)>>2)]=$13$1;
 $14=(($this+20)|0);
 $15=$14;
 $ld$4$0=(($15)|0);
 $16$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($15+4)|0);
 $16$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($v2)|0);
 HEAP32[(($st$6$0)>>2)]=$16$0;
 $st$7$1=(($v2+4)|0);
 HEAP32[(($st$7$1)>>2)]=$16$1;
 __ZmiRK6b2Vec2S1_($e,$tmpcast19,$tmpcast);
 $17=(($e+4)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=(($e)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=((-.0))-($20);
 __ZN6b2Vec2C1Eff($tmpcast20,$18,$21);
 $22=(+(__ZN6b2Vec29NormalizeEv($tmpcast20)));
 __ZmiRK6b2Vec2S1_($3,$tmpcast,$p1);
 $23=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast20,$3)));
 $24=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast20,$d)));
 $25=$24==(0.0);
 if ($25) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $27=($23)/($24);
 $28=$27<(0.0);
 if ($28) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $30=(($input+16)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=$31<$27;
 if ($32) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 __ZmlfRK6b2Vec2($4,$27,$d);
 __ZplRK6b2Vec2S1_($q,$p1,$4);
 __ZmiRK6b2Vec2S1_($r,$tmpcast19,$tmpcast);
 $34=(+(__Z5b2DotRK6b2Vec2S1_($r,$r)));
 $35=$34==(0.0);
 if ($35) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 __ZmiRK6b2Vec2S1_($5,$q,$tmpcast);
 $37=(+(__Z5b2DotRK6b2Vec2S1_($5,$r)));
 $38=($37)/($34);
 $39=$38<(0.0);
 $40=$38>(1.0);
 $or_cond=$39|$40;
 if ($or_cond) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $42=(($output+8)|0);
 HEAPF32[(($42)>>2)]=$27;
 $43=$23>(0.0);
 if ($43) {
  __ZNK6b2Vec2ngEv($tmpcast21,$tmpcast20);
  $45=$output;
  $ld$8$0=(($6)|0);
  $46$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($6+4)|0);
  $46$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($45)|0);
  HEAP32[(($st$10$0)>>2)]=$46$0;
  $st$11$1=(($45+4)|0);
  HEAP32[(($st$11$1)>>2)]=$46$1;
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 } else {
  $48=$output;
  $ld$12$0=(($normal)|0);
  $49$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($normal+4)|0);
  $49$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($48)|0);
  HEAP32[(($st$14$0)>>2)]=$49$0;
  $st$15$1=(($48+4)|0);
  HEAP32[(($st$15$1)>>2)]=$49$1;
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
  return 0;
}


function __ZNK11b2EdgeShape11ComputeAABBEP6b2AABBRK11b2Transformi($this,$aabb,$xf,$childIndex){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $v1=0,$v2=0,$lower=0,$upper=0,$r=0,$1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0;
 var $9=0,$10=0,$ld$4$0=0,$11$0=0,$ld$5$1=0,$11$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $v1=((sp)|0);
 $v2=(((sp)+(8))|0);
 $lower=(((sp)+(16))|0);
 $upper=(((sp)+(24))|0);
 $r=(((sp)+(32))|0);
 $1=(((sp)+(40))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=(($this+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($v1,$xf,$3);
 $4=(($this+20)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($v2,$xf,$4);
 __Z5b2MinRK6b2Vec2S1_($lower,$v1,$v2);
 __Z5b2MaxRK6b2Vec2S1_($upper,$v1,$v2);
 $5=(($this+8)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 __ZN6b2Vec2C1Eff($r,$6,$6);
 __ZmiRK6b2Vec2S1_($tmpcast,$lower,$r);
 $7=$aabb;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($aabb+8)|0);
 __ZplRK6b2Vec2S1_($tmpcast5,$upper,$r);
 $10=$9;
 $ld$4$0=(($2)|0);
 $11$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $11$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($10)|0);
 HEAP32[(($st$6$0)>>2)]=$11$0;
 $st$7$1=(($10+4)|0);
 HEAP32[(($st$7$1)>>2)]=$11$1;
 STACKTOP=sp;return;
}


function __ZNK11b2EdgeShape11ComputeMassEP10b2MassDataf($this,$massData,$density){
 $this=($this)|0;
 $massData=($massData)|0;
 $density=+($density);
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=(($massData)|0);
 HEAPF32[(($3)>>2)]=0.0;
 $4=(($massData+4)|0);
 $5=(($this+12)|0);
 $6=(($this+20)|0);
 __ZplRK6b2Vec2S1_($2,$5,$6);
 __ZmlfRK6b2Vec2($tmpcast,0.5,$2);
 $7=$4;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($massData+12)|0);
 HEAPF32[(($9)>>2)]=0.0;
 STACKTOP=sp;return;
}


function __ZNK14b2PolygonShape5CloneEP16b2BlockAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,$8=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($allocator,152))|0);
 $2=($1|0)==0;
 if ($2) {
  $6=0;
 } else {
  $4=$1;
  __ZN14b2PolygonShapeC1Ev($4);
  $6=$4;
 }

 $7=((__ZN14b2PolygonShapeaSERKS_($6,$this))|0);
 $8=(($6)|0);
 return (($8)|0);
}


function __ZN14b2PolygonShapeC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN14b2PolygonShapeC2Ev($this);
 return;
}


function __ZN14b2PolygonShapeaSERKS_($this,$0){
 $this=($this)|0;
 $0=($0)|0;
 var $2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0;
 var $17=0,$18=0,$19=0,$20=0,label=0;

 $2=(($this)|0);
 $3=(($0)|0);
 $4=((__ZN7b2ShapeaSERKS_($2,$3))|0);
 $5=(($this+12)|0);
 $6=(($0+12)|0);
 $7=$6;
 $8=$5;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($this+20)|0);
 $11=$10;
 $12=(($0+20)|0);
 $13=$12;
 (_memcpy((($11)|0), (($13)|0), 64)|0);
 $14=(($this+84)|0);
 $15=$14;
 $16=(($0+84)|0);
 $17=$16;
 (_memcpy((($15)|0), (($17)|0), 64)|0);
 $18=(($0+148)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($this+148)|0);
 HEAP32[(($20)>>2)]=$19;
 return (($this)|0);
}


function __ZN14b2PolygonShape8SetAsBoxEff($this,$hx,$hy){
 $this=($this)|0;
 $hx=+($hx);
 $hy=+($hy);
 var $1=0,$2=0,$3=.0,$4=.0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+148)|0);
 HEAP32[(($1)>>2)]=4;
 $2=(($this+20)|0);
 $3=((-.0))-($hx);
 $4=((-.0))-($hy);
 __ZN6b2Vec23SetEff($2,$3,$4);
 $5=(($this+28)|0);
 __ZN6b2Vec23SetEff($5,$hx,$4);
 $6=(($this+36)|0);
 __ZN6b2Vec23SetEff($6,$hx,$hy);
 $7=(($this+44)|0);
 __ZN6b2Vec23SetEff($7,$3,$hy);
 $8=(($this+84)|0);
 __ZN6b2Vec23SetEff($8,0.0,-1.0);
 $9=(($this+92)|0);
 __ZN6b2Vec23SetEff($9,1.0,0.0);
 $10=(($this+100)|0);
 __ZN6b2Vec23SetEff($10,0.0,1.0);
 $11=(($this+108)|0);
 __ZN6b2Vec23SetEff($11,-1.0,0.0);
 $12=(($this+12)|0);
 __ZN6b2Vec27SetZeroEv($12);
 return;
}


function __ZN14b2PolygonShape8SetAsBoxEffRK6b2Vec2f($this,$hx,$hy,$center,$angle){
 $this=($this)|0;
 $hx=+($hx);
 $hy=+($hy);
 $center=($center)|0;
 $angle=+($angle);
 var $xf17=0,$xf17_sub=0,$tmpcast=0,$1=0,$tmpcast18=0,$2=0,$tmpcast19=0,$3=0,$4=0,$5=.0,$6=.0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0;
 var $16=0,$ld$0$0=0,$17$0=0,$ld$1$1=0,$17$1=0,$st$2$0=0,$st$3$1=0,$ld$4$0=0,$18$0=0,$ld$5$1=0,$18$1=0,$st$6$0=0,$st$7$1=0,$19=0,$20=0,$21=0,$22=0,$i_020=0,$23=0,$24=0;
 var $ld$8$0=0,$25$0=0,$ld$9$1=0,$25$1=0,$st$10$0=0,$st$11$1=0,$26=0,$27=0,$ld$12$0=0,$28$0=0,$ld$13$1=0,$28$1=0,$st$14$0=0,$st$15$1=0,$29=0,$30=0,$31=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $xf17=((sp)|0);
 $xf17_sub=(($xf17)|0);
 $tmpcast=$xf17;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast18=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast19=$2;
 $3=(($this+148)|0);
 HEAP32[(($3)>>2)]=4;
 $4=(($this+20)|0);
 $5=((-.0))-($hx);
 $6=((-.0))-($hy);
 __ZN6b2Vec23SetEff($4,$5,$6);
 $7=(($this+28)|0);
 __ZN6b2Vec23SetEff($7,$hx,$6);
 $8=(($this+36)|0);
 __ZN6b2Vec23SetEff($8,$hx,$hy);
 $9=(($this+44)|0);
 __ZN6b2Vec23SetEff($9,$5,$hy);
 $10=(($this+84)|0);
 __ZN6b2Vec23SetEff($10,0.0,-1.0);
 $11=(($this+92)|0);
 __ZN6b2Vec23SetEff($11,1.0,0.0);
 $12=(($this+100)|0);
 __ZN6b2Vec23SetEff($12,0.0,1.0);
 $13=(($this+108)|0);
 __ZN6b2Vec23SetEff($13,-1.0,0.0);
 $14=(($this+12)|0);
 $15=$center;
 $16=$14;
 $ld$0$0=(($15)|0);
 $17$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($15+4)|0);
 $17$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($16)|0);
 HEAP32[(($st$2$0)>>2)]=$17$0;
 $st$3$1=(($16+4)|0);
 HEAP32[(($st$3$1)>>2)]=$17$1;
 $ld$4$0=(($15)|0);
 $18$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($15+4)|0);
 $18$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($xf17_sub)|0);
 HEAP32[(($st$6$0)>>2)]=$18$0;
 $st$7$1=(($xf17_sub+4)|0);
 HEAP32[(($st$7$1)>>2)]=$18$1;
 $19=(($xf17+8)|0);
 $20=$19;
 __ZN5b2Rot3SetEf($20,$angle);
 $21=((HEAP32[(($3)>>2)])|0);
 $22=($21|0)>0;
 if ($22) {
  $i_020=0;
 } else {
  STACKTOP=sp;return;
 }
 while(1) {

  $23=(($this+20+($i_020<<3))|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast18,$tmpcast,$23);
  $24=$23;
  $ld$8$0=(($1)|0);
  $25$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($1+4)|0);
  $25$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($24)|0);
  HEAP32[(($st$10$0)>>2)]=$25$0;
  $st$11$1=(($24+4)|0);
  HEAP32[(($st$11$1)>>2)]=$25$1;
  $26=(($this+84+($i_020<<3))|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast19,$20,$26);
  $27=$26;
  $ld$12$0=(($2)|0);
  $28$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($2+4)|0);
  $28$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($27)|0);
  HEAP32[(($st$14$0)>>2)]=$28$0;
  $st$15$1=(($27+4)|0);
  HEAP32[(($st$15$1)>>2)]=$28$1;
  $29=((($i_020)+(1))|0);
  $30=((HEAP32[(($3)>>2)])|0);
  $31=($29|0)<($30|0);
  if ($31) {
   $i_020=$29;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZNK14b2PolygonShape13GetChildCountEv($this){
 $this=($this)|0;
 var label=0;

 return ((1)|0);
}


function __ZN14b2PolygonShape3SetEPK6b2Vec2i($this,$vertices,$count){
 $this=($this)|0;
 $vertices=($vertices)|0;
 $count=($count)|0;
 var $edge=0,$1=0,$tmpcast15=0,$2=0,$tmpcast=0,$count_off=0,$3=0,$5=0,$6=0,$7=0,$i_018=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$st$2$0=0;
 var $st$3$1=0,$14=0,$15=0,$16=0,$17=0,$i1_017=0,$18=0,$19=0,$_=0,$20=0,$21=0,$22=.0,$23=0,$26=0,$27=0,$ld$4$0=0,$28$0=0,$ld$5$1=0,$28$1=0,$st$6$0=0;
 var $st$7$1=0,$29=.0,$30=0,$31=0,$_lcssa=0,$32=0,$33=0,$34=0,$ld$8$0=0,$35$0=0,$ld$9$1=0,$35$1=0,$st$10$0=0,$st$11$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $edge=((sp)|0);
 $1=(((sp)+(8))|0);
 $tmpcast15=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$2;
 $count_off=((($count)-(3))|0);
 $3=($count_off>>>0)<((6)>>>0);
 if (!($3)) {
  ___assert_fail(((1480)|0),((8360)|0),((122)|0),((12968)|0));

 }
 $5=(($this+148)|0);
 HEAP32[(($5)>>2)]=$count;
 $i_018=0;
 while(1) {

  $9=(($this+20+($i_018<<3))|0);
  $10=(($vertices+($i_018<<3))|0);
  $11=$10;
  $12=$9;
  $ld$0$0=(($11)|0);
  $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($11+4)|0);
  $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($12)|0);
  HEAP32[(($st$2$0)>>2)]=$13$0;
  $st$3$1=(($12+4)|0);
  HEAP32[(($st$3$1)>>2)]=$13$1;
  $14=((($i_018)+(1))|0);
  $15=((HEAP32[(($5)>>2)])|0);
  $16=($14|0)<($15|0);
  if ($16) {
   $i_018=$14;
  } else {
   break;
  }
 }
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 if ($7) {
  $i1_017=0;$17=$6;
 } else {
  $_lcssa=$6;

  $32=(($this+12)|0);
  $33=(($this+20)|0);
  __ZL15ComputeCentroidPK6b2Vec2i($tmpcast,$33,$_lcssa);
  $34=$32;
  $ld$8$0=(($2)|0);
  $35$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($2+4)|0);
  $35$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($34)|0);
  HEAP32[(($st$10$0)>>2)]=$35$0;
  $st$11$1=(($34+4)|0);
  HEAP32[(($st$11$1)>>2)]=$35$1;
  STACKTOP=sp;return;
 }
 while(1) {


  $18=((($i1_017)+(1))|0);
  $19=($18|0)<($17|0);
  $_=($19?$18:0);
  $20=(($this+20+($_<<3))|0);
  $21=(($this+20+($i1_017<<3))|0);
  __ZmiRK6b2Vec2S1_($edge,$20,$21);
  $22=(+(__ZNK6b2Vec213LengthSquaredEv($edge)));
  $23=$22>(1.4210854715202004e-14);
  if (!($23)) {
   label = 7;
   break;
  }
  $26=(($this+84+($i1_017<<3))|0);
  __Z7b2CrossRK6b2Vec2f($tmpcast15,$edge,1.0);
  $27=$26;
  $ld$4$0=(($1)|0);
  $28$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($1+4)|0);
  $28$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($27)|0);
  HEAP32[(($st$6$0)>>2)]=$28$0;
  $st$7$1=(($27+4)|0);
  HEAP32[(($st$7$1)>>2)]=$28$1;
  $29=(+(__ZN6b2Vec29NormalizeEv($26)));
  $30=((HEAP32[(($5)>>2)])|0);
  $31=($18|0)<($30|0);
  if ($31) {
   $i1_017=$18;$17=$30;
  } else {
   $_lcssa=$30;
   label = 9;
   break;
  }
 }
 if ((label|0) == 7) {
  ___assert_fail(((5608)|0),((8360)|0),((137)|0),((12968)|0));

 }
 else if ((label|0) == 9) {

  $32=(($this+12)|0);
  $33=(($this+20)|0);
  __ZL15ComputeCentroidPK6b2Vec2i($tmpcast,$33,$_lcssa);
  $34=$32;
  $ld$8$0=(($2)|0);
  $35$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($2+4)|0);
  $35$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($34)|0);
  HEAP32[(($st$10$0)>>2)]=$35$0;
  $st$11$1=(($34+4)|0);
  HEAP32[(($st$11$1)>>2)]=$35$1;
  STACKTOP=sp;return;
 }
}


function __ZL15ComputeCentroidPK6b2Vec2i($agg_result,$vs,$count){
 $agg_result=($agg_result)|0;
 $vs=($vs)|0;
 $count=($count)|0;
 var $pRef=0,$p1=0,$tmpcast=0,$p2=0,$tmpcast14=0,$p3=0,$tmpcast15=0,$e1=0,$e2=0,$1=0,$2=0,$3=0,$4=0,$tmpcast13=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$area_017=.0,$i_016=0;
 var $st$2$0=0,$st$3$1=0,$8=0,$9=0,$ld$4$0=0,$10$0=0,$ld$5$1=0,$10$1=0,$st$6$0=0,$st$7$1=0,$11=0,$12=0,$14=0,$16=0,$17=0,$ld$8$0=0,$18$0=0,$ld$9$1=0,$18$1=0,$st$10$0=0;
 var $st$11$1=0,$19=.0,$20=.0,$21=.0,$22=.0,$23=0,$24=0,$27=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $pRef=((sp)|0);
 $p1=(((sp)+(8))|0);
 $tmpcast=$p1;
 $p2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast14=$p2;
 $p3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast15=$p3;
 $e1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $e2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=($count|0)>2;
 if (!($4)) {
  ___assert_fail(((1464)|0),((8360)|0),((76)|0),((13232)|0));

 }
 $tmpcast13=$pRef;
 __ZN6b2Vec23SetEff($agg_result,0.0,0.0);
 __ZN6b2Vec2C1Eff($tmpcast13,0.0,0.0);
 $ld$0$0=(($pRef)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($pRef+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $i_016=0;$area_017=0.0;
 while(1) {


  $st$2$0=(($p1)|0);
  HEAP32[(($st$2$0)>>2)]=$6$0;
  $st$3$1=(($p1+4)|0);
  HEAP32[(($st$3$1)>>2)]=$6$1;
  $8=(($vs+($i_016<<3))|0);
  $9=$8;
  $ld$4$0=(($9)|0);
  $10$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($9+4)|0);
  $10$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($p2)|0);
  HEAP32[(($st$6$0)>>2)]=$10$0;
  $st$7$1=(($p2+4)|0);
  HEAP32[(($st$7$1)>>2)]=$10$1;
  $11=((($i_016)+(1))|0);
  $12=($11|0)<($count|0);
  if ($12) {
   $14=(($vs+($11<<3))|0);
   $16=$14;
  } else {
   $16=$vs;
  }

  $17=$16;
  $ld$8$0=(($17)|0);
  $18$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($17+4)|0);
  $18$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($p3)|0);
  HEAP32[(($st$10$0)>>2)]=$18$0;
  $st$11$1=(($p3+4)|0);
  HEAP32[(($st$11$1)>>2)]=$18$1;
  __ZmiRK6b2Vec2S1_($e1,$tmpcast14,$tmpcast);
  __ZmiRK6b2Vec2S1_($e2,$tmpcast15,$tmpcast);
  $19=(+(__Z7b2CrossRK6b2Vec2S1_($e1,$e2)));
  $20=($19)*((0.5));
  $21=($area_017)+($20);
  $22=($20)*((0.3333333432674408));
  __ZplRK6b2Vec2S1_($3,$tmpcast,$tmpcast14);
  __ZplRK6b2Vec2S1_($2,$3,$tmpcast15);
  __ZmlfRK6b2Vec2($1,$22,$2);
  __ZN6b2Vec2pLERKS_($agg_result,$1);
  $23=($11|0)<($count|0);
  if ($23) {
   $i_016=$11;$area_017=$21;
  } else {
   break;
  }
 }
 $24=$21>(1.1920928955078125e-7);
 if ($24) {
  $27=((1.0))/($21);
  __ZN6b2Vec2mLEf($agg_result,$27);
  STACKTOP=sp;return;
 } else {
  ___assert_fail(((2120)|0),((8360)|0),((115)|0),((13232)|0));

 }
}


function __ZNK14b2PolygonShape9TestPointERK11b2TransformRK6b2Vec2($this,$xf,$p){
 $this=($this)|0;
 $xf=($xf)|0;
 $p=($p)|0;
 var $pLocal=0,$1=0,$2=0,$3=0,$4=0,$5=0,$i_0=0,$7=0,$8=0,$10=0,$11=0,$12=.0,$13=0,$14=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $pLocal=((sp)|0);
 $1=(((sp)+(8))|0);
 $2=(((sp)+(16))|0);
 $3=(($xf+8)|0);
 $4=(($xf)|0);
 __ZmiRK6b2Vec2S1_($1,$p,$4);
 __Z6b2MulTRK5b2RotRK6b2Vec2($pLocal,$3,$1);
 $5=(($this+148)|0);
 $i_0=0;
 while(1) {

  $7=((HEAP32[(($5)>>2)])|0);
  $8=($i_0|0)<($7|0);
  if (!($8)) {
   $_0=1;
   label = 4;
   break;
  }
  $10=(($this+84+($i_0<<3))|0);
  $11=(($this+20+($i_0<<3))|0);
  __ZmiRK6b2Vec2S1_($2,$pLocal,$11);
  $12=(+(__Z5b2DotRK6b2Vec2S1_($10,$2)));
  $13=$12>(0.0);
  $14=((($i_0)+(1))|0);
  if ($13) {
   $_0=0;
   label = 4;
   break;
  } else {
   $i_0=$14;
  }
 }
 if ((label|0) == 4) {

  STACKTOP=sp;return (($_0)|0);
 }
  return 0;
}


function __ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($this,$output,$input,$xf,$childIndex){
 $this=($this)|0;
 $output=($output)|0;
 $input=($input)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $p1=0,$1=0,$p2=0,$2=0,$d=0,$3=0,$4=0,$tmpcast=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=.0,$11=0,$upper_0=.0,$index_0=0,$i_0=0,$lower_0=.0,$13=0;
 var $14=0,$16=0,$17=0,$18=.0,$19=.0,$20=0,$22=0,$24=0,$26=.0,$27=0,$29=.0,$31=0,$33=.0,$34=0,$36=.0,$upper_1=.0,$index_1=0,$lower_1=.0,$38=0,$39=0;
 var $41=0,$43=.0,$44=0,$47=0,$49=0,$50=0,$51=0,$ld$0$0=0,$52$0=0,$ld$1$1=0,$52$1=0,$st$2$0=0,$st$3$1=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $p1=((sp)|0);
 $1=(((sp)+(8))|0);
 $p2=(((sp)+(16))|0);
 $2=(((sp)+(24))|0);
 $d=(((sp)+(32))|0);
 $3=(((sp)+(40))|0);
 $4=(((sp)+(48))|0);
 $tmpcast=$4;
 $5=(($xf+8)|0);
 $6=(($input)|0);
 $7=(($xf)|0);
 __ZmiRK6b2Vec2S1_($1,$6,$7);
 __Z6b2MulTRK5b2RotRK6b2Vec2($p1,$5,$1);
 $8=(($input+8)|0);
 __ZmiRK6b2Vec2S1_($2,$8,$7);
 __Z6b2MulTRK5b2RotRK6b2Vec2($p2,$5,$2);
 __ZmiRK6b2Vec2S1_($d,$p2,$p1);
 $9=(($input+16)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=(($this+148)|0);
 $lower_0=0.0;$i_0=0;$index_0=-1;$upper_0=$10;
 L1: while(1) {




  $13=((HEAP32[(($11)>>2)])|0);
  $14=($i_0|0)<($13|0);
  if (!($14)) {
   label = 12;
   break;
  }
  $16=(($this+84+($i_0<<3))|0);
  $17=(($this+20+($i_0<<3))|0);
  __ZmiRK6b2Vec2S1_($3,$17,$p1);
  $18=(+(__Z5b2DotRK6b2Vec2S1_($16,$3)));
  $19=(+(__Z5b2DotRK6b2Vec2S1_($16,$d)));
  $20=$19==(0.0);
  L4: do {
   if ($20) {
    $22=$18<(0.0);
    if ($22) {
     $_0=0;
     label = 17;
     break L1;
    } else {
     $lower_1=$lower_0;$index_1=$index_0;$upper_1=$upper_0;
    }
   } else {
    $24=$19<(0.0);
    do {
     if ($24) {
      $26=($lower_0)*($19);
      $27=$18<$26;
      if (!($27)) {
       break;
      }
      $29=($18)/($19);
      $lower_1=$29;$index_1=$i_0;$upper_1=$upper_0;
      break L4;
     }
    } while(0);
    $31=$19>(0.0);
    if (!($31)) {
     $lower_1=$lower_0;$index_1=$index_0;$upper_1=$upper_0;
     break;
    }
    $33=($upper_0)*($19);
    $34=$18<$33;
    if (!($34)) {
     $lower_1=$lower_0;$index_1=$index_0;$upper_1=$upper_0;
     break;
    }
    $36=($18)/($19);
    $lower_1=$lower_0;$index_1=$index_0;$upper_1=$36;
   }
  } while(0);



  $38=$upper_1<$lower_1;
  $39=((($i_0)+(1))|0);
  if ($38) {
   $_0=0;
   label = 17;
   break;
  } else {
   $lower_0=$lower_1;$i_0=$39;$index_0=$index_1;$upper_0=$upper_1;
  }
 }
 if ((label|0) == 12) {
  $41=$lower_0<(0.0);
  if ($41) {
   ___assert_fail(((3832)|0),((8360)|0),((249)|0),((11960)|0));
   return ((0)|0);
  }
  $43=(+(HEAPF32[(($9)>>2)]));
  $44=$lower_0>$43;
  if ($44) {
   ___assert_fail(((3832)|0),((8360)|0),((249)|0),((11960)|0));
   return ((0)|0);
  }
  $47=($index_0|0)>-1;
  if (!($47)) {
   $_0=0;

   STACKTOP=sp;return (($_0)|0);
  }
  $49=(($output+8)|0);
  HEAPF32[(($49)>>2)]=$lower_0;
  $50=(($this+84+($index_0<<3))|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast,$5,$50);
  $51=$output;
  $ld$0$0=(($4)|0);
  $52$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($4+4)|0);
  $52$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($51)|0);
  HEAP32[(($st$2$0)>>2)]=$52$0;
  $st$3$1=(($51+4)|0);
  HEAP32[(($st$3$1)>>2)]=$52$1;
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
 else if ((label|0) == 17) {

  STACKTOP=sp;return (($_0)|0);
 }
  return 0;
}


function __ZNK14b2PolygonShape11ComputeAABBEP6b2AABBRK11b2Transformi($this,$aabb,$xf,$childIndex){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $lower=0,$tmpcast7=0,$upper=0,$tmpcast=0,$v=0,$1=0,$tmpcast10=0,$2=0,$tmpcast11=0,$r=0,$3=0,$tmpcast8=0,$4=0,$tmpcast9=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$st$2$0=0;
 var $st$3$1=0,$7=0,$8=0,$9=0,$i_012=0,$10=0,$ld$4$0=0,$11$0=0,$ld$5$1=0,$11$1=0,$st$6$0=0,$st$7$1=0,$ld$8$0=0,$12$0=0,$ld$9$1=0,$12$1=0,$st$10$0=0,$st$11$1=0,$13=0,$14=0;
 var $15=0,$16=0,$17=.0,$18=0,$ld$12$0=0,$19$0=0,$ld$13$1=0,$19$1=0,$st$14$0=0,$st$15$1=0,$20=0,$21=0,$ld$16$0=0,$22$0=0,$ld$17$1=0,$22$1=0,$st$18$0=0,$st$19$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $lower=((sp)|0);
 $tmpcast7=$lower;
 $upper=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$upper;
 $v=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast10=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast11=$2;
 $r=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast8=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast9=$4;
 $5=(($this+20)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast7,$xf,$5);
 $ld$0$0=(($lower)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($lower+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($upper)|0);
 HEAP32[(($st$2$0)>>2)]=$6$0;
 $st$3$1=(($upper+4)|0);
 HEAP32[(($st$3$1)>>2)]=$6$1;
 $7=(($this+148)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($8|0)>1;
 if ($9) {
  $i_012=1;
  while(1) {

   $10=(($this+20+($i_012<<3))|0);
   __Z5b2MulRK11b2TransformRK6b2Vec2($v,$xf,$10);
   __Z5b2MinRK6b2Vec2S1_($tmpcast10,$tmpcast7,$v);
   $ld$4$0=(($1)|0);
   $11$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($1+4)|0);
   $11$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($lower)|0);
   HEAP32[(($st$6$0)>>2)]=$11$0;
   $st$7$1=(($lower+4)|0);
   HEAP32[(($st$7$1)>>2)]=$11$1;
   __Z5b2MaxRK6b2Vec2S1_($tmpcast11,$tmpcast,$v);
   $ld$8$0=(($2)|0);
   $12$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($2+4)|0);
   $12$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($upper)|0);
   HEAP32[(($st$10$0)>>2)]=$12$0;
   $st$11$1=(($upper+4)|0);
   HEAP32[(($st$11$1)>>2)]=$12$1;
   $13=((($i_012)+(1))|0);
   $14=((HEAP32[(($7)>>2)])|0);
   $15=($13|0)<($14|0);
   if ($15) {
    $i_012=$13;
   } else {
    break;
   }
  }
 }
 $16=(($this+8)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 __ZN6b2Vec2C1Eff($r,$17,$17);
 __ZmiRK6b2Vec2S1_($tmpcast8,$tmpcast7,$r);
 $18=$aabb;
 $ld$12$0=(($3)|0);
 $19$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($3+4)|0);
 $19$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($18)|0);
 HEAP32[(($st$14$0)>>2)]=$19$0;
 $st$15$1=(($18+4)|0);
 HEAP32[(($st$15$1)>>2)]=$19$1;
 $20=(($aabb+8)|0);
 __ZplRK6b2Vec2S1_($tmpcast9,$tmpcast,$r);
 $21=$20;
 $ld$16$0=(($4)|0);
 $22$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($4+4)|0);
 $22$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($21)|0);
 HEAP32[(($st$18$0)>>2)]=$22$0;
 $st$19$1=(($21+4)|0);
 HEAP32[(($st$19$1)>>2)]=$22$1;
 STACKTOP=sp;return;
}


function __ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf($this,$massData,$density){
 $this=($this)|0;
 $massData=($massData)|0;
 $density=+($density);
 var $center=0,$s=0,$e1=0,$e2=0,$1=0,$2=0,$3=0,$tmpcast=0,$4=0,$5=0,$6=0,$9=0,$10=0,$i_034=0,$11=0,$12=0,$13=0,$14=0,$_lcssa=0,$15=.0;
 var $16=.0,$17=0,$18=0,$19=.0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$area_032=.0,$I_031=.0,$i1_030=0,$27=0,$28=0,$29=0,$30=0,$32=0,$35=.0,$36=.0;
 var $37=.0,$38=.0,$39=.0,$40=.0,$41=.0,$42=.0,$43=.0,$44=.0,$45=.0,$46=.0,$47=.0,$48=.0,$49=.0,$50=.0,$51=.0,$52=.0,$53=.0,$54=.0,$55=.0,$56=.0;
 var $57=0,$58=0,$59=.0,$60=0,$61=0,$64=.0,$65=0,$66=0,$ld$0$0=0,$67$0=0,$ld$1$1=0,$67$1=0,$st$2$0=0,$st$3$1=0,$68=.0,$69=0,$70=.0,$71=.0,$72=.0,$73=.0;
 var $74=.0,$75=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $center=((sp)|0);
 $s=(((sp)+(8))|0);
 $e1=(((sp)+(16))|0);
 $e2=(((sp)+(24))|0);
 $1=(((sp)+(32))|0);
 $2=(((sp)+(40))|0);
 $3=(((sp)+(48))|0);
 $tmpcast=$3;
 $4=(($this+148)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($5|0)>2;
 if (!($6)) {
  ___assert_fail(((2824)|0),((8360)|0),((306)|0),((11968)|0));

 }
 __ZN6b2Vec23SetEff($center,0.0,0.0);
 __ZN6b2Vec2C1Eff($s,0.0,0.0);
 $9=((HEAP32[(($4)>>2)])|0);
 $10=($9|0)>0;
 if ($10) {
  $i_034=0;
  while(1) {

   $11=(($this+20+($i_034<<3))|0);
   __ZN6b2Vec2pLERKS_($s,$11);
   $12=((($i_034)+(1))|0);
   $13=((HEAP32[(($4)>>2)])|0);
   $14=($12|0)<($13|0);
   if ($14) {
    $i_034=$12;
   } else {
    $_lcssa=$13;
    break;
   }
  }
 } else {
  $_lcssa=$9;
 }

 $15=(+((($_lcssa|0))|0));
 $16=((1.0))/($15);
 __ZN6b2Vec2mLEf($s,$16);
 $17=((HEAP32[(($4)>>2)])|0);
 $18=($17|0)>0;
 if (!($18)) {
  $19=($density)*((0.0));
  $20=(($massData)|0);
  HEAPF32[(($20)>>2)]=$19;
  ___assert_fail(((2120)|0),((8360)|0),((352)|0),((11968)|0));

 }
 $21=(($e1)|0);
 $22=(($e1+4)|0);
 $23=(($e2)|0);
 $24=(($e2+4)|0);
 $25=(($this+20)|0);
 $i1_030=0;$I_031=0.0;$area_032=0.0;
 while(1) {



  $27=(($this+20+($i1_030<<3))|0);
  __ZmiRK6b2Vec2S1_($e1,$27,$s);
  $28=((($i1_030)+(1))|0);
  $29=((HEAP32[(($4)>>2)])|0);
  $30=($28|0)<($29|0);
  if ($30) {
   $32=(($this+20+($28<<3))|0);
   __ZmiRK6b2Vec2S1_($e2,$32,$s);
  } else {
   __ZmiRK6b2Vec2S1_($e2,$25,$s);
  }
  $35=(+(__Z7b2CrossRK6b2Vec2S1_($e1,$e2)));
  $36=($35)*((0.5));
  $37=($area_032)+($36);
  $38=($36)*((0.3333333432674408));
  __ZplRK6b2Vec2S1_($2,$e1,$e2);
  __ZmlfRK6b2Vec2($1,$38,$2);
  __ZN6b2Vec2pLERKS_($center,$1);
  $39=(+(HEAPF32[(($21)>>2)]));
  $40=(+(HEAPF32[(($22)>>2)]));
  $41=(+(HEAPF32[(($23)>>2)]));
  $42=(+(HEAPF32[(($24)>>2)]));
  $43=($39)*($39);
  $44=($39)*($41);
  $45=($43)+($44);
  $46=($41)*($41);
  $47=($46)+($45);
  $48=($40)*($40);
  $49=($40)*($42);
  $50=($48)+($49);
  $51=($42)*($42);
  $52=($51)+($50);
  $53=($35)*((0.0833333358168602));
  $54=($47)+($52);
  $55=($53)*($54);
  $56=($I_031)+($55);
  $57=((HEAP32[(($4)>>2)])|0);
  $58=($28|0)<($57|0);
  if ($58) {
   $i1_030=$28;$I_031=$56;$area_032=$37;
  } else {
   break;
  }
 }
 $59=($37)*($density);
 $60=(($massData)|0);
 HEAPF32[(($60)>>2)]=$59;
 $61=$37>(1.1920928955078125e-7);
 if ($61) {
  $64=((1.0))/($37);
  __ZN6b2Vec2mLEf($center,$64);
  $65=(($massData+4)|0);
  __ZplRK6b2Vec2S1_($tmpcast,$center,$s);
  $66=$65;
  $ld$0$0=(($3)|0);
  $67$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($3+4)|0);
  $67$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($66)|0);
  HEAP32[(($st$2$0)>>2)]=$67$0;
  $st$3$1=(($66+4)|0);
  HEAP32[(($st$3$1)>>2)]=$67$1;
  $68=($56)*($density);
  $69=(($massData+12)|0);
  HEAPF32[(($69)>>2)]=$68;
  $70=(+(HEAPF32[(($60)>>2)]));
  $71=(+(__Z5b2DotRK6b2Vec2S1_($65,$65)));
  $72=(+(__Z5b2DotRK6b2Vec2S1_($center,$center)));
  $73=($71)-($72);
  $74=($70)*($73);
  $75=($68)+($74);
  HEAPF32[(($69)>>2)]=$75;
  STACKTOP=sp;return;
 } else {
  ___assert_fail(((2120)|0),((8360)|0),((352)|0),((11968)|0));

 }
}


function __ZN6b2Vec2mLEf($this,$a){
 $this=($this)|0;
 $a=+($a);
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($a);
 HEAPF32[(($1)>>2)]=$3;
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($a);
 HEAPF32[(($4)>>2)]=$6;
 return;
}


function __ZN14b2PolygonShapeD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN14b2PolygonShapeD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN14b2PolygonShapeC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this)|0);
 __ZN7b2ShapeC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=14144;
 $3=(($this+12)|0);
 $4=(($this+4)|0);
 HEAP32[(($4)>>2)]=2;
 $5=(($this+8)|0);
 HEAPF32[(($5)>>2)]=0.009999999776482582;
 $6=(($this+148)|0);
 HEAP32[(($6)>>2)]=0;
 __ZN6b2Vec27SetZeroEv($3);
 return;
}


function __ZN16b2BlockAllocatorC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$i_09=0,$j_08=0,$14=0,$17=0,$18=0,$19=0,$21=0;
 var $22=0,$24=0,$25=0,$26=0,$j_1=0,$28=0,$29=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=128;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=0;
 $3=((HEAP32[(($1)>>2)])|0);
 $4=$3<<3;
 $5=((__Z7b2Alloci($4))|0);
 $6=$5;
 $7=(($this)|0);
 HEAP32[(($7)>>2)]=$6;
 $8=((HEAP32[(($1)>>2)])|0);
 $9=$8<<3;
 _memset((((($5)|0))|0), ((((0)|0))|0), (((($9)|0))|0))|0;
 $10=(($this+12)|0);
 $11=$10;
 _memset((((($11)|0))|0), ((((0)|0))|0), ((((56)|0))|0))|0;
 $12=((HEAP8[(20880)])|0);
 $13=(($12<<24)>>24)==0;
 if ($13) {
  $j_08=0;$i_09=1;
 } else {
  return;
 }
 while(1) {


  $14=($j_08|0)<14;
  if (!($14)) {
   label = 3;
   break;
  }
  $17=((15968+($j_08<<2))|0);
  $18=((HEAP32[(($17)>>2)])|0);
  $19=($i_09|0)>($18|0);
  if ($19) {
   $24=((($j_08)+(1))|0);
   $25=(($24)&255);
   $26=((20888+$i_09)|0);
   HEAP8[($26)]=$25;
   $j_1=$24;
  } else {
   $21=(($j_08)&255);
   $22=((20888+$i_09)|0);
   HEAP8[($22)]=$21;
   $j_1=$j_08;
  }

  $28=((($i_09)+(1))|0);
  $29=($28|0)<641;
  if ($29) {
   $j_08=$j_1;$i_09=$28;
  } else {
   break;
  }
 }
 if ((label|0) == 3) {
  ___assert_fail(((1312)|0),((8144)|0),((73)|0),((12760)|0));

 }
 HEAP8[(20880)]=1;
 return;
}


function __ZN16b2BlockAllocatorD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i_03=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$_lcssa=0,$14=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 $4=(($this)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 if ($3) {
  $i_03=0;$6=$5;
 } else {
  $_lcssa=$5;

  $14=$_lcssa;
  __Z6b2FreePv($14);
  return;
 }
 while(1) {


  $7=(($6+($i_03<<3)+4)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=$8;
  __Z6b2FreePv($9);
  $10=((($i_03)+(1))|0);
  $11=((HEAP32[(($1)>>2)])|0);
  $12=($10|0)<($11|0);
  $13=((HEAP32[(($4)>>2)])|0);
  if ($12) {
   $i_03=$10;$6=$13;
  } else {
   $_lcssa=$13;
   break;
  }
 }

 $14=$_lcssa;
 __Z6b2FreePv($14);
 return;
}


function __ZN16b2BlockAllocator8AllocateEi($this,$size){
 $this=($this)|0;
 $size=($size)|0;
 var $1=0,$3=0,$6=0,$8=0,$10=0,$11=0,$12=0,$13=0,$16=0,$17=0,$18=0,$20=0,$21=0,$22=0,$24=0,$25=0,$26=0,$27=0,$28=0,$30=0;
 var $31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0;
 var $52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$61=0,$i_030=0,$62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0,$71=0;
 var $_lcssa29=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0,$80=0,$81=0,$_0=0,label=0;

 $1=($size|0)==0;
 if ($1) {
  $_0=0;

  return (($_0)|0);
 }
 $3=($size|0)>0;
 if (!($3)) {
  ___assert_fail(((5376)|0),((8144)|0),((104)|0),((12784)|0));
  return ((0)|0);
 }
 $6=($size|0)>640;
 if ($6) {
  $8=((__Z7b2Alloci($size))|0);
  $_0=$8;

  return (($_0)|0);
 }
 $10=((20888+$size)|0);
 $11=((HEAP8[($10)])|0);
 $12=($11&255);
 $13=((($11&255))>>>0)<((14)>>>0);
 if (!($13)) {
  ___assert_fail(((3768)|0),((8144)|0),((112)|0),((12784)|0));
  return ((0)|0);
 }
 $16=(($this+12+($12<<2))|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=($17|0)==0;
 if (!($18)) {
  $20=(($17)|0);
  $21=((HEAP32[(($20)>>2)])|0);
  HEAP32[(($16)>>2)]=$21;
  $22=$17;
  $_0=$22;

  return (($_0)|0);
 }
 $24=(($this+4)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=(($this+8)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=($25|0)==($27|0);
 if ($28) {
  $30=(($this)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=((($27)+(128))|0);
  HEAP32[(($26)>>2)]=$32;
  $33=$32<<3;
  $34=((__Z7b2Alloci($33))|0);
  $35=$34;
  HEAP32[(($30)>>2)]=$35;
  $36=$31;
  $37=((HEAP32[(($24)>>2)])|0);
  $38=$37<<3;
  (_memcpy((($34)|0), (($36)|0), $38)|0);
  $39=((HEAP32[(($30)>>2)])|0);
  $40=((HEAP32[(($24)>>2)])|0);
  $41=(($39+($40<<3))|0);
  $42=$41;
  _memset((((($42)|0))|0), ((((0)|0))|0), ((((1024)|0))|0))|0;
  __Z6b2FreePv($36);
 }
 $44=(($this)|0);
 $45=((HEAP32[(($44)>>2)])|0);
 $46=((HEAP32[(($24)>>2)])|0);
 $47=((__Z7b2Alloci(16384))|0);
 $48=$47;
 $49=(($45+($46<<3)+4)|0);
 HEAP32[(($49)>>2)]=$48;
 $50=((15968+($12<<2))|0);
 $51=((HEAP32[(($50)>>2)])|0);
 $52=(($45+($46<<3))|0);
 HEAP32[(($52)>>2)]=$51;
 $53=(((16384)/(($51|0)))&-1);
 $54=(Math_imul($53,$51)|0);
 $55=($54|0)<16385;
 if (!($55)) {
  ___assert_fail(((2784)|0),((8144)|0),((140)|0),((12784)|0));
  return ((0)|0);
 }
 $56=((($53)-(1))|0);
 $57=($56|0)>0;
 $58=((HEAP32[(($49)>>2)])|0);
 $59=$58;
 if ($57) {
  $i_030=0;$61=$59;
  while(1) {


   $62=(Math_imul($i_030,$51)|0);
   $63=(($61+$62)|0);
   $64=((($i_030)+(1))|0);
   $65=(Math_imul($64,$51)|0);
   $66=(($61+$65)|0);
   $67=$66;
   $68=$63;
   HEAP32[(($68)>>2)]=$67;
   $69=($64|0)<($56|0);
   $70=((HEAP32[(($49)>>2)])|0);
   $71=$70;
   if ($69) {
    $i_030=$64;$61=$71;
   } else {
    $_lcssa29=$71;
    break;
   }
  }
 } else {
  $_lcssa29=$59;
 }

 $72=(Math_imul($56,$51)|0);
 $73=(($_lcssa29+$72)|0);
 $74=$73;
 HEAP32[(($74)>>2)]=0;
 $75=((HEAP32[(($49)>>2)])|0);
 $76=(($75)|0);
 $77=((HEAP32[(($76)>>2)])|0);
 HEAP32[(($16)>>2)]=$77;
 $78=((HEAP32[(($24)>>2)])|0);
 $79=((($78)+(1))|0);
 HEAP32[(($24)>>2)]=$79;
 $80=((HEAP32[(($49)>>2)])|0);
 $81=$80;
 $_0=$81;

 return (($_0)|0);
}


function __ZN16b2BlockAllocator4FreeEPvi($this,$p,$size){
 $this=($this)|0;
 $p=($p)|0;
 $size=($size)|0;
 var $1=0,$3=0,$6=0,$9=0,$10=0,$11=0,$14=0,$15=0,$16=0,$17=0,$18=0,label=0;

 $1=($size|0)==0;
 if ($1) {
  return;
 }
 $3=($size|0)>0;
 if (!($3)) {
  ___assert_fail(((5376)|0),((8144)|0),((164)|0),((12800)|0));

 }
 $6=($size|0)>640;
 if ($6) {
  __Z6b2FreePv($p);
  return;
 }
 $9=((20888+$size)|0);
 $10=((HEAP8[($9)])|0);
 $11=((($10&255))>>>0)<((14)>>>0);
 if (!($11)) {
  ___assert_fail(((3768)|0),((8144)|0),((173)|0),((12800)|0));

 }
 $14=($10&255);
 $15=$p;
 $16=(($this+12+($14<<2))|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=$p;
 HEAP32[(($18)>>2)]=$17;
 HEAP32[(($16)>>2)]=$15;
 return;
}


function __ZN16b2BlockAllocator5ClearEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$i_03=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 if ($3) {
  $4=(($this)|0);
  $i_03=0;
  while(1) {

   $6=((HEAP32[(($4)>>2)])|0);
   $7=(($6+($i_03<<3)+4)|0);
   $8=((HEAP32[(($7)>>2)])|0);
   $9=$8;
   __Z6b2FreePv($9);
   $10=((($i_03)+(1))|0);
   $11=((HEAP32[(($1)>>2)])|0);
   $12=($10|0)<($11|0);
   if ($12) {
    $i_03=$10;
   } else {
    break;
   }
  }
 }
 HEAP32[(($1)>>2)]=0;
 $13=(($this)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=$14;
 $16=(($this+8)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=$17<<3;
 _memset((((($15)|0))|0), ((((0)|0))|0), (((($18)|0))|0))|0;
 $19=(($this+12)|0);
 $20=$19;
 _memset((((($20)|0))|0), ((((0)|0))|0), ((((56)|0))|0))|0;
 return;
}


function __ZN6b2DrawC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=13480;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=0;
 return;
}


function __ZN6b2Draw8SetFlagsEj($this,$flags){
 $this=($this)|0;
 $flags=($flags)|0;
 var $1=0,label=0;

 $1=(($this+4)|0);
 HEAP32[(($1)>>2)]=$flags;
 return;
}


function __ZNK6b2Draw8GetFlagsEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN6b2Draw11AppendFlagsEj($this,$flags){
 $this=($this)|0;
 $flags=($flags)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2|$flags;
 HEAP32[(($1)>>2)]=$3;
 return;
}


function __ZN6b2Draw10ClearFlagsEj($this,$flags){
 $this=($this)|0;
 $flags=($flags)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$flags^-1;
 $2=(($this+4)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=$3&$1;
 HEAP32[(($2)>>2)]=$4;
 return;
}


function __ZN6b2DrawD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN6b2DrawD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN6b2Draw11DrawPolygonEPK6b2Vec2iRK7b2Color($this,$vertices,$vertexCount,$color){
 $this=($this)|0;
 $vertices=($vertices)|0;
 $vertexCount=($vertexCount)|0;
 $color=($color)|0;
 var label=0;

 return;
}


function __ZN6b2Draw16DrawSolidPolygonEPK6b2Vec2iRK7b2Color($this,$vertices,$vertexCount,$color){
 $this=($this)|0;
 $vertices=($vertices)|0;
 $vertexCount=($vertexCount)|0;
 $color=($color)|0;
 var label=0;

 return;
}


function __ZN6b2Draw10DrawCircleERK6b2Vec2fRK7b2Color($this,$center,$radius,$color){
 $this=($this)|0;
 $center=($center)|0;
 $radius=+($radius);
 $color=($color)|0;
 var label=0;

 return;
}


function __ZN6b2Draw15DrawSolidCircleERK6b2Vec2fS2_RK7b2Color($this,$center,$radius,$axis,$color){
 $this=($this)|0;
 $center=($center)|0;
 $radius=+($radius);
 $axis=($axis)|0;
 $color=($color)|0;
 var label=0;

 return;
}


function __ZN6b2Draw11DrawSegmentERK6b2Vec2S2_RK7b2Color($this,$p1,$p2,$color){
 $this=($this)|0;
 $p1=($p1)|0;
 $p2=($p2)|0;
 $color=($color)|0;
 var label=0;

 return;
}


function __ZN6b2Draw13DrawTransformERK11b2Transform($this,$xf){
 $this=($this)|0;
 $xf=($xf)|0;
 var label=0;

 return;
}


function __ZNK7b2Mat337Solve33ERK6b2Vec3($agg_result,$this,$b){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$11=.0,$det_0=.0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0,$21=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $1=((sp)|0);
 $2=(((sp)+(16))|0);
 $3=(((sp)+(32))|0);
 $4=(((sp)+(48))|0);
 $5=(($this)|0);
 $6=(($this+12)|0);
 $7=(($this+24)|0);
 __Z7b2CrossRK6b2Vec3S1_($1,$6,$7);
 $8=(+(__Z5b2DotRK6b2Vec3S1_($5,$1)));
 $9=$8!=(0.0);
 if ($9) {
  $11=((1.0))/($8);
  $det_0=$11;
 } else {
  $det_0=$8;
 }

 __Z7b2CrossRK6b2Vec3S1_($2,$6,$7);
 $13=(+(__Z5b2DotRK6b2Vec3S1_($b,$2)));
 $14=($det_0)*($13);
 $15=(($agg_result)|0);
 HEAPF32[(($15)>>2)]=$14;
 __Z7b2CrossRK6b2Vec3S1_($3,$b,$7);
 $16=(+(__Z5b2DotRK6b2Vec3S1_($5,$3)));
 $17=($det_0)*($16);
 $18=(($agg_result+4)|0);
 HEAPF32[(($18)>>2)]=$17;
 __Z7b2CrossRK6b2Vec3S1_($4,$6,$b);
 $19=(+(__Z5b2DotRK6b2Vec3S1_($5,$4)));
 $20=($det_0)*($19);
 $21=(($agg_result+8)|0);
 HEAPF32[(($21)>>2)]=$20;
 STACKTOP=sp;return;
}


function __Z5b2DotRK6b2Vec3S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=0,$15=.0,$16=.0,$17=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)+($10);
 $12=(($a+8)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=(($b+8)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=($13)*($15);
 $17=($11)+($16);
 return (+($17));
}


function __Z7b2CrossRK6b2Vec3S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=.0,$19=.0,$20=.0;
 var $21=.0,label=0;

 $1=(($a+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b+8)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($a+8)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)-($10);
 $12=(($b)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=($7)*($13);
 $15=(($a)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=($4)*($16);
 $18=($14)-($17);
 $19=($9)*($16);
 $20=($2)*($13);
 $21=($19)-($20);
 __ZN6b2Vec3C1Efff($agg_result,$11,$18,$21);
 return;
}


function __ZNK7b2Mat337Solve22ERK6b2Vec2($agg_result,$this,$b){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,$10=.0,$11=.0,$12=0,$14=.0,$det_0=.0,$16=0,$17=.0,$18=.0,$19=0,$20=.0,$21=.0;
 var $22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=.0,$28=.0,$29=.0,$30=.0,$31=0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+12)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+4)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($this+16)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($2)*($8);
 $10=($4)*($6);
 $11=($9)-($10);
 $12=$11!=(0.0);
 if ($12) {
  $14=((1.0))/($11);
  $det_0=$14;
 } else {
  $det_0=$11;
 }

 $16=(($b)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=($8)*($17);
 $19=(($b+4)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=($4)*($20);
 $22=($18)-($21);
 $23=($det_0)*($22);
 $24=(($agg_result)|0);
 HEAPF32[(($24)>>2)]=$23;
 $25=(+(HEAPF32[(($19)>>2)]));
 $26=($2)*($25);
 $27=(+(HEAPF32[(($16)>>2)]));
 $28=($6)*($27);
 $29=($26)-($28);
 $30=($det_0)*($29);
 $31=(($agg_result+4)|0);
 HEAPF32[(($31)>>2)]=$30;
 return;
}


function __ZNK7b2Mat3312GetInverse22EPS_($this,$M){
 $this=($this)|0;
 $M=($M)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,$10=.0,$11=.0,$12=0,$14=.0,$det_0=.0,$16=.0,$17=0,$18=.0,$19=.0,$20=0,$21=0;
 var $22=.0,$23=0,$24=.0,$25=0,$26=0,$27=0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+12)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+4)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($this+16)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($2)*($8);
 $10=($4)*($6);
 $11=($9)-($10);
 $12=$11!=(0.0);
 if ($12) {
  $14=((1.0))/($11);
  $det_0=$14;
 } else {
  $det_0=$11;
 }

 $16=($8)*($det_0);
 $17=(($M)|0);
 HEAPF32[(($17)>>2)]=$16;
 $18=((-.0))-($det_0);
 $19=($4)*($18);
 $20=(($M+12)|0);
 HEAPF32[(($20)>>2)]=$19;
 $21=(($M+8)|0);
 HEAPF32[(($21)>>2)]=0.0;
 $22=($6)*($18);
 $23=(($M+4)|0);
 HEAPF32[(($23)>>2)]=$22;
 $24=($2)*($det_0);
 $25=(($M+16)|0);
 HEAPF32[(($25)>>2)]=$24;
 $26=(($M+20)|0);
 $27=$26;
 _memset((((($27)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 return;
}


function __ZNK7b2Mat3315GetSymInverse33EPS_($this,$M){
 $this=($this)|0;
 $M=($M)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$8=.0,$det_0=.0,$10=0,$11=.0,$12=0,$13=.0,$14=0,$15=.0,$16=0,$17=.0,$18=0,$19=.0,$20=0,$21=.0;
 var $22=.0,$23=.0,$24=.0,$25=.0,$26=0,$27=.0,$28=.0,$29=.0,$30=.0,$31=0,$32=.0,$33=.0,$34=.0,$35=.0,$36=0,$37=.0,$38=0,$39=.0,$40=.0,$41=.0;
 var $42=.0,$43=0,$44=.0,$45=.0,$46=.0,$47=.0,$48=0,$49=.0,$50=0,$51=.0,$52=0,$53=.0,$54=.0,$55=.0,$56=.0,$57=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=(($this)|0);
 $3=(($this+12)|0);
 $4=(($this+24)|0);
 __Z7b2CrossRK6b2Vec3S1_($1,$3,$4);
 $5=(+(__Z5b2DotRK6b2Vec3S1_($2,$1)));
 $6=$5!=(0.0);
 if ($6) {
  $8=((1.0))/($5);
  $det_0=$8;
 } else {
  $det_0=$5;
 }

 $10=(($this)|0);
 $11=(+(HEAPF32[(($10)>>2)]));
 $12=(($3)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=(($4)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=(($this+16)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+28)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=(($this+32)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=($17)*($21);
 $23=($19)*($19);
 $24=($22)-($23);
 $25=($det_0)*($24);
 $26=(($M)|0);
 HEAPF32[(($26)>>2)]=$25;
 $27=($15)*($19);
 $28=($13)*($21);
 $29=($27)-($28);
 $30=($det_0)*($29);
 $31=(($M+4)|0);
 HEAPF32[(($31)>>2)]=$30;
 $32=($13)*($19);
 $33=($15)*($17);
 $34=($32)-($33);
 $35=($det_0)*($34);
 $36=(($M+8)|0);
 HEAPF32[(($36)>>2)]=$35;
 $37=(+(HEAPF32[(($31)>>2)]));
 $38=(($M+12)|0);
 HEAPF32[(($38)>>2)]=$37;
 $39=($11)*($21);
 $40=($15)*($15);
 $41=($39)-($40);
 $42=($det_0)*($41);
 $43=(($M+16)|0);
 HEAPF32[(($43)>>2)]=$42;
 $44=($13)*($15);
 $45=($11)*($19);
 $46=($44)-($45);
 $47=($det_0)*($46);
 $48=(($M+20)|0);
 HEAPF32[(($48)>>2)]=$47;
 $49=(+(HEAPF32[(($36)>>2)]));
 $50=(($M+24)|0);
 HEAPF32[(($50)>>2)]=$49;
 $51=(+(HEAPF32[(($48)>>2)]));
 $52=(($M+28)|0);
 HEAPF32[(($52)>>2)]=$51;
 $53=($11)*($17);
 $54=($13)*($13);
 $55=($53)-($54);
 $56=($det_0)*($55);
 $57=(($M+32)|0);
 HEAPF32[(($57)>>2)]=$56;
 STACKTOP=sp;return;
}


function __ZN6b2Vec3C1Efff($this,$x,$y,$z){
 $this=($this)|0;
 $x=+($x);
 $y=+($y);
 $z=+($z);
 var label=0;

 __ZN6b2Vec3C2Efff($this,$x,$y,$z);
 return;
}


function __ZN6b2Vec3C2Efff($this,$x,$y,$z){
 $this=($this)|0;
 $x=+($x);
 $y=+($y);
 $z=+($z);
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=$x;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=$y;
 $3=(($this+8)|0);
 HEAPF32[(($3)>>2)]=$z;
 return;
}


function __Z7b2Alloci($size){
 $size=($size)|0;
 var $1=0,label=0;

 $1=((_malloc($size))|0);
 return (($1)|0);
}


function __Z6b2FreePv($mem){
 $mem=($mem)|0;
 var label=0;

 _free($mem);
 return;
}


function __Z5b2LogPKcz($string,varrp){
 $string=($string)|0;
 varrp=(varrp)|0;
 var $args=0,$1=0,$2=0,$3=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $args=((sp)|0);
 $1=(($args)|0);
 $2=$args;
 HEAP32[(($2)>>2)]=varrp;HEAP32[((($2)+(4))>>2)]=0;
 $3=((_vprintf((($string)|0),(($1)|0)))|0);

 STACKTOP=sp;return;
}


function __ZN16b2StackAllocatorC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+102400)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+102404)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+102408)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+102796)|0);
 HEAP32[(($4)>>2)]=0;
 return;
}


function __ZN16b2StackAllocatorD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+102400)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  ___assert_fail(((480)|0),((7920)|0),((32)|0),((12656)|0));

 }
 $6=(($this+102796)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)==0;
 if ($8) {
  return;
 } else {
  ___assert_fail(((5072)|0),((7920)|0),((33)|0),((12656)|0));

 }
}


function __ZN16b2StackAllocator8AllocateEi($this,$size){
 $this=($this)|0;
 $size=($size)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$17=0,$18=0,$19=0,$20=0,$21=0,$23=0,$24=0,$25=0;
 var $26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,label=0;

 $1=(($this+102796)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)<32;
 if (!($3)) {
  ___assert_fail(((3728)|0),((7920)|0),((38)|0),((12680)|0));
  return ((0)|0);
 }
 $6=(($this+102412+((($2)*(12))&-1))|0);
 $7=(($this+102412+((($2)*(12))&-1)+4)|0);
 HEAP32[(($7)>>2)]=$size;
 $8=(($this+102400)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=((($9)+($size))|0);
 $11=($10|0)>102400;
 if ($11) {
  $13=((__Z7b2Alloci($size))|0);
  $14=(($6)|0);
  HEAP32[(($14)>>2)]=$13;
  $15=(($this+102412+((($2)*(12))&-1)+8)|0);
  HEAP8[($15)]=1;
 } else {
  $17=(($this+$9)|0);
  $18=(($6)|0);
  HEAP32[(($18)>>2)]=$17;
  $19=(($this+102412+((($2)*(12))&-1)+8)|0);
  HEAP8[($19)]=0;
  $20=((HEAP32[(($8)>>2)])|0);
  $21=((($20)+($size))|0);
  HEAP32[(($8)>>2)]=$21;
 }
 $23=(($this+102404)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=((($24)+($size))|0);
 HEAP32[(($23)>>2)]=$25;
 $26=(($this+102408)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=((__Z5b2MaxIiET_S0_S0_($27,$25))|0);
 HEAP32[(($26)>>2)]=$28;
 $29=((HEAP32[(($1)>>2)])|0);
 $30=((($29)+(1))|0);
 HEAP32[(($1)>>2)]=$30;
 $31=(($6)|0);
 $32=((HEAP32[(($31)>>2)])|0);
 return (($32)|0);
}


function __ZN16b2StackAllocator4FreeEPv($this,$p){
 $this=($this)|0;
 $p=($p)|0;
 var $1=0,$2=0,$3=0,$_sum=0,$6=0,$7=0,$8=0,$11=0,$12=0,$13=0,$16=0,$17=0,$18=0,$19=0,$20=0,$22=0,$23=0,$24=0,$25=0,$26=0;
 var $27=0,$28=0,label=0;

 $1=(($this+102796)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 if (!($3)) {
  ___assert_fail(((2760)|0),((7920)|0),((63)|0),((12696)|0));

 }
 $_sum=((($2)-(1))|0);
 $6=(($this+102412+((($_sum)*(12))&-1))|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)==($p|0);
 if (!($8)) {
  ___assert_fail(((2096)|0),((7920)|0),((65)|0),((12696)|0));

 }
 $11=(($this+102412+((($_sum)*(12))&-1)+8)|0);
 $12=((HEAP8[($11)])|0);
 $13=(($12<<24)>>24)==0;
 if ($13) {
  $16=(($this+102412+((($_sum)*(12))&-1)+4)|0);
  $17=((HEAP32[(($16)>>2)])|0);
  $18=(($this+102400)|0);
  $19=((HEAP32[(($18)>>2)])|0);
  $20=((($19)-($17))|0);
  HEAP32[(($18)>>2)]=$20;
 } else {
  __Z6b2FreePv($p);
 }
 $22=(($this+102412+((($_sum)*(12))&-1)+4)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=(($this+102404)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($25)-($23))|0);
 HEAP32[(($24)>>2)]=$26;
 $27=((HEAP32[(($1)>>2)])|0);
 $28=((($27)-(1))|0);
 HEAP32[(($1)>>2)]=$28;
 return;
}


function __ZNK16b2StackAllocator16GetMaxAllocationEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102408)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN7b2TimerC2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN7b2Timer5ResetEv($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZNK7b2Timer15GetMillisecondsEv($this){
 $this=($this)|0;
 var label=0;

 return 0.0;
}


function __ZN6b2BodyC2EPK9b2BodyDefP7b2World($this,$bd,$world){
 $this=($this)|0;
 $bd=($bd)|0;
 $world=($world)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$8=0,$9=0,$12=0,$13=.0,$14=0,$17=0,$18=.0,$19=0,$22=0,$23=.0,$24=0,$_not=0,$25=0,$or_cond=0,$28=0;
 var $29=.0,$30=0,$_not26=0,$31=0,$or_cond27=0,$34=0,$35=0,$36=0,$37=0,$40=0,$41=0,$42=0,$44=0,$45=0,$47=0,$48=0,$49=0,$51=0,$52=0,$54=0;
 var $55=0,$56=0,$58=0,$59=0,$61=0,$62=0,$63=0,$65=0,$66=0,$68=0,$69=0,$70=0,$ld$0$0=0,$71$0=0,$ld$1$1=0,$71$1=0,$st$2$0=0,$st$3$1=0,$72=0,$73=.0;
 var $74=0,$75=0,$76=0,$ld$4$0=0,$77$0=0,$ld$5$1=0,$77$1=0,$st$6$0=0,$st$7$1=0,$78=0,$79=0,$ld$8$0=0,$80$0=0,$ld$9$1=0,$80$1=0,$st$10$0=0,$st$11$1=0,$81=.0,$82=0,$83=.0;
 var $84=0,$85=0,$86=0,$87=0,$88=0,$89=0,$90=0,$91=0,$ld$12$0=0,$92$0=0,$ld$13$1=0,$92$1=0,$st$14$0=0,$st$15$1=0,$93=.0,$94=0,$95=.0,$96=0,$97=.0,$98=0;
 var $99=0,$100=.0,$101=0,$102=0,$103=0,$104=0,$105=0,$106=0,$107=0,$108=0,$110=0,$112=0,$114=0,$115=0,$116=0,$117=0,$118=0,$119=0,$120=0,label=0;

 $1=(($this+12)|0);
 $2=(($this+64)|0);
 $3=(($this+76)|0);
 $4=(($bd+4)|0);
 $5=((__ZNK6b2Vec27IsValidEv($4))|0);
 if (!($5)) {
  ___assert_fail(((328)|0),((7752)|0),((27)|0),((12376)|0));

 }
 $8=(($bd+16)|0);
 $9=((__ZNK6b2Vec27IsValidEv($8))|0);
 if (!($9)) {
  ___assert_fail(((4912)|0),((7752)|0),((28)|0),((12376)|0));

 }
 $12=(($bd+12)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=((__Z9b2IsValidf($13))|0);
 if (!($14)) {
  ___assert_fail(((3688)|0),((7752)|0),((29)|0),((12376)|0));

 }
 $17=(($bd+24)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=((__Z9b2IsValidf($18))|0);
 if (!($19)) {
  ___assert_fail(((2728)|0),((7752)|0),((30)|0),((12376)|0));

 }
 $22=(($bd+32)|0);
 $23=(+(HEAPF32[(($22)>>2)]));
 $24=((__Z9b2IsValidf($23))|0);
 $_not=$24^1;
 $25=$23<(0.0);
 $or_cond=$25|$_not;
 if ($or_cond) {
  ___assert_fail(((2032)|0),((7752)|0),((31)|0),((12376)|0));

 }
 $28=(($bd+28)|0);
 $29=(+(HEAPF32[(($28)>>2)]));
 $30=((__Z9b2IsValidf($29))|0);
 $_not26=$30^1;
 $31=$29<(0.0);
 $or_cond27=$31|$_not26;
 if ($or_cond27) {
  ___assert_fail(((1400)|0),((7752)|0),((32)|0),((12376)|0));

 }
 $34=(($this+4)|0);
 HEAP16[(($34)>>1)]=0;
 $35=(($bd+39)|0);
 $36=((HEAP8[($35)])|0);
 $37=(($36<<24)>>24)==0;
 if (!($37)) {
  HEAP16[(($34)>>1)]=8;
 }
 $40=(($bd+38)|0);
 $41=((HEAP8[($40)])|0);
 $42=(($41<<24)>>24)==0;
 if (!($42)) {
  $44=((HEAP16[(($34)>>1)])|0);
  $45=$44|16;
  HEAP16[(($34)>>1)]=$45;
 }
 $47=(($bd+36)|0);
 $48=((HEAP8[($47)])|0);
 $49=(($48<<24)>>24)==0;
 if (!($49)) {
  $51=((HEAP16[(($34)>>1)])|0);
  $52=$51|4;
  HEAP16[(($34)>>1)]=$52;
 }
 $54=(($bd+37)|0);
 $55=((HEAP8[($54)])|0);
 $56=(($55<<24)>>24)==0;
 if (!($56)) {
  $58=((HEAP16[(($34)>>1)])|0);
  $59=$58|2;
  HEAP16[(($34)>>1)]=$59;
 }
 $61=(($bd+40)|0);
 $62=((HEAP8[($61)])|0);
 $63=(($62<<24)>>24)==0;
 if (!($63)) {
  $65=((HEAP16[(($34)>>1)])|0);
  $66=$65|32;
  HEAP16[(($34)>>1)]=$66;
 }
 $68=(($this+88)|0);
 HEAP32[(($68)>>2)]=$world;
 $69=$4;
 $70=$1;
 $ld$0$0=(($69)|0);
 $71$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($69+4)|0);
 $71$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($70)|0);
 HEAP32[(($st$2$0)>>2)]=$71$0;
 $st$3$1=(($70+4)|0);
 HEAP32[(($st$3$1)>>2)]=$71$1;
 $72=(($this+20)|0);
 $73=(+(HEAPF32[(($12)>>2)]));
 __ZN5b2Rot3SetEf($72,$73);
 $74=(($this+28)|0);
 __ZN6b2Vec27SetZeroEv($74);
 $75=(($this+36)|0);
 $76=$75;
 $ld$4$0=(($70)|0);
 $77$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($70+4)|0);
 $77$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($76)|0);
 HEAP32[(($st$6$0)>>2)]=$77$0;
 $st$7$1=(($76+4)|0);
 HEAP32[(($st$7$1)>>2)]=$77$1;
 $78=(($this+44)|0);
 $79=$78;
 $ld$8$0=(($70)|0);
 $80$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($70+4)|0);
 $80$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($79)|0);
 HEAP32[(($st$10$0)>>2)]=$80$0;
 $st$11$1=(($79+4)|0);
 HEAP32[(($st$11$1)>>2)]=$80$1;
 $81=(+(HEAPF32[(($12)>>2)]));
 $82=(($this+52)|0);
 HEAPF32[(($82)>>2)]=$81;
 $83=(+(HEAPF32[(($12)>>2)]));
 $84=(($this+56)|0);
 HEAPF32[(($84)>>2)]=$83;
 $85=(($this+60)|0);
 HEAPF32[(($85)>>2)]=0.0;
 $86=(($this+108)|0);
 HEAP32[(($86)>>2)]=0;
 $87=(($this+112)|0);
 HEAP32[(($87)>>2)]=0;
 $88=(($this+92)|0);
 HEAP32[(($88)>>2)]=0;
 $89=(($this+96)|0);
 HEAP32[(($89)>>2)]=0;
 $90=$8;
 $91=$2;
 $ld$12$0=(($90)|0);
 $92$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($90+4)|0);
 $92$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($91)|0);
 HEAP32[(($st$14$0)>>2)]=$92$0;
 $st$15$1=(($91+4)|0);
 HEAP32[(($st$15$1)>>2)]=$92$1;
 $93=(+(HEAPF32[(($17)>>2)]));
 $94=(($this+72)|0);
 HEAPF32[(($94)>>2)]=$93;
 $95=(+(HEAPF32[(($28)>>2)]));
 $96=(($this+132)|0);
 HEAPF32[(($96)>>2)]=$95;
 $97=(+(HEAPF32[(($22)>>2)]));
 $98=(($this+136)|0);
 HEAPF32[(($98)>>2)]=$97;
 $99=(($bd+48)|0);
 $100=(+(HEAPF32[(($99)>>2)]));
 $101=(($this+140)|0);
 HEAPF32[(($101)>>2)]=$100;
 __ZN6b2Vec27SetZeroEv($3);
 $102=(($this+84)|0);
 HEAPF32[(($102)>>2)]=0.0;
 $103=(($this+144)|0);
 HEAPF32[(($103)>>2)]=0.0;
 $104=(($bd)|0);
 $105=((HEAP32[(($104)>>2)])|0);
 $106=(($this)|0);
 HEAP32[(($106)>>2)]=$105;
 $107=($105|0)==2;
 $108=(($this+116)|0);
 if ($107) {
  HEAPF32[(($108)>>2)]=1.0;
  $110=(($this+120)|0);
  HEAPF32[(($110)>>2)]=1.0;
  $114=(($this+124)|0);
  HEAPF32[(($114)>>2)]=0.0;
  $115=(($this+128)|0);
  HEAPF32[(($115)>>2)]=0.0;
  $116=(($bd+44)|0);
  $117=((HEAP32[(($116)>>2)])|0);
  $118=(($this+148)|0);
  HEAP32[(($118)>>2)]=$117;
  $119=(($this+100)|0);
  HEAP32[(($119)>>2)]=0;
  $120=(($this+104)|0);
  HEAP32[(($120)>>2)]=0;
  return;
 } else {
  HEAPF32[(($108)>>2)]=0.0;
  $112=(($this+120)|0);
  HEAPF32[(($112)>>2)]=0.0;
  $114=(($this+124)|0);
  HEAPF32[(($114)>>2)]=0.0;
  $115=(($this+128)|0);
  HEAPF32[(($115)>>2)]=0.0;
  $116=(($bd+44)|0);
  $117=((HEAP32[(($116)>>2)])|0);
  $118=(($this+148)|0);
  HEAP32[(($118)>>2)]=$117;
  $119=(($this+100)|0);
  HEAP32[(($119)>>2)]=0;
  $120=(($this+104)|0);
  HEAP32[(($120)>>2)]=0;
  return;
 }
}


function __ZNK6b2Vec27IsValidEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=0,$5=0,$6=.0,$7=0,$9=0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=((__Z9b2IsValidf($2))|0);
 if (!($3)) {
  $9=0;

  return (($9)|0);
 }
 $5=(($this+4)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=((__Z9b2IsValidf($6))|0);
 $9=$7;

 return (($9)|0);
}


function __Z9b2IsValidf($x){
 $x=+($x);
 var $1=0,$2=0,$or_cond=0,$4=0,$_0=0,label=0;

 $1=!((($x) != ($x)))&!(tempFloat=(0.0),((tempFloat) != (tempFloat)));
 $2=$x>-Infinity;
 $or_cond=$1&$2;
 if (!($or_cond)) {
  $_0=0;

  return (($_0)|0);
 }
 $4=$x<Infinity;
 $_0=$4;

 return (($_0)|0);
}


function __ZN6b2BodyD2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN6b2Body7SetTypeE10b2BodyType($this,$type){
 $this=($this)|0;
 $type=($type)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$10=0,$11=0,$13=0,$14=0,$15=0,$16=.0,$17=0,$18=0,$19=0,$20=0,$21=0,$ld$0$0=0,$22$0=0,$ld$1$1=0;
 var $22$1=0,$st$2$0=0,$st$3$1=0,$24=0,$25=0,$26=0,$f_05=0,$27=0,$f_06=0,$28=0,$f_0=0,$29=0,label=0;

 $1=(($this+88)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK7b2World8IsLockedEv($2))|0);
 if ($3) {
  ___assert_fail(((904)|0),((7752)|0),((115)|0),((12400)|0));

 }
 $6=(($this)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)==($type|0);
 if ($8) {
  return;
 }
 HEAP32[(($6)>>2)]=$type;
 __ZN6b2Body13ResetMassDataEv($this);
 $10=((HEAP32[(($6)>>2)])|0);
 $11=($10|0)==0;
 if ($11) {
  $13=(($this+64)|0);
  __ZN6b2Vec27SetZeroEv($13);
  $14=(($this+72)|0);
  HEAPF32[(($14)>>2)]=0.0;
  $15=(($this+56)|0);
  $16=(+(HEAPF32[(($15)>>2)]));
  $17=(($this+52)|0);
  HEAPF32[(($17)>>2)]=$16;
  $18=(($this+36)|0);
  $19=(($this+44)|0);
  $20=$19;
  $21=$18;
  $ld$0$0=(($20)|0);
  $22$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($20+4)|0);
  $22$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($21)|0);
  HEAP32[(($st$2$0)>>2)]=$22$0;
  $st$3$1=(($21+4)|0);
  HEAP32[(($st$3$1)>>2)]=$22$1;
  __ZN6b2Body19SynchronizeFixturesEv($this);
 }
 __ZN6b2Body8SetAwakeEb($this,1);
 $24=(($this+76)|0);
 __ZN6b2Vec27SetZeroEv($24);
 $25=(($this+84)|0);
 HEAPF32[(($25)>>2)]=0.0;
 $26=(($this+100)|0);
 $f_05=((HEAP32[(($26)>>2)])|0);
 $27=($f_05|0)==0;
 if ($27) {
  return;
 } else {
  $f_06=$f_05;
 }
 while(1) {

  __ZN9b2Fixture8RefilterEv($f_06);
  $28=(($f_06+4)|0);
  $f_0=((HEAP32[(($28)>>2)])|0);
  $29=($f_0|0)==0;
  if ($29) {
   break;
  } else {
   $f_06=$f_0;
  }
 }
 return;
}


function __ZNK7b2World8IsLockedEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+102868)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&2;
 $4=($3|0)!=0;
 return (($4)|0);
}


function __ZN6b2Body13ResetMassDataEv($this){
 $this=($this)|0;
 var $localCenter=0,$tmpcast=0,$massData=0,$1=0,$oldCenter=0,$tmpcast4=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$15=0;
 var $16=0,$17=0,$18=0,$ld$0$0=0,$19$0=0,$ld$1$1=0,$19$1=0,$st$2$0=0,$st$3$1=0,$20=0,$21=0,$ld$4$0=0,$22$0=0,$ld$5$1=0,$22$1=0,$st$6$0=0,$st$7$1=0,$23=0,$24=.0,$25=0;
 var $$etemp$8=0,$ld$9$0=0,$28$0=0,$ld$10$1=0,$28$1=0,$st$11$0=0,$st$12$1=0,$29=0,$f_06=0,$30=0,$31=0,$32=0,$33=0,$f_07=0,$35=0,$36=.0,$37=0,$39=.0,$40=.0,$41=.0;
 var $42=.0,$43=.0,$44=.0,$45=.0,$47=0,$f_0=0,$48=0,$49=.0,$50=0,$52=.0,$55=.0,$56=0,$58=0,$59=0,$60=0,$61=0,$63=.0,$64=.0,$65=.0,$66=.0;
 var $67=0,$70=.0,$storemerge=.0,$73=0,$74=0,$ld$13$0=0,$75$0=0,$ld$14$1=0,$75$1=0,$st$15$0=0,$st$16$1=0,$76=0,$ld$17$0=0,$77$0=0,$ld$18$1=0,$77$1=0,$st$19$0=0,$st$20$1=0,$78=0,$79=0;
 var $ld$21$0=0,$80$0=0,$ld$22$1=0,$80$1=0,$st$23$0=0,$st$24$1=0,$81=0,$st$25$0=0,$st$26$1=0,$82=0,$83=0,$84=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $localCenter=((sp)|0);
 $tmpcast=$localCenter;
 $massData=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $oldCenter=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast4=$oldCenter;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=(($this+116)|0);
 $6=(($this+120)|0);
 $7=(($this+124)|0);
 $8=(($this+128)|0);
 $9=(($this+28)|0);
 $10=(($9)|0);
 $11=$5;
 _memset((((($11)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 __ZN6b2Vec27SetZeroEv($10);
 $12=(($this)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 if (((($13|0))|0)==((2)|0)) {
  $$etemp$8=20200;
  $ld$9$0=(($$etemp$8)|0);
  $28$0=((HEAP32[(($ld$9$0)>>2)])|0);
  $ld$10$1=(($$etemp$8+4)|0);
  $28$1=((HEAP32[(($ld$10$1)>>2)])|0);
  $st$11$0=(($localCenter)|0);
  HEAP32[(($st$11$0)>>2)]=$28$0;
  $st$12$1=(($localCenter+4)|0);
  HEAP32[(($st$12$1)>>2)]=$28$1;
  $29=(($this+100)|0);
  $f_06=((HEAP32[(($29)>>2)])|0);
  $30=($f_06|0)==0;
  if (!($30)) {
   $31=(($massData)|0);
   $32=(($massData+4)|0);
   $33=(($massData+12)|0);
   $f_07=$f_06;
   while(1) {

    $35=(($f_07)|0);
    $36=(+(HEAPF32[(($35)>>2)]));
    $37=$36==(0.0);
    if (!($37)) {
     __ZNK9b2Fixture11GetMassDataEP10b2MassData($f_07,$massData);
     $39=(+(HEAPF32[(($31)>>2)]));
     $40=(+(HEAPF32[(($5)>>2)]));
     $41=($39)+($40);
     HEAPF32[(($5)>>2)]=$41;
     $42=(+(HEAPF32[(($31)>>2)]));
     __ZmlfRK6b2Vec2($1,$42,$32);
     __ZN6b2Vec2pLERKS_($tmpcast,$1);
     $43=(+(HEAPF32[(($33)>>2)]));
     $44=(+(HEAPF32[(($7)>>2)]));
     $45=($43)+($44);
     HEAPF32[(($7)>>2)]=$45;
    }
    $47=(($f_07+4)|0);
    $f_0=((HEAP32[(($47)>>2)])|0);
    $48=($f_0|0)==0;
    if ($48) {
     break;
    } else {
     $f_07=$f_0;
    }
   }
  }
  $49=(+(HEAPF32[(($5)>>2)]));
  $50=$49>(0.0);
  if ($50) {
   $52=((1.0))/($49);
   HEAPF32[(($6)>>2)]=$52;
   __ZN6b2Vec2mLEf($tmpcast,$52);
  } else {
   HEAPF32[(($5)>>2)]=1.0;
   HEAPF32[(($6)>>2)]=1.0;
  }
  $55=(+(HEAPF32[(($7)>>2)]));
  $56=$55>(0.0);
  do {
   if ($56) {
    $58=(($this+4)|0);
    $59=((HEAP16[(($58)>>1)])|0);
    $60=$59&16;
    $61=(($60<<16)>>16)==0;
    if (!($61)) {
     label = 17;
     break;
    }
    $63=(+(HEAPF32[(($5)>>2)]));
    $64=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast,$tmpcast)));
    $65=($63)*($64);
    $66=($55)-($65);
    HEAPF32[(($7)>>2)]=$66;
    $67=$66>(0.0);
    if ($67) {
     $70=((1.0))/($66);
     $storemerge=$70;
     break;
    } else {
     ___assert_fail(((10824)|0),((7752)|0),((319)|0),((12424)|0));

    }
   } else {
    label = 17;
   }
  } while(0);
  if ((label|0) == 17) {
   HEAPF32[(($7)>>2)]=0.0;
   $storemerge=0.0;
  }

  HEAPF32[(($8)>>2)]=$storemerge;
  $73=(($this+44)|0);
  $74=$73;
  $ld$13$0=(($74)|0);
  $75$0=((HEAP32[(($ld$13$0)>>2)])|0);
  $ld$14$1=(($74+4)|0);
  $75$1=((HEAP32[(($ld$14$1)>>2)])|0);
  $st$15$0=(($oldCenter)|0);
  HEAP32[(($st$15$0)>>2)]=$75$0;
  $st$16$1=(($oldCenter+4)|0);
  HEAP32[(($st$16$1)>>2)]=$75$1;
  $76=$9;
  $ld$17$0=(($localCenter)|0);
  $77$0=((HEAP32[(($ld$17$0)>>2)])|0);
  $ld$18$1=(($localCenter+4)|0);
  $77$1=((HEAP32[(($ld$18$1)>>2)])|0);
  $st$19$0=(($76)|0);
  HEAP32[(($st$19$0)>>2)]=$77$0;
  $st$20$1=(($76+4)|0);
  HEAP32[(($st$20$1)>>2)]=$77$1;
  $78=(($this+36)|0);
  $79=(($this+12)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast5,$79,$10);
  $ld$21$0=(($2)|0);
  $80$0=((HEAP32[(($ld$21$0)>>2)])|0);
  $ld$22$1=(($2+4)|0);
  $80$1=((HEAP32[(($ld$22$1)>>2)])|0);
  $st$23$0=(($74)|0);
  HEAP32[(($st$23$0)>>2)]=$80$0;
  $st$24$1=(($74+4)|0);
  HEAP32[(($st$24$1)>>2)]=$80$1;
  $81=$78;
  $st$25$0=(($81)|0);
  HEAP32[(($st$25$0)>>2)]=$80$0;
  $st$26$1=(($81+4)|0);
  HEAP32[(($st$26$1)>>2)]=$80$1;
  $82=(($this+64)|0);
  $83=(($this+72)|0);
  $84=(+(HEAPF32[(($83)>>2)]));
  __ZmiRK6b2Vec2S1_($4,$73,$tmpcast4);
  __Z7b2CrossfRK6b2Vec2($3,$84,$4);
  __ZN6b2Vec2pLERKS_($82,$3);
  STACKTOP=sp;return;
 } else if (((($13|0))|0)==((0)|0)|((($13|0))|0)==((1)|0)) {
  $15=(($this+36)|0);
  $16=(($this+12)|0);
  $17=$16;
  $18=$15;
  $ld$0$0=(($17)|0);
  $19$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($17+4)|0);
  $19$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($18)|0);
  HEAP32[(($st$2$0)>>2)]=$19$0;
  $st$3$1=(($18+4)|0);
  HEAP32[(($st$3$1)>>2)]=$19$1;
  $20=(($this+44)|0);
  $21=$20;
  $ld$4$0=(($17)|0);
  $22$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($17+4)|0);
  $22$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($21)|0);
  HEAP32[(($st$6$0)>>2)]=$22$0;
  $st$7$1=(($21+4)|0);
  HEAP32[(($st$7$1)>>2)]=$22$1;
  $23=(($this+56)|0);
  $24=(+(HEAPF32[(($23)>>2)]));
  $25=(($this+52)|0);
  HEAPF32[(($25)>>2)]=$24;
  STACKTOP=sp;return;
 } else {
  ___assert_fail(((11384)|0),((7752)|0),((284)|0),((12424)|0));

 }
}


function __ZN6b2Body19SynchronizeFixturesEv($this){
 $this=($this)|0;
 var $xf13=0,$tmpcast=0,$1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=0,$xf1378=0,$8=0,$9=0,$10=0,$11=0,$f_05=0,$12=0,$13=0,$f_06=0,$15=0,$f_0=0;
 var $16=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $xf13=((sp)|0);
 $tmpcast=$xf13;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=(($xf13+8)|0);
 $3=$2;
 $4=(($this+52)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 __ZN5b2Rot3SetEf($3,$5);
 $6=(($this+36)|0);
 $7=(($this+28)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($1,$3,$7);
 $xf1378=$xf13;
 __ZmiRK6b2Vec2S1_($xf1378,$6,$1);
 $8=(($this+88)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+102872)|0);
 $11=(($this+100)|0);
 $f_05=((HEAP32[(($11)>>2)])|0);
 $12=($f_05|0)==0;
 if ($12) {
  STACKTOP=sp;return;
 }
 $13=(($this+12)|0);
 $f_06=$f_05;
 while(1) {

  __ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_($f_06,$10,$tmpcast,$13);
  $15=(($f_06+4)|0);
  $f_0=((HEAP32[(($15)>>2)])|0);
  $16=($f_0|0)==0;
  if ($16) {
   break;
  } else {
   $f_06=$f_0;
  }
 }
 STACKTOP=sp;return;
}


function __ZN6b2Body8SetAwakeEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$4=0,$5=0,$7=0,$8=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 if (!($flag)) {
  $10=$2&-3;
  HEAP16[(($1)>>1)]=$10;
  $11=(($this+144)|0);
  HEAPF32[(($11)>>2)]=0.0;
  $12=(($this+64)|0);
  __ZN6b2Vec27SetZeroEv($12);
  $13=(($this+72)|0);
  HEAPF32[(($13)>>2)]=0.0;
  $14=(($this+76)|0);
  __ZN6b2Vec27SetZeroEv($14);
  $15=(($this+84)|0);
  HEAPF32[(($15)>>2)]=0.0;
  return;
 }
 $4=$2&2;
 $5=(($4<<16)>>16)==0;
 if (!($5)) {
  return;
 }
 $7=$2|2;
 HEAP16[(($1)>>1)]=$7;
 $8=(($this+144)|0);
 HEAPF32[(($8)>>2)]=0.0;
 return;
}


function __ZN6b2Body13CreateFixtureEPK12b2FixtureDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$10=0,$12=0,$13=0,$14=0,$15=0,$16=0,$18=0,$19=0,$20=0,$22=0,$23=0,$24=0,$25=0,$26=0;
 var $27=0,$28=0,$29=0,$30=.0,$31=0,$34=0,$35=0,$36=0,$37=0,label=0;

 $1=(($this+88)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK7b2World8IsLockedEv($2))|0);
 if ($3) {
  ___assert_fail(((904)|0),((7752)|0),((153)|0),((12440)|0));
  return ((0)|0);
 }
 $6=(($2)|0);
 $7=((__ZN16b2BlockAllocator8AllocateEi($6,44))|0);
 $8=($7|0)==0;
 if ($8) {
  $12=0;
 } else {
  $10=$7;
  __ZN9b2FixtureC2Ev($10);
  $12=$10;
 }

 __ZN9b2Fixture6CreateEP16b2BlockAllocatorP6b2BodyPK12b2FixtureDef($12,$6,$this,$def);
 $13=(($this+4)|0);
 $14=((HEAP16[(($13)>>1)])|0);
 $15=$14&32;
 $16=(($15<<16)>>16)==0;
 if (!($16)) {
  $18=((HEAP32[(($1)>>2)])|0);
  $19=(($18+102872)|0);
  $20=(($this+12)|0);
  __ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform($12,$19,$20);
 }
 $22=(($this+100)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=(($12+4)|0);
 HEAP32[(($24)>>2)]=$23;
 HEAP32[(($22)>>2)]=$12;
 $25=(($this+104)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=((($26)+(1))|0);
 HEAP32[(($25)>>2)]=$27;
 $28=(($12+8)|0);
 HEAP32[(($28)>>2)]=$this;
 $29=(($12)|0);
 $30=(+(HEAPF32[(($29)>>2)]));
 $31=$30>(0.0);
 if (!($31)) {
  $34=((HEAP32[(($1)>>2)])|0);
  $35=(($34+102868)|0);
  $36=((HEAP32[(($35)>>2)])|0);
  $37=$36|1;
  HEAP32[(($35)>>2)]=$37;
  return (($12)|0);
 }
 __ZN6b2Body13ResetMassDataEv($this);
 $34=((HEAP32[(($1)>>2)])|0);
 $35=(($34+102868)|0);
 $36=((HEAP32[(($35)>>2)])|0);
 $37=$36|1;
 HEAP32[(($35)>>2)]=$37;
 return (($12)|0);
}


function __ZN6b2Body13CreateFixtureEPK7b2Shapef($this,$shape,$density){
 $this=($this)|0;
 $shape=($shape)|0;
 $density=+($density);
 var $def=0,$1=0,$2=0,$3=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $def=((sp)|0);
 __ZN12b2FixtureDefC1Ev($def);
 $1=(($def)|0);
 HEAP32[(($1)>>2)]=$shape;
 $2=(($def+16)|0);
 HEAPF32[(($2)>>2)]=$density;
 $3=((__ZN6b2Body13CreateFixtureEPK12b2FixtureDef($this,$def))|0);
 STACKTOP=sp;return (($3)|0);
}


function __ZN12b2FixtureDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN12b2FixtureDefC2Ev($this);
 return;
}


function __ZN6b2Body14DestroyFixtureEP9b2Fixture($this,$fixture){
 $this=($this)|0;
 $fixture=($fixture)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$11=0,$12=0,$13=0,$16=0,$node_0=0,$18=0,$19=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0;
 var $edge_020=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$or_cond=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$48=0;
 var $50=0,$51=0,$52=0,label=0;

 $1=(($this+88)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK7b2World8IsLockedEv($2))|0);
 if ($3) {
  ___assert_fail(((904)|0),((7752)|0),((201)|0),((12408)|0));

 }
 $6=(($fixture+8)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)==($this|0);
 if (!($8)) {
  ___assert_fail(((864)|0),((7752)|0),((207)|0),((12408)|0));

 }
 $11=(($this+104)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=($12|0)>0;
 if (!($13)) {
  ___assert_fail(((424)|0),((7752)|0),((210)|0),((12408)|0));

 }
 $16=(($this+100)|0);
 $node_0=$16;
 while(1) {

  $18=((HEAP32[(($node_0)>>2)])|0);
  $19=($18|0)==0;
  if ($19) {
   label = 11;
   break;
  }
  $21=($18|0)==($fixture|0);
  $22=(($18+4)|0);
  if ($21) {
   break;
  } else {
   $node_0=$22;
  }
 }
 if ((label|0) == 11) {
  ___assert_fail(((11720)|0),((7752)|0),((226)|0),((12408)|0));

 }
 $23=(($fixture+4)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 HEAP32[(($node_0)>>2)]=$24;
 $25=(($this+112)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=($26|0)==0;
 if (!($27)) {
  $edge_020=$26;
  while(1) {

   $29=(($edge_020+4)|0);
   $30=((HEAP32[(($29)>>2)])|0);
   $31=(($edge_020+12)|0);
   $32=((HEAP32[(($31)>>2)])|0);
   $33=((__ZN9b2Contact11GetFixtureAEv($30))|0);
   $34=((__ZN9b2Contact11GetFixtureBEv($30))|0);
   $35=($33|0)==($fixture|0);
   $36=($34|0)==($fixture|0);
   $or_cond=$35|$36;
   if ($or_cond) {
    $38=((HEAP32[(($1)>>2)])|0);
    $39=(($38+102872)|0);
    __ZN16b2ContactManager7DestroyEP9b2Contact($39,$30);
   }
   $40=($32|0)==0;
   if ($40) {
    break;
   } else {
    $edge_020=$32;
   }
  }
 }
 $41=((HEAP32[(($1)>>2)])|0);
 $42=(($41)|0);
 $43=(($this+4)|0);
 $44=((HEAP16[(($43)>>1)])|0);
 $45=$44&32;
 $46=(($45<<16)>>16)==0;
 if ($46) {
  __ZN9b2Fixture7DestroyEP16b2BlockAllocator($fixture,$42);
  HEAP32[(($6)>>2)]=0;
  HEAP32[(($23)>>2)]=0;
  $50=$fixture;
  __ZN16b2BlockAllocator4FreeEPvi($42,$50,44);
  $51=((HEAP32[(($11)>>2)])|0);
  $52=((($51)-(1))|0);
  HEAP32[(($11)>>2)]=$52;
  __ZN6b2Body13ResetMassDataEv($this);
  return;
 }
 $48=(($41+102872)|0);
 __ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase($fixture,$48);
 __ZN9b2Fixture7DestroyEP16b2BlockAllocator($fixture,$42);
 HEAP32[(($6)>>2)]=0;
 HEAP32[(($23)>>2)]=0;
 $50=$fixture;
 __ZN16b2BlockAllocator4FreeEPvi($42,$50,44);
 $51=((HEAP32[(($11)>>2)])|0);
 $52=((($51)-(1))|0);
 HEAP32[(($11)>>2)]=$52;
 __ZN6b2Body13ResetMassDataEv($this);
 return;
}


function __ZN9b2Contact11GetFixtureAEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN9b2Contact11GetFixtureBEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZNK9b2Fixture11GetMassDataEP10b2MassData($this,$massData){
 $this=($this)|0;
 $massData=($massData)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=.0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+28)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($this)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 FUNCTION_TABLE_viif[($6)&127]($2,$massData,$8);
 return;
}


function __ZN6b2Body11SetMassDataEPK10b2MassData($this,$massData){
 $this=($this)|0;
 $massData=($massData)|0;
 var $oldCenter=0,$tmpcast=0,$1=0,$tmpcast7=0,$2=0,$3=0,$4=0,$5=0,$6=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$16=0,$17=.0,$18=0,$19=0,$storemerge=.0;
 var $20=.0,$21=0,$22=.0,$23=0,$25=0,$26=0,$27=0,$28=0,$30=.0,$31=0,$32=.0,$33=.0,$34=.0,$35=0,$38=.0,$40=0,$41=0,$42=0,$ld$0$0=0,$43$0=0;
 var $ld$1$1=0,$43$1=0,$st$2$0=0,$st$3$1=0,$44=0,$45=0,$46=0,$47=0,$ld$4$0=0,$48$0=0,$ld$5$1=0,$48$1=0,$st$6$0=0,$st$7$1=0,$49=0,$50=0,$ld$8$0=0,$51$0=0,$ld$9$1=0,$51$1=0;
 var $st$10$0=0,$st$11$1=0,$52=0,$st$12$0=0,$st$13$1=0,$53=0,$54=0,$55=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $oldCenter=((sp)|0);
 $tmpcast=$oldCenter;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast7=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=(($this+88)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=((__ZNK7b2World8IsLockedEv($5))|0);
 if ($6) {
  ___assert_fail(((904)|0),((7752)|0),((340)|0),((12472)|0));

 }
 $9=(($this)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($10|0)==2;
 if (!($11)) {
  STACKTOP=sp;return;
 }
 $13=(($this+120)|0);
 HEAPF32[(($13)>>2)]=0.0;
 $14=(($this+124)|0);
 HEAPF32[(($14)>>2)]=0.0;
 $15=(($this+128)|0);
 HEAPF32[(($15)>>2)]=0.0;
 $16=(($massData)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+116)|0);
 $19=$17>(0.0);
 $storemerge=($19?$17:(1.0));
 HEAPF32[(($18)>>2)]=$storemerge;
 $20=((1.0))/($storemerge);
 HEAPF32[(($13)>>2)]=$20;
 $21=(($massData+12)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22>(0.0);
 do {
  if ($23) {
   $25=(($this+4)|0);
   $26=((HEAP16[(($25)>>1)])|0);
   $27=$26&16;
   $28=(($27<<16)>>16)==0;
   if (!($28)) {
    break;
   }
   $30=(+(HEAPF32[(($18)>>2)]));
   $31=(($massData+4)|0);
   $32=(+(__Z5b2DotRK6b2Vec2S1_($31,$31)));
   $33=($30)*($32);
   $34=($22)-($33);
   HEAPF32[(($14)>>2)]=$34;
   $35=$34>(0.0);
   if ($35) {
    $38=((1.0))/($34);
    HEAPF32[(($15)>>2)]=$38;
    break;
   } else {
    ___assert_fail(((10824)|0),((7752)|0),((366)|0),((12472)|0));

   }
  }
 } while(0);
 $40=(($this+28)|0);
 $41=(($this+44)|0);
 $42=$41;
 $ld$0$0=(($42)|0);
 $43$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($42+4)|0);
 $43$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($oldCenter)|0);
 HEAP32[(($st$2$0)>>2)]=$43$0;
 $st$3$1=(($oldCenter+4)|0);
 HEAP32[(($st$3$1)>>2)]=$43$1;
 $44=(($40)|0);
 $45=(($massData+4)|0);
 $46=$45;
 $47=$40;
 $ld$4$0=(($46)|0);
 $48$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($46+4)|0);
 $48$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($47)|0);
 HEAP32[(($st$6$0)>>2)]=$48$0;
 $st$7$1=(($47+4)|0);
 HEAP32[(($st$7$1)>>2)]=$48$1;
 $49=(($this+36)|0);
 $50=(($this+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast7,$50,$44);
 $ld$8$0=(($1)|0);
 $51$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($1+4)|0);
 $51$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($42)|0);
 HEAP32[(($st$10$0)>>2)]=$51$0;
 $st$11$1=(($42+4)|0);
 HEAP32[(($st$11$1)>>2)]=$51$1;
 $52=$49;
 $st$12$0=(($52)|0);
 HEAP32[(($st$12$0)>>2)]=$51$0;
 $st$13$1=(($52+4)|0);
 HEAP32[(($st$13$1)>>2)]=$51$1;
 $53=(($this+64)|0);
 $54=(($this+72)|0);
 $55=(+(HEAPF32[(($54)>>2)]));
 __ZmiRK6b2Vec2S1_($3,$41,$tmpcast);
 __Z7b2CrossfRK6b2Vec2($2,$55,$3);
 __ZN6b2Vec2pLERKS_($53,$2);
 STACKTOP=sp;return;
}


function __ZNK6b2Body13ShouldCollideEPKS_($this,$other){
 $this=($this)|0;
 $other=($other)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$jn_07=0,$10=0,$jn_08=0,$11=0,$12=0,$13=0,$15=0,$16=0,$17=0,$18=0,$19=0,$21=0,$jn_0=0;
 var $22=0,$_0=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==2;
 do {
  if (!($3)) {
   $5=(($other)|0);
   $6=((HEAP32[(($5)>>2)])|0);
   $7=($6|0)==2;
   if ($7) {
    break;
   } else {
    $_0=0;
   }

   return (($_0)|0);
  }
 } while(0);
 $9=(($this+108)|0);
 $jn_07=((HEAP32[(($9)>>2)])|0);
 $10=($jn_07|0)==0;
 if ($10) {
  $_0=1;

  return (($_0)|0);
 } else {
  $jn_08=$jn_07;
 }
 while(1) {

  $11=(($jn_08)|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=($12|0)==($other|0);
  if ($13) {
   $15=(($jn_08+4)|0);
   $16=((HEAP32[(($15)>>2)])|0);
   $17=(($16+61)|0);
   $18=((HEAP8[($17)])|0);
   $19=(($18<<24)>>24)==0;
   if ($19) {
    $_0=0;
    label = 7;
    break;
   }
  }
  $21=(($jn_08+12)|0);
  $jn_0=((HEAP32[(($21)>>2)])|0);
  $22=($jn_0|0)==0;
  if ($22) {
   $_0=1;
   label = 7;
   break;
  } else {
   $jn_08=$jn_0;
  }
 }
 if ((label|0) == 7) {

  return (($_0)|0);
 }
  return 0;
}


function __ZN6b2Body12SetTransformERK6b2Vec2f($this,$position,$angle){
 $this=($this)|0;
 $position=($position)|0;
 $angle=+($angle);
 var $1=0,$2=0,$3=0,$4=0,$tmpcast=0,$7=0,$8=0,$9=0,$10=0,$ld$0$0=0,$11$0=0,$ld$1$1=0,$11$1=0,$st$2$0=0,$st$3$1=0,$12=0,$13=0,$14=0,$ld$4$0=0,$15$0=0;
 var $ld$5$1=0,$15$1=0,$st$6$0=0,$st$7$1=0,$16=0,$17=0,$18=0,$ld$8$0=0,$19$0=0,$ld$9$1=0,$19$1=0,$st$10$0=0,$st$11$1=0,$20=0,$21=0,$22=0,$23=0,$f_07=0,$24=0,$f_08=0;
 var $25=0,$f_0=0,$26=0,$27=0,$28=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($this+88)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((__ZNK7b2World8IsLockedEv($3))|0);
 if ($4) {
  ___assert_fail(((904)|0),((7752)|0),((404)|0),((12456)|0));

 }
 $tmpcast=$1;
 $7=(($this+12)|0);
 $8=(($this+20)|0);
 __ZN5b2Rot3SetEf($8,$angle);
 $9=$position;
 $10=$7;
 $ld$0$0=(($9)|0);
 $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($9+4)|0);
 $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($10)|0);
 HEAP32[(($st$2$0)>>2)]=$11$0;
 $st$3$1=(($10+4)|0);
 HEAP32[(($st$3$1)>>2)]=$11$1;
 $12=(($this+44)|0);
 $13=(($this+28)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast,$7,$13);
 $14=$12;
 $ld$4$0=(($1)|0);
 $15$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($1+4)|0);
 $15$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($14)|0);
 HEAP32[(($st$6$0)>>2)]=$15$0;
 $st$7$1=(($14+4)|0);
 HEAP32[(($st$7$1)>>2)]=$15$1;
 $16=(($this+56)|0);
 HEAPF32[(($16)>>2)]=$angle;
 $17=(($this+36)|0);
 $18=$17;
 $ld$8$0=(($14)|0);
 $19$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($14+4)|0);
 $19$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($18)|0);
 HEAP32[(($st$10$0)>>2)]=$19$0;
 $st$11$1=(($18+4)|0);
 HEAP32[(($st$11$1)>>2)]=$19$1;
 $20=(($this+52)|0);
 HEAPF32[(($20)>>2)]=$angle;
 $21=((HEAP32[(($2)>>2)])|0);
 $22=(($21+102872)|0);
 $23=(($this+100)|0);
 $f_07=((HEAP32[(($23)>>2)])|0);
 $24=($f_07|0)==0;
 if ($24) {
  $27=((HEAP32[(($2)>>2)])|0);
  $28=(($27+102872)|0);
  __ZN16b2ContactManager15FindNewContactsEv($28);
  STACKTOP=sp;return;
 } else {
  $f_08=$f_07;
 }
 while(1) {

  __ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_($f_08,$22,$7,$7);
  $25=(($f_08+4)|0);
  $f_0=((HEAP32[(($25)>>2)])|0);
  $26=($f_0|0)==0;
  if ($26) {
   break;
  } else {
   $f_08=$f_0;
  }
 }
 $27=((HEAP32[(($2)>>2)])|0);
 $28=(($27+102872)|0);
 __ZN16b2ContactManager15FindNewContactsEv($28);
 STACKTOP=sp;return;
}


function __ZN6b2Body9SetActiveEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$3=0,$6=0,$tmp=0,$8=0,$9=0,$11=0,$12=0,$13=0,$14=0,$f_09=0,$15=0,$16=0,$f_010=0,$18=0,$f_0=0,$19=0,$21=0,$22=0;
 var $23=0,$24=0,$f2_013=0,$25=0,$f2_014=0,$26=0,$f2_0=0,$27=0,$28=0,$29=0,$30=0,$ce_011=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,label=0;

 $1=(($this+88)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK7b2World8IsLockedEv($2))|0);
 if ($3) {
  ___assert_fail(((904)|0),((7752)|0),((443)|0),((12384)|0));

 }
 $6=((__ZNK6b2Body8IsActiveEv($this))|0);
 $tmp=$6^$flag;
 if (!($tmp)) {
  return;
 }
 $8=(($this+4)|0);
 $9=((HEAP16[(($8)>>1)])|0);
 if ($flag) {
  $11=$9|32;
  HEAP16[(($8)>>1)]=$11;
  $12=((HEAP32[(($1)>>2)])|0);
  $13=(($12+102872)|0);
  $14=(($this+100)|0);
  $f_09=((HEAP32[(($14)>>2)])|0);
  $15=($f_09|0)==0;
  if ($15) {
   return;
  }
  $16=(($this+12)|0);
  $f_010=$f_09;
  while(1) {

   __ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform($f_010,$13,$16);
   $18=(($f_010+4)|0);
   $f_0=((HEAP32[(($18)>>2)])|0);
   $19=($f_0|0)==0;
   if ($19) {
    break;
   } else {
    $f_010=$f_0;
   }
  }
  return;
 }
 $21=$9&-33;
 HEAP16[(($8)>>1)]=$21;
 $22=((HEAP32[(($1)>>2)])|0);
 $23=(($22+102872)|0);
 $24=(($this+100)|0);
 $f2_013=((HEAP32[(($24)>>2)])|0);
 $25=($f2_013|0)==0;
 if (!($25)) {
  $f2_014=$f2_013;
  while(1) {

   __ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase($f2_014,$23);
   $26=(($f2_014+4)|0);
   $f2_0=((HEAP32[(($26)>>2)])|0);
   $27=($f2_0|0)==0;
   if ($27) {
    break;
   } else {
    $f2_014=$f2_0;
   }
  }
 }
 $28=(($this+112)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=($29|0)==0;
 if (!($30)) {
  $ce_011=$29;
  while(1) {

   $31=(($ce_011+12)|0);
   $32=((HEAP32[(($31)>>2)])|0);
   $33=((HEAP32[(($1)>>2)])|0);
   $34=(($33+102872)|0);
   $35=(($ce_011+4)|0);
   $36=((HEAP32[(($35)>>2)])|0);
   __ZN16b2ContactManager7DestroyEP9b2Contact($34,$36);
   $37=($32|0)==0;
   if ($37) {
    break;
   } else {
    $ce_011=$32;
   }
  }
 }
 HEAP32[(($28)>>2)]=0;
 return;
}


function __ZNK6b2Body8IsActiveEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 $3=$2&32;
 $4=(($3<<16)>>16)!=0;
 return (($4)|0);
}


function __ZN6b2Body4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=.0,$8=0,$9=.0,$10=.0,$11=0,$12=.0,$13=.0,$14=0,$15=.0,$16=.0,$17=0,$18=.0,$19=.0,$20=0;
 var $21=.0,$22=.0,$23=0,$24=.0,$25=.0,$26=0,$27=.0,$28=.0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0;
 var $41=0,$42=0,$43=0,$44=0,$45=0,$46=.0,$47=.0,$48=0,$49=0,$f_03=0,$50=0,$f_04=0,$51=0,$f_0=0,$52=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __Z5b2LogPKcz(9776,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(9120,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $3=(($this)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __Z5b2LogPKcz(8760,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $5=(($this+12)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=$6;
 $8=(($this+16)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=$9;
 __Z5b2LogPKcz(8536,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$7,HEAPF64[(((tempVarArgs)+(8))>>3)]=$10,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $11=(($this+56)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=$12;
 __Z5b2LogPKcz(8288,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$13,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $14=(($this+64)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=$15;
 $17=(($this+68)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=$18;
 __Z5b2LogPKcz(8080,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$16,HEAPF64[(((tempVarArgs)+(8))>>3)]=$19,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $20=(($this+72)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=$21;
 __Z5b2LogPKcz(7864,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$22,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $23=(($this+132)|0);
 $24=(+(HEAPF32[(($23)>>2)]));
 $25=$24;
 __Z5b2LogPKcz(7648,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$25,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $26=(($this+136)|0);
 $27=(+(HEAPF32[(($26)>>2)]));
 $28=$27;
 __Z5b2LogPKcz(7488,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$28,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $29=(($this+4)|0);
 $30=((HEAP16[(($29)>>1)])|0);
 $31=($30&65535);
 $32=$31&4;
 __Z5b2LogPKcz(7248,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$32,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $33=((HEAP16[(($29)>>1)])|0);
 $34=($33&65535);
 $35=$34&2;
 __Z5b2LogPKcz(6536,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$35,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $36=((HEAP16[(($29)>>1)])|0);
 $37=($36&65535);
 $38=$37&16;
 __Z5b2LogPKcz(6104,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$38,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $39=((HEAP16[(($29)>>1)])|0);
 $40=($39&65535);
 $41=$40&8;
 __Z5b2LogPKcz(5888,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$41,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $42=((HEAP16[(($29)>>1)])|0);
 $43=($42&65535);
 $44=$43&32;
 __Z5b2LogPKcz(5744,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$44,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $45=(($this+140)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=$46;
 __Z5b2LogPKcz(5480,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$47,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $48=((HEAP32[(($1)>>2)])|0);
 __Z5b2LogPKcz(5272,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$48,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(4984,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $49=(($this+100)|0);
 $f_03=((HEAP32[(($49)>>2)])|0);
 $50=($f_03|0)==0;
 if ($50) {
  __Z5b2LogPKcz(4504,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  STACKTOP=sp;return;
 } else {
  $f_04=$f_03;
 }
 while(1) {

  __Z5b2LogPKcz(4792,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  __ZN9b2Fixture4DumpEi($f_04,$2);
  __Z5b2LogPKcz(4680,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $51=(($f_04+4)|0);
  $f_0=((HEAP32[(($51)>>2)])|0);
  $52=($f_0|0)==0;
  if ($52) {
   break;
  } else {
   $f_04=$f_0;
  }
 }
 __Z5b2LogPKcz(4504,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN12b2FixtureDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this+22)|0);
 __ZN8b2FilterC1Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+4)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+8)|0);
 HEAPF32[(($4)>>2)]=0.20000000298023224;
 $5=(($this+12)|0);
 HEAPF32[(($5)>>2)]=0.0;
 $6=(($this+16)|0);
 HEAPF32[(($6)>>2)]=0.0;
 $7=(($this+20)|0);
 HEAP8[($7)]=0;
 return;
}


function __ZN8b2FilterC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN8b2FilterC2Ev($this);
 return;
}


function __ZN8b2FilterC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 HEAP16[(($1)>>1)]=1;
 $2=(($this+2)|0);
 HEAP16[(($2)>>1)]=-1;
 $3=(($this+4)|0);
 HEAP16[(($3)>>1)]=0;
 return;
}


function __ZN15b2ContactFilterD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN17b2ContactListenerD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN16b2ContactManagerC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this)|0);
 __ZN12b2BroadPhaseC2Ev($1);
 $2=(($this+60)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+64)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+68)|0);
 HEAP32[(($4)>>2)]=16;
 $5=(($this+72)|0);
 HEAP32[(($5)>>2)]=8;
 $6=(($this+76)|0);
 HEAP32[(($6)>>2)]=0;
 return;
}


function __ZN16b2ContactManager7DestroyEP9b2Contact($this,$c){
 $this=($this)|0;
 $c=($c)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$11=0,$12=0,$13=0,$14=0,$16=0,$17=0,$18=0,$20=0,$21=0,$22=0,$24=0,$25=0;
 var $26=0,$28=0,$29=0,$31=0,$32=0,$33=0,$35=0,$37=0,$38=0,$39=0,$40=0,$42=0,$43=0,$44=0,$46=0,$47=0,$48=0,$50=0,$51=0,$53=0;
 var $54=0,$55=0,$57=0,$59=0,$60=0,$61=0,$62=0,$64=0,$65=0,$66=0,$68=0,$69=0,$70=0,$72=0,$73=0,$75=0,$76=0,$77=0,$79=0,$81=0;
 var $82=0,$83=0,$84=0,$85=0,label=0;

 $1=((__ZN9b2Contact11GetFixtureAEv($c))|0);
 $2=((__ZN9b2Contact11GetFixtureBEv($c))|0);
 $3=((__ZN9b2Fixture7GetBodyEv($1))|0);
 $4=((__ZN9b2Fixture7GetBodyEv($2))|0);
 $5=(($this+72)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)==0;
 do {
  if (!($7)) {
   $9=((__ZNK9b2Contact10IsTouchingEv($c))|0);
   if (!($9)) {
    break;
   }
   $11=$6;
   $12=((HEAP32[(($11)>>2)])|0);
   $13=(($12+12)|0);
   $14=((HEAP32[(($13)>>2)])|0);
   FUNCTION_TABLE_vii[($14)&255]($6,$c);
  }
 } while(0);
 $16=(($c+8)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=($17|0)==0;
 if (!($18)) {
  $20=(($c+12)|0);
  $21=((HEAP32[(($20)>>2)])|0);
  $22=(($17+12)|0);
  HEAP32[(($22)>>2)]=$21;
 }
 $24=(($c+12)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=($25|0)==0;
 if (!($26)) {
  $28=((HEAP32[(($16)>>2)])|0);
  $29=(($25+8)|0);
  HEAP32[(($29)>>2)]=$28;
 }
 $31=(($this+60)|0);
 $32=((HEAP32[(($31)>>2)])|0);
 $33=($32|0)==($c|0);
 if ($33) {
  $35=((HEAP32[(($24)>>2)])|0);
  HEAP32[(($31)>>2)]=$35;
 }
 $37=(($c+16)|0);
 $38=(($c+24)|0);
 $39=((HEAP32[(($38)>>2)])|0);
 $40=($39|0)==0;
 if (!($40)) {
  $42=(($c+28)|0);
  $43=((HEAP32[(($42)>>2)])|0);
  $44=(($39+12)|0);
  HEAP32[(($44)>>2)]=$43;
 }
 $46=(($c+28)|0);
 $47=((HEAP32[(($46)>>2)])|0);
 $48=($47|0)==0;
 if (!($48)) {
  $50=((HEAP32[(($38)>>2)])|0);
  $51=(($47+8)|0);
  HEAP32[(($51)>>2)]=$50;
 }
 $53=(($3+112)|0);
 $54=((HEAP32[(($53)>>2)])|0);
 $55=($37|0)==($54|0);
 if ($55) {
  $57=((HEAP32[(($46)>>2)])|0);
  HEAP32[(($53)>>2)]=$57;
 }
 $59=(($c+32)|0);
 $60=(($c+40)|0);
 $61=((HEAP32[(($60)>>2)])|0);
 $62=($61|0)==0;
 if (!($62)) {
  $64=(($c+44)|0);
  $65=((HEAP32[(($64)>>2)])|0);
  $66=(($61+12)|0);
  HEAP32[(($66)>>2)]=$65;
 }
 $68=(($c+44)|0);
 $69=((HEAP32[(($68)>>2)])|0);
 $70=($69|0)==0;
 if (!($70)) {
  $72=((HEAP32[(($60)>>2)])|0);
  $73=(($69+8)|0);
  HEAP32[(($73)>>2)]=$72;
 }
 $75=(($4+112)|0);
 $76=((HEAP32[(($75)>>2)])|0);
 $77=($59|0)==($76|0);
 if (!($77)) {
  $81=(($this+76)|0);
  $82=((HEAP32[(($81)>>2)])|0);
  __ZN9b2Contact7DestroyEPS_P16b2BlockAllocator($c,$82);
  $83=(($this+64)|0);
  $84=((HEAP32[(($83)>>2)])|0);
  $85=((($84)-(1))|0);
  HEAP32[(($83)>>2)]=$85;
  return;
 }
 $79=((HEAP32[(($68)>>2)])|0);
 HEAP32[(($75)>>2)]=$79;
 $81=(($this+76)|0);
 $82=((HEAP32[(($81)>>2)])|0);
 __ZN9b2Contact7DestroyEPS_P16b2BlockAllocator($c,$82);
 $83=(($this+64)|0);
 $84=((HEAP32[(($83)>>2)])|0);
 $85=((($84)-(1))|0);
 HEAP32[(($83)>>2)]=$85;
 return;
}


function __ZN9b2Fixture7GetBodyEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZNK9b2Contact10IsTouchingEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&2;
 $4=($3|0)!=0;
 return (($4)|0);
}


function __ZN16b2ContactManager7CollideEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$c_025=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$19=0,$21=0,$c_0_be=0;
 var $22=0,$24=0,$25=0,$27=0,$28=0,$29=0,$30=0,$31=0,$33=0,$35=0,$36=0,$38=0,$40=0,$41=0,$42=0,$phitmp=0,$44=0,$45=0,$47=0,$48=0;
 var $phitmp24=0,$50=0,$51=0,$or_cond=0,$53=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$65=0,$67=0,$68=0,label=0;

 $1=(($this+60)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  return;
 }
 $4=(($this)|0);
 $5=(($this+72)|0);
 $6=(($this+68)|0);
 $c_025=$2;
 while(1) {

  $8=((__ZN9b2Contact11GetFixtureAEv($c_025))|0);
  $9=((__ZN9b2Contact11GetFixtureBEv($c_025))|0);
  $10=((__ZNK9b2Contact14GetChildIndexAEv($c_025))|0);
  $11=((__ZNK9b2Contact14GetChildIndexBEv($c_025))|0);
  $12=((__ZN9b2Fixture7GetBodyEv($8))|0);
  $13=((__ZN9b2Fixture7GetBodyEv($9))|0);
  $14=(($c_025+4)|0);
  $15=((HEAP32[(($14)>>2)])|0);
  $16=$15&8;
  $17=($16|0)==0;
  L6: do {
   if ($17) {
    label = 11;
   } else {
    $19=((__ZNK6b2Body13ShouldCollideEPKS_($13,$12))|0);
    if (!($19)) {
     $21=((__ZN9b2Contact7GetNextEv($c_025))|0);
     __ZN16b2ContactManager7DestroyEP9b2Contact($this,$c_025);
     $c_0_be=$21;
     break;
    }
    $24=((HEAP32[(($6)>>2)])|0);
    $25=($24|0)==0;
    do {
     if (!($25)) {
      $27=$24;
      $28=((HEAP32[(($27)>>2)])|0);
      $29=(($28+8)|0);
      $30=((HEAP32[(($29)>>2)])|0);
      $31=((FUNCTION_TABLE_iiii[($30)&63]($24,$8,$9))|0);
      if ($31) {
       break;
      }
      $33=((__ZN9b2Contact7GetNextEv($c_025))|0);
      __ZN16b2ContactManager7DestroyEP9b2Contact($this,$c_025);
      $c_0_be=$33;
      break L6;
     }
    } while(0);
    $35=((HEAP32[(($14)>>2)])|0);
    $36=$35&-9;
    HEAP32[(($14)>>2)]=$36;
    label = 11;
   }
  } while(0);
  do {
   if ((label|0) == 11) {
    label = 0;
    $38=((__ZNK6b2Body7IsAwakeEv($12))|0);
    if ($38) {
     $40=(($12)|0);
     $41=((HEAP32[(($40)>>2)])|0);
     $42=($41|0)!=0;
     $phitmp=($42&1);
     $44=$phitmp;
    } else {
     $44=0;
    }

    $45=((__ZNK6b2Body7IsAwakeEv($13))|0);
    if ($45) {
     $47=(($13)|0);
     $48=((HEAP32[(($47)>>2)])|0);
     $phitmp24=($48|0)==0;
     $50=$phitmp24;
    } else {
     $50=1;
    }

    $51=($44|0)==0;
    $or_cond=$51&$50;
    if ($or_cond) {
     $53=((__ZN9b2Contact7GetNextEv($c_025))|0);
     $c_0_be=$53;
     break;
    }
    $55=(($8+24)|0);
    $56=((HEAP32[(($55)>>2)])|0);
    $57=(($56+((($10)*(28))&-1)+24)|0);
    $58=((HEAP32[(($57)>>2)])|0);
    $59=(($9+24)|0);
    $60=((HEAP32[(($59)>>2)])|0);
    $61=(($60+((($11)*(28))&-1)+24)|0);
    $62=((HEAP32[(($61)>>2)])|0);
    $63=((__ZNK12b2BroadPhase11TestOverlapEii($4,$58,$62))|0);
    if ($63) {
     $67=((HEAP32[(($5)>>2)])|0);
     __ZN9b2Contact6UpdateEP17b2ContactListener($c_025,$67);
     $68=((__ZN9b2Contact7GetNextEv($c_025))|0);
     $c_0_be=$68;
     break;
    } else {
     $65=((__ZN9b2Contact7GetNextEv($c_025))|0);
     __ZN16b2ContactManager7DestroyEP9b2Contact($this,$c_025);
     $c_0_be=$65;
     break;
    }
   }
  } while(0);

  $22=($c_0_be|0)==0;
  if ($22) {
   break;
  } else {
   $c_025=$c_0_be;
  }
 }
 return;
}


function __ZNK9b2Contact14GetChildIndexAEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+56)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZNK9b2Contact14GetChildIndexBEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+60)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN9b2Contact7GetNextEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZNK6b2Body7IsAwakeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 $3=$2&2;
 $4=(($3<<16)>>16)!=0;
 return (($4)|0);
}


function __ZNK12b2BroadPhase11TestOverlapEii($this,$proxyIdA,$proxyIdB){
 $this=($this)|0;
 $proxyIdA=($proxyIdA)|0;
 $proxyIdB=($proxyIdB)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this)|0);
 $2=((__ZNK13b2DynamicTree10GetFatAABBEi($1,$proxyIdA))|0);
 $3=((__ZNK13b2DynamicTree10GetFatAABBEi($1,$proxyIdB))|0);
 $4=((__Z13b2TestOverlapRK6b2AABBS1_($2,$3))|0);
 return (($4)|0);
}


function __ZN16b2ContactManager15FindNewContactsEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN12b2BroadPhase11UpdatePairsI16b2ContactManagerEEvPT_($1,$this);
 return;
}


function __ZN12b2BroadPhase11UpdatePairsI16b2ContactManagerEEvPT_($this,$callback){
 $this=($this)|0;
 $callback=($callback)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$i_014=0,$10=0,$11=0,$12=0,$13=0,$15=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$i1_013=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$i1_1_in=0,$i1_1=0,$40=0,$42=0;
 var $43=0,$44=0,$45=0,$46=0,$48=0,$49=0,$50=0,$51=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($this+52)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+40)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)>0;
 if ($5) {
  $6=(($this+32)|0);
  $7=(($this+56)|0);
  $8=(($this)|0);
  $i_014=0;
  while(1) {

   $10=((HEAP32[(($6)>>2)])|0);
   $11=(($10+($i_014<<2))|0);
   $12=((HEAP32[(($11)>>2)])|0);
   HEAP32[(($7)>>2)]=$12;
   $13=($12|0)==-1;
   if (!($13)) {
    $15=((__ZNK13b2DynamicTree10GetFatAABBEi($8,$12))|0);
    __ZNK13b2DynamicTree5QueryI12b2BroadPhaseEEvPT_RK6b2AABB($8,$this,$15);
   }
   $17=((($i_014)+(1))|0);
   $18=((HEAP32[(($3)>>2)])|0);
   $19=($17|0)<($18|0);
   if ($19) {
    $i_014=$17;
   } else {
    break;
   }
  }
 }
 HEAP32[(($3)>>2)]=0;
 $20=(($this+44)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=((HEAP32[(($2)>>2)])|0);
 $23=(($21+((($22)*(12))&-1))|0);
 $24=$1;
 HEAP32[(($1)>>2)]=52;
 __ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($21,$23,$1);
 $25=((HEAP32[(($2)>>2)])|0);
 $26=($25|0)>0;
 if (!($26)) {
  STACKTOP=sp;return;
 }
 $27=(($this)|0);
 $i1_013=0;
 while(1) {

  $31=((HEAP32[(($20)>>2)])|0);
  $32=(($31+((($i1_013)*(12))&-1))|0);
  $33=((HEAP32[(($32)>>2)])|0);
  $34=((__ZNK13b2DynamicTree11GetUserDataEi($27,$33))|0);
  $35=(($31+((($i1_013)*(12))&-1)+4)|0);
  $36=((HEAP32[(($35)>>2)])|0);
  $37=((__ZNK13b2DynamicTree11GetUserDataEi($27,$36))|0);
  __ZN16b2ContactManager7AddPairEPvS0_($callback,$34,$37);
  $38=((HEAP32[(($2)>>2)])|0);
  $i1_1_in=$i1_013;
  while(1) {

   $i1_1=((($i1_1_in)+(1))|0);
   $40=($i1_1|0)<($38|0);
   if (!($40)) {
    break;
   }
   $42=((HEAP32[(($20)>>2)])|0);
   $43=(($42+((($i1_1)*(12))&-1))|0);
   $44=((HEAP32[(($43)>>2)])|0);
   $45=((HEAP32[(($32)>>2)])|0);
   $46=($44|0)==($45|0);
   if (!($46)) {
    break;
   }
   $48=(($42+((($i1_1)*(12))&-1)+4)|0);
   $49=((HEAP32[(($48)>>2)])|0);
   $50=((HEAP32[(($35)>>2)])|0);
   $51=($49|0)==($50|0);
   if ($51) {
    $i1_1_in=$i1_1;
   } else {
    break;
   }
  }
  $28=((HEAP32[(($2)>>2)])|0);
  $29=($i1_1|0)<($28|0);
  if ($29) {
   $i1_013=$i1_1;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ContactManager7AddPairEPvS0_($this,$proxyUserDataA,$proxyUserDataB){
 $this=($this)|0;
 $proxyUserDataA=($proxyUserDataA)|0;
 $proxyUserDataB=($proxyUserDataB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=0,$edge_072=0,$19=0,$20=0;
 var $21=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$or_cond=0,$31=0,$or_cond67=0,$32=0,$or_cond68=0,$34=0,$35=0,$or_cond69=0,$36=0,$or_cond70=0,$37=0;
 var $or_cond71=0,$39=0,$40=0,$41=0,$42=0,$44=0,$45=0,$46=0,$48=0,$49=0,$50=0,$51=0,$52=0,$54=0,$55=0,$56=0,$57=0,$59=0,$60=0,$61=0;
 var $62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$70=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0,$80=0,$82=0,$84=0,$85=0;
 var $86=0,$87=0,$88=0,$89=0,$90=0,$91=0,$92=0,$94=0,$96=0,$97=0,$98=0,label=0;

 $1=(($proxyUserDataA+16)|0);
 $2=$1;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($proxyUserDataB+16)|0);
 $5=$4;
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($proxyUserDataA+20)|0);
 $8=$7;
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($proxyUserDataB+20)|0);
 $11=$10;
 $12=((HEAP32[(($11)>>2)])|0);
 $13=((__ZN9b2Fixture7GetBodyEv($3))|0);
 $14=((__ZN9b2Fixture7GetBodyEv($6))|0);
 $15=($13|0)==($14|0);
 if ($15) {
  return;
 }
 $17=((__ZN6b2Body14GetContactListEv($14))|0);
 $18=($17|0)==0;
 L4: do {
  if (!($18)) {
   $edge_072=$17;
   while(1) {

    $19=(($edge_072)|0);
    $20=((HEAP32[(($19)>>2)])|0);
    $21=($20|0)==($13|0);
    if ($21) {
     $23=(($edge_072+4)|0);
     $24=((HEAP32[(($23)>>2)])|0);
     $25=((__ZN9b2Contact11GetFixtureAEv($24))|0);
     $26=((__ZN9b2Contact11GetFixtureBEv($24))|0);
     $27=((__ZNK9b2Contact14GetChildIndexAEv($24))|0);
     $28=((__ZNK9b2Contact14GetChildIndexBEv($24))|0);
     $29=($25|0)==($3|0);
     $30=($26|0)==($6|0);
     $or_cond=$29&$30;
     $31=($27|0)==($9|0);
     $or_cond67=$or_cond&$31;
     $32=($28|0)==($12|0);
     $or_cond68=$or_cond67&$32;
     if ($or_cond68) {
      label = 18;
      break;
     }
     $34=($25|0)==($6|0);
     $35=($26|0)==($3|0);
     $or_cond69=$34&$35;
     $36=($27|0)==($12|0);
     $or_cond70=$or_cond69&$36;
     $37=($28|0)==($9|0);
     $or_cond71=$or_cond70&$37;
     if ($or_cond71) {
      label = 18;
      break;
     }
    }
    $39=(($edge_072+12)|0);
    $40=((HEAP32[(($39)>>2)])|0);
    $41=($40|0)==0;
    if ($41) {
     break L4;
    } else {
     $edge_072=$40;
    }
   }
   if ((label|0) == 18) {
    return;
   }
  }
 } while(0);
 $42=((__ZNK6b2Body13ShouldCollideEPKS_($14,$13))|0);
 if (!($42)) {
  return;
 }
 $44=(($this+68)|0);
 $45=((HEAP32[(($44)>>2)])|0);
 $46=($45|0)==0;
 do {
  if (!($46)) {
   $48=$45;
   $49=((HEAP32[(($48)>>2)])|0);
   $50=(($49+8)|0);
   $51=((HEAP32[(($50)>>2)])|0);
   $52=((FUNCTION_TABLE_iiii[($51)&63]($45,$3,$6))|0);
   if ($52) {
    break;
   }
   return;
  }
 } while(0);
 $54=(($this+76)|0);
 $55=((HEAP32[(($54)>>2)])|0);
 $56=((__ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($3,$9,$6,$12,$55))|0);
 $57=($56|0)==0;
 if ($57) {
  return;
 }
 $59=((__ZN9b2Contact11GetFixtureAEv($56))|0);
 $60=((__ZN9b2Contact11GetFixtureBEv($56))|0);
 $61=((__ZN9b2Fixture7GetBodyEv($59))|0);
 $62=((__ZN9b2Fixture7GetBodyEv($60))|0);
 $63=(($56+8)|0);
 HEAP32[(($63)>>2)]=0;
 $64=(($this+60)|0);
 $65=((HEAP32[(($64)>>2)])|0);
 $66=(($56+12)|0);
 HEAP32[(($66)>>2)]=$65;
 $67=((HEAP32[(($64)>>2)])|0);
 $68=($67|0)==0;
 if (!($68)) {
  $70=(($67+8)|0);
  HEAP32[(($70)>>2)]=$56;
 }
 HEAP32[(($64)>>2)]=$56;
 $72=(($56+16)|0);
 $73=(($56+20)|0);
 HEAP32[(($73)>>2)]=$56;
 $74=(($72)|0);
 HEAP32[(($74)>>2)]=$62;
 $75=(($56+24)|0);
 HEAP32[(($75)>>2)]=0;
 $76=(($61+112)|0);
 $77=((HEAP32[(($76)>>2)])|0);
 $78=(($56+28)|0);
 HEAP32[(($78)>>2)]=$77;
 $79=((HEAP32[(($76)>>2)])|0);
 $80=($79|0)==0;
 if (!($80)) {
  $82=(($79+8)|0);
  HEAP32[(($82)>>2)]=$72;
 }
 HEAP32[(($76)>>2)]=$72;
 $84=(($56+32)|0);
 $85=(($56+36)|0);
 HEAP32[(($85)>>2)]=$56;
 $86=(($84)|0);
 HEAP32[(($86)>>2)]=$61;
 $87=(($56+40)|0);
 HEAP32[(($87)>>2)]=0;
 $88=(($62+112)|0);
 $89=((HEAP32[(($88)>>2)])|0);
 $90=(($56+44)|0);
 HEAP32[(($90)>>2)]=$89;
 $91=((HEAP32[(($88)>>2)])|0);
 $92=($91|0)==0;
 if (!($92)) {
  $94=(($91+8)|0);
  HEAP32[(($94)>>2)]=$84;
 }
 HEAP32[(($88)>>2)]=$84;
 __ZN6b2Body8SetAwakeEb($61,1);
 __ZN6b2Body8SetAwakeEb($62,1);
 $96=(($this+64)|0);
 $97=((HEAP32[(($96)>>2)])|0);
 $98=((($97)+(1))|0);
 HEAP32[(($96)>>2)]=$98;
 return;
}


function __ZN6b2Body14GetContactListEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+112)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZNK13b2DynamicTree10GetFatAABBEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,label=0;

 $1=($proxyId|0)>-1;
 do {
  if ($1) {
   $3=(($this+12)|0);
   $4=((HEAP32[(($3)>>2)])|0);
   $5=($4|0)>($proxyId|0);
   if (!($5)) {
    break;
   }
   $8=(($this+4)|0);
   $9=((HEAP32[(($8)>>2)])|0);
   $10=(($9+((($proxyId)*(36))&-1))|0);
   return (($10)|0);
  }
 } while(0);
 ___assert_fail(((10344)|0),((7408)|0),((159)|0),((12096)|0));
 return ((0)|0);
}


function __ZNK13b2DynamicTree5QueryI12b2BroadPhaseEEvPT_RK6b2AABB($this,$callback,$aabb){
 $this=($this)|0;
 $callback=($callback)|0;
 $aabb=($aabb)|0;
 var $stack=0,$1=0,$2=0,$3=0,$4=0,$6=0,$8=0,$9=0,$10=0,$lpad_phi$0=0,$lpad_phi$1=0,$13=0,$14=0,$15=0,$16=0,$18=0,$20=0,$23=0,$25=0,$lpad_loopexit$0=0;
 var $lpad_loopexit$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,$28$0=0,$28$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+1040)|0;
 $stack=((sp)|0);
 __ZN15b2GrowableStackIiLi256EEC1Ev($stack);
 $1=(($this)|0);
 __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$1);
 $2=((__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack))|0);
 $3=($2|0)>0;
 if (!($3)) {
  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP=sp;return;
 }
 $4=(($this+4)|0);
 L5: while(1) {
  $6=((__ZN15b2GrowableStackIiLi256EE3PopEv($stack))|0);
  $8=($6|0)==-1;
  do {
   if (!($8)) {
    $13=((HEAP32[(($4)>>2)])|0);
    $14=(($13+((($6)*(36))&-1))|0);
    $15=(($14)|0);
    $16=((__Z13b2TestOverlapRK6b2AABBS1_($15,$aabb))|0);
    if (!($16)) {
     break;
    }
    $18=((__ZNK10b2TreeNode6IsLeafEv($14))|0);
    if ($18) {
     $20=((__ZN12b2BroadPhase13QueryCallbackEi($callback,$6))|0);
     if ($20) {
      break;
     } else {
      label = 16;
      break L5;
     }
    } else {
     $23=(($13+((($6)*(36))&-1)+24)|0);
     __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$23);
     $25=(($13+((($6)*(36))&-1)+28)|0);
     __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$25);
     break;
    }
   }
  } while(0);
  $9=((__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack))|0);
  $10=($9|0)>0;
  if (!($10)) {
   label = 16;
   break;
  }
 }
 if ((label|0) == 16) {
  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP=sp;return;
 }
}


function __Z14b2PairLessThanRK6b2PairS1_($pair1,$pair2){
 $pair1=($pair1)|0;
 $pair2=($pair2)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$9=0,$10=0,$11=0,$12=0,$13=0,$_0=0,label=0;

 $1=(($pair1)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($pair2)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)<($4|0);
 if ($5) {
  $_0=1;

  return (($_0)|0);
 }
 $7=($2|0)==($4|0);
 if (!($7)) {
  $_0=0;

  return (($_0)|0);
 }
 $9=(($pair1+4)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($pair2+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=($10|0)<($12|0);
 $_0=$13;

 return (($_0)|0);
}


function __ZNK13b2DynamicTree11GetUserDataEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,label=0;

 $1=($proxyId|0)>-1;
 do {
  if ($1) {
   $3=(($this+12)|0);
   $4=((HEAP32[(($3)>>2)])|0);
   $5=($4|0)>($proxyId|0);
   if (!($5)) {
    break;
   }
   $8=(($this+4)|0);
   $9=((HEAP32[(($8)>>2)])|0);
   $10=(($9+((($proxyId)*(36))&-1)+16)|0);
   $11=((HEAP32[(($10)>>2)])|0);
   return (($11)|0);
  }
 } while(0);
 ___assert_fail(((10344)|0),((7408)|0),((153)|0),((12080)|0));
 return ((0)|0);
}


function __ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t_i134=0,$__t_i133=0,$__t_i132=0,$__t_i131=0,$__t_i130=0,$__t_i=0,$__t_i134_0_cast140=0,$__t_i133_0_cast139=0,$__t_i131_0_cast137=0,$__t_i130_0_cast136=0,$__t_i132_0_cast138=0,$_0129_ph=0,$_0_ph=0,$1=0,$2=0,$3=0,$_0=0,$4=0,$5=0,$6=0;
 var $8=0,$9=0,$10=0,$__t_i_0_cast135=0,$$etemp$0$0=0,$$etemp$0$1=0,$12=0,$13=0,$$etemp$1$0=0,$$etemp$1$1=0,$15=0,$16=0,$17=0,$19=0,$20=0,$21=0,$22=0,$24=0,$25=0,$26=0;
 var $27=0,$28=0,$30=0,$33=0,$34=0,$35=0,$37=0,$38=0,$_sum=0,$39=0,$40=0,$42=0,$__n_swaps_0=0,$44=0,$45=0,$__j_0=0,$46=0,$47=0,$49=0,$50=0;
 var $51=0,$__i_0=0,$52=0,$54=0,$55=0,$56=0,$$etemp$2$0=0,$$etemp$2$1=0,$58=0,$$etemp$3$0=0,$$etemp$3$1=0,$59=0,$__i_1=0,$61=0,$__i_2_ph=0,$__j_1_ph=0,$__i_2=0,$63=0,$64=0,$65=0;
 var $__j_2=0,$66=0,$67=0,$68=0,$70=0,$$etemp$4$0=0,$$etemp$4$1=0,$72=0,$73=0,$$etemp$5$0=0,$$etemp$5$1=0,$74=0,$76=0,$77=0,$$etemp$6$0=0,$$etemp$6$1=0,$79=0,$80=0,$$etemp$7$0=0,$$etemp$7$1=0;
 var $81=0,$__n_swaps_3=0,$__j_3=0,$83=0,$84=0,$__m_0_ph=0,$__n_swaps_4_ph=0,$__i_3_ph=0,$__j_4_ph=0,$__i_3=0,$86=0,$87=0,$88=0,$__j_5=0,$89=0,$90=0,$91=0,$93=0,$$etemp$8$0=0,$$etemp$8$1=0;
 var $95=0,$96=0,$$etemp$9$0=0,$$etemp$9$1=0,$97=0,$98=0,$___m_0=0,$99=0,$__m_2=0,$__n_swaps_5=0,$__i_4=0,$100=0,$102=0,$103=0,$$etemp$10$0=0,$$etemp$10$1=0,$105=0,$106=0,$$etemp$11$0=0,$$etemp$11$1=0;
 var $107=0,$__n_swaps_6=0,$109=0,$111=0,$112=0,$113=0,$117=0,$118=0,$119=0,$120=0,$122=0,$124=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+96)|0;
 $__t_i134=((sp)|0);
 $__t_i133=(((sp)+(16))|0);
 $__t_i132=(((sp)+(32))|0);
 $__t_i131=(((sp)+(48))|0);
 $__t_i130=(((sp)+(64))|0);
 $__t_i=(((sp)+(80))|0);
 $__t_i134_0_cast140=$__t_i134;
 $__t_i133_0_cast139=$__t_i133;
 $__t_i131_0_cast137=$__t_i131;
 $__t_i130_0_cast136=$__t_i130;
 $__t_i132_0_cast138=$__t_i132;
 $_0_ph=$__first;$_0129_ph=$__last;
 L1: while(1) {


  $1=$_0129_ph;
  $2=((($_0129_ph)-(12))|0);
  $3=$2;
  $_0=$_0_ph;
  L3: while(1) {

   $4=$_0;
   $5=((($1)-($4))|0);
   $6=(((($5|0))/(12))&-1);
   switch (($6|0)) {
   case 4: {
    label = 7;
    break L1;
    break;
   }
   case 0:case 1: {
    label = 44;
    break L1;
    break;
   }
   case 5: {
    label = 8;
    break L1;
    break;
   }
   case 2: {
    label = 4;
    break L1;
    break;
   }
   case 3: {
    label = 6;
    break L1;
    break;
   }
   default: {
   }
   }
   $30=($5|0)<372;
   if ($30) {
    label = 10;
    break L1;
   }
   $33=($5|0)>11988;
   $34=(((($5|0))/(24))&-1);
   $35=(($_0+((($34)*(12))&-1))|0);
   if ($33) {
    $37=(((($5|0))/(48))&-1);
    $38=(($_0+((($37)*(12))&-1))|0);
    $_sum=((($37)+($34))|0);
    $39=(($_0+((($_sum)*(12))&-1))|0);
    $40=((__ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_($_0,$38,$35,$39,$2,$__comp))|0);
    $__n_swaps_0=$40;
   } else {
    $42=((__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($_0,$35,$2,$__comp))|0);
    $__n_swaps_0=$42;
   }

   $44=((HEAP32[(($__comp)>>2)])|0);
   $45=((FUNCTION_TABLE_iii[($44)&127]($_0,$35))|0);
   do {
    if ($45) {
     $__j_3=$2;$__n_swaps_3=$__n_swaps_0;
    } else {
     $__j_0=$2;
     while(1) {

      $46=((($__j_0)-(12))|0);
      $47=($_0|0)==($46|0);
      if ($47) {
       break;
      }
      $76=((HEAP32[(($__comp)>>2)])|0);
      $77=((FUNCTION_TABLE_iii[($76)&127]($46,$35))|0);
      if ($77) {
       label = 27;
       break;
      } else {
       $__j_0=$46;
      }
     }
     if ((label|0) == 27) {
      label = 0;
      $$etemp$6$0=12;
      $$etemp$6$1=0;

      $79=$_0;
      HEAP32[(($__t_i132_0_cast138)>>2)]=((HEAP32[(($79)>>2)])|0);HEAP32[((($__t_i132_0_cast138)+(4))>>2)]=((HEAP32[((($79)+(4))>>2)])|0);HEAP32[((($__t_i132_0_cast138)+(8))>>2)]=((HEAP32[((($79)+(8))>>2)])|0);
      $80=$46;
      HEAP32[(($79)>>2)]=((HEAP32[(($80)>>2)])|0);HEAP32[((($79)+(4))>>2)]=((HEAP32[((($80)+(4))>>2)])|0);HEAP32[((($79)+(8))>>2)]=((HEAP32[((($80)+(8))>>2)])|0);
      HEAP32[(($80)>>2)]=((HEAP32[(($__t_i132_0_cast138)>>2)])|0);HEAP32[((($80)+(4))>>2)]=((HEAP32[((($__t_i132_0_cast138)+(4))>>2)])|0);HEAP32[((($80)+(8))>>2)]=((HEAP32[((($__t_i132_0_cast138)+(8))>>2)])|0);
      $$etemp$7$0=12;
      $$etemp$7$1=0;

      $81=((($__n_swaps_0)+(1))|0);
      $__j_3=$46;$__n_swaps_3=$81;
      break;
     }
     $49=(($_0+12)|0);
     $50=((HEAP32[(($__comp)>>2)])|0);
     $51=((FUNCTION_TABLE_iii[($50)&127]($_0,$2))|0);
     if ($51) {
      $__i_1=$49;
     } else {
      $__i_0=$49;
      while(1) {

       $52=($__i_0|0)==($2|0);
       if ($52) {
        label = 44;
        break L1;
       }
       $54=((HEAP32[(($__comp)>>2)])|0);
       $55=((FUNCTION_TABLE_iii[($54)&127]($_0,$__i_0))|0);
       $56=(($__i_0+12)|0);
       if ($55) {
        break;
       } else {
        $__i_0=$56;
       }
      }
      $$etemp$2$0=12;
      $$etemp$2$1=0;

      $58=$__i_0;
      HEAP32[(($__t_i130_0_cast136)>>2)]=((HEAP32[(($58)>>2)])|0);HEAP32[((($__t_i130_0_cast136)+(4))>>2)]=((HEAP32[((($58)+(4))>>2)])|0);HEAP32[((($__t_i130_0_cast136)+(8))>>2)]=((HEAP32[((($58)+(8))>>2)])|0);
      HEAP32[(($58)>>2)]=((HEAP32[(($3)>>2)])|0);HEAP32[((($58)+(4))>>2)]=((HEAP32[((($3)+(4))>>2)])|0);HEAP32[((($58)+(8))>>2)]=((HEAP32[((($3)+(8))>>2)])|0);
      HEAP32[(($3)>>2)]=((HEAP32[(($__t_i130_0_cast136)>>2)])|0);HEAP32[((($3)+(4))>>2)]=((HEAP32[((($__t_i130_0_cast136)+(4))>>2)])|0);HEAP32[((($3)+(8))>>2)]=((HEAP32[((($__t_i130_0_cast136)+(8))>>2)])|0);
      $$etemp$3$0=12;
      $$etemp$3$1=0;

      $59=(($__i_0+12)|0);
      $__i_1=$59;
     }

     $61=($__i_1|0)==($2|0);
     if ($61) {
      label = 44;
      break L1;
     } else {
      $__j_1_ph=$2;$__i_2_ph=$__i_1;
     }
     while(1) {


      $__i_2=$__i_2_ph;
      while(1) {

       $63=((HEAP32[(($__comp)>>2)])|0);
       $64=((FUNCTION_TABLE_iii[($63)&127]($_0,$__i_2))|0);
       $65=(($__i_2+12)|0);
       if ($64) {
        $__j_2=$__j_1_ph;
        break;
       } else {
        $__i_2=$65;
       }
      }
      while(1) {

       $66=((HEAP32[(($__comp)>>2)])|0);
       $67=((($__j_2)-(12))|0);
       $68=((FUNCTION_TABLE_iii[($66)&127]($_0,$67))|0);
       if ($68) {
        $__j_2=$67;
       } else {
        break;
       }
      }
      $70=($__i_2>>>0)<($67>>>0);
      if (!($70)) {
       $_0=$__i_2;
       continue L3;
      }
      $$etemp$4$0=12;
      $$etemp$4$1=0;

      $72=$__i_2;
      HEAP32[(($__t_i131_0_cast137)>>2)]=((HEAP32[(($72)>>2)])|0);HEAP32[((($__t_i131_0_cast137)+(4))>>2)]=((HEAP32[((($72)+(4))>>2)])|0);HEAP32[((($__t_i131_0_cast137)+(8))>>2)]=((HEAP32[((($72)+(8))>>2)])|0);
      $73=$67;
      HEAP32[(($72)>>2)]=((HEAP32[(($73)>>2)])|0);HEAP32[((($72)+(4))>>2)]=((HEAP32[((($73)+(4))>>2)])|0);HEAP32[((($72)+(8))>>2)]=((HEAP32[((($73)+(8))>>2)])|0);
      HEAP32[(($73)>>2)]=((HEAP32[(($__t_i131_0_cast137)>>2)])|0);HEAP32[((($73)+(4))>>2)]=((HEAP32[((($__t_i131_0_cast137)+(4))>>2)])|0);HEAP32[((($73)+(8))>>2)]=((HEAP32[((($__t_i131_0_cast137)+(8))>>2)])|0);
      $$etemp$5$0=12;
      $$etemp$5$1=0;

      $74=(($__i_2+12)|0);
      $__j_1_ph=$67;$__i_2_ph=$74;
     }
    }
   } while(0);


   $83=(($_0+12)|0);
   $84=($83>>>0)<($__j_3>>>0);
   L33: do {
    if ($84) {
     $__j_4_ph=$__j_3;$__i_3_ph=$83;$__n_swaps_4_ph=$__n_swaps_3;$__m_0_ph=$35;
     while(1) {




      $__i_3=$__i_3_ph;
      while(1) {

       $86=((HEAP32[(($__comp)>>2)])|0);
       $87=((FUNCTION_TABLE_iii[($86)&127]($__i_3,$__m_0_ph))|0);
       $88=(($__i_3+12)|0);
       if ($87) {
        $__i_3=$88;
       } else {
        $__j_5=$__j_4_ph;
        break;
       }
      }
      while(1) {

       $89=((HEAP32[(($__comp)>>2)])|0);
       $90=((($__j_5)-(12))|0);
       $91=((FUNCTION_TABLE_iii[($89)&127]($90,$__m_0_ph))|0);
       if ($91) {
        break;
       } else {
        $__j_5=$90;
       }
      }
      $93=($__i_3>>>0)>($90>>>0);
      if ($93) {
       $__i_4=$__i_3;$__n_swaps_5=$__n_swaps_4_ph;$__m_2=$__m_0_ph;
       break L33;
      }
      $$etemp$8$0=12;
      $$etemp$8$1=0;

      $95=$__i_3;
      HEAP32[(($__t_i133_0_cast139)>>2)]=((HEAP32[(($95)>>2)])|0);HEAP32[((($__t_i133_0_cast139)+(4))>>2)]=((HEAP32[((($95)+(4))>>2)])|0);HEAP32[((($__t_i133_0_cast139)+(8))>>2)]=((HEAP32[((($95)+(8))>>2)])|0);
      $96=$90;
      HEAP32[(($95)>>2)]=((HEAP32[(($96)>>2)])|0);HEAP32[((($95)+(4))>>2)]=((HEAP32[((($96)+(4))>>2)])|0);HEAP32[((($95)+(8))>>2)]=((HEAP32[((($96)+(8))>>2)])|0);
      HEAP32[(($96)>>2)]=((HEAP32[(($__t_i133_0_cast139)>>2)])|0);HEAP32[((($96)+(4))>>2)]=((HEAP32[((($__t_i133_0_cast139)+(4))>>2)])|0);HEAP32[((($96)+(8))>>2)]=((HEAP32[((($__t_i133_0_cast139)+(8))>>2)])|0);
      $$etemp$9$0=12;
      $$etemp$9$1=0;

      $97=((($__n_swaps_4_ph)+(1))|0);
      $98=($__m_0_ph|0)==($__i_3|0);
      $___m_0=($98?$90:$__m_0_ph);
      $99=(($__i_3+12)|0);
      $__j_4_ph=$90;$__i_3_ph=$99;$__n_swaps_4_ph=$97;$__m_0_ph=$___m_0;
     }
    } else {
     $__i_4=$83;$__n_swaps_5=$__n_swaps_3;$__m_2=$35;
    }
   } while(0);



   $100=($__i_4|0)==($__m_2|0);
   do {
    if ($100) {
     $__n_swaps_6=$__n_swaps_5;
    } else {
     $102=((HEAP32[(($__comp)>>2)])|0);
     $103=((FUNCTION_TABLE_iii[($102)&127]($__m_2,$__i_4))|0);
     if (!($103)) {
      $__n_swaps_6=$__n_swaps_5;
      break;
     }
     $$etemp$10$0=12;
     $$etemp$10$1=0;

     $105=$__i_4;
     HEAP32[(($__t_i134_0_cast140)>>2)]=((HEAP32[(($105)>>2)])|0);HEAP32[((($__t_i134_0_cast140)+(4))>>2)]=((HEAP32[((($105)+(4))>>2)])|0);HEAP32[((($__t_i134_0_cast140)+(8))>>2)]=((HEAP32[((($105)+(8))>>2)])|0);
     $106=$__m_2;
     HEAP32[(($105)>>2)]=((HEAP32[(($106)>>2)])|0);HEAP32[((($105)+(4))>>2)]=((HEAP32[((($106)+(4))>>2)])|0);HEAP32[((($105)+(8))>>2)]=((HEAP32[((($106)+(8))>>2)])|0);
     HEAP32[(($106)>>2)]=((HEAP32[(($__t_i134_0_cast140)>>2)])|0);HEAP32[((($106)+(4))>>2)]=((HEAP32[((($__t_i134_0_cast140)+(4))>>2)])|0);HEAP32[((($106)+(8))>>2)]=((HEAP32[((($__t_i134_0_cast140)+(8))>>2)])|0);
     $$etemp$11$0=12;
     $$etemp$11$1=0;

     $107=((($__n_swaps_5)+(1))|0);
     $__n_swaps_6=$107;
    }
   } while(0);

   $109=($__n_swaps_6|0)==0;
   if ($109) {
    $111=((__ZNSt3__127__insertion_sort_incompleteIRPFbRK6b2PairS3_EPS1_EEbT0_S8_T_($_0,$__i_4,$__comp))|0);
    $112=(($__i_4+12)|0);
    $113=((__ZNSt3__127__insertion_sort_incompleteIRPFbRK6b2PairS3_EPS1_EEbT0_S8_T_($112,$_0129_ph,$__comp))|0);
    if ($113) {
     label = 39;
     break;
    }
    if ($111) {
     $_0=$112;
     continue;
    }
   }
   $117=$__i_4;
   $118=((($117)-($4))|0);
   $119=((($1)-($117))|0);
   $120=($118|0)<($119|0);
   if (!($120)) {
    label = 43;
    break;
   }
   __ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($_0,$__i_4,$__comp);
   $122=(($__i_4+12)|0);
   $_0=$122;
  }
  if ((label|0) == 39) {
   label = 0;
   if ($111) {
    label = 44;
    break;
   } else {
    $_0_ph=$_0;$_0129_ph=$__i_4;
    continue;
   }
  }
  else if ((label|0) == 43) {
   label = 0;
   $124=(($__i_4+12)|0);
   __ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($124,$_0129_ph,$__comp);
   $_0_ph=$_0;$_0129_ph=$__i_4;
   continue;
  }
 }
 if ((label|0) == 4) {
  $8=((HEAP32[(($__comp)>>2)])|0);
  $9=((($_0129_ph)-(12))|0);
  $10=((FUNCTION_TABLE_iii[($8)&127]($9,$_0))|0);
  if (!($10)) {
   STACKTOP=sp;return;
  }
  $__t_i_0_cast135=$__t_i;
  $$etemp$0$0=12;
  $$etemp$0$1=0;

  $12=$_0;
  HEAP32[(($__t_i_0_cast135)>>2)]=((HEAP32[(($12)>>2)])|0);HEAP32[((($__t_i_0_cast135)+(4))>>2)]=((HEAP32[((($12)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast135)+(8))>>2)]=((HEAP32[((($12)+(8))>>2)])|0);
  $13=$9;
  HEAP32[(($12)>>2)]=((HEAP32[(($13)>>2)])|0);HEAP32[((($12)+(4))>>2)]=((HEAP32[((($13)+(4))>>2)])|0);HEAP32[((($12)+(8))>>2)]=((HEAP32[((($13)+(8))>>2)])|0);
  HEAP32[(($13)>>2)]=((HEAP32[(($__t_i_0_cast135)>>2)])|0);HEAP32[((($13)+(4))>>2)]=((HEAP32[((($__t_i_0_cast135)+(4))>>2)])|0);HEAP32[((($13)+(8))>>2)]=((HEAP32[((($__t_i_0_cast135)+(8))>>2)])|0);
  $$etemp$1$0=12;
  $$etemp$1$1=0;

  STACKTOP=sp;return;
 }
 else if ((label|0) == 6) {
  $15=(($_0+12)|0);
  $16=((($_0129_ph)-(12))|0);
  $17=((__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($_0,$15,$16,$__comp))|0);
  STACKTOP=sp;return;
 }
 else if ((label|0) == 7) {
  $19=(($_0+12)|0);
  $20=(($_0+24)|0);
  $21=((($_0129_ph)-(12))|0);
  $22=((__ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_($_0,$19,$20,$21,$__comp))|0);
  STACKTOP=sp;return;
 }
 else if ((label|0) == 8) {
  $24=(($_0+12)|0);
  $25=(($_0+24)|0);
  $26=(($_0+36)|0);
  $27=((($_0129_ph)-(12))|0);
  $28=((__ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_($_0,$24,$25,$26,$27,$__comp))|0);
  STACKTOP=sp;return;
 }
 else if ((label|0) == 10) {
  __ZNSt3__118__insertion_sort_3IRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($_0,$_0129_ph,$__comp);
  STACKTOP=sp;return;
 }
 else if ((label|0) == 44) {
  STACKTOP=sp;return;
 }
}


function __ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($__x,$__y,$__z,$__c){
 $__x=($__x)|0;
 $__y=($__y)|0;
 $__z=($__z)|0;
 $__c=($__c)|0;
 var $__t_i28=0,$__t_i27=0,$__t_i26=0,$__t_i25=0,$__t_i=0,$1=0,$2=0,$3=0,$4=0,$__t_i_0_cast29=0,$$etemp$0$0=0,$$etemp$0$1=0,$7=0,$8=0,$$etemp$1$0=0,$$etemp$1$1=0,$9=0,$10=0,$__t_i26_0_cast31=0,$$etemp$2$0=0;
 var $$etemp$2$1=0,$12=0,$$etemp$3$0=0,$$etemp$3$1=0,$__t_i28_0_cast33=0,$$etemp$4$0=0,$$etemp$4$1=0,$15=0,$16=0,$$etemp$5$0=0,$$etemp$5$1=0,$__t_i27_0_cast32=0,$$etemp$6$0=0,$$etemp$6$1=0,$18=0,$19=0,$$etemp$7$0=0,$$etemp$7$1=0,$20=0,$21=0;
 var $__t_i25_0_cast30=0,$$etemp$8$0=0,$$etemp$8$1=0,$23=0,$$etemp$9$0=0,$$etemp$9$1=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+80)|0;
 $__t_i28=((sp)|0);
 $__t_i27=(((sp)+(16))|0);
 $__t_i26=(((sp)+(32))|0);
 $__t_i25=(((sp)+(48))|0);
 $__t_i=(((sp)+(64))|0);
 $1=((HEAP32[(($__c)>>2)])|0);
 $2=((FUNCTION_TABLE_iii[($1)&127]($__y,$__x))|0);
 $3=((HEAP32[(($__c)>>2)])|0);
 $4=((FUNCTION_TABLE_iii[($3)&127]($__z,$__y))|0);
 if (!($2)) {
  if (!($4)) {
   $_0=0;

   STACKTOP=sp;return (($_0)|0);
  }
  $__t_i_0_cast29=$__t_i;
  $$etemp$0$0=12;
  $$etemp$0$1=0;

  $7=$__y;
  HEAP32[(($__t_i_0_cast29)>>2)]=((HEAP32[(($7)>>2)])|0);HEAP32[((($__t_i_0_cast29)+(4))>>2)]=((HEAP32[((($7)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast29)+(8))>>2)]=((HEAP32[((($7)+(8))>>2)])|0);
  $8=$__z;
  HEAP32[(($7)>>2)]=((HEAP32[(($8)>>2)])|0);HEAP32[((($7)+(4))>>2)]=((HEAP32[((($8)+(4))>>2)])|0);HEAP32[((($7)+(8))>>2)]=((HEAP32[((($8)+(8))>>2)])|0);
  HEAP32[(($8)>>2)]=((HEAP32[(($__t_i_0_cast29)>>2)])|0);HEAP32[((($8)+(4))>>2)]=((HEAP32[((($__t_i_0_cast29)+(4))>>2)])|0);HEAP32[((($8)+(8))>>2)]=((HEAP32[((($__t_i_0_cast29)+(8))>>2)])|0);
  $$etemp$1$0=12;
  $$etemp$1$1=0;

  $9=((HEAP32[(($__c)>>2)])|0);
  $10=((FUNCTION_TABLE_iii[($9)&127]($__y,$__x))|0);
  if (!($10)) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  }
  $__t_i26_0_cast31=$__t_i26;
  $$etemp$2$0=12;
  $$etemp$2$1=0;

  $12=$__x;
  HEAP32[(($__t_i26_0_cast31)>>2)]=((HEAP32[(($12)>>2)])|0);HEAP32[((($__t_i26_0_cast31)+(4))>>2)]=((HEAP32[((($12)+(4))>>2)])|0);HEAP32[((($__t_i26_0_cast31)+(8))>>2)]=((HEAP32[((($12)+(8))>>2)])|0);
  HEAP32[(($12)>>2)]=((HEAP32[(($7)>>2)])|0);HEAP32[((($12)+(4))>>2)]=((HEAP32[((($7)+(4))>>2)])|0);HEAP32[((($12)+(8))>>2)]=((HEAP32[((($7)+(8))>>2)])|0);
  HEAP32[(($7)>>2)]=((HEAP32[(($__t_i26_0_cast31)>>2)])|0);HEAP32[((($7)+(4))>>2)]=((HEAP32[((($__t_i26_0_cast31)+(4))>>2)])|0);HEAP32[((($7)+(8))>>2)]=((HEAP32[((($__t_i26_0_cast31)+(8))>>2)])|0);
  $$etemp$3$0=12;
  $$etemp$3$1=0;

  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 if ($4) {
  $__t_i28_0_cast33=$__t_i28;
  $$etemp$4$0=12;
  $$etemp$4$1=0;

  $15=$__x;
  HEAP32[(($__t_i28_0_cast33)>>2)]=((HEAP32[(($15)>>2)])|0);HEAP32[((($__t_i28_0_cast33)+(4))>>2)]=((HEAP32[((($15)+(4))>>2)])|0);HEAP32[((($__t_i28_0_cast33)+(8))>>2)]=((HEAP32[((($15)+(8))>>2)])|0);
  $16=$__z;
  HEAP32[(($15)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($15)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($15)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);
  HEAP32[(($16)>>2)]=((HEAP32[(($__t_i28_0_cast33)>>2)])|0);HEAP32[((($16)+(4))>>2)]=((HEAP32[((($__t_i28_0_cast33)+(4))>>2)])|0);HEAP32[((($16)+(8))>>2)]=((HEAP32[((($__t_i28_0_cast33)+(8))>>2)])|0);
  $$etemp$5$0=12;
  $$etemp$5$1=0;

  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
 $__t_i27_0_cast32=$__t_i27;
 $$etemp$6$0=12;
 $$etemp$6$1=0;

 $18=$__x;
 HEAP32[(($__t_i27_0_cast32)>>2)]=((HEAP32[(($18)>>2)])|0);HEAP32[((($__t_i27_0_cast32)+(4))>>2)]=((HEAP32[((($18)+(4))>>2)])|0);HEAP32[((($__t_i27_0_cast32)+(8))>>2)]=((HEAP32[((($18)+(8))>>2)])|0);
 $19=$__y;
 HEAP32[(($18)>>2)]=((HEAP32[(($19)>>2)])|0);HEAP32[((($18)+(4))>>2)]=((HEAP32[((($19)+(4))>>2)])|0);HEAP32[((($18)+(8))>>2)]=((HEAP32[((($19)+(8))>>2)])|0);
 HEAP32[(($19)>>2)]=((HEAP32[(($__t_i27_0_cast32)>>2)])|0);HEAP32[((($19)+(4))>>2)]=((HEAP32[((($__t_i27_0_cast32)+(4))>>2)])|0);HEAP32[((($19)+(8))>>2)]=((HEAP32[((($__t_i27_0_cast32)+(8))>>2)])|0);
 $$etemp$7$0=12;
 $$etemp$7$1=0;

 $20=((HEAP32[(($__c)>>2)])|0);
 $21=((FUNCTION_TABLE_iii[($20)&127]($__z,$__y))|0);
 if (!($21)) {
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
 $__t_i25_0_cast30=$__t_i25;
 $$etemp$8$0=12;
 $$etemp$8$1=0;

 HEAP32[(($__t_i25_0_cast30)>>2)]=((HEAP32[(($19)>>2)])|0);HEAP32[((($__t_i25_0_cast30)+(4))>>2)]=((HEAP32[((($19)+(4))>>2)])|0);HEAP32[((($__t_i25_0_cast30)+(8))>>2)]=((HEAP32[((($19)+(8))>>2)])|0);
 $23=$__z;
 HEAP32[(($19)>>2)]=((HEAP32[(($23)>>2)])|0);HEAP32[((($19)+(4))>>2)]=((HEAP32[((($23)+(4))>>2)])|0);HEAP32[((($19)+(8))>>2)]=((HEAP32[((($23)+(8))>>2)])|0);
 HEAP32[(($23)>>2)]=((HEAP32[(($__t_i25_0_cast30)>>2)])|0);HEAP32[((($23)+(4))>>2)]=((HEAP32[((($__t_i25_0_cast30)+(4))>>2)])|0);HEAP32[((($23)+(8))>>2)]=((HEAP32[((($__t_i25_0_cast30)+(8))>>2)])|0);
 $$etemp$9$0=12;
 $$etemp$9$1=0;

 $_0=2;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_($__x1,$__x2,$__x3,$__x4,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__c=($__c)|0;
 var $__t_i23=0,$__t_i22=0,$__t_i=0,$1=0,$2=0,$3=0,$__t_i_0_cast24=0,$$etemp$0$0=0,$$etemp$0$1=0,$5=0,$6=0,$$etemp$1$0=0,$$etemp$1$1=0,$7=0,$8=0,$9=0,$__t_i23_0_cast26=0,$$etemp$2$0=0,$$etemp$2$1=0,$11=0;
 var $$etemp$3$0=0,$$etemp$3$1=0,$12=0,$13=0,$14=0,$__t_i22_0_cast25=0,$$etemp$4$0=0,$$etemp$4$1=0,$16=0,$$etemp$5$0=0,$$etemp$5$1=0,$17=0,$__r_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $__t_i23=((sp)|0);
 $__t_i22=(((sp)+(16))|0);
 $__t_i=(((sp)+(32))|0);
 $1=((__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($__x1,$__x2,$__x3,$__c))|0);
 $2=((HEAP32[(($__c)>>2)])|0);
 $3=((FUNCTION_TABLE_iii[($2)&127]($__x4,$__x3))|0);
 if (!($3)) {
  $__r_0=$1;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i_0_cast24=$__t_i;
 $$etemp$0$0=12;
 $$etemp$0$1=0;

 $5=$__x3;
 HEAP32[(($__t_i_0_cast24)>>2)]=((HEAP32[(($5)>>2)])|0);HEAP32[((($__t_i_0_cast24)+(4))>>2)]=((HEAP32[((($5)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast24)+(8))>>2)]=((HEAP32[((($5)+(8))>>2)])|0);
 $6=$__x4;
 HEAP32[(($5)>>2)]=((HEAP32[(($6)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($6)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($6)+(8))>>2)])|0);
 HEAP32[(($6)>>2)]=((HEAP32[(($__t_i_0_cast24)>>2)])|0);HEAP32[((($6)+(4))>>2)]=((HEAP32[((($__t_i_0_cast24)+(4))>>2)])|0);HEAP32[((($6)+(8))>>2)]=((HEAP32[((($__t_i_0_cast24)+(8))>>2)])|0);
 $$etemp$1$0=12;
 $$etemp$1$1=0;

 $7=((($1)+(1))|0);
 $8=((HEAP32[(($__c)>>2)])|0);
 $9=((FUNCTION_TABLE_iii[($8)&127]($__x3,$__x2))|0);
 if (!($9)) {
  $__r_0=$7;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i23_0_cast26=$__t_i23;
 $$etemp$2$0=12;
 $$etemp$2$1=0;

 $11=$__x2;
 HEAP32[(($__t_i23_0_cast26)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($__t_i23_0_cast26)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($__t_i23_0_cast26)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);
 HEAP32[(($11)>>2)]=((HEAP32[(($5)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($5)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($5)+(8))>>2)])|0);
 HEAP32[(($5)>>2)]=((HEAP32[(($__t_i23_0_cast26)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($__t_i23_0_cast26)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($__t_i23_0_cast26)+(8))>>2)])|0);
 $$etemp$3$0=12;
 $$etemp$3$1=0;

 $12=((($1)+(2))|0);
 $13=((HEAP32[(($__c)>>2)])|0);
 $14=((FUNCTION_TABLE_iii[($13)&127]($__x2,$__x1))|0);
 if (!($14)) {
  $__r_0=$12;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i22_0_cast25=$__t_i22;
 $$etemp$4$0=12;
 $$etemp$4$1=0;

 $16=$__x1;
 HEAP32[(($__t_i22_0_cast25)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($__t_i22_0_cast25)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($__t_i22_0_cast25)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);
 HEAP32[(($16)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($16)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($16)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);
 HEAP32[(($11)>>2)]=((HEAP32[(($__t_i22_0_cast25)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($__t_i22_0_cast25)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($__t_i22_0_cast25)+(8))>>2)])|0);
 $$etemp$5$0=12;
 $$etemp$5$1=0;

 $17=((($1)+(3))|0);
 $__r_0=$17;

 STACKTOP=sp;return (($__r_0)|0);
}


function __ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_($__x1,$__x2,$__x3,$__x4,$__x5,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__x5=($__x5)|0;
 $__c=($__c)|0;
 var $__t_i31=0,$__t_i30=0,$__t_i29=0,$__t_i=0,$1=0,$2=0,$3=0,$__t_i_0_cast32=0,$$etemp$0$0=0,$$etemp$0$1=0,$5=0,$6=0,$$etemp$1$0=0,$$etemp$1$1=0,$7=0,$8=0,$9=0,$__t_i30_0_cast34=0,$$etemp$2$0=0,$$etemp$2$1=0;
 var $11=0,$$etemp$3$0=0,$$etemp$3$1=0,$12=0,$13=0,$14=0,$__t_i31_0_cast35=0,$$etemp$4$0=0,$$etemp$4$1=0,$16=0,$$etemp$5$0=0,$$etemp$5$1=0,$17=0,$18=0,$19=0,$__t_i29_0_cast33=0,$$etemp$6$0=0,$$etemp$6$1=0,$21=0,$$etemp$7$0=0;
 var $$etemp$7$1=0,$22=0,$__r_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $__t_i31=((sp)|0);
 $__t_i30=(((sp)+(16))|0);
 $__t_i29=(((sp)+(32))|0);
 $__t_i=(((sp)+(48))|0);
 $1=((__ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_($__x1,$__x2,$__x3,$__x4,$__c))|0);
 $2=((HEAP32[(($__c)>>2)])|0);
 $3=((FUNCTION_TABLE_iii[($2)&127]($__x5,$__x4))|0);
 if (!($3)) {
  $__r_0=$1;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i_0_cast32=$__t_i;
 $$etemp$0$0=12;
 $$etemp$0$1=0;

 $5=$__x4;
 HEAP32[(($__t_i_0_cast32)>>2)]=((HEAP32[(($5)>>2)])|0);HEAP32[((($__t_i_0_cast32)+(4))>>2)]=((HEAP32[((($5)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast32)+(8))>>2)]=((HEAP32[((($5)+(8))>>2)])|0);
 $6=$__x5;
 HEAP32[(($5)>>2)]=((HEAP32[(($6)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($6)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($6)+(8))>>2)])|0);
 HEAP32[(($6)>>2)]=((HEAP32[(($__t_i_0_cast32)>>2)])|0);HEAP32[((($6)+(4))>>2)]=((HEAP32[((($__t_i_0_cast32)+(4))>>2)])|0);HEAP32[((($6)+(8))>>2)]=((HEAP32[((($__t_i_0_cast32)+(8))>>2)])|0);
 $$etemp$1$0=12;
 $$etemp$1$1=0;

 $7=((($1)+(1))|0);
 $8=((HEAP32[(($__c)>>2)])|0);
 $9=((FUNCTION_TABLE_iii[($8)&127]($__x4,$__x3))|0);
 if (!($9)) {
  $__r_0=$7;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i30_0_cast34=$__t_i30;
 $$etemp$2$0=12;
 $$etemp$2$1=0;

 $11=$__x3;
 HEAP32[(($__t_i30_0_cast34)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($__t_i30_0_cast34)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($__t_i30_0_cast34)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);
 HEAP32[(($11)>>2)]=((HEAP32[(($5)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($5)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($5)+(8))>>2)])|0);
 HEAP32[(($5)>>2)]=((HEAP32[(($__t_i30_0_cast34)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($__t_i30_0_cast34)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($__t_i30_0_cast34)+(8))>>2)])|0);
 $$etemp$3$0=12;
 $$etemp$3$1=0;

 $12=((($1)+(2))|0);
 $13=((HEAP32[(($__c)>>2)])|0);
 $14=((FUNCTION_TABLE_iii[($13)&127]($__x3,$__x2))|0);
 if (!($14)) {
  $__r_0=$12;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i31_0_cast35=$__t_i31;
 $$etemp$4$0=12;
 $$etemp$4$1=0;

 $16=$__x2;
 HEAP32[(($__t_i31_0_cast35)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($__t_i31_0_cast35)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($__t_i31_0_cast35)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);
 HEAP32[(($16)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($16)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($16)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);
 HEAP32[(($11)>>2)]=((HEAP32[(($__t_i31_0_cast35)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($__t_i31_0_cast35)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($__t_i31_0_cast35)+(8))>>2)])|0);
 $$etemp$5$0=12;
 $$etemp$5$1=0;

 $17=((($1)+(3))|0);
 $18=((HEAP32[(($__c)>>2)])|0);
 $19=((FUNCTION_TABLE_iii[($18)&127]($__x2,$__x1))|0);
 if (!($19)) {
  $__r_0=$17;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i29_0_cast33=$__t_i29;
 $$etemp$6$0=12;
 $$etemp$6$1=0;

 $21=$__x1;
 HEAP32[(($__t_i29_0_cast33)>>2)]=((HEAP32[(($21)>>2)])|0);HEAP32[((($__t_i29_0_cast33)+(4))>>2)]=((HEAP32[((($21)+(4))>>2)])|0);HEAP32[((($__t_i29_0_cast33)+(8))>>2)]=((HEAP32[((($21)+(8))>>2)])|0);
 HEAP32[(($21)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($21)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($21)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);
 HEAP32[(($16)>>2)]=((HEAP32[(($__t_i29_0_cast33)>>2)])|0);HEAP32[((($16)+(4))>>2)]=((HEAP32[((($__t_i29_0_cast33)+(4))>>2)])|0);HEAP32[((($16)+(8))>>2)]=((HEAP32[((($__t_i29_0_cast33)+(8))>>2)])|0);
 $$etemp$7$0=12;
 $$etemp$7$1=0;

 $22=((($1)+(4))|0);
 $__r_0=$22;

 STACKTOP=sp;return (($__r_0)|0);
}


function __ZNSt3__118__insertion_sort_3IRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$__i_022=0,$__j_021=0,$8=0,$9=0,$11=0,$__j_1=0,$__k_0=0,$13=0,$14=0,$15=0,$17=0,$18=0,$19=0;
 var $21=0,$22=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $__t=((sp)|0);
 $1=(($__first+24)|0);
 $2=(($__first+12)|0);
 $3=((__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($__first,$2,$1,$__comp))|0);
 $4=(($__first+36)|0);
 $5=($4|0)==($__last|0);
 if ($5) {
  STACKTOP=sp;return;
 }
 $6=$__t;
 $__j_021=$1;$__i_022=$4;
 while(1) {


  $8=((HEAP32[(($__comp)>>2)])|0);
  $9=((FUNCTION_TABLE_iii[($8)&127]($__i_022,$__j_021))|0);
  if ($9) {
   $11=$__i_022;
   HEAP32[(($6)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($6)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($6)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);
   $__k_0=$__j_021;$__j_1=$__i_022;
   while(1) {


    $13=$__j_1;
    $14=$__k_0;
    HEAP32[(($13)>>2)]=((HEAP32[(($14)>>2)])|0);HEAP32[((($13)+(4))>>2)]=((HEAP32[((($14)+(4))>>2)])|0);HEAP32[((($13)+(8))>>2)]=((HEAP32[((($14)+(8))>>2)])|0);
    $15=($__k_0|0)==($__first|0);
    if ($15) {
     break;
    }
    $17=((HEAP32[(($__comp)>>2)])|0);
    $18=((($__k_0)-(12))|0);
    $19=((FUNCTION_TABLE_iii[($17)&127]($__t,$18))|0);
    if ($19) {
     $__j_1=$__k_0;$__k_0=$18;
    } else {
     break;
    }
   }
   HEAP32[(($14)>>2)]=((HEAP32[(($6)>>2)])|0);HEAP32[((($14)+(4))>>2)]=((HEAP32[((($6)+(4))>>2)])|0);HEAP32[((($14)+(8))>>2)]=((HEAP32[((($6)+(8))>>2)])|0);
  }
  $21=(($__i_022+12)|0);
  $22=($21|0)==($__last|0);
  if ($22) {
   break;
  } else {
   $__j_021=$__i_022;$__i_022=$21;
  }
 }
 STACKTOP=sp;return;
}


function __ZNSt3__127__insertion_sort_incompleteIRPFbRK6b2PairS3_EPS1_EEbT0_S8_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t_i=0,$__t=0,$1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$__t_i_0_cast46=0,$$etemp$0$0=0,$$etemp$0$1=0,$10=0,$11=0,$$etemp$1$0=0,$$etemp$1$1=0,$13=0,$14=0,$15=0,$17=0;
 var $18=0,$19=0,$20=0,$22=0,$23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$__i_050=0,$__count_049=0,$__j_048=0,$35=0,$36=0,$38=0;
 var $__j_1=0,$__k_0=0,$40=0,$41=0,$42=0,$44=0,$45=0,$46=0,$47=0,$48=0,$50=0,$51=0,$__count_1=0,$53=0,$54=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $__t_i=((sp)|0);
 $__t=(((sp)+(16))|0);
 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=(((($3|0))/(12))&-1);
 switch (($4|0)) {
 case 5: {
  $22=(($__first+12)|0);
  $23=(($__first+24)|0);
  $24=(($__first+36)|0);
  $25=((($__last)-(12))|0);
  $26=((__ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_($__first,$22,$23,$24,$25,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 0:case 1: {
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 4: {
  $17=(($__first+12)|0);
  $18=(($__first+24)|0);
  $19=((($__last)-(12))|0);
  $20=((__ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_($__first,$17,$18,$19,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 3: {
  $13=(($__first+12)|0);
  $14=((($__last)-(12))|0);
  $15=((__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($__first,$13,$14,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 2: {
  $6=((HEAP32[(($__comp)>>2)])|0);
  $7=((($__last)-(12))|0);
  $8=((FUNCTION_TABLE_iii[($6)&127]($7,$__first))|0);
  if (!($8)) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  }
  $__t_i_0_cast46=$__t_i;
  $$etemp$0$0=12;
  $$etemp$0$1=0;

  $10=$__first;
  HEAP32[(($__t_i_0_cast46)>>2)]=((HEAP32[(($10)>>2)])|0);HEAP32[((($__t_i_0_cast46)+(4))>>2)]=((HEAP32[((($10)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast46)+(8))>>2)]=((HEAP32[((($10)+(8))>>2)])|0);
  $11=$7;
  HEAP32[(($10)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($10)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($10)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);
  HEAP32[(($11)>>2)]=((HEAP32[(($__t_i_0_cast46)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($__t_i_0_cast46)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($__t_i_0_cast46)+(8))>>2)])|0);
  $$etemp$1$0=12;
  $$etemp$1$1=0;

  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 default: {
  $28=(($__first+24)|0);
  $29=(($__first+12)|0);
  $30=((__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($__first,$29,$28,$__comp))|0);
  $31=(($__first+36)|0);
  $32=($31|0)==($__last|0);
  if ($32) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  }
  $33=$__t;
  $__j_048=$28;$__count_049=0;$__i_050=$31;
  while(1) {



   $35=((HEAP32[(($__comp)>>2)])|0);
   $36=((FUNCTION_TABLE_iii[($35)&127]($__i_050,$__j_048))|0);
   if ($36) {
    $38=$__i_050;
    HEAP32[(($33)>>2)]=((HEAP32[(($38)>>2)])|0);HEAP32[((($33)+(4))>>2)]=((HEAP32[((($38)+(4))>>2)])|0);HEAP32[((($33)+(8))>>2)]=((HEAP32[((($38)+(8))>>2)])|0);
    $__k_0=$__j_048;$__j_1=$__i_050;
    while(1) {


     $40=$__j_1;
     $41=$__k_0;
     HEAP32[(($40)>>2)]=((HEAP32[(($41)>>2)])|0);HEAP32[((($40)+(4))>>2)]=((HEAP32[((($41)+(4))>>2)])|0);HEAP32[((($40)+(8))>>2)]=((HEAP32[((($41)+(8))>>2)])|0);
     $42=($__k_0|0)==($__first|0);
     if ($42) {
      break;
     }
     $44=((HEAP32[(($__comp)>>2)])|0);
     $45=((($__k_0)-(12))|0);
     $46=((FUNCTION_TABLE_iii[($44)&127]($__t,$45))|0);
     if ($46) {
      $__j_1=$__k_0;$__k_0=$45;
     } else {
      break;
     }
    }
    HEAP32[(($41)>>2)]=((HEAP32[(($33)>>2)])|0);HEAP32[((($41)+(4))>>2)]=((HEAP32[((($33)+(4))>>2)])|0);HEAP32[((($41)+(8))>>2)]=((HEAP32[((($33)+(8))>>2)])|0);
    $47=((($__count_049)+(1))|0);
    $48=($47|0)==8;
    if ($48) {
     break;
    } else {
     $__count_1=$47;
    }
   } else {
    $__count_1=$__count_049;
   }

   $53=(($__i_050+12)|0);
   $54=($53|0)==($__last|0);
   if ($54) {
    $_0=1;
    label = 16;
    break;
   } else {
    $__j_048=$__i_050;$__count_049=$__count_1;$__i_050=$53;
   }
  }
  if ((label|0) == 16) {

   STACKTOP=sp;return (($_0)|0);
  }
  $50=(($__i_050+12)|0);
  $51=($50|0)==($__last|0);
  $_0=$51;

  STACKTOP=sp;return (($_0)|0);
 }
 }
  return 0;
}


function __ZN15b2GrowableStackIiLi256EEC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2GrowableStackIiLi256EEC2Ev($this);
 return;
}


function __ZN15b2GrowableStackIiLi256EE4PushERKi($this,$element){
 $this=($this)|0;
 $element=($element)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$20=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$26=0,label=0;

 $1=(($this+1028)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+1032)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 do {
  if ($5) {
   $7=(($this)|0);
   $8=((HEAP32[(($7)>>2)])|0);
   $9=$4<<1;
   HEAP32[(($3)>>2)]=$9;
   $10=$4<<3;
   $11=((__Z7b2Alloci($10))|0);
   $12=$11;
   HEAP32[(($7)>>2)]=$12;
   $13=$8;
   $14=((HEAP32[(($1)>>2)])|0);
   $15=$14<<2;
   (_memcpy((($11)|0), (($13)|0), $15)|0);
   $16=(($this+4)|0);
   $17=($8|0)==($16|0);
   if ($17) {
    break;
   }
   __Z6b2FreePv($13);
  }
 } while(0);
 $20=((HEAP32[(($element)>>2)])|0);
 $21=((HEAP32[(($1)>>2)])|0);
 $22=(($this)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=(($23+($21<<2))|0);
 HEAP32[(($24)>>2)]=$20;
 $25=((HEAP32[(($1)>>2)])|0);
 $26=((($25)+(1))|0);
 HEAP32[(($1)>>2)]=$26;
 return;
}


function __ZN15b2GrowableStackIiLi256EE8GetCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+1028)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN15b2GrowableStackIiLi256EE3PopEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=(($this+1028)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 if ($3) {
  $6=((($2)-(1))|0);
  HEAP32[(($1)>>2)]=$6;
  $7=(($this)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=(($8+($6<<2))|0);
  $10=((HEAP32[(($9)>>2)])|0);
  return (($10)|0);
 } else {
  ___assert_fail(((4656)|0),((3568)|0),((69)|0),((12824)|0));
  return ((0)|0);
 }
  return 0;
}


function __Z13b2TestOverlapRK6b2AABBS1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$tmpcast5=0,$2=0,$tmpcast7=0,$3=0,$4=0,$ld$0$0=0,$5$0=0,$ld$1$1=0,$5$1=0,$d1_sroa_0_0_extract_trunc$0=0,$d1_sroa_0_0_extract_trunc=0,$6=.0,$d1_sroa_1_4_extract_shift$0=0,$d1_sroa_1_4_extract_shift$1=0,$d1_sroa_1_4_extract_trunc$0=0,$d1_sroa_1_4_extract_trunc=0,$7=.0,$8=0,$9=0;
 var $ld$2$0=0,$10$0=0,$ld$3$1=0,$10$1=0,$d2_sroa_0_0_extract_trunc$0=0,$d2_sroa_0_0_extract_trunc=0,$11=.0,$d2_sroa_1_4_extract_shift$0=0,$d2_sroa_1_4_extract_shift$1=0,$d2_sroa_1_4_extract_trunc$0=0,$d2_sroa_1_4_extract_trunc=0,$12=.0,$13=0,$14=0,$or_cond=0,$15=0,$or_cond8=0,$16=0,$or_cond9=0,$not_or_cond9=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast5=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast7=$2;
 $3=(($b)|0);
 $4=(($a+8)|0);
 __ZmiRK6b2Vec2S1_($tmpcast5,$3,$4);
 $ld$0$0=(($1)|0);
 $5$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $5$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $d1_sroa_0_0_extract_trunc$0=$5$0;
 $d1_sroa_0_0_extract_trunc=$d1_sroa_0_0_extract_trunc$0;
 $6=(HEAP32[((tempDoublePtr)>>2)]=$d1_sroa_0_0_extract_trunc,(+(HEAPF32[((tempDoublePtr)>>2)])));
 $d1_sroa_1_4_extract_shift$0=$5$1;
 $d1_sroa_1_4_extract_shift$1=0;
 $d1_sroa_1_4_extract_trunc$0=$d1_sroa_1_4_extract_shift$0;
 $d1_sroa_1_4_extract_trunc=$d1_sroa_1_4_extract_trunc$0;
 $7=(HEAP32[((tempDoublePtr)>>2)]=$d1_sroa_1_4_extract_trunc,(+(HEAPF32[((tempDoublePtr)>>2)])));
 $8=(($a)|0);
 $9=(($b+8)|0);
 __ZmiRK6b2Vec2S1_($tmpcast7,$8,$9);
 $ld$2$0=(($2)|0);
 $10$0=((HEAP32[(($ld$2$0)>>2)])|0);
 $ld$3$1=(($2+4)|0);
 $10$1=((HEAP32[(($ld$3$1)>>2)])|0);
 $d2_sroa_0_0_extract_trunc$0=$10$0;
 $d2_sroa_0_0_extract_trunc=$d2_sroa_0_0_extract_trunc$0;
 $11=(HEAP32[((tempDoublePtr)>>2)]=$d2_sroa_0_0_extract_trunc,(+(HEAPF32[((tempDoublePtr)>>2)])));
 $d2_sroa_1_4_extract_shift$0=$10$1;
 $d2_sroa_1_4_extract_shift$1=0;
 $d2_sroa_1_4_extract_trunc$0=$d2_sroa_1_4_extract_shift$0;
 $d2_sroa_1_4_extract_trunc=$d2_sroa_1_4_extract_trunc$0;
 $12=(HEAP32[((tempDoublePtr)>>2)]=$d2_sroa_1_4_extract_trunc,(+(HEAPF32[((tempDoublePtr)>>2)])));
 $13=$6>(0.0);
 $14=$7>(0.0);
 $or_cond=$13|$14;
 $15=$11>(0.0);
 $or_cond8=$or_cond|$15;
 $16=$12>(0.0);
 $or_cond9=$or_cond8|$16;
 $not_or_cond9=$or_cond9^1;
 STACKTOP=sp;return (($not_or_cond9)|0);
}


function __ZN15b2GrowableStackIiLi256EED1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2GrowableStackIiLi256EED2Ev($this);
 return;
}


function __ZN15b2GrowableStackIiLi256EED2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+4)|0);
 $4=($2|0)==($3|0);
 if ($4) {
  return;
 }
 $6=$2;
 __Z6b2FreePv($6);
 HEAP32[(($1)>>2)]=0;
 return;
}


function __ZN15b2GrowableStackIiLi256EEC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=$1;
 $3=(($this+1028)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+1032)|0);
 HEAP32[(($4)>>2)]=256;
 return;
}


function __ZN17b2ContactListenerD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN17b2ContactListener12BeginContactEP9b2Contact($this,$contact){
 $this=($this)|0;
 $contact=($contact)|0;
 var label=0;

 return;
}


function __ZN17b2ContactListener10EndContactEP9b2Contact($this,$contact){
 $this=($this)|0;
 $contact=($contact)|0;
 var label=0;

 return;
}


function __ZN17b2ContactListener8PreSolveEP9b2ContactPK10b2Manifold($this,$contact,$oldManifold){
 $this=($this)|0;
 $contact=($contact)|0;
 $oldManifold=($oldManifold)|0;
 var label=0;

 return;
}


function __ZN17b2ContactListener9PostSolveEP9b2ContactPK16b2ContactImpulse($this,$contact,$impulse){
 $this=($this)|0;
 $contact=($contact)|0;
 $impulse=($impulse)|0;
 var label=0;

 return;
}


function __ZN15b2ContactFilterD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN9b2FixtureC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this+32)|0);
 __ZN8b2FilterC1Ev($1);
 $2=(($this+40)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+24)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+28)|0);
 HEAP32[(($4)>>2)]=0;
 $5=$this;
 _memset((((($5)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 return;
}


function __ZN9b2Fixture6CreateEP16b2BlockAllocatorP6b2BodyPK12b2FixtureDef($this,$allocator,$body,$def){
 $this=($this)|0;
 $allocator=($allocator)|0;
 $body=($body)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=0,$8=.0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$i_015=0,$37=0,$38=0,$39=0;
 var $40=0,$41=0,$42=0,$43=0,$44=0,$45=.0,$46=0,label=0;

 $1=(($def+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+40)|0);
 HEAP32[(($3)>>2)]=$2;
 $4=(($def+8)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(($this+16)|0);
 HEAPF32[(($6)>>2)]=$5;
 $7=(($def+12)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($this+20)|0);
 HEAPF32[(($9)>>2)]=$8;
 $10=(($this+8)|0);
 HEAP32[(($10)>>2)]=$body;
 $11=(($this+4)|0);
 HEAP32[(($11)>>2)]=0;
 $12=(($this+32)|0);
 $13=(($def+22)|0);
 $14=$12;
 $15=$13;
 HEAP16[(($14)>>1)]=((HEAP16[(($15)>>1)])|0);HEAP16[((($14)+(2))>>1)]=((HEAP16[((($15)+(2))>>1)])|0);HEAP16[((($14)+(4))>>1)]=((HEAP16[((($15)+(4))>>1)])|0);
 $16=(($def+20)|0);
 $17=((HEAP8[($16)])|0);
 $18=(($this+38)|0);
 HEAP8[($18)]=$17;
 $19=(($def)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=$20;
 $22=((HEAP32[(($21)>>2)])|0);
 $23=(($22+8)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=((FUNCTION_TABLE_iii[($24)&127]($20,$allocator))|0);
 $26=(($this+12)|0);
 HEAP32[(($26)>>2)]=$25;
 $27=$25;
 $28=((HEAP32[(($27)>>2)])|0);
 $29=(($28+12)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=((FUNCTION_TABLE_ii[($30)&63]($25))|0);
 $32=((($31)*(28))&-1);
 $33=((__ZN16b2BlockAllocator8AllocateEi($allocator,$32))|0);
 $34=$33;
 $35=(($this+24)|0);
 HEAP32[(($35)>>2)]=$34;
 $36=($31|0)>0;
 if ($36) {
  $i_015=0;
 } else {
  $43=(($this+28)|0);
  HEAP32[(($43)>>2)]=0;
  $44=(($def+16)|0);
  $45=(+(HEAPF32[(($44)>>2)]));
  $46=(($this)|0);
  HEAPF32[(($46)>>2)]=$45;
  return;
 }
 while(1) {

  $37=((HEAP32[(($35)>>2)])|0);
  $38=(($37+((($i_015)*(28))&-1)+16)|0);
  HEAP32[(($38)>>2)]=0;
  $39=((HEAP32[(($35)>>2)])|0);
  $40=(($39+((($i_015)*(28))&-1)+24)|0);
  HEAP32[(($40)>>2)]=-1;
  $41=((($i_015)+(1))|0);
  $42=($41|0)<($31|0);
  if ($42) {
   $i_015=$41;
  } else {
   break;
  }
 }
 $43=(($this+28)|0);
 HEAP32[(($43)>>2)]=0;
 $44=(($def+16)|0);
 $45=(+(HEAPF32[(($44)>>2)]));
 $46=(($this)|0);
 HEAPF32[(($46)>>2)]=$45;
 return;
}


function __ZN9b2Fixture7DestroyEP16b2BlockAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$27=0,$28=0,$29=0,$30=0,$31=0,$33=0,$34=0,$35=0,$36=0,$37=0,$39=0,$40=0,$41=0,$42=0,$43=0,label=0;

 $1=(($this+28)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  ___assert_fail(((9616)|0),((11144)|0),((72)|0),((12168)|0));

 }
 $6=(($this+12)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=$7;
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+12)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=((FUNCTION_TABLE_ii[($11)&63]($7))|0);
 $13=(($this+24)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=$14;
 $16=((($12)*(28))&-1);
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$15,$16);
 HEAP32[(($13)>>2)]=0;
 $17=((HEAP32[(($6)>>2)])|0);
 $18=(($17+4)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 if (((($19|0))|0)==((3)|0)) {
  $39=$17;
  $40=$17;
  $41=((HEAP32[(($40)>>2)])|0);
  $42=((HEAP32[(($41)>>2)])|0);
  FUNCTION_TABLE_vi[($42)&255]($39);
  $43=$17;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$43,40);
  HEAP32[(($6)>>2)]=0;
  return;
 } else if (((($19|0))|0)==((2)|0)) {
  $33=$17;
  $34=$17;
  $35=((HEAP32[(($34)>>2)])|0);
  $36=((HEAP32[(($35)>>2)])|0);
  FUNCTION_TABLE_vi[($36)&255]($33);
  $37=$17;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$37,152);
  HEAP32[(($6)>>2)]=0;
  return;
 } else if (((($19|0))|0)==((0)|0)) {
  $21=$17;
  $22=$17;
  $23=((HEAP32[(($22)>>2)])|0);
  $24=((HEAP32[(($23)>>2)])|0);
  FUNCTION_TABLE_vi[($24)&255]($21);
  $25=$17;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$25,20);
  HEAP32[(($6)>>2)]=0;
  return;
 } else if (((($19|0))|0)==((1)|0)) {
  $27=$17;
  $28=$17;
  $29=((HEAP32[(($28)>>2)])|0);
  $30=((HEAP32[(($29)>>2)])|0);
  FUNCTION_TABLE_vi[($30)&255]($27);
  $31=$17;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$31,48);
  HEAP32[(($6)>>2)]=0;
  return;
 } else {
  ___assert_fail(((7400)|0),((11144)|0),((115)|0),((12168)|0));

 }
}


function __ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform($this,$broadPhase,$xf){
 $this=($this)|0;
 $broadPhase=($broadPhase)|0;
 $xf=($xf)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$i_012=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,label=0;

 $1=(($this+28)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  ___assert_fail(((9616)|0),((11144)|0),((124)|0),((12176)|0));

 }
 $6=(($this+12)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=$7;
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+12)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=((FUNCTION_TABLE_ii[($11)&63]($7))|0);
 HEAP32[(($1)>>2)]=$12;
 $13=($12|0)>0;
 if (!($13)) {
  return;
 }
 $14=(($this+24)|0);
 $i_012=0;
 while(1) {

  $16=((HEAP32[(($14)>>2)])|0);
  $17=(($16+((($i_012)*(28))&-1))|0);
  $18=((HEAP32[(($6)>>2)])|0);
  $19=$18;
  $20=((HEAP32[(($19)>>2)])|0);
  $21=(($20+24)|0);
  $22=((HEAP32[(($21)>>2)])|0);
  $23=(($17)|0);
  FUNCTION_TABLE_viiii[($22)&127]($18,$23,$xf,$i_012);
  $24=$17;
  $25=((__ZN12b2BroadPhase11CreateProxyERK6b2AABBPv($broadPhase,$23,$24))|0);
  $26=(($16+((($i_012)*(28))&-1)+24)|0);
  HEAP32[(($26)>>2)]=$25;
  $27=(($16+((($i_012)*(28))&-1)+16)|0);
  HEAP32[(($27)>>2)]=$this;
  $28=(($16+((($i_012)*(28))&-1)+20)|0);
  HEAP32[(($28)>>2)]=$i_012;
  $29=((($i_012)+(1))|0);
  $30=((HEAP32[(($1)>>2)])|0);
  $31=($29|0)<($30|0);
  if ($31) {
   $i_012=$29;
  } else {
   break;
  }
 }
 return;
}


function __ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase($this,$broadPhase){
 $this=($this)|0;
 $broadPhase=($broadPhase)|0;
 var $1=0,$2=0,$3=0,$4=0,$i_05=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,label=0;

 $1=(($this+28)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 if (!($3)) {
  HEAP32[(($1)>>2)]=0;
  return;
 }
 $4=(($this+24)|0);
 $i_05=0;
 while(1) {

  $6=((HEAP32[(($4)>>2)])|0);
  $7=(($6+((($i_05)*(28))&-1)+24)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  __ZN12b2BroadPhase12DestroyProxyEi($broadPhase,$8);
  HEAP32[(($7)>>2)]=-1;
  $9=((($i_05)+(1))|0);
  $10=((HEAP32[(($1)>>2)])|0);
  $11=($9|0)<($10|0);
  if ($11) {
   $i_05=$9;
  } else {
   break;
  }
 }
 HEAP32[(($1)>>2)]=0;
 return;
}


function __ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_($this,$broadPhase,$transform1,$transform2){
 $this=($this)|0;
 $broadPhase=($broadPhase)|0;
 $transform1=($transform1)|0;
 $transform2=($transform2)|0;
 var $aabb1=0,$aabb2=0,$displacement=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$i_012=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $aabb1=((sp)|0);
 $aabb2=(((sp)+(16))|0);
 $displacement=(((sp)+(32))|0);
 $1=(($this+28)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  STACKTOP=sp;return;
 }
 $4=((HEAP32[(($1)>>2)])|0);
 $5=($4|0)>0;
 if (!($5)) {
  STACKTOP=sp;return;
 }
 $6=(($this+24)|0);
 $7=(($this+12)|0);
 $8=(($transform2)|0);
 $9=(($transform1)|0);
 $i_012=0;
 while(1) {

  $11=((HEAP32[(($6)>>2)])|0);
  $12=((HEAP32[(($7)>>2)])|0);
  $13=$12;
  $14=((HEAP32[(($13)>>2)])|0);
  $15=(($14+24)|0);
  $16=((HEAP32[(($15)>>2)])|0);
  $17=(($11+((($i_012)*(28))&-1)+20)|0);
  $18=((HEAP32[(($17)>>2)])|0);
  FUNCTION_TABLE_viiii[($16)&127]($12,$aabb1,$transform1,$18);
  $19=((HEAP32[(($7)>>2)])|0);
  $20=$19;
  $21=((HEAP32[(($20)>>2)])|0);
  $22=(($21+24)|0);
  $23=((HEAP32[(($22)>>2)])|0);
  $24=((HEAP32[(($17)>>2)])|0);
  FUNCTION_TABLE_viiii[($23)&127]($19,$aabb2,$transform2,$24);
  $25=(($11+((($i_012)*(28))&-1))|0);
  __ZN6b2AABB7CombineERKS_S1_($25,$aabb1,$aabb2);
  __ZmiRK6b2Vec2S1_($displacement,$8,$9);
  $26=(($11+((($i_012)*(28))&-1)+24)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  __ZN12b2BroadPhase9MoveProxyEiRK6b2AABBRK6b2Vec2($broadPhase,$27,$25,$displacement);
  $28=((($i_012)+(1))|0);
  $29=((HEAP32[(($1)>>2)])|0);
  $30=($28|0)<($29|0);
  if ($30) {
   $i_012=$28;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN9b2Fixture13SetFilterDataERK8b2Filter($this,$filter){
 $this=($this)|0;
 $filter=($filter)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+32)|0);
 $2=$1;
 $3=$filter;
 HEAP16[(($2)>>1)]=((HEAP16[(($3)>>1)])|0);HEAP16[((($2)+(2))>>1)]=((HEAP16[((($3)+(2))>>1)])|0);HEAP16[((($2)+(4))>>1)]=((HEAP16[((($3)+(4))>>1)])|0);
 __ZN9b2Fixture8RefilterEv($this);
 return;
}


function __ZN9b2Fixture8RefilterEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$edge_09=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$or_cond=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$22=0;
 var $23=0,$24=0,$25=0,$26=0,$i_08=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  return;
 }
 $5=((__ZN6b2Body14GetContactListEv($2))|0);
 $6=($5|0)==0;
 if (!($6)) {
  $edge_09=$5;
  while(1) {

   $7=(($edge_09+4)|0);
   $8=((HEAP32[(($7)>>2)])|0);
   $9=((__ZN9b2Contact11GetFixtureAEv($8))|0);
   $10=((__ZN9b2Contact11GetFixtureBEv($8))|0);
   $11=($9|0)==($this|0);
   $12=($10|0)==($this|0);
   $or_cond=$11|$12;
   if ($or_cond) {
    __ZN9b2Contact16FlagForFilteringEv($8);
   }
   $15=(($edge_09+12)|0);
   $16=((HEAP32[(($15)>>2)])|0);
   $17=($16|0)==0;
   if ($17) {
    break;
   } else {
    $edge_09=$16;
   }
  }
 }
 $18=((HEAP32[(($1)>>2)])|0);
 $19=((__ZN6b2Body8GetWorldEv($18))|0);
 $20=($19|0)==0;
 if ($20) {
  return;
 }
 $22=(($19+102872)|0);
 $23=(($this+28)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=($24|0)>0;
 if (!($25)) {
  return;
 }
 $26=(($this+24)|0);
 $i_08=0;
 while(1) {

  $28=((HEAP32[(($26)>>2)])|0);
  $29=(($28+((($i_08)*(28))&-1)+24)|0);
  $30=((HEAP32[(($29)>>2)])|0);
  __ZN12b2BroadPhase10TouchProxyEi($22,$30);
  $31=((($i_08)+(1))|0);
  $32=((HEAP32[(($23)>>2)])|0);
  $33=($31|0)<($32|0);
  if ($33) {
   $i_08=$31;
  } else {
   break;
  }
 }
 return;
}


function __ZN9b2Contact16FlagForFilteringEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2|8;
 HEAP32[(($1)>>2)]=$3;
 return;
}


function __ZN6b2Body8GetWorldEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+88)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN9b2Fixture9SetSensorEb($this,$sensor){
 $this=($this)|0;
 $sensor=($sensor)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,label=0;

 $1=($sensor&1);
 $2=(($this+38)|0);
 $3=((HEAP8[($2)])|0);
 $4=($3&255);
 $5=($1|0)==($4|0);
 if ($5) {
  return;
 }
 $7=(($this+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($8,1);
 $9=($sensor&1);
 HEAP8[($2)]=$9;
 return;
}


function __ZN9b2Fixture4DumpEi($this,$bodyIndex){
 $this=($this)|0;
 $bodyIndex=($bodyIndex)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,$7=0,$8=.0,$9=.0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$27=0,$28=.0,$29=.0,$30=0,$31=0,$32=.0,$33=.0,$34=0,$35=0,$36=.0,$37=.0,$39=0,$40=0,$41=.0,$42=.0;
 var $43=0,$44=0,$45=.0,$46=.0,$47=0,$48=0,$49=.0,$50=.0,$51=0,$52=0,$53=.0,$54=.0,$55=0,$56=0,$57=.0,$58=.0,$59=0,$60=.0,$61=.0,$62=0;
 var $63=.0,$64=.0,$65=0,$66=0,$67=.0,$68=.0,$69=0,$70=0,$71=.0,$72=.0,$73=0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0,$81=0,$82=0,$83=0;
 var $84=0,$85=0,$i_035=0,$87=0,$88=.0,$89=.0,$90=0,$91=.0,$92=.0,$93=0,$94=0,$95=0,$_lcssa=0,$97=0,$98=0,$99=0,$100=0,$101=0,$102=0,$103=0;
 var $i4_037=0,$105=0,$106=0,$107=.0,$108=.0,$109=0,$110=.0,$111=.0,$112=0,$113=0,$114=0,$_lcssa36=0,$115=0,$116=.0,$117=.0,$118=0,$119=.0,$120=.0,$121=0,$122=0;
 var $123=.0,$124=.0,$125=0,$126=0,$127=.0,$128=.0,$129=0,$130=0,$131=0,$132=0,$133=0,$134=0,$135=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 __Z5b2LogPKcz(4632,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $1=(($this+16)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=$2;
 __Z5b2LogPKcz(3536,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$3,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $4=(($this+20)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=$5;
 __Z5b2LogPKcz(2672,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$6,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $7=(($this)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=$8;
 __Z5b2LogPKcz(1960,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$9,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $10=(($this+38)|0);
 $11=((HEAP8[($10)])|0);
 $12=($11&255);
 __Z5b2LogPKcz(1352,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$12,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $13=(($this+32)|0);
 $14=((HEAP16[(($13)>>1)])|0);
 $15=($14&65535);
 __Z5b2LogPKcz(816,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$15,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $16=(($this+34)|0);
 $17=((HEAP16[(($16)>>1)])|0);
 $18=($17&65535);
 __Z5b2LogPKcz(384,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$18,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $19=(($this+36)|0);
 $20=((HEAP16[(($19)>>1)])|0);
 $21=(($20<<16)>>16);
 __Z5b2LogPKcz(11680,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$21,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $22=(($this+12)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=(($23+4)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 if (((($25|0))|0)==((0)|0)) {
  __Z5b2LogPKcz(11352,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $27=(($23+8)|0);
  $28=(+(HEAPF32[(($27)>>2)]));
  $29=$28;
  __Z5b2LogPKcz(10792,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $30=(($23+12)|0);
  $31=$30;
  $32=(+(HEAPF32[(($31)>>2)]));
  $33=$32;
  $34=(($23+16)|0);
  $35=$34;
  $36=(+(HEAPF32[(($35)>>2)]));
  $37=$36;
  __Z5b2LogPKcz(9736,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$33,HEAPF64[(((tempVarArgs)+(8))>>3)]=$37,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 } else if (((($25|0))|0)==((3)|0)) {
  $97=$23;
  __Z5b2LogPKcz(5856,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $98=(($23+16)|0);
  $99=((HEAP32[(($98)>>2)])|0);
  __Z5b2LogPKcz(7224,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$99,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $100=((HEAP32[(($98)>>2)])|0);
  $101=($100|0)>0;
  if ($101) {
   $102=(($23+12)|0);
   $103=$102;
   $i4_037=0;
   while(1) {

    $105=((HEAP32[(($103)>>2)])|0);
    $106=(($105+($i4_037<<3))|0);
    $107=(+(HEAPF32[(($106)>>2)]));
    $108=$107;
    $109=(($105+($i4_037<<3)+4)|0);
    $110=(+(HEAPF32[(($109)>>2)]));
    $111=$110;
    __Z5b2LogPKcz(6496,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 24)|0,HEAP32[((tempVarArgs)>>2)]=$i4_037,HEAPF64[(((tempVarArgs)+(8))>>3)]=$108,HEAPF64[(((tempVarArgs)+(16))>>3)]=$111,tempVarArgs))|0)); STACKTOP=tempVarArgs;
    $112=((($i4_037)+(1))|0);
    $113=((HEAP32[(($98)>>2)])|0);
    $114=($112|0)<($113|0);
    if ($114) {
     $i4_037=$112;
    } else {
     $_lcssa36=$113;
     break;
    }
   }
  } else {
   $_lcssa36=$100;
  }

  __Z5b2LogPKcz(5712,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$_lcssa36,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $115=(($23+20)|0);
  $116=(+(HEAPF32[(($115)>>2)]));
  $117=$116;
  $118=(($115+4)|0);
  $119=(+(HEAPF32[(($118)>>2)]));
  $120=$119;
  __Z5b2LogPKcz(5432,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$117,HEAPF64[(((tempVarArgs)+(8))>>3)]=$120,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $121=(($23+28)|0);
  $122=$121;
  $123=(+(HEAPF32[(($122)>>2)]));
  $124=$123;
  $125=(($121+4)|0);
  $126=$125;
  $127=(+(HEAPF32[(($126)>>2)]));
  $128=$127;
  __Z5b2LogPKcz(5224,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$124,HEAPF64[(((tempVarArgs)+(8))>>3)]=$128,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $129=(($23+36)|0);
  $130=$129;
  $131=((HEAP8[($130)])|0);
  $132=($131&255);
  __Z5b2LogPKcz(4944,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$132,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $133=(($97+37)|0);
  $134=((HEAP8[($133)])|0);
  $135=($134&255);
  __Z5b2LogPKcz(4752,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$135,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 } else if (((($25|0))|0)==((2)|0)) {
  __Z5b2LogPKcz(7456,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  __Z5b2LogPKcz(7224,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $81=(($23+148)|0);
  $82=((HEAP32[(($81)>>2)])|0);
  $83=($82|0)>0;
  if ($83) {
   $84=(($23+20)|0);
   $85=$84;
   $i_035=0;
   while(1) {

    $87=(($85+($i_035<<3))|0);
    $88=(+(HEAPF32[(($87)>>2)]));
    $89=$88;
    $90=(($85+($i_035<<3)+4)|0);
    $91=(+(HEAPF32[(($90)>>2)]));
    $92=$91;
    __Z5b2LogPKcz(6496,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 24)|0,HEAP32[((tempVarArgs)>>2)]=$i_035,HEAPF64[(((tempVarArgs)+(8))>>3)]=$89,HEAPF64[(((tempVarArgs)+(16))>>3)]=$92,tempVarArgs))|0)); STACKTOP=tempVarArgs;
    $93=((($i_035)+(1))|0);
    $94=((HEAP32[(($81)>>2)])|0);
    $95=($93|0)<($94|0);
    if ($95) {
     $i_035=$93;
    } else {
     $_lcssa=$94;
     break;
    }
   }
  } else {
   $_lcssa=$82;
  }

  __Z5b2LogPKcz(6080,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$_lcssa,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 } else if (((($25|0))|0)==((1)|0)) {
  $39=$23;
  __Z5b2LogPKcz(9096,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $40=(($23+8)|0);
  $41=(+(HEAPF32[(($40)>>2)]));
  $42=$41;
  __Z5b2LogPKcz(10792,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$42,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $43=(($23+28)|0);
  $44=$43;
  $45=(+(HEAPF32[(($44)>>2)]));
  $46=$45;
  $47=(($43+4)|0);
  $48=$47;
  $49=(+(HEAPF32[(($48)>>2)]));
  $50=$49;
  __Z5b2LogPKcz(8712,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$46,HEAPF64[(((tempVarArgs)+(8))>>3)]=$50,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $51=(($23+12)|0);
  $52=$51;
  $53=(+(HEAPF32[(($52)>>2)]));
  $54=$53;
  $55=(($23+16)|0);
  $56=$55;
  $57=(+(HEAPF32[(($56)>>2)]));
  $58=$57;
  __Z5b2LogPKcz(8488,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$54,HEAPF64[(((tempVarArgs)+(8))>>3)]=$58,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $59=(($23+20)|0);
  $60=(+(HEAPF32[(($59)>>2)]));
  $61=$60;
  $62=(($59+4)|0);
  $63=(+(HEAPF32[(($62)>>2)]));
  $64=$63;
  __Z5b2LogPKcz(8240,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$61,HEAPF64[(((tempVarArgs)+(8))>>3)]=$64,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $65=(($23+36)|0);
  $66=$65;
  $67=(+(HEAPF32[(($66)>>2)]));
  $68=$67;
  $69=(($23+40)|0);
  $70=$69;
  $71=(+(HEAPF32[(($70)>>2)]));
  $72=$71;
  __Z5b2LogPKcz(8032,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$68,HEAPF64[(((tempVarArgs)+(8))>>3)]=$72,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $73=(($23+44)|0);
  $74=$73;
  $75=((HEAP8[($74)])|0);
  $76=($75&255);
  __Z5b2LogPKcz(7824,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$76,tempVarArgs))|0)); STACKTOP=tempVarArgs;
  $77=(($39+45)|0);
  $78=((HEAP8[($77)])|0);
  $79=($78&255);
  __Z5b2LogPKcz(7608,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$79,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 } else {
  STACKTOP=sp;return;
 }
 __Z5b2LogPKcz(4672,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(4480,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(4672,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(4376,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$bodyIndex,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener($this,$bodyCapacity,$contactCapacity,$jointCapacity,$allocator,$listener){
 $this=($this)|0;
 $bodyCapacity=($bodyCapacity)|0;
 $contactCapacity=($contactCapacity)|0;
 $jointCapacity=($jointCapacity)|0;
 $allocator=($allocator)|0;
 $listener=($listener)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,label=0;

 $1=(($this+40)|0);
 HEAP32[(($1)>>2)]=$bodyCapacity;
 $2=(($this+44)|0);
 HEAP32[(($2)>>2)]=$contactCapacity;
 $3=(($this+48)|0);
 HEAP32[(($3)>>2)]=$jointCapacity;
 $4=(($this+28)|0);
 HEAP32[(($4)>>2)]=0;
 $5=(($this+36)|0);
 HEAP32[(($5)>>2)]=0;
 $6=(($this+32)|0);
 HEAP32[(($6)>>2)]=0;
 $7=(($this)|0);
 HEAP32[(($7)>>2)]=$allocator;
 $8=(($this+4)|0);
 HEAP32[(($8)>>2)]=$listener;
 $9=((HEAP32[(($7)>>2)])|0);
 $10=$bodyCapacity<<2;
 $11=((__ZN16b2StackAllocator8AllocateEi($9,$10))|0);
 $12=$11;
 $13=(($this+8)|0);
 HEAP32[(($13)>>2)]=$12;
 $14=((HEAP32[(($7)>>2)])|0);
 $15=$contactCapacity<<2;
 $16=((__ZN16b2StackAllocator8AllocateEi($14,$15))|0);
 $17=$16;
 $18=(($this+12)|0);
 HEAP32[(($18)>>2)]=$17;
 $19=((HEAP32[(($7)>>2)])|0);
 $20=$jointCapacity<<2;
 $21=((__ZN16b2StackAllocator8AllocateEi($19,$20))|0);
 $22=$21;
 $23=(($this+16)|0);
 HEAP32[(($23)>>2)]=$22;
 $24=((HEAP32[(($7)>>2)])|0);
 $25=((HEAP32[(($1)>>2)])|0);
 $26=((($25)*(12))&-1);
 $27=((__ZN16b2StackAllocator8AllocateEi($24,$26))|0);
 $28=$27;
 $29=(($this+24)|0);
 HEAP32[(($29)>>2)]=$28;
 $30=((HEAP32[(($7)>>2)])|0);
 $31=((HEAP32[(($1)>>2)])|0);
 $32=((($31)*(12))&-1);
 $33=((__ZN16b2StackAllocator8AllocateEi($30,$32))|0);
 $34=$33;
 $35=(($this+20)|0);
 HEAP32[(($35)>>2)]=$34;
 return;
}


function __ZN8b2IslandD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+20)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=$4;
 __ZN16b2StackAllocator4FreeEPv($2,$5);
 $6=((HEAP32[(($1)>>2)])|0);
 $7=(($this+24)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=$8;
 __ZN16b2StackAllocator4FreeEPv($6,$9);
 $10=((HEAP32[(($1)>>2)])|0);
 $11=(($this+16)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=$12;
 __ZN16b2StackAllocator4FreeEPv($10,$13);
 $14=((HEAP32[(($1)>>2)])|0);
 $15=(($this+12)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=$16;
 __ZN16b2StackAllocator4FreeEPv($14,$17);
 $18=((HEAP32[(($1)>>2)])|0);
 $19=(($this+8)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=$20;
 __ZN16b2StackAllocator4FreeEPv($18,$21);
 return;
}


function __ZN8b2Island5SolveEP9b2ProfileRK10b2TimeStepRK6b2Vec2b($this,$profile,$step,$gravity,$allowSleep){
 $this=($this)|0;
 $profile=($profile)|0;
 $step=($step)|0;
 $gravity=($gravity)|0;
 $allowSleep=($allowSleep)|0;
 var $timer=0,$v=0,$tmpcast94=0,$1=0,$2=0,$3=0,$4=0,$solverData=0,$contactSolverDef=0,$contactSolver=0,$c4=0,$tmpcast=0,$v6=0,$tmpcast92=0,$translation=0,$5=0,$6=0,$7=.0,$8=0,$9=0;
 var $10=0,$11=0,$12=0,$13=0,$i_0142=0,$15=0,$16=0,$17=0,$18=0,$19=0,$ld$0$0=0,$20$0=0,$ld$1$1=0,$20$1=0,$21=0,$22=.0,$23=0,$24=0,$ld$2$0=0,$25$0=0;
 var $ld$3$1=0,$25$1=0,$st$4$0=0,$st$5$1=0,$26=0,$27=.0,$28=0,$29=0,$ld$6$0=0,$30$0=0,$ld$7$1=0,$30$1=0,$st$8$0=0,$st$9$1=0,$31=.0,$32=0,$33=0,$34=0,$35=0,$37=0;
 var $38=.0,$39=0,$40=.0,$41=0,$42=0,$43=.0,$44=.0,$45=0,$46=.0,$47=.0,$48=.0,$49=0,$50=.0,$51=.0,$52=.0,$53=.0,$54=0,$55=.0,$56=.0,$57=.0;
 var $58=.0,$59=.0,$w_0=.0,$61=0,$62=0,$63=0,$st$10$0=0,$st$11$1=0,$64=0,$65=0,$66=0,$67=0,$68=0,$ld$12$0=0,$69$0=0,$ld$13$1=0,$69$1=0,$st$14$0=0,$st$15$1=0,$70=0;
 var $71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$89=0,$90=0;
 var $91=0,$92=0,$93=0,$94=0,$95=0,$96=0,$98=0,$99=0,$100=0,$102=0,$103=0,$104=0,$105=0,$lpad_phi$0=0,$lpad_phi$1=0,$i1_0137=0,$107=0,$108=0,$109=0,$110=0;
 var $111=0,$112=0,$113=0,$115=0,$116=0,$117=0,$118=.0,$120=0,$121=0,$122=0,$123=0,$124=0,$i2_0131=0,$125=0,$126=0,$j_0124=0,$127=0,$128=0,$129=0,$130=0;
 var $131=0,$132=0,$133=0,$135=0,$136=0,$137=0,$139=0,$140=0,$141=0,$143=.0,$145=0,$146=0,$147=0,$i3_0117=0,$148=0,$149=0,$150=0,$ld$16$0=0,$151$0=0,$ld$17$1=0;
 var $151$1=0,$st$18$0=0,$st$19$1=0,$152=0,$153=0,$154=.0,$155=0,$156=0,$157=0,$ld$20$0=0,$158$0=0,$ld$21$1=0,$158$1=0,$st$22$0=0,$st$23$1=0,$159=0,$160=0,$161=.0,$162=.0,$163=0;
 var $165=.0,$166=.0,$168=.0,$169=.0,$170=0,$172=.0,$173=.0,$174=.0,$w7_0=.0,$176=.0,$177=.0,$178=0,$179=0,$180=0,$ld$24$0=0,$181$0=0,$ld$25$1=0,$181$1=0,$st$26$0=0,$st$27$1=0;
 var $182=0,$183=0,$184=0,$185=0,$186=0,$ld$28$0=0,$187$0=0,$ld$29$1=0,$187$1=0,$st$30$0=0,$st$31$1=0,$188=0,$189=0,$190=0,$191=0,$192=0,$193=0,$194=0,$i9_0=0,$196=0;
 var $197=0,$199=0,$200=0,$201=0,$i10_0109=0,$jointsOkay_0_off0108=0,$202=0,$203=0,$204=0,$205=0,$206=0,$207=0,$208=0,$209=0,$_=0,$211=0,$212=0,$213=0,$jointsOkay_0_off0_lcssa=0,$brmerge_demorgan=0;
 var $214=0,$positionSolved_0_off0=0,$216=0,$217=0,$218=0,$i11_0101=0,$220=0,$221=0,$222=0,$223=0,$224=0,$225=0,$226=0,$227=0,$ld$32$0=0,$228$0=0,$ld$33$1=0,$228$1=0,$st$34$0=0,$st$35$1=0;
 var $229=0,$230=0,$231=.0,$232=0,$233=0,$234=0,$235=0,$236=0,$237=0,$ld$36$0=0,$238$0=0,$ld$37$1=0,$238$1=0,$st$38$0=0,$st$39$1=0,$239=0,$240=0,$241=.0,$242=0,$243=0;
 var $244=0,$245=0,$246=.0,$248=0,$249=0,$250=0,$252=0,$253=0,$254=0,$i12_099=0,$minSleepTime_098=.0,$256=0,$257=0,$258=0,$259=0,$260=0,$262=0,$263=0,$264=0,$265=0;
 var $267=0,$268=.0,$269=.0,$270=0,$272=0,$273=.0,$274=0,$276=0,$278=0,$279=.0,$280=.0,$281=.0,$minSleepTime_1=.0,$283=0,$284=0,$285=0,$minSleepTime_0_lcssa=.0,$286=0,$brmerge95=0,$287=0;
 var $288=0,$289=0,$i14_096=0,$291=0,$292=0,$293=0,$294=0,$295=0,$296=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_loopexit114$0=0,$lpad_loopexit114$1=0,$lpad_loopexit122$0=0,$lpad_loopexit122$1=0,$lpad_loopexit128$0=0,$lpad_loopexit128$1=0,$lpad_loopexit134$0=0,$lpad_loopexit134$1=0,$lpad_nonloopexit$0=0;
 var $lpad_nonloopexit$1=0,$299$0=0,$299$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $timer=((sp)|0);
 $v=(((sp)+(8))|0);
 $tmpcast94=$v;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $solverData=STACKTOP;STACKTOP = (STACKTOP + 32)|0;
 $contactSolverDef=STACKTOP;STACKTOP = (STACKTOP + 44)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $contactSolver=STACKTOP;STACKTOP = (STACKTOP + 52)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $c4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$c4;
 $v6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast92=$v6;
 $translation=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 __ZN7b2TimerC2Ev($timer);
 $6=(($step)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($this+28)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=($9|0)>0;
 if ($10) {
  $11=(($this+8)|0);
  $12=(($this+20)|0);
  $13=(($this+24)|0);
  $i_0142=0;
  while(1) {

   $15=((HEAP32[(($11)>>2)])|0);
   $16=(($15+($i_0142<<2))|0);
   $17=((HEAP32[(($16)>>2)])|0);
   $18=(($17+44)|0);
   $19=$18;
   $ld$0$0=(($19)|0);
   $20$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($19+4)|0);
   $20$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $21=(($17+56)|0);
   $22=(+(HEAPF32[(($21)>>2)]));
   $23=(($17+64)|0);
   $24=$23;
   $ld$2$0=(($24)|0);
   $25$0=((HEAP32[(($ld$2$0)>>2)])|0);
   $ld$3$1=(($24+4)|0);
   $25$1=((HEAP32[(($ld$3$1)>>2)])|0);
   $st$4$0=(($v)|0);
   HEAP32[(($st$4$0)>>2)]=$25$0;
   $st$5$1=(($v+4)|0);
   HEAP32[(($st$5$1)>>2)]=$25$1;
   $26=(($17+72)|0);
   $27=(+(HEAPF32[(($26)>>2)]));
   $28=(($17+36)|0);
   $29=$28;
   $ld$6$0=(($19)|0);
   $30$0=((HEAP32[(($ld$6$0)>>2)])|0);
   $ld$7$1=(($19+4)|0);
   $30$1=((HEAP32[(($ld$7$1)>>2)])|0);
   $st$8$0=(($29)|0);
   HEAP32[(($st$8$0)>>2)]=$30$0;
   $st$9$1=(($29+4)|0);
   HEAP32[(($st$9$1)>>2)]=$30$1;
   $31=(+(HEAPF32[(($21)>>2)]));
   $32=(($17+52)|0);
   HEAPF32[(($32)>>2)]=$31;
   $33=(($17)|0);
   $34=((HEAP32[(($33)>>2)])|0);
   $35=($34|0)==2;
   if ($35) {
    $37=(($17+140)|0);
    $38=(+(HEAPF32[(($37)>>2)]));
    __ZmlfRK6b2Vec2($3,$38,$gravity);
    $39=(($17+120)|0);
    $40=(+(HEAPF32[(($39)>>2)]));
    $41=(($17+76)|0);
    __ZmlfRK6b2Vec2($4,$40,$41);
    __ZplRK6b2Vec2S1_($2,$3,$4);
    __ZmlfRK6b2Vec2($1,$7,$2);
    __ZN6b2Vec2pLERKS_($tmpcast94,$1);
    $42=(($17+128)|0);
    $43=(+(HEAPF32[(($42)>>2)]));
    $44=($7)*($43);
    $45=(($17+84)|0);
    $46=(+(HEAPF32[(($45)>>2)]));
    $47=($44)*($46);
    $48=($27)+($47);
    $49=(($17+132)|0);
    $50=(+(HEAPF32[(($49)>>2)]));
    $51=($7)*($50);
    $52=((1.0))-($51);
    $53=(+(__Z7b2ClampIfET_S0_S0_S0_($52,0.0,1.0)));
    __ZN6b2Vec2mLEf($tmpcast94,$53);
    $54=(($17+136)|0);
    $55=(+(HEAPF32[(($54)>>2)]));
    $56=($7)*($55);
    $57=((1.0))-($56);
    $58=(+(__Z7b2ClampIfET_S0_S0_S0_($57,0.0,1.0)));
    $59=($48)*($58);
    $w_0=$59;
   } else {
    $w_0=$27;
   }

   $61=((HEAP32[(($12)>>2)])|0);
   $62=(($61+((($i_0142)*(12))&-1))|0);
   $63=$62;
   $st$10$0=(($63)|0);
   HEAP32[(($st$10$0)>>2)]=$20$0;
   $st$11$1=(($63+4)|0);
   HEAP32[(($st$11$1)>>2)]=$20$1;
   $64=((HEAP32[(($12)>>2)])|0);
   $65=(($64+((($i_0142)*(12))&-1)+8)|0);
   HEAPF32[(($65)>>2)]=$22;
   $66=((HEAP32[(($13)>>2)])|0);
   $67=(($66+((($i_0142)*(12))&-1))|0);
   $68=$67;
   $ld$12$0=(($v)|0);
   $69$0=((HEAP32[(($ld$12$0)>>2)])|0);
   $ld$13$1=(($v+4)|0);
   $69$1=((HEAP32[(($ld$13$1)>>2)])|0);
   $st$14$0=(($68)|0);
   HEAP32[(($st$14$0)>>2)]=$69$0;
   $st$15$1=(($68+4)|0);
   HEAP32[(($st$15$1)>>2)]=$69$1;
   $70=((HEAP32[(($13)>>2)])|0);
   $71=(($70+((($i_0142)*(12))&-1)+8)|0);
   HEAPF32[(($71)>>2)]=$w_0;
   $72=((($i_0142)+(1))|0);
   $73=((HEAP32[(($8)>>2)])|0);
   $74=($72|0)<($73|0);
   if ($74) {
    $i_0142=$72;
   } else {
    break;
   }
  }
 }
 __ZN7b2Timer5ResetEv($timer);
 $75=$solverData;
 $76=$step;
 HEAP32[(($75)>>2)]=((HEAP32[(($76)>>2)])|0);HEAP32[((($75)+(4))>>2)]=((HEAP32[((($76)+(4))>>2)])|0);HEAP32[((($75)+(8))>>2)]=((HEAP32[((($76)+(8))>>2)])|0);HEAP32[((($75)+(12))>>2)]=((HEAP32[((($76)+(12))>>2)])|0);HEAP32[((($75)+(16))>>2)]=((HEAP32[((($76)+(16))>>2)])|0);HEAP32[((($75)+(20))>>2)]=((HEAP32[((($76)+(20))>>2)])|0);
 $77=(($this+20)|0);
 $78=((HEAP32[(($77)>>2)])|0);
 $79=(($solverData+24)|0);
 HEAP32[(($79)>>2)]=$78;
 $80=(($this+24)|0);
 $81=((HEAP32[(($80)>>2)])|0);
 $82=(($solverData+28)|0);
 HEAP32[(($82)>>2)]=$81;
 $83=$contactSolverDef;
 HEAP32[(($83)>>2)]=((HEAP32[(($76)>>2)])|0);HEAP32[((($83)+(4))>>2)]=((HEAP32[((($76)+(4))>>2)])|0);HEAP32[((($83)+(8))>>2)]=((HEAP32[((($76)+(8))>>2)])|0);HEAP32[((($83)+(12))>>2)]=((HEAP32[((($76)+(12))>>2)])|0);HEAP32[((($83)+(16))>>2)]=((HEAP32[((($76)+(16))>>2)])|0);HEAP32[((($83)+(20))>>2)]=((HEAP32[((($76)+(20))>>2)])|0);
 $84=(($this+12)|0);
 $85=((HEAP32[(($84)>>2)])|0);
 $86=(($contactSolverDef+24)|0);
 HEAP32[(($86)>>2)]=$85;
 $87=(($this+36)|0);
 $88=((HEAP32[(($87)>>2)])|0);
 $89=(($contactSolverDef+28)|0);
 HEAP32[(($89)>>2)]=$88;
 $90=((HEAP32[(($77)>>2)])|0);
 $91=(($contactSolverDef+32)|0);
 HEAP32[(($91)>>2)]=$90;
 $92=((HEAP32[(($80)>>2)])|0);
 $93=(($contactSolverDef+36)|0);
 HEAP32[(($93)>>2)]=$92;
 $94=(($this)|0);
 $95=((HEAP32[(($94)>>2)])|0);
 $96=(($contactSolverDef+40)|0);
 HEAP32[(($96)>>2)]=$95;
 __ZN15b2ContactSolverC2EP18b2ContactSolverDef($contactSolver,$contactSolverDef);
 __ZN15b2ContactSolver29InitializeVelocityConstraintsEv($contactSolver);
 $98=(($step+20)|0);
 $99=((HEAP8[($98)])|0);
 $100=(($99<<24)>>24)==0;
 if (!($100)) {
  __ZN15b2ContactSolver9WarmStartEv($contactSolver);
 }
 $102=(($this+32)|0);
 $103=((HEAP32[(($102)>>2)])|0);
 $104=($103|0)>0;
 if ($104) {
  $105=(($this+16)|0);
  $i1_0137=0;
  while(1) {

   $107=((HEAP32[(($105)>>2)])|0);
   $108=(($107+($i1_0137<<2))|0);
   $109=((HEAP32[(($108)>>2)])|0);
   $110=$109;
   $111=((HEAP32[(($110)>>2)])|0);
   $112=(($111+28)|0);
   $113=((HEAP32[(($112)>>2)])|0);
   FUNCTION_TABLE_vii[($113)&255]($109,$solverData);
   $115=((($i1_0137)+(1))|0);
   $116=((HEAP32[(($102)>>2)])|0);
   $117=($115|0)<($116|0);
   if ($117) {
    $i1_0137=$115;
   } else {
    break;
   }
  }
 }
 $118=(+(__ZNK7b2Timer15GetMillisecondsEv($timer)));
 $120=(($profile+12)|0);
 HEAPF32[(($120)>>2)]=$118;
 __ZN7b2Timer5ResetEv($timer);
 $121=(($step+12)|0);
 $122=((HEAP32[(($121)>>2)])|0);
 $123=($122|0)>0;
 if ($123) {
  $124=(($this+16)|0);
  $i2_0131=0;
  while(1) {

   $125=((HEAP32[(($102)>>2)])|0);
   $126=($125|0)>0;
   if ($126) {
    $j_0124=0;
    while(1) {

     $127=((HEAP32[(($124)>>2)])|0);
     $128=(($127+($j_0124<<2))|0);
     $129=((HEAP32[(($128)>>2)])|0);
     $130=$129;
     $131=((HEAP32[(($130)>>2)])|0);
     $132=(($131+32)|0);
     $133=((HEAP32[(($132)>>2)])|0);
     FUNCTION_TABLE_vii[($133)&255]($129,$solverData);
     $135=((($j_0124)+(1))|0);
     $136=((HEAP32[(($102)>>2)])|0);
     $137=($135|0)<($136|0);
     if ($137) {
      $j_0124=$135;
     } else {
      break;
     }
    }
   }
   __ZN15b2ContactSolver24SolveVelocityConstraintsEv($contactSolver);
   $139=((($i2_0131)+(1))|0);
   $140=((HEAP32[(($121)>>2)])|0);
   $141=($139|0)<($140|0);
   if ($141) {
    $i2_0131=$139;
   } else {
    break;
   }
  }
 }
 __ZN15b2ContactSolver13StoreImpulsesEv($contactSolver);
 $143=(+(__ZNK7b2Timer15GetMillisecondsEv($timer)));
 $145=(($profile+16)|0);
 HEAPF32[(($145)>>2)]=$143;
 $146=((HEAP32[(($8)>>2)])|0);
 $147=($146|0)>0;
 if ($147) {
  $i3_0117=0;
  while(1) {

   $148=((HEAP32[(($77)>>2)])|0);
   $149=(($148+((($i3_0117)*(12))&-1))|0);
   $150=$149;
   $ld$16$0=(($150)|0);
   $151$0=((HEAP32[(($ld$16$0)>>2)])|0);
   $ld$17$1=(($150+4)|0);
   $151$1=((HEAP32[(($ld$17$1)>>2)])|0);
   $st$18$0=(($c4)|0);
   HEAP32[(($st$18$0)>>2)]=$151$0;
   $st$19$1=(($c4+4)|0);
   HEAP32[(($st$19$1)>>2)]=$151$1;
   $152=((HEAP32[(($77)>>2)])|0);
   $153=(($152+((($i3_0117)*(12))&-1)+8)|0);
   $154=(+(HEAPF32[(($153)>>2)]));
   $155=((HEAP32[(($80)>>2)])|0);
   $156=(($155+((($i3_0117)*(12))&-1))|0);
   $157=$156;
   $ld$20$0=(($157)|0);
   $158$0=((HEAP32[(($ld$20$0)>>2)])|0);
   $ld$21$1=(($157+4)|0);
   $158$1=((HEAP32[(($ld$21$1)>>2)])|0);
   $st$22$0=(($v6)|0);
   HEAP32[(($st$22$0)>>2)]=$158$0;
   $st$23$1=(($v6+4)|0);
   HEAP32[(($st$23$1)>>2)]=$158$1;
   $159=((HEAP32[(($80)>>2)])|0);
   $160=(($159+((($i3_0117)*(12))&-1)+8)|0);
   $161=(+(HEAPF32[(($160)>>2)]));
   __ZmlfRK6b2Vec2($translation,$7,$tmpcast92);
   $162=(+(__Z5b2DotRK6b2Vec2S1_($translation,$translation)));
   $163=$162>(4.0);
   if ($163) {
    $165=(+(__ZNK6b2Vec26LengthEv($translation)));
    $166=((2.0))/($165);
    __ZN6b2Vec2mLEf($tmpcast92,$166);
   }
   $168=($7)*($161);
   $169=($168)*($168);
   $170=$169>(2.4674012660980225);
   if ($170) {
    $172=(+(__Z5b2AbsIfET_S0_($168)));
    $173=((1.5707963705062866))/($172);
    $174=($161)*($173);
    $w7_0=$174;
   } else {
    $w7_0=$161;
   }

   __ZmlfRK6b2Vec2($5,$7,$tmpcast92);
   __ZN6b2Vec2pLERKS_($tmpcast,$5);
   $176=($7)*($w7_0);
   $177=($154)+($176);
   $178=((HEAP32[(($77)>>2)])|0);
   $179=(($178+((($i3_0117)*(12))&-1))|0);
   $180=$179;
   $ld$24$0=(($c4)|0);
   $181$0=((HEAP32[(($ld$24$0)>>2)])|0);
   $ld$25$1=(($c4+4)|0);
   $181$1=((HEAP32[(($ld$25$1)>>2)])|0);
   $st$26$0=(($180)|0);
   HEAP32[(($st$26$0)>>2)]=$181$0;
   $st$27$1=(($180+4)|0);
   HEAP32[(($st$27$1)>>2)]=$181$1;
   $182=((HEAP32[(($77)>>2)])|0);
   $183=(($182+((($i3_0117)*(12))&-1)+8)|0);
   HEAPF32[(($183)>>2)]=$177;
   $184=((HEAP32[(($80)>>2)])|0);
   $185=(($184+((($i3_0117)*(12))&-1))|0);
   $186=$185;
   $ld$28$0=(($v6)|0);
   $187$0=((HEAP32[(($ld$28$0)>>2)])|0);
   $ld$29$1=(($v6+4)|0);
   $187$1=((HEAP32[(($ld$29$1)>>2)])|0);
   $st$30$0=(($186)|0);
   HEAP32[(($st$30$0)>>2)]=$187$0;
   $st$31$1=(($186+4)|0);
   HEAP32[(($st$31$1)>>2)]=$187$1;
   $188=((HEAP32[(($80)>>2)])|0);
   $189=(($188+((($i3_0117)*(12))&-1)+8)|0);
   HEAPF32[(($189)>>2)]=$w7_0;
   $190=((($i3_0117)+(1))|0);
   $191=((HEAP32[(($8)>>2)])|0);
   $192=($190|0)<($191|0);
   if ($192) {
    $i3_0117=$190;
   } else {
    break;
   }
  }
 }
 __ZN7b2Timer5ResetEv($timer);
 $193=(($step+16)|0);
 $194=(($this+16)|0);
 $i9_0=0;
 while(1) {

  $196=((HEAP32[(($193)>>2)])|0);
  $197=($i9_0|0)<($196|0);
  if (!($197)) {
   $positionSolved_0_off0=1;
   break;
  }
  $199=((__ZN15b2ContactSolver24SolvePositionConstraintsEv($contactSolver))|0);
  $200=((HEAP32[(($102)>>2)])|0);
  $201=($200|0)>0;
  if ($201) {
   $jointsOkay_0_off0108=1;$i10_0109=0;
   while(1) {


    $202=((HEAP32[(($194)>>2)])|0);
    $203=(($202+($i10_0109<<2))|0);
    $204=((HEAP32[(($203)>>2)])|0);
    $205=$204;
    $206=((HEAP32[(($205)>>2)])|0);
    $207=(($206+36)|0);
    $208=((HEAP32[(($207)>>2)])|0);
    $209=((FUNCTION_TABLE_iii[($208)&127]($204,$solverData))|0);
    $_=$jointsOkay_0_off0108&$209;
    $211=((($i10_0109)+(1))|0);
    $212=((HEAP32[(($102)>>2)])|0);
    $213=($211|0)<($212|0);
    if ($213) {
     $jointsOkay_0_off0108=$_;$i10_0109=$211;
    } else {
     $jointsOkay_0_off0_lcssa=$_;
     break;
    }
   }
  } else {
   $jointsOkay_0_off0_lcssa=1;
  }

  $brmerge_demorgan=$199&$jointsOkay_0_off0_lcssa;
  $214=((($i9_0)+(1))|0);
  if ($brmerge_demorgan) {
   $positionSolved_0_off0=0;
   break;
  } else {
   $i9_0=$214;
  }
 }

 $216=((HEAP32[(($8)>>2)])|0);
 $217=($216|0)>0;
 if ($217) {
  $218=(($this+8)|0);
  $i11_0101=0;
  while(1) {

   $220=((HEAP32[(($218)>>2)])|0);
   $221=(($220+($i11_0101<<2))|0);
   $222=((HEAP32[(($221)>>2)])|0);
   $223=(($222+44)|0);
   $224=((HEAP32[(($77)>>2)])|0);
   $225=(($224+((($i11_0101)*(12))&-1))|0);
   $226=$225;
   $227=$223;
   $ld$32$0=(($226)|0);
   $228$0=((HEAP32[(($ld$32$0)>>2)])|0);
   $ld$33$1=(($226+4)|0);
   $228$1=((HEAP32[(($ld$33$1)>>2)])|0);
   $st$34$0=(($227)|0);
   HEAP32[(($st$34$0)>>2)]=$228$0;
   $st$35$1=(($227+4)|0);
   HEAP32[(($st$35$1)>>2)]=$228$1;
   $229=((HEAP32[(($77)>>2)])|0);
   $230=(($229+((($i11_0101)*(12))&-1)+8)|0);
   $231=(+(HEAPF32[(($230)>>2)]));
   $232=(($222+56)|0);
   HEAPF32[(($232)>>2)]=$231;
   $233=(($222+64)|0);
   $234=((HEAP32[(($80)>>2)])|0);
   $235=(($234+((($i11_0101)*(12))&-1))|0);
   $236=$235;
   $237=$233;
   $ld$36$0=(($236)|0);
   $238$0=((HEAP32[(($ld$36$0)>>2)])|0);
   $ld$37$1=(($236+4)|0);
   $238$1=((HEAP32[(($ld$37$1)>>2)])|0);
   $st$38$0=(($237)|0);
   HEAP32[(($st$38$0)>>2)]=$238$0;
   $st$39$1=(($237+4)|0);
   HEAP32[(($st$39$1)>>2)]=$238$1;
   $239=((HEAP32[(($80)>>2)])|0);
   $240=(($239+((($i11_0101)*(12))&-1)+8)|0);
   $241=(+(HEAPF32[(($240)>>2)]));
   $242=(($222+72)|0);
   HEAPF32[(($242)>>2)]=$241;
   __ZN6b2Body20SynchronizeTransformEv($222);
   $243=((($i11_0101)+(1))|0);
   $244=((HEAP32[(($8)>>2)])|0);
   $245=($243|0)<($244|0);
   if ($245) {
    $i11_0101=$243;
   } else {
    break;
   }
  }
 }
 $246=(+(__ZNK7b2Timer15GetMillisecondsEv($timer)));
 $248=(($profile+20)|0);
 HEAPF32[(($248)>>2)]=$246;
 $249=(($contactSolver+40)|0);
 $250=((HEAP32[(($249)>>2)])|0);
 __ZN8b2Island6ReportEPK27b2ContactVelocityConstraint($this,$250);
 if (!($allowSleep)) {
  __ZN15b2ContactSolverD2Ev($contactSolver);
  STACKTOP=sp;return;
 }
 $252=((HEAP32[(($8)>>2)])|0);
 $253=($252|0)>0;
 if ($253) {
  $254=(($this+8)|0);
  $minSleepTime_098=3.4028234663852886e+38;$i12_099=0;
  while(1) {


   $256=((HEAP32[(($254)>>2)])|0);
   $257=(($256+($i12_099<<2))|0);
   $258=((HEAP32[(($257)>>2)])|0);
   $259=((__ZNK6b2Body7GetTypeEv($258))|0);
   $260=($259|0)==0;
   L69: do {
    if ($260) {
     $minSleepTime_1=$minSleepTime_098;
    } else {
     $262=(($258+4)|0);
     $263=((HEAP16[(($262)>>1)])|0);
     $264=$263&4;
     $265=(($264<<16)>>16)==0;
     do {
      if (!($265)) {
       $267=(($258+72)|0);
       $268=(+(HEAPF32[(($267)>>2)]));
       $269=($268)*($268);
       $270=$269>(0.001218469929881394);
       if ($270) {
        break;
       }
       $272=(($258+64)|0);
       $273=(+(__Z5b2DotRK6b2Vec2S1_($272,$272)));
       $274=$273>(0.00009999999747378752);
       if ($274) {
        break;
       }
       $278=(($258+144)|0);
       $279=(+(HEAPF32[(($278)>>2)]));
       $280=($7)+($279);
       HEAPF32[(($278)>>2)]=$280;
       $281=(+(__Z5b2MinIfET_S0_S0_($minSleepTime_098,$280)));
       $minSleepTime_1=$281;
       break L69;
      }
     } while(0);
     $276=(($258+144)|0);
     HEAPF32[(($276)>>2)]=0.0;
     $minSleepTime_1=0.0;
    }
   } while(0);

   $283=((($i12_099)+(1))|0);
   $284=((HEAP32[(($8)>>2)])|0);
   $285=($283|0)<($284|0);
   if ($285) {
    $minSleepTime_098=$minSleepTime_1;$i12_099=$283;
   } else {
    $minSleepTime_0_lcssa=$minSleepTime_1;
    break;
   }
  }
 } else {
  $minSleepTime_0_lcssa=3.4028234663852886e+38;
 }

 $286=$minSleepTime_0_lcssa<(0.5);
 $brmerge95=$286|$positionSolved_0_off0;
 if ($brmerge95) {
  __ZN15b2ContactSolverD2Ev($contactSolver);
  STACKTOP=sp;return;
 }
 $287=((HEAP32[(($8)>>2)])|0);
 $288=($287|0)>0;
 if (!($288)) {
  __ZN15b2ContactSolverD2Ev($contactSolver);
  STACKTOP=sp;return;
 }
 $289=(($this+8)|0);
 $i14_096=0;
 while(1) {

  $291=((HEAP32[(($289)>>2)])|0);
  $292=(($291+($i14_096<<2))|0);
  $293=((HEAP32[(($292)>>2)])|0);
  __ZN6b2Body8SetAwakeEb($293,0);
  $294=((($i14_096)+(1))|0);
  $295=((HEAP32[(($8)>>2)])|0);
  $296=($294|0)<($295|0);
  if ($296) {
   $i14_096=$294;
  } else {
   break;
  }
 }
 __ZN15b2ContactSolverD2Ev($contactSolver);
 STACKTOP=sp;return;
}


function __Z7b2ClampIfET_S0_S0_S0_($a,$low,$high){
 $a=+($a);
 $low=+($low);
 $high=+($high);
 var $1=.0,$2=.0,label=0;

 $1=(+(__Z5b2MinIfET_S0_S0_($a,$high)));
 $2=(+(__Z5b2MaxIfET_S0_S0_($low,$1)));
 return (+($2));
}


function __ZN6b2Body20SynchronizeTransformEv($this){
 $this=($this)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=(($this+20)|0);
 $4=(($this+56)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 __ZN5b2Rot3SetEf($3,$5);
 $6=(($this+12)|0);
 $7=(($this+44)|0);
 $8=(($this+28)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($2,$3,$8);
 __ZmiRK6b2Vec2S1_($tmpcast,$7,$2);
 $9=$6;
 $ld$0$0=(($1)|0);
 $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($9)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 $st$3$1=(($9+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 STACKTOP=sp;return;
}


function __ZN8b2Island6ReportEPK27b2ContactVelocityConstraint($this,$constraints){
 $this=($this)|0;
 $constraints=($constraints)|0;
 var $impulse=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$i_014=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$j_013=0,$19=0;
 var $20=.0,$21=0,$22=0,$23=.0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $impulse=((sp)|0);
 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  STACKTOP=sp;return;
 }
 $4=(($this+36)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($5|0)>0;
 if (!($6)) {
  STACKTOP=sp;return;
 }
 $7=(($this+12)|0);
 $8=(($impulse+16)|0);
 $i_014=0;
 while(1) {

  $10=((HEAP32[(($7)>>2)])|0);
  $11=(($10+($i_014<<2))|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=(($constraints+((($i_014)*(152))&-1)+144)|0);
  $14=((HEAP32[(($13)>>2)])|0);
  HEAP32[(($8)>>2)]=$14;
  $15=((HEAP32[(($13)>>2)])|0);
  $16=($15|0)>0;
  if ($16) {
   $17=((HEAP32[(($13)>>2)])|0);
   $j_013=0;
   while(1) {

    $19=(($constraints+((($i_014)*(152))&-1)+((($j_013)*(36))&-1)+16)|0);
    $20=(+(HEAPF32[(($19)>>2)]));
    $21=(($impulse+($j_013<<2))|0);
    HEAPF32[(($21)>>2)]=$20;
    $22=(($constraints+((($i_014)*(152))&-1)+((($j_013)*(36))&-1)+20)|0);
    $23=(+(HEAPF32[(($22)>>2)]));
    $24=(($impulse+8+($j_013<<2))|0);
    HEAPF32[(($24)>>2)]=$23;
    $25=((($j_013)+(1))|0);
    $26=($25|0)<($17|0);
    if ($26) {
     $j_013=$25;
    } else {
     break;
    }
   }
  }
  $27=((HEAP32[(($1)>>2)])|0);
  $28=$27;
  $29=((HEAP32[(($28)>>2)])|0);
  $30=(($29+20)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  FUNCTION_TABLE_viii[($31)&63]($27,$12,$impulse);
  $32=((($i_014)+(1))|0);
  $33=((HEAP32[(($4)>>2)])|0);
  $34=($32|0)<($33|0);
  if ($34) {
   $i_014=$32;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZNK6b2Body7GetTypeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN8b2Island8SolveTOIERK10b2TimeStepii($this,$subStep,$toiIndexA,$toiIndexB){
 $this=($this)|0;
 $subStep=($subStep)|0;
 $toiIndexA=($toiIndexA)|0;
 $toiIndexB=($toiIndexB)|0;
 var $contactSolverDef=0,$contactSolver=0,$c=0,$tmpcast=0,$v=0,$tmpcast55=0,$translation=0,$1=0,$2=0,$3=0,$4=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$i_064=0,$15=0,$16=0;
 var $17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$ld$0$0=0,$23$0=0,$ld$1$1=0,$23$1=0,$st$2$0=0,$st$3$1=0,$24=0,$25=.0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0;
 var $32=0,$ld$4$0=0,$33$0=0,$ld$5$1=0,$33$1=0,$st$6$0=0,$st$7$1=0,$34=0,$35=.0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0;
 var $47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$i1_0=0,$60=0,$61=0,$63=0,$65=0,$lpad_phi$0=0,$lpad_phi$1=0,$67=0;
 var $68=0,$69=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0,$ld$8$0=0,$76$0=0,$ld$9$1=0,$76$1=0,$st$10$0=0,$st$11$1=0,$77=0,$78=0,$79=.0,$80=0,$81=0,$82=0;
 var $83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$89=0,$90=0,$91=0,$ld$12$0=0,$92$0=0,$ld$13$1=0,$92$1=0,$st$14$0=0,$st$15$1=0,$93=0,$94=0,$95=.0,$96=0,$97=0;
 var $98=0,$99=0,$100=0,$101=0,$102=0,$i2_057=0,$104=0,$105=0,$106=0,$107=0,$108=.0,$109=0,$110=0,$i3_056=0,$111=0,$112=0,$113=0,$ld$16$0=0,$114$0=0,$ld$17$1=0;
 var $114$1=0,$st$18$0=0,$st$19$1=0,$115=0,$116=0,$117=.0,$118=0,$119=0,$120=0,$ld$20$0=0,$121$0=0,$ld$21$1=0,$121$1=0,$st$22$0=0,$st$23$1=0,$122=0,$123=0,$124=.0,$125=.0,$126=0;
 var $128=.0,$129=.0,$131=.0,$132=.0,$133=0,$135=.0,$136=.0,$137=.0,$w_0=.0,$139=.0,$140=.0,$141=0,$142=0,$143=0,$ld$24$0=0,$144$0=0,$ld$25$1=0,$144$1=0,$st$26$0=0,$st$27$1=0;
 var $145=0,$146=0,$147=0,$148=0,$149=0,$ld$28$0=0,$150$0=0,$ld$29$1=0,$150$1=0,$st$30$0=0,$st$31$1=0,$151=0,$152=0,$153=0,$154=0,$155=0,$156=0,$157=0,$ld$32$0=0,$158$0=0;
 var $ld$33$1=0,$158$1=0,$st$34$0=0,$st$35$1=0,$159=0,$160=0,$161=0,$ld$36$0=0,$162$0=0,$ld$37$1=0,$162$1=0,$st$38$0=0,$st$39$1=0,$163=0,$164=0,$165=0,$166=0,$167=0,$168=0,$lpad_loopexit$0=0;
 var $lpad_loopexit$1=0,$lpad_loopexit60$0=0,$lpad_loopexit60$1=0,$lpad_nonloopexit61$0=0,$lpad_nonloopexit61$1=0,$172$0=0,$172$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+112)|0;
 $contactSolverDef=((sp)|0);
 $contactSolver=(((sp)+(48))|0);
 $c=(((sp)+(104))|0);
 $tmpcast=$c;
 $v=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast55=$v;
 $translation=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=(($this+28)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=($3|0)>($toiIndexA|0);
 if (!($4)) {
  ___assert_fail(((8008)|0),((10912)|0),((386)|0),((12216)|0));

 }
 $7=($3|0)>($toiIndexB|0);
 if (!($7)) {
  ___assert_fail(((7336)|0),((10912)|0),((387)|0),((12216)|0));

 }
 $8=((HEAP32[(($2)>>2)])|0);
 $9=($8|0)>0;
 if ($9) {
  $10=(($this+8)|0);
  $11=(($this+20)|0);
  $12=(($this+24)|0);
  $i_064=0;
  while(1) {

   $15=((HEAP32[(($10)>>2)])|0);
   $16=(($15+($i_064<<2))|0);
   $17=((HEAP32[(($16)>>2)])|0);
   $18=((HEAP32[(($11)>>2)])|0);
   $19=(($18+((($i_064)*(12))&-1))|0);
   $20=(($17+44)|0);
   $21=$20;
   $22=$19;
   $ld$0$0=(($21)|0);
   $23$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($21+4)|0);
   $23$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($22)|0);
   HEAP32[(($st$2$0)>>2)]=$23$0;
   $st$3$1=(($22+4)|0);
   HEAP32[(($st$3$1)>>2)]=$23$1;
   $24=(($17+56)|0);
   $25=(+(HEAPF32[(($24)>>2)]));
   $26=((HEAP32[(($11)>>2)])|0);
   $27=(($26+((($i_064)*(12))&-1)+8)|0);
   HEAPF32[(($27)>>2)]=$25;
   $28=((HEAP32[(($12)>>2)])|0);
   $29=(($28+((($i_064)*(12))&-1))|0);
   $30=(($17+64)|0);
   $31=$30;
   $32=$29;
   $ld$4$0=(($31)|0);
   $33$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($31+4)|0);
   $33$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($32)|0);
   HEAP32[(($st$6$0)>>2)]=$33$0;
   $st$7$1=(($32+4)|0);
   HEAP32[(($st$7$1)>>2)]=$33$1;
   $34=(($17+72)|0);
   $35=(+(HEAPF32[(($34)>>2)]));
   $36=((HEAP32[(($12)>>2)])|0);
   $37=(($36+((($i_064)*(12))&-1)+8)|0);
   HEAPF32[(($37)>>2)]=$35;
   $38=((($i_064)+(1))|0);
   $39=((HEAP32[(($2)>>2)])|0);
   $40=($38|0)<($39|0);
   if ($40) {
    $i_064=$38;
   } else {
    break;
   }
  }
 }
 $41=(($this+12)|0);
 $42=((HEAP32[(($41)>>2)])|0);
 $43=(($contactSolverDef+24)|0);
 HEAP32[(($43)>>2)]=$42;
 $44=(($this+36)|0);
 $45=((HEAP32[(($44)>>2)])|0);
 $46=(($contactSolverDef+28)|0);
 HEAP32[(($46)>>2)]=$45;
 $47=(($this)|0);
 $48=((HEAP32[(($47)>>2)])|0);
 $49=(($contactSolverDef+40)|0);
 HEAP32[(($49)>>2)]=$48;
 $50=$contactSolverDef;
 $51=$subStep;
 HEAP32[(($50)>>2)]=((HEAP32[(($51)>>2)])|0);HEAP32[((($50)+(4))>>2)]=((HEAP32[((($51)+(4))>>2)])|0);HEAP32[((($50)+(8))>>2)]=((HEAP32[((($51)+(8))>>2)])|0);HEAP32[((($50)+(12))>>2)]=((HEAP32[((($51)+(12))>>2)])|0);HEAP32[((($50)+(16))>>2)]=((HEAP32[((($51)+(16))>>2)])|0);HEAP32[((($50)+(20))>>2)]=((HEAP32[((($51)+(20))>>2)])|0);
 $52=(($this+20)|0);
 $53=((HEAP32[(($52)>>2)])|0);
 $54=(($contactSolverDef+32)|0);
 HEAP32[(($54)>>2)]=$53;
 $55=(($this+24)|0);
 $56=((HEAP32[(($55)>>2)])|0);
 $57=(($contactSolverDef+36)|0);
 HEAP32[(($57)>>2)]=$56;
 __ZN15b2ContactSolverC2EP18b2ContactSolverDef($contactSolver,$contactSolverDef);
 $58=(($subStep+16)|0);
 $i1_0=0;
 while(1) {

  $60=((HEAP32[(($58)>>2)])|0);
  $61=($i1_0|0)<($60|0);
  if (!($61)) {
   break;
  }
  $63=((__ZN15b2ContactSolver27SolveTOIPositionConstraintsEii($contactSolver,$toiIndexA,$toiIndexB))|0);
  $65=((($i1_0)+(1))|0);
  if ($63) {
   break;
  } else {
   $i1_0=$65;
  }
 }
 $67=(($this+8)|0);
 $68=((HEAP32[(($67)>>2)])|0);
 $69=(($68+($toiIndexA<<2))|0);
 $70=((HEAP32[(($69)>>2)])|0);
 $71=(($70+36)|0);
 $72=((HEAP32[(($52)>>2)])|0);
 $73=(($72+((($toiIndexA)*(12))&-1))|0);
 $74=$73;
 $75=$71;
 $ld$8$0=(($74)|0);
 $76$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($74+4)|0);
 $76$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($75)|0);
 HEAP32[(($st$10$0)>>2)]=$76$0;
 $st$11$1=(($75+4)|0);
 HEAP32[(($st$11$1)>>2)]=$76$1;
 $77=((HEAP32[(($52)>>2)])|0);
 $78=(($77+((($toiIndexA)*(12))&-1)+8)|0);
 $79=(+(HEAPF32[(($78)>>2)]));
 $80=((HEAP32[(($67)>>2)])|0);
 $81=(($80+($toiIndexA<<2))|0);
 $82=((HEAP32[(($81)>>2)])|0);
 $83=(($82+52)|0);
 HEAPF32[(($83)>>2)]=$79;
 $84=((HEAP32[(($67)>>2)])|0);
 $85=(($84+($toiIndexB<<2))|0);
 $86=((HEAP32[(($85)>>2)])|0);
 $87=(($86+36)|0);
 $88=((HEAP32[(($52)>>2)])|0);
 $89=(($88+((($toiIndexB)*(12))&-1))|0);
 $90=$89;
 $91=$87;
 $ld$12$0=(($90)|0);
 $92$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($90+4)|0);
 $92$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($91)|0);
 HEAP32[(($st$14$0)>>2)]=$92$0;
 $st$15$1=(($91+4)|0);
 HEAP32[(($st$15$1)>>2)]=$92$1;
 $93=((HEAP32[(($52)>>2)])|0);
 $94=(($93+((($toiIndexB)*(12))&-1)+8)|0);
 $95=(+(HEAPF32[(($94)>>2)]));
 $96=((HEAP32[(($67)>>2)])|0);
 $97=(($96+($toiIndexB<<2))|0);
 $98=((HEAP32[(($97)>>2)])|0);
 $99=(($98+52)|0);
 HEAPF32[(($99)>>2)]=$95;
 __ZN15b2ContactSolver29InitializeVelocityConstraintsEv($contactSolver);
 $100=(($subStep+12)|0);
 $101=((HEAP32[(($100)>>2)])|0);
 $102=($101|0)>0;
 if ($102) {
  $i2_057=0;
  while(1) {

   __ZN15b2ContactSolver24SolveVelocityConstraintsEv($contactSolver);
   $104=((($i2_057)+(1))|0);
   $105=((HEAP32[(($100)>>2)])|0);
   $106=($104|0)<($105|0);
   if ($106) {
    $i2_057=$104;
   } else {
    break;
   }
  }
 }
 $107=(($subStep)|0);
 $108=(+(HEAPF32[(($107)>>2)]));
 $109=((HEAP32[(($2)>>2)])|0);
 $110=($109|0)>0;
 if ($110) {
  $i3_056=0;
  while(1) {

   $111=((HEAP32[(($52)>>2)])|0);
   $112=(($111+((($i3_056)*(12))&-1))|0);
   $113=$112;
   $ld$16$0=(($113)|0);
   $114$0=((HEAP32[(($ld$16$0)>>2)])|0);
   $ld$17$1=(($113+4)|0);
   $114$1=((HEAP32[(($ld$17$1)>>2)])|0);
   $st$18$0=(($c)|0);
   HEAP32[(($st$18$0)>>2)]=$114$0;
   $st$19$1=(($c+4)|0);
   HEAP32[(($st$19$1)>>2)]=$114$1;
   $115=((HEAP32[(($52)>>2)])|0);
   $116=(($115+((($i3_056)*(12))&-1)+8)|0);
   $117=(+(HEAPF32[(($116)>>2)]));
   $118=((HEAP32[(($55)>>2)])|0);
   $119=(($118+((($i3_056)*(12))&-1))|0);
   $120=$119;
   $ld$20$0=(($120)|0);
   $121$0=((HEAP32[(($ld$20$0)>>2)])|0);
   $ld$21$1=(($120+4)|0);
   $121$1=((HEAP32[(($ld$21$1)>>2)])|0);
   $st$22$0=(($v)|0);
   HEAP32[(($st$22$0)>>2)]=$121$0;
   $st$23$1=(($v+4)|0);
   HEAP32[(($st$23$1)>>2)]=$121$1;
   $122=((HEAP32[(($55)>>2)])|0);
   $123=(($122+((($i3_056)*(12))&-1)+8)|0);
   $124=(+(HEAPF32[(($123)>>2)]));
   __ZmlfRK6b2Vec2($translation,$108,$tmpcast55);
   $125=(+(__Z5b2DotRK6b2Vec2S1_($translation,$translation)));
   $126=$125>(4.0);
   if ($126) {
    $128=(+(__ZNK6b2Vec26LengthEv($translation)));
    $129=((2.0))/($128);
    __ZN6b2Vec2mLEf($tmpcast55,$129);
   }
   $131=($108)*($124);
   $132=($131)*($131);
   $133=$132>(2.4674012660980225);
   if ($133) {
    $135=(+(__Z5b2AbsIfET_S0_($131)));
    $136=((1.5707963705062866))/($135);
    $137=($124)*($136);
    $w_0=$137;
   } else {
    $w_0=$124;
   }

   __ZmlfRK6b2Vec2($1,$108,$tmpcast55);
   __ZN6b2Vec2pLERKS_($tmpcast,$1);
   $139=($108)*($w_0);
   $140=($117)+($139);
   $141=((HEAP32[(($52)>>2)])|0);
   $142=(($141+((($i3_056)*(12))&-1))|0);
   $143=$142;
   $ld$24$0=(($c)|0);
   $144$0=((HEAP32[(($ld$24$0)>>2)])|0);
   $ld$25$1=(($c+4)|0);
   $144$1=((HEAP32[(($ld$25$1)>>2)])|0);
   $st$26$0=(($143)|0);
   HEAP32[(($st$26$0)>>2)]=$144$0;
   $st$27$1=(($143+4)|0);
   HEAP32[(($st$27$1)>>2)]=$144$1;
   $145=((HEAP32[(($52)>>2)])|0);
   $146=(($145+((($i3_056)*(12))&-1)+8)|0);
   HEAPF32[(($146)>>2)]=$140;
   $147=((HEAP32[(($55)>>2)])|0);
   $148=(($147+((($i3_056)*(12))&-1))|0);
   $149=$148;
   $ld$28$0=(($v)|0);
   $150$0=((HEAP32[(($ld$28$0)>>2)])|0);
   $ld$29$1=(($v+4)|0);
   $150$1=((HEAP32[(($ld$29$1)>>2)])|0);
   $st$30$0=(($149)|0);
   HEAP32[(($st$30$0)>>2)]=$150$0;
   $st$31$1=(($149+4)|0);
   HEAP32[(($st$31$1)>>2)]=$150$1;
   $151=((HEAP32[(($55)>>2)])|0);
   $152=(($151+((($i3_056)*(12))&-1)+8)|0);
   HEAPF32[(($152)>>2)]=$w_0;
   $153=((HEAP32[(($67)>>2)])|0);
   $154=(($153+($i3_056<<2))|0);
   $155=((HEAP32[(($154)>>2)])|0);
   $156=(($155+44)|0);
   $157=$156;
   $ld$32$0=(($c)|0);
   $158$0=((HEAP32[(($ld$32$0)>>2)])|0);
   $ld$33$1=(($c+4)|0);
   $158$1=((HEAP32[(($ld$33$1)>>2)])|0);
   $st$34$0=(($157)|0);
   HEAP32[(($st$34$0)>>2)]=$158$0;
   $st$35$1=(($157+4)|0);
   HEAP32[(($st$35$1)>>2)]=$158$1;
   $159=(($155+56)|0);
   HEAPF32[(($159)>>2)]=$140;
   $160=(($155+64)|0);
   $161=$160;
   $ld$36$0=(($v)|0);
   $162$0=((HEAP32[(($ld$36$0)>>2)])|0);
   $ld$37$1=(($v+4)|0);
   $162$1=((HEAP32[(($ld$37$1)>>2)])|0);
   $st$38$0=(($161)|0);
   HEAP32[(($st$38$0)>>2)]=$162$0;
   $st$39$1=(($161+4)|0);
   HEAP32[(($st$39$1)>>2)]=$162$1;
   $163=(($155+72)|0);
   HEAPF32[(($163)>>2)]=$w_0;
   __ZN6b2Body20SynchronizeTransformEv($155);
   $164=((($i3_056)+(1))|0);
   $165=((HEAP32[(($2)>>2)])|0);
   $166=($164|0)<($165|0);
   if ($166) {
    $i3_056=$164;
   } else {
    break;
   }
  }
 }
 $167=(($contactSolver+40)|0);
 $168=((HEAP32[(($167)>>2)])|0);
 __ZN8b2Island6ReportEPK27b2ContactVelocityConstraint($this,$168);
 __ZN15b2ContactSolverD2Ev($contactSolver);
 STACKTOP=sp;return;
}


function __ZN7b2WorldC2ERK6b2Vec2($this,$gravity){
 $this=($this)|0;
 $gravity=($gravity)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$ld$0$0=0,$18$0=0,$ld$1$1=0,$18$1=0,$st$2$0=0;
 var $st$3$1=0,$19=0,$20=0,$21=0,$22=0,$23=0,$26=0,$27=0,$30=0,$31=0,$_15=0,$_1=0,$34$0=0,$34$1=0,$35$0=0,$35$1=0,$25$0=0,$25$1=0,$29$0=0,$29$1=0;
 var $37$0=0,$37$1=0,label=0;

 $1=(($this)|0);
 __ZN16b2BlockAllocatorC2Ev($1);
 $2=(($this+68)|0);
 __ZN16b2StackAllocatorC2Ev($2);
 $4=(($this+102872)|0);
 __ZN16b2ContactManagerC2Ev($4);
 $6=(($this+102968)|0);
 $7=(($this+102980)|0);
 HEAP32[(($7)>>2)]=0;
 $8=(($this+102984)|0);
 HEAP32[(($8)>>2)]=0;
 $9=(($this+102952)|0);
 $10=(($this+102992)|0);
 $11=$9;
 _memset((((($11)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 HEAP8[($10)]=1;
 $12=(($this+102993)|0);
 HEAP8[($12)]=1;
 $13=(($this+102994)|0);
 HEAP8[($13)]=0;
 $14=(($this+102995)|0);
 HEAP8[($14)]=1;
 $15=(($this+102976)|0);
 HEAP8[($15)]=1;
 $16=$gravity;
 $17=$6;
 $ld$0$0=(($16)|0);
 $18$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($16+4)|0);
 $18$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($17)|0);
 HEAP32[(($st$2$0)>>2)]=$18$0;
 $st$3$1=(($17+4)|0);
 HEAP32[(($st$3$1)>>2)]=$18$1;
 $19=(($this+102868)|0);
 HEAP32[(($19)>>2)]=4;
 $20=(($this+102988)|0);
 HEAPF32[(($20)>>2)]=0.0;
 $21=(($this+102948)|0);
 HEAP32[(($21)>>2)]=$1;
 $22=(($this+102996)|0);
 $23=$22;
 _memset((((($23)|0))|0), ((((0)|0))|0), ((((32)|0))|0))|0;
 return;
}


function __ZN16b2ContactManagerD1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN16b2ContactManagerD2Ev($this);
 return;
}


function __ZN7b2WorldD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$b_010=0,$7=0,$8=0,$9=0,$10=0,$f_0=0,$12=0,$14=0,$15=0,$16=0,$19=0,$20=0,$21=0,$22=0,$24=0;
 var $26=0,$29=0,$30=0,$33=0,$34=0,$_08=0,$_0=0,$36=0,$_19=0,$_1=0,$38=0,$40$0=0,$40$1=0,$41$0=0,$41$1=0,$18$0=0,$18$1=0,$28$0=0,$28$1=0,$32$0=0;
 var $32$1=0,$43$0=0,$43$1=0,label=0;

 $1=(($this+102952)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  $4=(($this)|0);
  $b_010=$2;
  while(1) {

   $7=(($b_010+96)|0);
   $8=((HEAP32[(($7)>>2)])|0);
   $9=(($b_010+100)|0);
   $10=((HEAP32[(($9)>>2)])|0);
   $f_0=$10;
   while(1) {

    $12=($f_0|0)==0;
    if ($12) {
     break;
    }
    $14=(($f_0+4)|0);
    $15=((HEAP32[(($14)>>2)])|0);
    $16=(($f_0+28)|0);
    HEAP32[(($16)>>2)]=0;
    __ZN9b2Fixture7DestroyEP16b2BlockAllocator($f_0,$4);
    $f_0=$15;
   }
   $5=($8|0)==0;
   if ($5) {
    break;
   } else {
    $b_010=$8;
   }
  }
 }
 $22=(($this+102872)|0);
 __ZN16b2ContactManagerD1Ev($22);
 $24=(($this+68)|0);
 __ZN16b2StackAllocatorD2Ev($24);
 $26=(($this)|0);
 __ZN16b2BlockAllocatorD2Ev($26);
 return;
}


function __ZN7b2World22SetDestructionListenerEP21b2DestructionListener($this,$listener){
 $this=($this)|0;
 $listener=($listener)|0;
 var $1=0,label=0;

 $1=(($this+102980)|0);
 HEAP32[(($1)>>2)]=$listener;
 return;
}


function __ZN7b2World16SetContactFilterEP15b2ContactFilter($this,$filter){
 $this=($this)|0;
 $filter=($filter)|0;
 var $1=0,label=0;

 $1=(($this+102940)|0);
 HEAP32[(($1)>>2)]=$filter;
 return;
}


function __ZN7b2World18SetContactListenerEP17b2ContactListener($this,$listener){
 $this=($this)|0;
 $listener=($listener)|0;
 var $1=0,label=0;

 $1=(($this+102944)|0);
 HEAP32[(($1)>>2)]=$listener;
 return;
}


function __ZN7b2World12SetDebugDrawEP6b2Draw($this,$debugDraw){
 $this=($this)|0;
 $debugDraw=($debugDraw)|0;
 var $1=0,label=0;

 $1=(($this+102984)|0);
 HEAP32[(($1)>>2)]=$debugDraw;
 return;
}


function __ZN7b2World10CreateBodyEPK9b2BodyDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$4=0,$5=0,$6=0,$8=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$18=0,$20=0,$21=0,$22=0,label=0;

 $1=((__ZNK7b2World8IsLockedEv($this))|0);
 if ($1) {
  ___assert_fail(((7968)|0),((10872)|0),((109)|0),((12328)|0));
  return ((0)|0);
 }
 $4=(($this)|0);
 $5=((__ZN16b2BlockAllocator8AllocateEi($4,152))|0);
 $6=($5|0)==0;
 if ($6) {
  $10=0;
 } else {
  $8=$5;
  __ZN6b2BodyC2EPK9b2BodyDefP7b2World($8,$def,$this);
  $10=$8;
 }

 $11=(($10+92)|0);
 HEAP32[(($11)>>2)]=0;
 $12=(($this+102952)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($10+96)|0);
 HEAP32[(($14)>>2)]=$13;
 $15=((HEAP32[(($12)>>2)])|0);
 $16=($15|0)==0;
 if (!($16)) {
  $18=(($15+92)|0);
  HEAP32[(($18)>>2)]=$10;
 }
 HEAP32[(($12)>>2)]=$10;
 $20=(($this+102960)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=((($21)+(1))|0);
 HEAP32[(($20)>>2)]=$22;
 return (($10)|0);
}


function __ZN7b2World11DestroyBodyEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$6=0,$9=0,$10=0,$11=0,$12=0,$je_039=0,$14=0,$15=0,$16=0,$17=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$26=0;
 var $27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$ce_035=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$f_034=0;
 var $47=0,$48=0,$49=0,$50=0,$52=0,$53=0,$54=0,$55=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$66=0,$67=0,$68=0,$70=0;
 var $71=0,$72=0,$74=0,$75=0,$77=0,$78=0,$79=0,$81=0,$83=0,$84=0,$85=0,$86=0,label=0;

 $1=(($this+102960)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 if (!($3)) {
  ___assert_fail(((7320)|0),((10872)|0),((133)|0),((12296)|0));

 }
 $6=((__ZNK7b2World8IsLockedEv($this))|0);
 if ($6) {
  ___assert_fail(((7968)|0),((10872)|0),((134)|0),((12296)|0));

 }
 $9=(($b+108)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($10|0)==0;
 if (!($11)) {
  $12=(($this+102980)|0);
  $je_039=$10;
  while(1) {

   $14=(($je_039+12)|0);
   $15=((HEAP32[(($14)>>2)])|0);
   $16=((HEAP32[(($12)>>2)])|0);
   $17=($16|0)==0;
   if (!($17)) {
    $19=$16;
    $20=((HEAP32[(($19)>>2)])|0);
    $21=(($20+8)|0);
    $22=((HEAP32[(($21)>>2)])|0);
    $23=(($je_039+4)|0);
    $24=((HEAP32[(($23)>>2)])|0);
    FUNCTION_TABLE_vii[($22)&255]($16,$24);
   }
   $26=(($je_039+4)|0);
   $27=((HEAP32[(($26)>>2)])|0);
   __ZN7b2World12DestroyJointEP7b2Joint($this,$27);
   HEAP32[(($9)>>2)]=$15;
   $28=($15|0)==0;
   if ($28) {
    break;
   } else {
    $je_039=$15;
   }
  }
 }
 HEAP32[(($9)>>2)]=0;
 $29=(($b+112)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=($30|0)==0;
 if (!($31)) {
  $32=(($this+102872)|0);
  $ce_035=$30;
  while(1) {

   $34=(($ce_035+12)|0);
   $35=((HEAP32[(($34)>>2)])|0);
   $36=(($ce_035+4)|0);
   $37=((HEAP32[(($36)>>2)])|0);
   __ZN16b2ContactManager7DestroyEP9b2Contact($32,$37);
   $38=($35|0)==0;
   if ($38) {
    break;
   } else {
    $ce_035=$35;
   }
  }
 }
 HEAP32[(($29)>>2)]=0;
 $39=(($b+100)|0);
 $40=((HEAP32[(($39)>>2)])|0);
 $41=($40|0)==0;
 if (!($41)) {
  $42=(($this+102980)|0);
  $43=(($this+102872)|0);
  $44=(($this)|0);
  $45=(($b+104)|0);
  $f_034=$40;
  while(1) {

   $47=(($f_034+4)|0);
   $48=((HEAP32[(($47)>>2)])|0);
   $49=((HEAP32[(($42)>>2)])|0);
   $50=($49|0)==0;
   if (!($50)) {
    $52=$49;
    $53=((HEAP32[(($52)>>2)])|0);
    $54=(($53+12)|0);
    $55=((HEAP32[(($54)>>2)])|0);
    FUNCTION_TABLE_vii[($55)&255]($49,$f_034);
   }
   __ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase($f_034,$43);
   __ZN9b2Fixture7DestroyEP16b2BlockAllocator($f_034,$44);
   $57=$f_034;
   __ZN16b2BlockAllocator4FreeEPvi($44,$57,44);
   HEAP32[(($39)>>2)]=$48;
   $58=((HEAP32[(($45)>>2)])|0);
   $59=((($58)-(1))|0);
   HEAP32[(($45)>>2)]=$59;
   $60=($48|0)==0;
   if ($60) {
    break;
   } else {
    $f_034=$48;
   }
  }
 }
 HEAP32[(($39)>>2)]=0;
 $61=(($b+104)|0);
 HEAP32[(($61)>>2)]=0;
 $62=(($b+92)|0);
 $63=((HEAP32[(($62)>>2)])|0);
 $64=($63|0)==0;
 if (!($64)) {
  $66=(($b+96)|0);
  $67=((HEAP32[(($66)>>2)])|0);
  $68=(($63+96)|0);
  HEAP32[(($68)>>2)]=$67;
 }
 $70=(($b+96)|0);
 $71=((HEAP32[(($70)>>2)])|0);
 $72=($71|0)==0;
 if (!($72)) {
  $74=((HEAP32[(($62)>>2)])|0);
  $75=(($71+92)|0);
  HEAP32[(($75)>>2)]=$74;
 }
 $77=(($this+102952)|0);
 $78=((HEAP32[(($77)>>2)])|0);
 $79=($78|0)==($b|0);
 if (!($79)) {
  $83=((HEAP32[(($1)>>2)])|0);
  $84=((($83)-(1))|0);
  HEAP32[(($1)>>2)]=$84;
  __ZN6b2BodyD2Ev($b);
  $85=(($this)|0);
  $86=$b;
  __ZN16b2BlockAllocator4FreeEPvi($85,$86,152);
  return;
 }
 $81=((HEAP32[(($70)>>2)])|0);
 HEAP32[(($77)>>2)]=$81;
 $83=((HEAP32[(($1)>>2)])|0);
 $84=((($83)-(1))|0);
 HEAP32[(($1)>>2)]=$84;
 __ZN6b2BodyD2Ev($b);
 $85=(($this)|0);
 $86=$b;
 __ZN16b2BlockAllocator4FreeEPvi($85,$86,152);
 return;
}


function __ZN7b2World12DestroyJointEP7b2Joint($this,$j){
 $this=($this)|0;
 $j=($j)|0;
 var $1=0,$4=0,$5=0,$6=0,$7=0,$8=0,$10=0,$11=0,$12=0,$14=0,$15=0,$16=0,$18=0,$19=0,$21=0,$22=0,$23=0,$25=0,$27=0,$28=0;
 var $29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$36=0,$37=0,$38=0,$40=0,$41=0,$42=0,$44=0,$45=0,$47=0,$48=0,$49=0,$51=0,$53=0,$54=0;
 var $55=0,$56=0,$58=0,$59=0,$60=0,$62=0,$63=0,$64=0,$66=0,$67=0,$69=0,$70=0,$71=0,$73=0,$75=0,$76=0,$77=0,$78=0,$81=0,$82=0;
 var $84=0,$85=0,$edge_042=0,$86=0,$87=0,$88=0,$90=0,$91=0,$93=0,$94=0,$95=0,label=0;

 $1=((__ZNK7b2World8IsLockedEv($this))|0);
 if ($1) {
  ___assert_fail(((7968)|0),((10872)|0),((274)|0),((12280)|0));

 }
 $4=(($j+61)|0);
 $5=((HEAP8[($4)])|0);
 $6=(($j+8)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)==0;
 if (!($8)) {
  $10=(($j+12)|0);
  $11=((HEAP32[(($10)>>2)])|0);
  $12=(($7+12)|0);
  HEAP32[(($12)>>2)]=$11;
 }
 $14=(($j+12)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=($15|0)==0;
 if (!($16)) {
  $18=((HEAP32[(($6)>>2)])|0);
  $19=(($15+8)|0);
  HEAP32[(($19)>>2)]=$18;
 }
 $21=(($this+102956)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=($22|0)==($j|0);
 if ($23) {
  $25=((HEAP32[(($14)>>2)])|0);
  HEAP32[(($21)>>2)]=$25;
 }
 $27=(($j+48)|0);
 $28=((HEAP32[(($27)>>2)])|0);
 $29=(($j+52)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($28,1);
 __ZN6b2Body8SetAwakeEb($30,1);
 $31=(($j+16)|0);
 $32=(($j+24)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=($33|0)==0;
 if (!($34)) {
  $36=(($j+28)|0);
  $37=((HEAP32[(($36)>>2)])|0);
  $38=(($33+12)|0);
  HEAP32[(($38)>>2)]=$37;
 }
 $40=(($j+28)|0);
 $41=((HEAP32[(($40)>>2)])|0);
 $42=($41|0)==0;
 if (!($42)) {
  $44=((HEAP32[(($32)>>2)])|0);
  $45=(($41+8)|0);
  HEAP32[(($45)>>2)]=$44;
 }
 $47=(($28+108)|0);
 $48=((HEAP32[(($47)>>2)])|0);
 $49=($31|0)==($48|0);
 if ($49) {
  $51=((HEAP32[(($40)>>2)])|0);
  HEAP32[(($47)>>2)]=$51;
 }
 HEAP32[(($32)>>2)]=0;
 HEAP32[(($40)>>2)]=0;
 $53=(($j+32)|0);
 $54=(($j+40)|0);
 $55=((HEAP32[(($54)>>2)])|0);
 $56=($55|0)==0;
 if (!($56)) {
  $58=(($j+44)|0);
  $59=((HEAP32[(($58)>>2)])|0);
  $60=(($55+12)|0);
  HEAP32[(($60)>>2)]=$59;
 }
 $62=(($j+44)|0);
 $63=((HEAP32[(($62)>>2)])|0);
 $64=($63|0)==0;
 if (!($64)) {
  $66=((HEAP32[(($54)>>2)])|0);
  $67=(($63+8)|0);
  HEAP32[(($67)>>2)]=$66;
 }
 $69=(($30+108)|0);
 $70=((HEAP32[(($69)>>2)])|0);
 $71=($53|0)==($70|0);
 if ($71) {
  $73=((HEAP32[(($62)>>2)])|0);
  HEAP32[(($69)>>2)]=$73;
 }
 HEAP32[(($54)>>2)]=0;
 HEAP32[(($62)>>2)]=0;
 $75=(($this)|0);
 __ZN7b2Joint7DestroyEPS_P16b2BlockAllocator($j,$75);
 $76=(($this+102964)|0);
 $77=((HEAP32[(($76)>>2)])|0);
 $78=($77|0)>0;
 if (!($78)) {
  ___assert_fail(((4576)|0),((10872)|0),((346)|0),((12280)|0));

 }
 $81=((($77)-(1))|0);
 HEAP32[(($76)>>2)]=$81;
 $82=(($5<<24)>>24)==0;
 if (!($82)) {
  return;
 }
 $84=((__ZN6b2Body14GetContactListEv($30))|0);
 $85=($84|0)==0;
 if ($85) {
  return;
 } else {
  $edge_042=$84;
 }
 while(1) {

  $86=(($edge_042)|0);
  $87=((HEAP32[(($86)>>2)])|0);
  $88=($87|0)==($28|0);
  if ($88) {
   $90=(($edge_042+4)|0);
   $91=((HEAP32[(($90)>>2)])|0);
   __ZN9b2Contact16FlagForFilteringEv($91);
  }
  $93=(($edge_042+12)|0);
  $94=((HEAP32[(($93)>>2)])|0);
  $95=($94|0)==0;
  if ($95) {
   break;
  } else {
   $edge_042=$94;
  }
 }
 return;
}


function __ZN7b2World11CreateJointEPK10b2JointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$13=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0;
 var $25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$34=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0;
 var $47=0,$48=0,$49=0,$50=0,$52=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$62=0,$63=0,$64=0,$65=0,$edge_037=0,$66=0,$67=0,$68=0;
 var $70=0,$71=0,$73=0,$74=0,$75=0,label=0;

 $1=((__ZNK7b2World8IsLockedEv($this))|0);
 if ($1) {
  ___assert_fail(((7968)|0),((10872)|0),((214)|0),((12312)|0));
  return ((0)|0);
 }
 $4=(($this)|0);
 $5=((__ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator($def,$4))|0);
 $6=(($5+8)|0);
 HEAP32[(($6)>>2)]=0;
 $7=(($this+102956)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($5+12)|0);
 HEAP32[(($9)>>2)]=$8;
 $10=((HEAP32[(($7)>>2)])|0);
 $11=($10|0)==0;
 if (!($11)) {
  $13=(($10+8)|0);
  HEAP32[(($13)>>2)]=$5;
 }
 HEAP32[(($7)>>2)]=$5;
 $15=(($this+102964)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=((($16)+(1))|0);
 HEAP32[(($15)>>2)]=$17;
 $18=(($5+16)|0);
 $19=(($5+20)|0);
 HEAP32[(($19)>>2)]=$5;
 $20=(($5+52)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=(($18)|0);
 HEAP32[(($22)>>2)]=$21;
 $23=(($5+24)|0);
 HEAP32[(($23)>>2)]=0;
 $24=(($5+48)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=(($25+108)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=(($5+28)|0);
 HEAP32[(($28)>>2)]=$27;
 $29=((HEAP32[(($24)>>2)])|0);
 $30=(($29+108)|0);
 $31=((HEAP32[(($30)>>2)])|0);
 $32=($31|0)==0;
 if (!($32)) {
  $34=(($31+8)|0);
  HEAP32[(($34)>>2)]=$18;
 }
 $36=((HEAP32[(($24)>>2)])|0);
 $37=(($36+108)|0);
 HEAP32[(($37)>>2)]=$18;
 $38=(($5+32)|0);
 $39=(($5+36)|0);
 HEAP32[(($39)>>2)]=$5;
 $40=((HEAP32[(($24)>>2)])|0);
 $41=(($38)|0);
 HEAP32[(($41)>>2)]=$40;
 $42=(($5+40)|0);
 HEAP32[(($42)>>2)]=0;
 $43=((HEAP32[(($20)>>2)])|0);
 $44=(($43+108)|0);
 $45=((HEAP32[(($44)>>2)])|0);
 $46=(($5+44)|0);
 HEAP32[(($46)>>2)]=$45;
 $47=((HEAP32[(($20)>>2)])|0);
 $48=(($47+108)|0);
 $49=((HEAP32[(($48)>>2)])|0);
 $50=($49|0)==0;
 if (!($50)) {
  $52=(($49+8)|0);
  HEAP32[(($52)>>2)]=$38;
 }
 $54=((HEAP32[(($20)>>2)])|0);
 $55=(($54+108)|0);
 HEAP32[(($55)>>2)]=$38;
 $56=(($def+8)|0);
 $57=((HEAP32[(($56)>>2)])|0);
 $58=(($def+16)|0);
 $59=((HEAP8[($58)])|0);
 $60=(($59<<24)>>24)==0;
 if (!($60)) {
  return (($5)|0);
 }
 $62=(($def+12)|0);
 $63=((HEAP32[(($62)>>2)])|0);
 $64=((__ZN6b2Body14GetContactListEv($63))|0);
 $65=($64|0)==0;
 if ($65) {
  return (($5)|0);
 } else {
  $edge_037=$64;
 }
 while(1) {

  $66=(($edge_037)|0);
  $67=((HEAP32[(($66)>>2)])|0);
  $68=($67|0)==($57|0);
  if ($68) {
   $70=(($edge_037+4)|0);
   $71=((HEAP32[(($70)>>2)])|0);
   __ZN9b2Contact16FlagForFilteringEv($71);
  }
  $73=(($edge_037+12)|0);
  $74=((HEAP32[(($73)>>2)])|0);
  $75=($74|0)==0;
  if ($75) {
   break;
  } else {
   $edge_037=$74;
  }
 }
 return (($5)|0);
}


function __ZN7b2World16SetAllowSleepingEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$9=0,$b_05=0,$10=0,$b_06=0,$11=0,$b_0=0,$12=0,label=0;

 $1=($flag&1);
 $2=(($this+102976)|0);
 $3=((HEAP8[($2)])|0);
 $4=($3&255);
 $5=($1|0)==($4|0);
 if ($5) {
  return;
 }
 $7=($flag&1);
 HEAP8[($2)]=$7;
 if ($flag) {
  return;
 }
 $9=(($this+102952)|0);
 $b_05=((HEAP32[(($9)>>2)])|0);
 $10=($b_05|0)==0;
 if ($10) {
  return;
 } else {
  $b_06=$b_05;
 }
 while(1) {

  __ZN6b2Body8SetAwakeEb($b_06,1);
  $11=(($b_06+96)|0);
  $b_0=((HEAP32[(($11)>>2)])|0);
  $12=($b_0|0)==0;
  if ($12) {
   break;
  } else {
   $b_06=$b_0;
  }
 }
 return;
}


function __ZN7b2World5SolveERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $island=0,$profile=0,$timer=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$b_0108=0,$15=0,$b_0109=0;
 var $16=0,$17=0,$18=0,$19=0,$b_0=0,$20=0,$21=0,$c_0103=0,$22=0,$c_0104=0,$23=0,$24=0,$25=0,$26=0,$c_0=0,$27=0,$28=0,$j_098=0,$29=0,$j_099=0;
 var $30=0,$31=0,$j_0=0,$32=0,$33=0,$34=0,$35=0,$37=0,$seed_093=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$seed_094=0,$47=0,$48=0;
 var $49=0,$50=0,$lpad_phi$0=0,$lpad_phi$1=0,$52=0,$54=0,$56=0,$57=0,$59=0,$60=0,$stackCount_086=0,$62=0,$63=0,$64=0,$65=0,$70=0,$71=0,$stackCount_0_be=0,$72=0,$74=0;
 var $ce_066=0,$75=0,$ce_068=0,$stackCount_167=0,$76=0,$77=0,$78=0,$79=0,$80=0,$81=0,$83=0,$85=0,$87=0,$88=0,$89=0,$90=0,$91=0,$93=0,$94=0,$95=0;
 var $96=0,$97=0,$100=0,$101=0,$102=0,$103=0,$104=0,$105=0,$106=0,$107=0,$109=0,$113=0,$114=0,$115=0,$116=0,$stackCount_2=0,$118=0,$ce_0=0,$119=0,$stackCount_1_lcssa=0;
 var $120=0,$je_077=0,$121=0,$je_079=0,$stackCount_378=0,$122=0,$123=0,$124=0,$125=0,$126=0,$128=0,$129=0,$130=0,$133=0,$134=0,$135=0,$136=0,$137=0,$138=0,$140=0;
 var $144=0,$145=0,$146=0,$147=0,$stackCount_4=0,$149=0,$je_0=0,$150=0,$152=0,$153=0,$155=.0,$156=.0,$157=.0,$158=.0,$159=.0,$160=.0,$161=.0,$162=.0,$163=.0,$164=0;
 var $165=0,$i_088=0,$166=0,$167=0,$168=0,$169=0,$170=0,$172=0,$173=0,$174=0,$176=0,$177=0,$178=0,$179=0,$seed_0=0,$180=0,$183=0,$184=0,$b4_060=0,$185=0;
 var $186=0,$187=0,$188=0,$190=0,$191=0,$194=0,$195=0,$197=.0,$199=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_loopexit61$0=0,$lpad_loopexit61$1=0,$lpad_loopexit73$0=0,$lpad_loopexit73$1=0,$lpad_loopexit83$0=0,$lpad_loopexit83$1=0,$lpad_loopexit91$0=0,$lpad_loopexit91$1=0,$lpad_nonloopexit$0=0;
 var $lpad_nonloopexit$1=0,$202$0=0,$202$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+96)|0;
 $island=((sp)|0);
 $profile=(((sp)+(56))|0);
 $timer=(((sp)+(88))|0);
 $1=(($this+103008)|0);
 HEAPF32[(($1)>>2)]=0.0;
 $2=(($this+103012)|0);
 HEAPF32[(($2)>>2)]=0.0;
 $3=(($this+103016)|0);
 HEAPF32[(($3)>>2)]=0.0;
 $4=(($this+102960)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($this+102872)|0);
 $7=(($this+102936)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($this+102964)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($this+68)|0);
 $12=(($this+102944)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 __ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener($island,$5,$8,$10,$11,$13);
 $14=(($this+102952)|0);
 $b_0108=((HEAP32[(($14)>>2)])|0);
 $15=($b_0108|0)==0;
 if (!($15)) {
  $b_0109=$b_0108;
  while(1) {

   $16=(($b_0109+4)|0);
   $17=((HEAP16[(($16)>>1)])|0);
   $18=$17&-2;
   HEAP16[(($16)>>1)]=$18;
   $19=(($b_0109+96)|0);
   $b_0=((HEAP32[(($19)>>2)])|0);
   $20=($b_0|0)==0;
   if ($20) {
    break;
   } else {
    $b_0109=$b_0;
   }
  }
 }
 $21=(($this+102932)|0);
 $c_0103=((HEAP32[(($21)>>2)])|0);
 $22=($c_0103|0)==0;
 if (!($22)) {
  $c_0104=$c_0103;
  while(1) {

   $23=(($c_0104+4)|0);
   $24=((HEAP32[(($23)>>2)])|0);
   $25=$24&-2;
   HEAP32[(($23)>>2)]=$25;
   $26=(($c_0104+12)|0);
   $c_0=((HEAP32[(($26)>>2)])|0);
   $27=($c_0|0)==0;
   if ($27) {
    break;
   } else {
    $c_0104=$c_0;
   }
  }
 }
 $28=(($this+102956)|0);
 $j_098=((HEAP32[(($28)>>2)])|0);
 $29=($j_098|0)==0;
 if (!($29)) {
  $j_099=$j_098;
  while(1) {

   $30=(($j_099+60)|0);
   HEAP8[($30)]=0;
   $31=(($j_099+12)|0);
   $j_0=((HEAP32[(($31)>>2)])|0);
   $32=($j_0|0)==0;
   if ($32) {
    break;
   } else {
    $j_099=$j_0;
   }
  }
 }
 $33=((HEAP32[(($4)>>2)])|0);
 $34=$33<<2;
 $35=((__ZN16b2StackAllocator8AllocateEi($11,$34))|0);
 $37=$35;
 $seed_093=((HEAP32[(($14)>>2)])|0);
 $38=($seed_093|0)==0;
 L14: do {
  if (!($38)) {
   $39=(($this+102968)|0);
   $40=(($this+102976)|0);
   $41=(($profile+12)|0);
   $42=(($profile+16)|0);
   $43=(($profile+20)|0);
   $44=(($island+28)|0);
   $45=(($island+8)|0);
   $seed_094=$seed_093;
   L16: while(1) {

    $47=(($seed_094+4)|0);
    $48=((HEAP16[(($47)>>1)])|0);
    $49=$48&1;
    $50=(($49<<16)>>16)==0;
    do {
     if ($50) {
      $52=((__ZNK6b2Body7IsAwakeEv($seed_094))|0);
      if (!($52)) {
       break;
      }
      $54=((__ZNK6b2Body8IsActiveEv($seed_094))|0);
      if (!($54)) {
       break;
      }
      $56=((__ZNK6b2Body7GetTypeEv($seed_094))|0);
      $57=($56|0)==0;
      if ($57) {
       break;
      }
      __ZN8b2Island5ClearEv($island);
      HEAP32[(($37)>>2)]=$seed_094;
      $59=((HEAP16[(($47)>>1)])|0);
      $60=$59|1;
      HEAP16[(($47)>>1)]=$60;
      $stackCount_086=1;
      while(1) {

       $62=((($stackCount_086)-(1))|0);
       $63=(($37+($62<<2))|0);
       $64=((HEAP32[(($63)>>2)])|0);
       $65=((__ZNK6b2Body8IsActiveEv($64))|0);
       if (!($65)) {
        label = 23;
        break L16;
       }
       __ZN8b2Island3AddEP6b2Body($island,$64);
       __ZN6b2Body8SetAwakeEb($64,1);
       $70=((__ZNK6b2Body7GetTypeEv($64))|0);
       $71=($70|0)==0;
       do {
        if ($71) {
         $stackCount_0_be=$62;
        } else {
         $74=(($64+112)|0);
         $ce_066=((HEAP32[(($74)>>2)])|0);
         $75=($ce_066|0)==0;
         if ($75) {
          $stackCount_1_lcssa=$62;
         } else {
          $stackCount_167=$62;$ce_068=$ce_066;
          while(1) {


           $76=(($ce_068+4)|0);
           $77=((HEAP32[(($76)>>2)])|0);
           $78=(($77+4)|0);
           $79=((HEAP32[(($78)>>2)])|0);
           $80=$79&1;
           $81=($80|0)==0;
           do {
            if ($81) {
             $83=((__ZNK9b2Contact9IsEnabledEv($77))|0);
             if (!($83)) {
              $stackCount_2=$stackCount_167;
              break;
             }
             $85=((__ZNK9b2Contact10IsTouchingEv($77))|0);
             if (!($85)) {
              $stackCount_2=$stackCount_167;
              break;
             }
             $87=(($77+48)|0);
             $88=((HEAP32[(($87)>>2)])|0);
             $89=(($88+38)|0);
             $90=((HEAP8[($89)])|0);
             $91=(($90<<24)>>24)==0;
             if (!($91)) {
              $stackCount_2=$stackCount_167;
              break;
             }
             $93=(($77+52)|0);
             $94=((HEAP32[(($93)>>2)])|0);
             $95=(($94+38)|0);
             $96=((HEAP8[($95)])|0);
             $97=(($96<<24)>>24)==0;
             if (!($97)) {
              $stackCount_2=$stackCount_167;
              break;
             }
             __ZN8b2Island3AddEP9b2Contact($island,$77);
             $100=((HEAP32[(($78)>>2)])|0);
             $101=$100|1;
             HEAP32[(($78)>>2)]=$101;
             $102=(($ce_068)|0);
             $103=((HEAP32[(($102)>>2)])|0);
             $104=(($103+4)|0);
             $105=((HEAP16[(($104)>>1)])|0);
             $106=$105&1;
             $107=(($106<<16)>>16)==0;
             if (!($107)) {
              $stackCount_2=$stackCount_167;
              break;
             }
             $109=($stackCount_167|0)<($33|0);
             if (!($109)) {
              label = 37;
              break L16;
             }
             $113=((($stackCount_167)+(1))|0);
             $114=(($37+($stackCount_167<<2))|0);
             HEAP32[(($114)>>2)]=$103;
             $115=((HEAP16[(($104)>>1)])|0);
             $116=$115|1;
             HEAP16[(($104)>>1)]=$116;
             $stackCount_2=$113;
            } else {
             $stackCount_2=$stackCount_167;
            }
           } while(0);

           $118=(($ce_068+12)|0);
           $ce_0=((HEAP32[(($118)>>2)])|0);
           $119=($ce_0|0)==0;
           if ($119) {
            $stackCount_1_lcssa=$stackCount_2;
            break;
           } else {
            $stackCount_167=$stackCount_2;$ce_068=$ce_0;
           }
          }
         }

         $120=(($64+108)|0);
         $je_077=((HEAP32[(($120)>>2)])|0);
         $121=($je_077|0)==0;
         if ($121) {
          $stackCount_0_be=$stackCount_1_lcssa;
          break;
         } else {
          $stackCount_378=$stackCount_1_lcssa;$je_079=$je_077;
         }
         while(1) {


          $122=(($je_079+4)|0);
          $123=((HEAP32[(($122)>>2)])|0);
          $124=(($123+60)|0);
          $125=((HEAP8[($124)])|0);
          $126=(($125<<24)>>24)==0;
          do {
           if ($126) {
            $128=(($je_079)|0);
            $129=((HEAP32[(($128)>>2)])|0);
            $130=((__ZNK6b2Body8IsActiveEv($129))|0);
            if (!($130)) {
             $stackCount_4=$stackCount_378;
             break;
            }
            __ZN8b2Island3AddEP7b2Joint($island,$123);
            $133=((HEAP32[(($122)>>2)])|0);
            $134=(($133+60)|0);
            HEAP8[($134)]=1;
            $135=(($129+4)|0);
            $136=((HEAP16[(($135)>>1)])|0);
            $137=$136&1;
            $138=(($137<<16)>>16)==0;
            if (!($138)) {
             $stackCount_4=$stackCount_378;
             break;
            }
            $140=($stackCount_378|0)<($33|0);
            if (!($140)) {
             label = 47;
             break L16;
            }
            $144=((($stackCount_378)+(1))|0);
            $145=(($37+($stackCount_378<<2))|0);
            HEAP32[(($145)>>2)]=$129;
            $146=((HEAP16[(($135)>>1)])|0);
            $147=$146|1;
            HEAP16[(($135)>>1)]=$147;
            $stackCount_4=$144;
           } else {
            $stackCount_4=$stackCount_378;
           }
          } while(0);

          $149=(($je_079+12)|0);
          $je_0=((HEAP32[(($149)>>2)])|0);
          $150=($je_0|0)==0;
          if ($150) {
           $stackCount_0_be=$stackCount_4;
           break;
          } else {
           $stackCount_378=$stackCount_4;$je_079=$je_0;
          }
         }
        }
       } while(0);

       $72=($stackCount_0_be|0)>0;
       if ($72) {
        $stackCount_086=$stackCount_0_be;
       } else {
        break;
       }
      }
      $152=((HEAP8[($40)])|0);
      $153=(($152<<24)>>24)!=0;
      __ZN8b2Island5SolveEP9b2ProfileRK10b2TimeStepRK6b2Vec2b($island,$profile,$step,$39,$153);
      $155=(+(HEAPF32[(($41)>>2)]));
      $156=(+(HEAPF32[(($1)>>2)]));
      $157=($155)+($156);
      HEAPF32[(($1)>>2)]=$157;
      $158=(+(HEAPF32[(($42)>>2)]));
      $159=(+(HEAPF32[(($2)>>2)]));
      $160=($158)+($159);
      HEAPF32[(($2)>>2)]=$160;
      $161=(+(HEAPF32[(($43)>>2)]));
      $162=(+(HEAPF32[(($3)>>2)]));
      $163=($161)+($162);
      HEAPF32[(($3)>>2)]=$163;
      $164=((HEAP32[(($44)>>2)])|0);
      $165=($164|0)>0;
      if ($165) {
       $i_088=0;
      } else {
       break;
      }
      while(1) {

       $166=((HEAP32[(($45)>>2)])|0);
       $167=(($166+($i_088<<2))|0);
       $168=((HEAP32[(($167)>>2)])|0);
       $169=((__ZNK6b2Body7GetTypeEv($168))|0);
       $170=($169|0)==0;
       if ($170) {
        $172=(($168+4)|0);
        $173=((HEAP16[(($172)>>1)])|0);
        $174=$173&-2;
        HEAP16[(($172)>>1)]=$174;
       }
       $176=((($i_088)+(1))|0);
       $177=((HEAP32[(($44)>>2)])|0);
       $178=($176|0)<($177|0);
       if ($178) {
        $i_088=$176;
       } else {
        break;
       }
      }
     }
    } while(0);
    $179=(($seed_094+96)|0);
    $seed_0=((HEAP32[(($179)>>2)])|0);
    $180=($seed_0|0)==0;
    if ($180) {
     break L14;
    } else {
     $seed_094=$seed_0;
    }
   }
   if ((label|0) == 23) {
    ___assert_fail(((3464)|0),((10872)|0),((445)|0),((12272)|0));

   }
   else if ((label|0) == 37) {
    ___assert_fail(((2616)|0),((10872)|0),((495)|0),((12272)|0));

   }
   else if ((label|0) == 47) {
    ___assert_fail(((2616)|0),((10872)|0),((524)|0),((12272)|0));

   }
  }
 } while(0);
 __ZN16b2StackAllocator4FreeEPv($11,$35);
 __ZN7b2TimerC2Ev($timer);
 $183=((HEAP32[(($14)>>2)])|0);
 $184=($183|0)==0;
 if (!($184)) {
  $b4_060=$183;
  while(1) {

   $185=(($b4_060+4)|0);
   $186=((HEAP16[(($185)>>1)])|0);
   $187=$186&1;
   $188=(($187<<16)>>16)==0;
   do {
    if (!($188)) {
     $190=((__ZNK6b2Body7GetTypeEv($b4_060))|0);
     $191=($190|0)==0;
     if ($191) {
      break;
     }
     __ZN6b2Body19SynchronizeFixturesEv($b4_060);
    }
   } while(0);
   $194=((__ZN6b2Body7GetNextEv($b4_060))|0);
   $195=($194|0)==0;
   if ($195) {
    break;
   } else {
    $b4_060=$194;
   }
  }
 }
 __ZN16b2ContactManager15FindNewContactsEv($6);
 $197=(+(__ZNK7b2Timer15GetMillisecondsEv($timer)));
 $199=(($this+103020)|0);
 HEAPF32[(($199)>>2)]=$197;
 __ZN8b2IslandD2Ev($island);
 STACKTOP=sp;return;
}


function __ZN8b2Island5ClearEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+28)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+36)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+32)|0);
 HEAP32[(($3)>>2)]=0;
 return;
}


function __ZN8b2Island3AddEP6b2Body($this,$body){
 $this=($this)|0;
 $body=($body)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,label=0;

 $1=(($this+28)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+40)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)<($4|0);
 if ($5) {
  $8=(($body+8)|0);
  HEAP32[(($8)>>2)]=$2;
  $9=((HEAP32[(($1)>>2)])|0);
  $10=(($this+8)|0);
  $11=((HEAP32[(($10)>>2)])|0);
  $12=(($11+($9<<2))|0);
  HEAP32[(($12)>>2)]=$body;
  $13=((HEAP32[(($1)>>2)])|0);
  $14=((($13)+(1))|0);
  HEAP32[(($1)>>2)]=$14;
  return;
 } else {
  ___assert_fail(((5192)|0),((5672)|0),((54)|0),((12232)|0));

 }
}


function __ZNK9b2Contact9IsEnabledEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&4;
 $4=($3|0)!=0;
 return (($4)|0);
}


function __ZN8b2Island3AddEP9b2Contact($this,$contact){
 $this=($this)|0;
 $contact=($contact)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,label=0;

 $1=(($this+36)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+44)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)<($4|0);
 if ($5) {
  $8=((($2)+(1))|0);
  HEAP32[(($1)>>2)]=$8;
  $9=(($this+12)|0);
  $10=((HEAP32[(($9)>>2)])|0);
  $11=(($10+($2<<2))|0);
  HEAP32[(($11)>>2)]=$contact;
  return;
 } else {
  ___assert_fail(((5392)|0),((5672)|0),((62)|0),((12232)|0));

 }
}


function __ZN8b2Island3AddEP7b2Joint($this,$joint){
 $this=($this)|0;
 $joint=($joint)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,label=0;

 $1=(($this+32)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+48)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)<($4|0);
 if ($5) {
  $8=((($2)+(1))|0);
  HEAP32[(($1)>>2)]=$8;
  $9=(($this+16)|0);
  $10=((HEAP32[(($9)>>2)])|0);
  $11=(($10+($2<<2))|0);
  HEAP32[(($11)>>2)]=$joint;
  return;
 } else {
  ___assert_fail(((5824)|0),((5672)|0),((68)|0),((12232)|0));

 }
}


function __ZN6b2Body7GetNextEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+96)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN7b2World8SolveTOIERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $island=0,$input=0,$output=0,$backup1=0,$backup2=0,$bodies=0,$backup=0,$subStep=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$b_0165=0,$10=0,$b_0166=0,$11=0;
 var $12=0,$13=0,$14=0,$15=0,$b_0=0,$16=0,$17=0,$c_0161=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0;
 var $30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$c_0162=0;
 var $49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$c_0=0,$55=0,$c1_0130=0,$56=0,$c1_0135=0,$minContact_0133=0,$minAlpha_0131=.0,$57=0,$lpad_phi$0=0,$lpad_phi$1=0,$59=0,$60=0,$61=0,$63=0;
 var $64=0,$65=0,$66=0,$68=0,$69=.0,$71=0,$72=0,$73=0,$75=0,$77=0,$78=0,$79=0,$80=0,$81=0,$82=0,$83=0,$84=0,$or_cond=0,$88=0,$phitmp170=0;
 var $not_172=0,$phitmp170_=0,$89=0,$phitmp123=0,$not_=0,$phitmp123_=0,$or_cond119=0,$91=0,$93=0,$phitmp116=0,$95=0,$96=0,$98=0,$99=0,$or_cond120=0,$100=0,$101=0,$102=.0,$103=0,$104=0;
 var $105=.0,$106=0,$109=0,$alpha0_0=.0,$112=0,$116=0,$117=0,$118=0,$120=0,$122=0,$123=0,$125=0,$126=0,$128=.0,$129=.0,$130=.0,$131=.0,$132=.0,$alpha_0=.0,$134=0;
 var $135=0,$136=0,$alpha_1=.0,$138=0,$minAlpha_1=.0,$minContact_1=0,$141=0,$c1_0=0,$142=0,$143=0,$144=0,$or_cond121=0,$146=0,$147=0,$148=0,$149=0,$150=0,$151=0,$152=0,$153=0;
 var $156=0,$158=0,$159=0,$160=0,$161=0,$162=0,$163=0,$164=0,$166=0,$172=0,$173=0,$174=0,$175=0,$176=0,$177=0,$178=0,$179=0,$i_0146=0,$181=0,$182=0;
 var $183=0,$184=0,$185=0,$187=0,$ce_0142=0,$188=0,$ce_0143=0,$189=0,$190=0,$191=0,$193=0,$194=0,$195=0,$197=0,$198=0,$199=0,$200=0,$201=0,$202=0,$204=0;
 var $205=0,$206=0,$207=0,$208=0,$210=0,$212=0,$214=0,$215=0,$216=0,$217=0,$218=0,$220=0,$221=0,$222=0,$223=0,$224=0,$226=0,$227=0,$228=0,$229=0;
 var $230=0,$231=0,$234=0,$236=0,$239=0,$242=0,$243=0,$245=0,$246=0,$247=0,$249=0,$250=0,$251=0,$255=0,$ce_0=0,$256=0,$257=0,$258=0,$260=.0,$261=.0;
 var $262=.0,$263=.0,$264=0,$265=0,$266=0,$267=0,$268=0,$269=0,$270=0,$i6_0154=0,$271=0,$272=0,$273=0,$274=0,$275=0,$276=0,$277=0,$278=0,$279=0,$282=0;
 var $ce8_0148=0,$283=0,$ce8_0149=0,$284=0,$285=0,$286=0,$287=0,$288=0,$289=0,$ce8_0=0,$290=0,$291=0,$292=0,$293=0,$295=0,$296=0,$storemerge=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_loopexit139$0=0;
 var $lpad_loopexit139$1=0,$lpad_loopexit152$0=0,$lpad_loopexit152$1=0,$lpad_loopexit158$0=0,$lpad_loopexit158$1=0,$lpad_nonloopexit159$0=0,$lpad_nonloopexit159$1=0,$299$0=0,$299$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+352)|0;
 $island=((sp)|0);
 $input=(((sp)+(56))|0);
 $output=(((sp)+(192))|0);
 $backup1=(((sp)+(200))|0);
 $backup2=(((sp)+(240))|0);
 $bodies=(((sp)+(280))|0);
 $backup=(((sp)+(288))|0);
 $subStep=(((sp)+(328))|0);
 $1=(($this+68)|0);
 $2=(($this+102872)|0);
 $3=(($this+102944)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener($island,64,32,0,$1,$4);
 $5=(($this+102995)|0);
 $6=((HEAP8[($5)])|0);
 $7=(($6<<24)>>24)==0;
 do {
  if (!($7)) {
   $9=(($this+102952)|0);
   $b_0165=((HEAP32[(($9)>>2)])|0);
   $10=($b_0165|0)==0;
   if (!($10)) {
    $b_0166=$b_0165;
    while(1) {

     $11=(($b_0166+4)|0);
     $12=((HEAP16[(($11)>>1)])|0);
     $13=$12&-2;
     HEAP16[(($11)>>1)]=$13;
     $14=(($b_0166+60)|0);
     HEAPF32[(($14)>>2)]=0.0;
     $15=(($b_0166+96)|0);
     $b_0=((HEAP32[(($15)>>2)])|0);
     $16=($b_0|0)==0;
     if ($16) {
      break;
     } else {
      $b_0166=$b_0;
     }
    }
   }
   $17=(($this+102932)|0);
   $c_0161=((HEAP32[(($17)>>2)])|0);
   $18=($c_0161|0)==0;
   if ($18) {
    break;
   } else {
    $c_0162=$c_0161;
   }
   while(1) {

    $49=(($c_0162+4)|0);
    $50=((HEAP32[(($49)>>2)])|0);
    $51=$50&-34;
    HEAP32[(($49)>>2)]=$51;
    $52=(($c_0162+128)|0);
    HEAP32[(($52)>>2)]=0;
    $53=(($c_0162+132)|0);
    HEAPF32[(($53)>>2)]=1.0;
    $54=(($c_0162+12)|0);
    $c_0=((HEAP32[(($54)>>2)])|0);
    $55=($c_0|0)==0;
    if ($55) {
     break;
    } else {
     $c_0162=$c_0;
    }
   }
  }
 } while(0);
 $19=(($this+102932)|0);
 $20=$backup1;
 $21=$backup2;
 $22=(($bodies)|0);
 $23=(($bodies+4)|0);
 $24=(($island+28)|0);
 $25=(($island+40)|0);
 $26=(($island+36)|0);
 $27=(($island+44)|0);
 $28=$backup;
 $29=(($step)|0);
 $30=(($subStep)|0);
 $31=(($subStep+4)|0);
 $32=(($subStep+8)|0);
 $33=(($subStep+16)|0);
 $34=(($step+12)|0);
 $35=(($subStep+12)|0);
 $36=(($subStep+20)|0);
 $37=(($island+28)|0);
 $38=(($this+102994)|0);
 $39=(($island+8)|0);
 $40=(($input)|0);
 $41=(($input+28)|0);
 $42=(($input+56)|0);
 $43=$42;
 $44=(($input+92)|0);
 $45=$44;
 $46=(($input+128)|0);
 $47=(($output)|0);
 $48=(($output+4)|0);
 L10: while(1) {
  $c1_0130=((HEAP32[(($19)>>2)])|0);
  $56=($c1_0130|0)==0;
  if ($56) {
   $storemerge=1;
   label = 88;
   break;
  } else {
   $minAlpha_0131=1.0;$minContact_0133=0;$c1_0135=$c1_0130;
  }
  while(1) {



   $57=((__ZNK9b2Contact9IsEnabledEv($c1_0135))|0);
   do {
    if ($57) {
     $59=(($c1_0135+128)|0);
     $60=((HEAP32[(($59)>>2)])|0);
     $61=($60|0)>8;
     if ($61) {
      $minContact_1=$minContact_0133;$minAlpha_1=$minAlpha_0131;
      break;
     }
     $63=(($c1_0135+4)|0);
     $64=((HEAP32[(($63)>>2)])|0);
     $65=$64&32;
     $66=($65|0)==0;
     if ($66) {
      $71=((__ZN9b2Contact11GetFixtureAEv($c1_0135))|0);
      $72=((__ZN9b2Contact11GetFixtureBEv($c1_0135))|0);
      $73=((__ZNK9b2Fixture8IsSensorEv($71))|0);
      if ($73) {
       $minContact_1=$minContact_0133;$minAlpha_1=$minAlpha_0131;
       break;
      }
      $75=((__ZNK9b2Fixture8IsSensorEv($72))|0);
      if ($75) {
       $minContact_1=$minContact_0133;$minAlpha_1=$minAlpha_0131;
       break;
      }
      $77=((__ZN9b2Fixture7GetBodyEv($71))|0);
      $78=((__ZN9b2Fixture7GetBodyEv($72))|0);
      $79=(($77)|0);
      $80=((HEAP32[(($79)>>2)])|0);
      $81=(($78)|0);
      $82=((HEAP32[(($81)>>2)])|0);
      $83=($80|0)==2;
      $84=($82|0)==2;
      $or_cond=$83|$84;
      if (!($or_cond)) {
       label = 21;
       break L10;
      }
      $88=((__ZNK6b2Body7IsAwakeEv($77))|0);
      $phitmp170=($80|0)==0;
      $not_172=$88^1;
      $phitmp170_=$phitmp170|$not_172;
      $89=((__ZNK6b2Body7IsAwakeEv($78))|0);
      $phitmp123=($82|0)==0;
      $not_=$89^1;
      $phitmp123_=$phitmp123|$not_;
      $or_cond119=$phitmp170_&$phitmp123_;
      if ($or_cond119) {
       $minContact_1=$minContact_0133;$minAlpha_1=$minAlpha_0131;
       break;
      }
      $91=((__ZNK6b2Body8IsBulletEv($77))|0);
      if ($91) {
       $95=1;
      } else {
       $93=($80|0)!=2;
       $phitmp116=($93&1);
       $95=$phitmp116;
      }

      $96=((__ZNK6b2Body8IsBulletEv($78))|0);
      if (!($96)) {
       $98=($95|0)==0;
       $99=($82|0)==2;
       $or_cond120=$98&$99;
       if ($or_cond120) {
        $minContact_1=$minContact_0133;$minAlpha_1=$minAlpha_0131;
        break;
       }
      }
      $100=(($77+28)|0);
      $101=(($77+60)|0);
      $102=(+(HEAPF32[(($101)>>2)]));
      $103=(($78+28)|0);
      $104=(($78+60)|0);
      $105=(+(HEAPF32[(($104)>>2)]));
      $106=$102<$105;
      do {
       if ($106) {
        __ZN7b2Sweep7AdvanceEf($100,$105);
        $alpha0_0=$105;
       } else {
        $109=$105<$102;
        if (!($109)) {
         $alpha0_0=$102;
         break;
        }
        __ZN7b2Sweep7AdvanceEf($103,$102);
        $alpha0_0=$102;
       }
      } while(0);

      $112=$alpha0_0<(1.0);
      if (!($112)) {
       label = 33;
       break L10;
      }
      $116=((__ZNK9b2Contact14GetChildIndexAEv($c1_0135))|0);
      $117=((__ZNK9b2Contact14GetChildIndexBEv($c1_0135))|0);
      __ZN10b2TOIInputC1Ev($input);
      $118=((__ZN9b2Fixture8GetShapeEv($71))|0);
      __ZN15b2DistanceProxy3SetEPK7b2Shapei($40,$118,$116);
      $120=((__ZN9b2Fixture8GetShapeEv($72))|0);
      __ZN15b2DistanceProxy3SetEPK7b2Shapei($41,$120,$117);
      $122=$100;
      (_memcpy((($43)|0), (($122)|0), 36)|0);
      $123=$103;
      (_memcpy((($45)|0), (($123)|0), 36)|0);
      HEAPF32[(($46)>>2)]=1.0;
      __Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput($output,$input);
      $125=((HEAP32[(($47)>>2)])|0);
      $126=($125|0)==3;
      if ($126) {
       $128=(+(HEAPF32[(($48)>>2)]));
       $129=((1.0))-($alpha0_0);
       $130=($129)*($128);
       $131=($alpha0_0)+($130);
       $132=(+(__Z5b2MinIfET_S0_S0_($131,1.0)));
       $alpha_0=$132;
      } else {
       $alpha_0=1.0;
      }

      $134=(($c1_0135+132)|0);
      HEAPF32[(($134)>>2)]=$alpha_0;
      $135=((HEAP32[(($63)>>2)])|0);
      $136=$135|32;
      HEAP32[(($63)>>2)]=$136;
      $alpha_1=$alpha_0;
     } else {
      $68=(($c1_0135+132)|0);
      $69=(+(HEAPF32[(($68)>>2)]));
      $alpha_1=$69;
     }

     $138=$alpha_1<$minAlpha_0131;
     if (!($138)) {
      $minContact_1=$minContact_0133;$minAlpha_1=$minAlpha_0131;
      break;
     }
     $minContact_1=$c1_0135;$minAlpha_1=$alpha_1;
    } else {
     $minContact_1=$minContact_0133;$minAlpha_1=$minAlpha_0131;
    }
   } while(0);


   $141=(($c1_0135+12)|0);
   $c1_0=((HEAP32[(($141)>>2)])|0);
   $142=($c1_0|0)==0;
   if ($142) {
    break;
   } else {
    $minAlpha_0131=$minAlpha_1;$minContact_0133=$minContact_1;$c1_0135=$c1_0;
   }
  }
  $143=($minContact_1|0)==0;
  $144=$minAlpha_1>(0.9999988079071045);
  $or_cond121=$143|$144;
  if ($or_cond121) {
   $storemerge=1;
   label = 88;
   break;
  }
  $146=((__ZN9b2Contact11GetFixtureAEv($minContact_1))|0);
  $147=((__ZN9b2Contact11GetFixtureBEv($minContact_1))|0);
  $148=((__ZN9b2Fixture7GetBodyEv($146))|0);
  $149=((__ZN9b2Fixture7GetBodyEv($147))|0);
  $150=(($148+28)|0);
  $151=$150;
  (_memcpy((($20)|0), (($151)|0), 36)|0);
  $152=(($149+28)|0);
  $153=$152;
  (_memcpy((($21)|0), (($153)|0), 36)|0);
  __ZN6b2Body7AdvanceEf($148,$minAlpha_1);
  __ZN6b2Body7AdvanceEf($149,$minAlpha_1);
  $156=((HEAP32[(($3)>>2)])|0);
  __ZN9b2Contact6UpdateEP17b2ContactListener($minContact_1,$156);
  $158=(($minContact_1+4)|0);
  $159=((HEAP32[(($158)>>2)])|0);
  $160=$159&-33;
  HEAP32[(($158)>>2)]=$160;
  $161=(($minContact_1+128)|0);
  $162=((HEAP32[(($161)>>2)])|0);
  $163=((($162)+(1))|0);
  HEAP32[(($161)>>2)]=$163;
  $164=((__ZNK9b2Contact9IsEnabledEv($minContact_1))|0);
  do {
   if ($164) {
    $166=((__ZNK9b2Contact10IsTouchingEv($minContact_1))|0);
    if (!($166)) {
     break;
    }
    __ZN6b2Body8SetAwakeEb($148,1);
    __ZN6b2Body8SetAwakeEb($149,1);
    __ZN8b2Island5ClearEv($island);
    __ZN8b2Island3AddEP6b2Body($island,$148);
    __ZN8b2Island3AddEP6b2Body($island,$149);
    __ZN8b2Island3AddEP9b2Contact($island,$minContact_1);
    $172=(($148+4)|0);
    $173=((HEAP16[(($172)>>1)])|0);
    $174=$173|1;
    HEAP16[(($172)>>1)]=$174;
    $175=(($149+4)|0);
    $176=((HEAP16[(($175)>>1)])|0);
    $177=$176|1;
    HEAP16[(($175)>>1)]=$177;
    $178=((HEAP32[(($158)>>2)])|0);
    $179=$178|1;
    HEAP32[(($158)>>2)]=$179;
    HEAP32[(($22)>>2)]=$148;
    HEAP32[(($23)>>2)]=$149;
    $i_0146=0;
    while(1) {

     $181=(($bodies+($i_0146<<2))|0);
     $182=((HEAP32[(($181)>>2)])|0);
     $183=(($182)|0);
     $184=((HEAP32[(($183)>>2)])|0);
     $185=($184|0)==2;
     L58: do {
      if ($185) {
       $187=(($182+112)|0);
       $ce_0142=((HEAP32[(($187)>>2)])|0);
       $188=($ce_0142|0)==0;
       if ($188) {
        break;
       } else {
        $ce_0143=$ce_0142;
       }
       while(1) {

        $189=((HEAP32[(($24)>>2)])|0);
        $190=((HEAP32[(($25)>>2)])|0);
        $191=($189|0)==($190|0);
        if ($191) {
         break L58;
        }
        $193=((HEAP32[(($26)>>2)])|0);
        $194=((HEAP32[(($27)>>2)])|0);
        $195=($193|0)==($194|0);
        if ($195) {
         break L58;
        }
        $197=(($ce_0143+4)|0);
        $198=((HEAP32[(($197)>>2)])|0);
        $199=(($198+4)|0);
        $200=((HEAP32[(($199)>>2)])|0);
        $201=$200&1;
        $202=($201|0)==0;
        L64: do {
         if ($202) {
          $204=(($ce_0143)|0);
          $205=((HEAP32[(($204)>>2)])|0);
          $206=(($205)|0);
          $207=((HEAP32[(($206)>>2)])|0);
          $208=($207|0)==2;
          do {
           if ($208) {
            $210=((__ZNK6b2Body8IsBulletEv($182))|0);
            if ($210) {
             break;
            }
            $212=((__ZNK6b2Body8IsBulletEv($205))|0);
            if (!($212)) {
             break L64;
            }
           }
          } while(0);
          $214=(($198+48)|0);
          $215=((HEAP32[(($214)>>2)])|0);
          $216=(($215+38)|0);
          $217=((HEAP8[($216)])|0);
          $218=(($217<<24)>>24)==0;
          if (!($218)) {
           break;
          }
          $220=(($198+52)|0);
          $221=((HEAP32[(($220)>>2)])|0);
          $222=(($221+38)|0);
          $223=((HEAP8[($222)])|0);
          $224=(($223<<24)>>24)==0;
          if (!($224)) {
           break;
          }
          $226=(($205+28)|0);
          $227=$226;
          (_memcpy((($28)|0), (($227)|0), 36)|0);
          $228=(($205+4)|0);
          $229=((HEAP16[(($228)>>1)])|0);
          $230=$229&1;
          $231=(($230<<16)>>16)==0;
          if ($231) {
           __ZN6b2Body7AdvanceEf($205,$minAlpha_1);
          }
          $234=((HEAP32[(($3)>>2)])|0);
          __ZN9b2Contact6UpdateEP17b2ContactListener($198,$234);
          $236=((__ZNK9b2Contact9IsEnabledEv($198))|0);
          if (!($236)) {
           (_memcpy((($227)|0), (($28)|0), 36)|0);
           __ZN6b2Body20SynchronizeTransformEv($205);
           break;
          }
          $239=((__ZNK9b2Contact10IsTouchingEv($198))|0);
          if (!($239)) {
           (_memcpy((($227)|0), (($28)|0), 36)|0);
           __ZN6b2Body20SynchronizeTransformEv($205);
           break;
          }
          $242=((HEAP32[(($199)>>2)])|0);
          $243=$242|1;
          HEAP32[(($199)>>2)]=$243;
          __ZN8b2Island3AddEP9b2Contact($island,$198);
          $245=((HEAP16[(($228)>>1)])|0);
          $246=$245&1;
          $247=(($246<<16)>>16)==0;
          if (!($247)) {
           break;
          }
          $249=$245|1;
          HEAP16[(($228)>>1)]=$249;
          $250=((HEAP32[(($206)>>2)])|0);
          $251=($250|0)==0;
          if (!($251)) {
           __ZN6b2Body8SetAwakeEb($205,1);
          }
          __ZN8b2Island3AddEP6b2Body($island,$205);
         }
        } while(0);
        $255=(($ce_0143+12)|0);
        $ce_0=((HEAP32[(($255)>>2)])|0);
        $256=($ce_0|0)==0;
        if ($256) {
         break;
        } else {
         $ce_0143=$ce_0;
        }
       }
      }
     } while(0);
     $257=((($i_0146)+(1))|0);
     $258=($257|0)<2;
     if ($258) {
      $i_0146=$257;
     } else {
      break;
     }
    }
    $260=((1.0))-($minAlpha_1);
    $261=(+(HEAPF32[(($29)>>2)]));
    $262=($260)*($261);
    HEAPF32[(($30)>>2)]=$262;
    $263=((1.0))/($262);
    HEAPF32[(($31)>>2)]=$263;
    HEAPF32[(($32)>>2)]=1.0;
    HEAP32[(($33)>>2)]=20;
    $264=((HEAP32[(($34)>>2)])|0);
    HEAP32[(($35)>>2)]=$264;
    HEAP8[($36)]=0;
    $265=(($148+8)|0);
    $266=((HEAP32[(($265)>>2)])|0);
    $267=(($149+8)|0);
    $268=((HEAP32[(($267)>>2)])|0);
    __ZN8b2Island8SolveTOIERK10b2TimeStepii($island,$subStep,$266,$268);
    $269=((HEAP32[(($37)>>2)])|0);
    $270=($269|0)>0;
    if ($270) {
     $i6_0154=0;
     while(1) {

      $271=((HEAP32[(($39)>>2)])|0);
      $272=(($271+($i6_0154<<2))|0);
      $273=((HEAP32[(($272)>>2)])|0);
      $274=(($273+4)|0);
      $275=((HEAP16[(($274)>>1)])|0);
      $276=$275&-2;
      HEAP16[(($274)>>1)]=$276;
      $277=(($273)|0);
      $278=((HEAP32[(($277)>>2)])|0);
      $279=($278|0)==2;
      do {
       if ($279) {
        __ZN6b2Body19SynchronizeFixturesEv($273);
        $282=(($273+112)|0);
        $ce8_0148=((HEAP32[(($282)>>2)])|0);
        $283=($ce8_0148|0)==0;
        if ($283) {
         break;
        } else {
         $ce8_0149=$ce8_0148;
        }
        while(1) {

         $284=(($ce8_0149+4)|0);
         $285=((HEAP32[(($284)>>2)])|0);
         $286=(($285+4)|0);
         $287=((HEAP32[(($286)>>2)])|0);
         $288=$287&-34;
         HEAP32[(($286)>>2)]=$288;
         $289=(($ce8_0149+12)|0);
         $ce8_0=((HEAP32[(($289)>>2)])|0);
         $290=($ce8_0|0)==0;
         if ($290) {
          break;
         } else {
          $ce8_0149=$ce8_0;
         }
        }
       }
      } while(0);
      $291=((($i6_0154)+(1))|0);
      $292=((HEAP32[(($37)>>2)])|0);
      $293=($291|0)<($292|0);
      if ($293) {
       $i6_0154=$291;
      } else {
       break;
      }
     }
    }
    __ZN16b2ContactManager15FindNewContactsEv($2);
    $295=((HEAP8[($38)])|0);
    $296=(($295<<24)>>24)==0;
    if ($296) {
     continue L10;
    } else {
     $storemerge=0;
     label = 88;
     break L10;
    }
   }
  } while(0);
  __ZN9b2Contact10SetEnabledEb($minContact_1,0);
  (_memcpy((($151)|0), (($20)|0), 36)|0);
  (_memcpy((($153)|0), (($21)|0), 36)|0);
  __ZN6b2Body20SynchronizeTransformEv($148);
  __ZN6b2Body20SynchronizeTransformEv($149);
 }
 if ((label|0) == 21) {
  ___assert_fail(((1904)|0),((10872)|0),((641)|0),((12256)|0));

 }
 else if ((label|0) == 33) {
  ___assert_fail(((1336)|0),((10872)|0),((676)|0),((12256)|0));

 }
 else if ((label|0) == 88) {

  HEAP8[($5)]=$storemerge;
  __ZN8b2IslandD2Ev($island);
  STACKTOP=sp;return;
 }
}


function __ZNK9b2Fixture8IsSensorEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+38)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function __ZNK6b2Body8IsBulletEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 $3=$2&8;
 $4=(($3<<16)>>16)!=0;
 return (($4)|0);
}


function __ZN7b2Sweep7AdvanceEf($this,$alpha){
 $this=($this)|0;
 $alpha=+($alpha);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$tmpcast=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=0,$15=0,$ld$0$0=0,$16$0=0,$ld$1$1=0,$16$1=0,$st$2$0=0,$st$3$1=0;
 var $17=0,$18=.0,$19=.0,$20=0,$21=.0,$22=.0,$23=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(((sp)+(16))|0);
 $4=(($this+32)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=$5<(1.0);
 if ($6) {
  $tmpcast=$1;
  $9=($alpha)-($5);
  $10=((1.0))-($5);
  $11=($9)/($10);
  $12=(($this+8)|0);
  $13=((1.0))-($11);
  __ZmlfRK6b2Vec2($2,$13,$12);
  $14=(($this+16)|0);
  __ZmlfRK6b2Vec2($3,$11,$14);
  __ZplRK6b2Vec2S1_($tmpcast,$2,$3);
  $15=$12;
  $ld$0$0=(($1)|0);
  $16$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($1+4)|0);
  $16$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($15)|0);
  HEAP32[(($st$2$0)>>2)]=$16$0;
  $st$3$1=(($15+4)|0);
  HEAP32[(($st$3$1)>>2)]=$16$1;
  $17=(($this+24)|0);
  $18=(+(HEAPF32[(($17)>>2)]));
  $19=($13)*($18);
  $20=(($this+28)|0);
  $21=(+(HEAPF32[(($20)>>2)]));
  $22=($11)*($21);
  $23=($19)+($22);
  HEAPF32[(($17)>>2)]=$23;
  HEAPF32[(($4)>>2)]=$alpha;
  STACKTOP=sp;return;
 } else {
  ___assert_fail(((1336)|0),((6008)|0),((723)|0),((12344)|0));

 }
}


function __ZN10b2TOIInputC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN10b2TOIInputC2Ev($this);
 return;
}


function __ZN9b2Fixture8GetShapeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN6b2Body7AdvanceEf($this,$alpha){
 $this=($this)|0;
 $alpha=+($alpha);
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=.0,$11=0,$12=0,$13=0,$14=0;
 var $15=0,$ld$4$0=0,$16$0=0,$ld$5$1=0,$16$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=(($this+28)|0);
 __ZN7b2Sweep7AdvanceEf($3,$alpha);
 $4=(($this+44)|0);
 $5=(($this+36)|0);
 $6=$5;
 $7=$4;
 $ld$0$0=(($6)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($6+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($this+52)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=(($this+56)|0);
 HEAPF32[(($11)>>2)]=$10;
 $12=(($this+20)|0);
 __ZN5b2Rot3SetEf($12,$10);
 $13=(($this+12)|0);
 $14=(($3)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($2,$12,$14);
 __ZmiRK6b2Vec2S1_($tmpcast,$4,$2);
 $15=$13;
 $ld$4$0=(($1)|0);
 $16$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($1+4)|0);
 $16$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($15)|0);
 HEAP32[(($st$6$0)>>2)]=$16$0;
 $st$7$1=(($15+4)|0);
 HEAP32[(($st$7$1)>>2)]=$16$1;
 STACKTOP=sp;return;
}


function __ZN9b2Contact10SetEnabledEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$3=0,$4=0,$storemerge=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&-5;
 $4=$2|4;
 $storemerge=($flag?$4:$3);
 HEAP32[(($1)>>2)]=$storemerge;
 return;
}


function __ZN7b2World4StepEfii($this,$dt,$velocityIterations,$positionIterations){
 $this=($this)|0;
 $dt=+($dt);
 $velocityIterations=($velocityIterations)|0;
 $positionIterations=($positionIterations)|0;
 var $stepTimer=0,$step=0,$timer=0,$timer1=0,$timer2=0,$1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=.0,$18=0;
 var $20=0,$22=0,$23=.0,$24=.0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=.0,$31=0,$32=0,$33=0,$34=0,$36=.0,$37=0,$39=.0,$40=0,$42=0,$43=0;
 var $44=0,$46=.0,$47=0,$49=.0,$50=0,$_pr=.0,$52=.0,$53=0,$55=0,$56=.0,$58=0,$59=0,$60=0,$63=0,$64=0,$65=.0,$66=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $stepTimer=((sp)|0);
 $step=(((sp)+(8))|0);
 $timer=(((sp)+(32))|0);
 $timer1=(((sp)+(40))|0);
 $timer2=(((sp)+(48))|0);
 __ZN7b2TimerC2Ev($stepTimer);
 $1=(($this+102868)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&1;
 $4=($3|0)==0;
 if (!($4)) {
  $6=(($this+102872)|0);
  __ZN16b2ContactManager15FindNewContactsEv($6);
  $7=((HEAP32[(($1)>>2)])|0);
  $8=$7&-2;
  HEAP32[(($1)>>2)]=$8;
 }
 $10=((HEAP32[(($1)>>2)])|0);
 $11=$10|2;
 HEAP32[(($1)>>2)]=$11;
 $12=(($step)|0);
 HEAPF32[(($12)>>2)]=$dt;
 $13=(($step+12)|0);
 HEAP32[(($13)>>2)]=$velocityIterations;
 $14=(($step+16)|0);
 HEAP32[(($14)>>2)]=$positionIterations;
 $15=$dt>(0.0);
 if ($15) {
  $17=((1.0))/($dt);
  $18=(($step+4)|0);
  HEAPF32[(($18)>>2)]=$17;
 } else {
  $20=(($step+4)|0);
  HEAPF32[(($20)>>2)]=0.0;
 }
 $22=(($this+102988)|0);
 $23=(+(HEAPF32[(($22)>>2)]));
 $24=($23)*($dt);
 $25=(($step+8)|0);
 HEAPF32[(($25)>>2)]=$24;
 $26=(($this+102992)|0);
 $27=((HEAP8[($26)])|0);
 $28=(($step+20)|0);
 HEAP8[($28)]=$27;
 __ZN7b2TimerC2Ev($timer);
 $29=(($this+102872)|0);
 __ZN16b2ContactManager7CollideEv($29);
 $30=(+(__ZNK7b2Timer15GetMillisecondsEv($timer)));
 $31=(($this+103000)|0);
 HEAPF32[(($31)>>2)]=$30;
 $32=(($this+102995)|0);
 $33=((HEAP8[($32)])|0);
 $34=(($33<<24)>>24)==0;
 do {
  if (!($34)) {
   $36=(+(HEAPF32[(($12)>>2)]));
   $37=$36>(0.0);
   if (!($37)) {
    break;
   }
   __ZN7b2TimerC2Ev($timer1);
   __ZN7b2World5SolveERK10b2TimeStep($this,$step);
   $39=(+(__ZNK7b2Timer15GetMillisecondsEv($timer1)));
   $40=(($this+103004)|0);
   HEAPF32[(($40)>>2)]=$39;
  }
 } while(0);
 $42=(($this+102993)|0);
 $43=((HEAP8[($42)])|0);
 $44=(($43<<24)>>24)==0;
 do {
  if ($44) {
   label = 12;
  } else {
   $46=(+(HEAPF32[(($12)>>2)]));
   $47=$46>(0.0);
   if (!($47)) {
    $52=$46;
    break;
   }
   __ZN7b2TimerC2Ev($timer2);
   __ZN7b2World8SolveTOIERK10b2TimeStep($this,$step);
   $49=(+(__ZNK7b2Timer15GetMillisecondsEv($timer2)));
   $50=(($this+103024)|0);
   HEAPF32[(($50)>>2)]=$49;
   label = 12;
  }
 } while(0);
 if ((label|0) == 12) {
  $_pr=(+(HEAPF32[(($12)>>2)]));
  $52=$_pr;
 }

 $53=$52>(0.0);
 if ($53) {
  $55=(($step+4)|0);
  $56=(+(HEAPF32[(($55)>>2)]));
  HEAPF32[(($22)>>2)]=$56;
 }
 $58=((HEAP32[(($1)>>2)])|0);
 $59=$58&4;
 $60=($59|0)==0;
 if ($60) {
  $63=((HEAP32[(($1)>>2)])|0);
  $64=$63&-3;
  HEAP32[(($1)>>2)]=$64;
  $65=(+(__ZNK7b2Timer15GetMillisecondsEv($stepTimer)));
  $66=(($this+102996)|0);
  HEAPF32[(($66)>>2)]=$65;
  STACKTOP=sp;return;
 }
 __ZN7b2World11ClearForcesEv($this);
 $63=((HEAP32[(($1)>>2)])|0);
 $64=$63&-3;
 HEAP32[(($1)>>2)]=$64;
 $65=(+(__ZNK7b2Timer15GetMillisecondsEv($stepTimer)));
 $66=(($this+102996)|0);
 HEAPF32[(($66)>>2)]=$65;
 STACKTOP=sp;return;
}


function __ZN7b2World11ClearForcesEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$body_04=0,$4=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this+102952)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  return;
 } else {
  $body_04=$2;
 }
 while(1) {

  $4=(($body_04+76)|0);
  __ZN6b2Vec27SetZeroEv($4);
  $5=(($body_04+84)|0);
  HEAPF32[(($5)>>2)]=0.0;
  $6=((__ZN6b2Body7GetNextEv($body_04))|0);
  $7=($6|0)==0;
  if ($7) {
   break;
  } else {
   $body_04=$6;
  }
 }
 return;
}


function __ZNK7b2World9QueryAABBEP15b2QueryCallbackRK6b2AABB($this,$callback,$aabb){
 $this=($this)|0;
 $callback=($callback)|0;
 $aabb=($aabb)|0;
 var $wrapper=0,$1=0,$2=0,$3=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $wrapper=((sp)|0);
 $1=(($this+102872)|0);
 $2=(($wrapper)|0);
 HEAP32[(($2)>>2)]=$1;
 $3=(($wrapper+4)|0);
 HEAP32[(($3)>>2)]=$callback;
 __ZNK12b2BroadPhase5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB($1,$wrapper,$aabb);
 STACKTOP=sp;return;
}


function __ZNK12b2BroadPhase5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB($this,$callback,$aabb){
 $this=($this)|0;
 $callback=($callback)|0;
 $aabb=($aabb)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZNK13b2DynamicTree5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB($1,$callback,$aabb);
 return;
}


function __ZNK7b2World7RayCastEP17b2RayCastCallbackRK6b2Vec2S4_($this,$callback,$point1,$point2){
 $this=($this)|0;
 $callback=($callback)|0;
 $point1=($point1)|0;
 $point2=($point2)|0;
 var $wrapper=0,$input=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$ld$0$0=0,$7$0=0,$ld$1$1=0,$7$1=0,$st$2$0=0,$st$3$1=0,$8=0,$9=0,$10=0,$ld$4$0=0,$11$0=0,$ld$5$1=0;
 var $11$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $wrapper=((sp)|0);
 $input=(((sp)+(8))|0);
 $1=(($this+102872)|0);
 $2=(($wrapper)|0);
 HEAP32[(($2)>>2)]=$1;
 $3=(($wrapper+4)|0);
 HEAP32[(($3)>>2)]=$callback;
 $4=(($input+16)|0);
 HEAPF32[(($4)>>2)]=1.0;
 $5=$point1;
 $6=$input;
 $ld$0$0=(($5)|0);
 $7$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($5+4)|0);
 $7$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($6)|0);
 HEAP32[(($st$2$0)>>2)]=$7$0;
 $st$3$1=(($6+4)|0);
 HEAP32[(($st$3$1)>>2)]=$7$1;
 $8=(($input+8)|0);
 $9=$point2;
 $10=$8;
 $ld$4$0=(($9)|0);
 $11$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($9+4)|0);
 $11$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($10)|0);
 HEAP32[(($st$6$0)>>2)]=$11$0;
 $st$7$1=(($10+4)|0);
 HEAP32[(($st$7$1)>>2)]=$11$1;
 __ZNK12b2BroadPhase7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput($1,$wrapper,$input);
 STACKTOP=sp;return;
}


function __ZNK12b2BroadPhase7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput($this,$callback,$input){
 $this=($this)|0;
 $callback=($callback)|0;
 $input=($input)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput($1,$callback,$input);
 return;
}


function __ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color($this,$fixture,$xf,$color){
 $this=($this)|0;
 $fixture=($fixture)|0;
 $xf=($xf)|0;
 $color=($color)|0;
 var $center=0,$axis=0,$1=0,$v1=0,$v2=0,$v11=0,$tmpcast30=0,$v22=0,$tmpcast31=0,$vertices3=0,$2=0,$tmpcast=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=.0,$10=0,$11=0;
 var $12=0,$13=0,$14=0,$15=0,$16=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$30=0,$31=0,$32=0,$33=0;
 var $34=0,$35=0,$36=0,$37=0,$i_032=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$ld$0$0=0,$50$0=0,$ld$1$1=0,$50$1=0;
 var $st$2$0=0,$st$3$1=0,$51=0,$52=0,$54=0,$55=0,$56=0,$57=0,$59=0,$60=0,$61=0,$62=0,$i4_033=0,$64=0,$65=0,$66=0,$ld$4$0=0,$67$0=0,$ld$5$1=0,$67$1=0;
 var $st$6$0=0,$st$7$1=0,$68=0,$69=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $center=((sp)|0);
 $axis=(((sp)+(8))|0);
 $1=(((sp)+(16))|0);
 $v1=(((sp)+(24))|0);
 $v2=(((sp)+(32))|0);
 $v11=(((sp)+(40))|0);
 $tmpcast30=$v11;
 $v22=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast31=$v22;
 $vertices3=STACKTOP;STACKTOP = (STACKTOP + 64)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$2;
 $3=((__ZNK9b2Fixture7GetTypeEv($fixture))|0);
 if (((($3|0))|0)==((0)|0)) {
  $5=((__ZN9b2Fixture8GetShapeEv($fixture))|0);
  $6=(($5+12)|0);
  $7=$6;
  __Z5b2MulRK11b2TransformRK6b2Vec2($center,$xf,$7);
  $8=(($5+8)|0);
  $9=(+(HEAPF32[(($8)>>2)]));
  $10=(($xf+8)|0);
  __ZN6b2Vec2C1Eff($1,1.0,0.0);
  __Z5b2MulRK5b2RotRK6b2Vec2($axis,$10,$1);
  $11=(($this+102984)|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=$12;
  $14=((HEAP32[(($13)>>2)])|0);
  $15=(($14+20)|0);
  $16=((HEAP32[(($15)>>2)])|0);
  FUNCTION_TABLE_viifii[($16)&63]($12,$center,$9,$axis,$color);
  STACKTOP=sp;return;
 } else if (((($3|0))|0)==((1)|0)) {
  $18=((__ZN9b2Fixture8GetShapeEv($fixture))|0);
  $19=(($18+12)|0);
  $20=$19;
  __Z5b2MulRK11b2TransformRK6b2Vec2($v1,$xf,$20);
  $21=(($18+20)|0);
  $22=$21;
  __Z5b2MulRK11b2TransformRK6b2Vec2($v2,$xf,$22);
  $23=(($this+102984)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $25=$24;
  $26=((HEAP32[(($25)>>2)])|0);
  $27=(($26+24)|0);
  $28=((HEAP32[(($27)>>2)])|0);
  FUNCTION_TABLE_viiii[($28)&127]($24,$v1,$v2,$color);
  STACKTOP=sp;return;
 } else if (((($3|0))|0)==((3)|0)) {
  $30=((__ZN9b2Fixture8GetShapeEv($fixture))|0);
  $31=(($30+16)|0);
  $32=((HEAP32[(($31)>>2)])|0);
  $33=(($30+12)|0);
  $34=$33;
  $35=((HEAP32[(($34)>>2)])|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast30,$xf,$35);
  $36=($32|0)>1;
  if (!($36)) {
   STACKTOP=sp;return;
  }
  $37=(($this+102984)|0);
  $i_032=1;
  while(1) {

   $39=(($35+($i_032<<3))|0);
   __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast31,$xf,$39);
   $40=((HEAP32[(($37)>>2)])|0);
   $41=$40;
   $42=((HEAP32[(($41)>>2)])|0);
   $43=(($42+24)|0);
   $44=((HEAP32[(($43)>>2)])|0);
   FUNCTION_TABLE_viiii[($44)&127]($40,$tmpcast30,$tmpcast31,$color);
   $45=((HEAP32[(($37)>>2)])|0);
   $46=$45;
   $47=((HEAP32[(($46)>>2)])|0);
   $48=(($47+16)|0);
   $49=((HEAP32[(($48)>>2)])|0);
   FUNCTION_TABLE_viifi[($49)&63]($45,$tmpcast30,0.05000000074505806,$color);
   $ld$0$0=(($v22)|0);
   $50$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($v22+4)|0);
   $50$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($v11)|0);
   HEAP32[(($st$2$0)>>2)]=$50$0;
   $st$3$1=(($v11+4)|0);
   HEAP32[(($st$3$1)>>2)]=$50$1;
   $51=((($i_032)+(1))|0);
   $52=($51|0)<($32|0);
   if ($52) {
    $i_032=$51;
   } else {
    break;
   }
  }
  STACKTOP=sp;return;
 } else if (((($3|0))|0)==((2)|0)) {
  $54=((__ZN9b2Fixture8GetShapeEv($fixture))|0);
  $55=(($54+148)|0);
  $56=((HEAP32[(($55)>>2)])|0);
  $57=($56|0)<9;
  if (!($57)) {
   ___assert_fail(((792)|0),((10872)|0),((1077)|0),((12240)|0));

  }
  $59=(($vertices3)|0);
  $60=($56|0)>0;
  if ($60) {
   $61=(($54+20)|0);
   $62=$61;
   $i4_033=0;
   while(1) {

    $64=(($vertices3+($i4_033<<3))|0);
    $65=(($62+($i4_033<<3))|0);
    __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast,$xf,$65);
    $66=$64;
    $ld$4$0=(($2)|0);
    $67$0=((HEAP32[(($ld$4$0)>>2)])|0);
    $ld$5$1=(($2+4)|0);
    $67$1=((HEAP32[(($ld$5$1)>>2)])|0);
    $st$6$0=(($66)|0);
    HEAP32[(($st$6$0)>>2)]=$67$0;
    $st$7$1=(($66+4)|0);
    HEAP32[(($st$7$1)>>2)]=$67$1;
    $68=((($i4_033)+(1))|0);
    $69=($68|0)<($56|0);
    if ($69) {
     $i4_033=$68;
    } else {
     break;
    }
   }
  }
  $70=(($this+102984)|0);
  $71=((HEAP32[(($70)>>2)])|0);
  $72=$71;
  $73=((HEAP32[(($72)>>2)])|0);
  $74=(($73+12)|0);
  $75=((HEAP32[(($74)>>2)])|0);
  FUNCTION_TABLE_viiii[($75)&127]($71,$59,$56,$color);
  STACKTOP=sp;return;
 } else {
  STACKTOP=sp;return;
 }
}


function __ZNK9b2Fixture7GetTypeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK7b2Shape7GetTypeEv($2))|0);
 return (($3)|0);
}


function __ZN7b2World9DrawJointEP7b2Joint($this,$joint){
 $this=($this)|0;
 $joint=($joint)|0;
 var $x1=0,$x2=0,$p1=0,$p2=0,$color=0,$s1=0,$s2=0,$1=0,$2=0,$3=0,$4=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$st$2$0=0,$st$3$1=0,$7=0,$ld$4$0=0;
 var $8$0=0,$ld$5$1=0,$8$1=0,$st$6$0=0,$st$7$1=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$24=0,$25=0;
 var $26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$tmpcast8=0,$tmpcast=0,$42=0,$43=0,$44=0;
 var $45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $x1=((sp)|0);
 $x2=(((sp)+(8))|0);
 $p1=(((sp)+(16))|0);
 $p2=(((sp)+(24))|0);
 $color=(((sp)+(32))|0);
 $s1=(((sp)+(48))|0);
 $s2=(((sp)+(56))|0);
 $1=((__ZN7b2Joint8GetBodyAEv($joint))|0);
 $2=((__ZN7b2Joint8GetBodyBEv($joint))|0);
 $3=((__ZNK6b2Body12GetTransformEv($1))|0);
 $4=((__ZNK6b2Body12GetTransformEv($2))|0);
 $5=$3;
 $ld$0$0=(($5)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($5+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($x1)|0);
 HEAP32[(($st$2$0)>>2)]=$6$0;
 $st$3$1=(($x1+4)|0);
 HEAP32[(($st$3$1)>>2)]=$6$1;
 $7=$4;
 $ld$4$0=(($7)|0);
 $8$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($7+4)|0);
 $8$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($x2)|0);
 HEAP32[(($st$6$0)>>2)]=$8$0;
 $st$7$1=(($x2+4)|0);
 HEAP32[(($st$7$1)>>2)]=$8$1;
 $9=$joint;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((HEAP32[(($10)>>2)])|0);
 FUNCTION_TABLE_vii[($11)&255]($p1,$joint);
 $12=((HEAP32[(($9)>>2)])|0);
 $13=(($12+4)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 FUNCTION_TABLE_vii[($14)&255]($p2,$joint);
 __ZN7b2ColorC1Efff($color,0.5,0.800000011920929,0.800000011920929);
 $15=((__ZNK7b2Joint7GetTypeEv($joint))|0);
 if (((($15|0))|0)==((5)|0)) {
  STACKTOP=sp;return;
 } else if (((($15|0))|0)==((4)|0)) {
  $24=$joint;
  __ZNK13b2PulleyJoint16GetGroundAnchorAEv($s1,$24);
  __ZNK13b2PulleyJoint16GetGroundAnchorBEv($s2,$24);
  $25=(($this+102984)|0);
  $26=((HEAP32[(($25)>>2)])|0);
  $27=$26;
  $28=((HEAP32[(($27)>>2)])|0);
  $29=(($28+24)|0);
  $30=((HEAP32[(($29)>>2)])|0);
  FUNCTION_TABLE_viiii[($30)&127]($26,$s1,$p1,$color);
  $31=((HEAP32[(($25)>>2)])|0);
  $32=$31;
  $33=((HEAP32[(($32)>>2)])|0);
  $34=(($33+24)|0);
  $35=((HEAP32[(($34)>>2)])|0);
  FUNCTION_TABLE_viiii[($35)&127]($31,$s2,$p2,$color);
  $36=((HEAP32[(($25)>>2)])|0);
  $37=$36;
  $38=((HEAP32[(($37)>>2)])|0);
  $39=(($38+24)|0);
  $40=((HEAP32[(($39)>>2)])|0);
  FUNCTION_TABLE_viiii[($40)&127]($36,$s1,$s2,$color);
  STACKTOP=sp;return;
 } else if (((($15|0))|0)==((3)|0)) {
  $17=(($this+102984)|0);
  $18=((HEAP32[(($17)>>2)])|0);
  $19=$18;
  $20=((HEAP32[(($19)>>2)])|0);
  $21=(($20+24)|0);
  $22=((HEAP32[(($21)>>2)])|0);
  FUNCTION_TABLE_viiii[($22)&127]($18,$p1,$p2,$color);
  STACKTOP=sp;return;
 } else {
  $tmpcast8=$x2;
  $tmpcast=$x1;
  $42=(($this+102984)|0);
  $43=((HEAP32[(($42)>>2)])|0);
  $44=$43;
  $45=((HEAP32[(($44)>>2)])|0);
  $46=(($45+24)|0);
  $47=((HEAP32[(($46)>>2)])|0);
  FUNCTION_TABLE_viiii[($47)&127]($43,$tmpcast,$p1,$color);
  $48=((HEAP32[(($42)>>2)])|0);
  $49=$48;
  $50=((HEAP32[(($49)>>2)])|0);
  $51=(($50+24)|0);
  $52=((HEAP32[(($51)>>2)])|0);
  FUNCTION_TABLE_viiii[($52)&127]($48,$p1,$p2,$color);
  $53=((HEAP32[(($42)>>2)])|0);
  $54=$53;
  $55=((HEAP32[(($54)>>2)])|0);
  $56=(($55+24)|0);
  $57=((HEAP32[(($56)>>2)])|0);
  FUNCTION_TABLE_viiii[($57)&127]($53,$tmpcast8,$p2,$color);
  STACKTOP=sp;return;
 }
}


function __ZN7b2Joint8GetBodyAEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN7b2Joint8GetBodyBEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZNK6b2Body12GetTransformEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 return (($1)|0);
}


function __ZN7b2ColorC1Efff($this,$r,$g,$b){
 $this=($this)|0;
 $r=+($r);
 $g=+($g);
 $b=+($b);
 var label=0;

 __ZN7b2ColorC2Efff($this,$r,$g,$b);
 return;
}


function __ZNK7b2Joint7GetTypeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN7b2World13DrawDebugDataEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$color=0,$color1=0,$vs=0,$xf539=0,$xf539_sub=0,$tmpcast=0,$6=0,$7=0,$8=0,$10=0,$11=0,$12=0,$14=0,$15=0,$16=0;
 var $b_062=0,$17=0,$18=0,$19=0,$f_057=0,$20=0,$23=0,$27=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$38=0,$39=0,$40=0,$j_054=0,$41=0,$42=0;
 var $43=0,$44=0,$46=0,$47=0,$48=0,$c_050=0,$49=0,$50=0,$51=0,$52=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$b2_046=0,$63=0;
 var $65=0,$66=0,$f3_044=0,$67=0,$68=0,$69=0,$70=0,$i_041=0,$72=0,$73=0,$74=0,$75=0,$aabb_sroa_0_0__idx=0,$aabb_sroa_0_0_copyload=.0,$aabb_sroa_1_4__idx5=0,$aabb_sroa_1_4_copyload=.0,$aabb_sroa_2_8__idx7=0,$aabb_sroa_2_8_copyload=.0,$aabb_sroa_3_12__idx9=0,$aabb_sroa_3_12_copyload=.0;
 var $76=0,$77=0,$78=0,$79=0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$89=0,$91=0,$92=0,$93=0,$94=0,$b4_040=0,$96=0;
 var $97=0,$98=0,$99=0,$ld$0$0=0,$100$0=0,$ld$1$1=0,$100$1=0,$st$2$0=0,$st$3$1=0,$101=0,$102=0,$103=0,$104=0,$105=0,$106=0,$107=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+160)|0;
 $1=((sp)|0);
 $2=(((sp)+(16))|0);
 $3=(((sp)+(32))|0);
 $4=(((sp)+(48))|0);
 $5=(((sp)+(64))|0);
 $color=(((sp)+(80))|0);
 $color1=(((sp)+(96))|0);
 $vs=(((sp)+(112))|0);
 $xf539=(((sp)+(144))|0);
 $xf539_sub=(($xf539)|0);
 $tmpcast=$xf539;
 $6=(($this+102984)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)==0;
 if ($8) {
  STACKTOP=sp;return;
 }
 $10=((__ZNK6b2Draw8GetFlagsEv($7))|0);
 $11=$10&1;
 $12=($11|0)==0;
 do {
  if (!($12)) {
   $14=(($this+102952)|0);
   $15=((HEAP32[(($14)>>2)])|0);
   $16=($15|0)==0;
   if ($16) {
    break;
   } else {
    $b_062=$15;
   }
   while(1) {

    $17=((__ZNK6b2Body12GetTransformEv($b_062))|0);
    $18=((__ZN6b2Body14GetFixtureListEv($b_062))|0);
    $19=($18|0)==0;
    if (!($19)) {
     $f_057=$18;
     while(1) {

      $20=((__ZNK6b2Body8IsActiveEv($b_062))|0);
      do {
       if ($20) {
        $23=((__ZNK6b2Body7GetTypeEv($b_062))|0);
        if (((($23|0))|0)==((0)|0)) {
         __ZN7b2ColorC1Efff($2,0.5,0.8999999761581421,0.5);
         __ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color($this,$f_057,$17,$2);
         break;
        } else if (((($23|0))|0)==((1)|0)) {
         __ZN7b2ColorC1Efff($3,0.5,0.5,0.8999999761581421);
         __ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color($this,$f_057,$17,$3);
         break;
        } else {
         $27=((__ZNK6b2Body7IsAwakeEv($b_062))|0);
         if ($27) {
          __ZN7b2ColorC1Efff($5,0.8999999761581421,0.699999988079071,0.699999988079071);
          __ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color($this,$f_057,$17,$5);
          break;
         } else {
          __ZN7b2ColorC1Efff($4,0.6000000238418579,0.6000000238418579,0.6000000238418579);
          __ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color($this,$f_057,$17,$4);
          break;
         }
        }
       } else {
        __ZN7b2ColorC1Efff($1,0.5,0.5,0.30000001192092896);
        __ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color($this,$f_057,$17,$1);
       }
      } while(0);
      $31=((__ZN9b2Fixture7GetNextEv($f_057))|0);
      $32=($31|0)==0;
      if ($32) {
       break;
      } else {
       $f_057=$31;
      }
     }
    }
    $33=((__ZN6b2Body7GetNextEv($b_062))|0);
    $34=($33|0)==0;
    if ($34) {
     break;
    } else {
     $b_062=$33;
    }
   }
  }
 } while(0);
 $35=$10&2;
 $36=($35|0)==0;
 do {
  if (!($36)) {
   $38=(($this+102956)|0);
   $39=((HEAP32[(($38)>>2)])|0);
   $40=($39|0)==0;
   if ($40) {
    break;
   } else {
    $j_054=$39;
   }
   while(1) {

    __ZN7b2World9DrawJointEP7b2Joint($this,$j_054);
    $41=((__ZN7b2Joint7GetNextEv($j_054))|0);
    $42=($41|0)==0;
    if ($42) {
     break;
    } else {
     $j_054=$41;
    }
   }
  }
 } while(0);
 $43=$10&8;
 $44=($43|0)==0;
 do {
  if (!($44)) {
   __ZN7b2ColorC1Efff($color,0.30000001192092896,0.8999999761581421,0.8999999761581421);
   $46=(($this+102932)|0);
   $47=((HEAP32[(($46)>>2)])|0);
   $48=($47|0)==0;
   if ($48) {
    break;
   } else {
    $c_050=$47;
   }
   while(1) {

    $49=((__ZN9b2Contact7GetNextEv($c_050))|0);
    $50=($49|0)==0;
    if ($50) {
     break;
    } else {
     $c_050=$49;
    }
   }
  }
 } while(0);
 $51=$10&4;
 $52=($51|0)==0;
 do {
  if (!($52)) {
   __ZN7b2ColorC1Efff($color1,0.8999999761581421,0.30000001192092896,0.8999999761581421);
   $54=(($this+102872)|0);
   $55=(($this+102952)|0);
   $56=((HEAP32[(($55)>>2)])|0);
   $57=($56|0)==0;
   if ($57) {
    break;
   }
   $58=(($vs)|0);
   $59=(($vs+8)|0);
   $60=(($vs+16)|0);
   $61=(($vs+24)|0);
   $b2_046=$56;
   while(1) {

    $63=((__ZNK6b2Body8IsActiveEv($b2_046))|0);
    do {
     if ($63) {
      $65=((__ZN6b2Body14GetFixtureListEv($b2_046))|0);
      $66=($65|0)==0;
      if ($66) {
       break;
      } else {
       $f3_044=$65;
      }
      while(1) {

       $67=(($f3_044+28)|0);
       $68=((HEAP32[(($67)>>2)])|0);
       $69=($68|0)>0;
       if ($69) {
        $70=(($f3_044+24)|0);
        $i_041=0;
        while(1) {

         $72=((HEAP32[(($70)>>2)])|0);
         $73=(($72+((($i_041)*(28))&-1)+24)|0);
         $74=((HEAP32[(($73)>>2)])|0);
         $75=((__ZNK12b2BroadPhase10GetFatAABBEi($54,$74))|0);
         $aabb_sroa_0_0__idx=(($75)|0);
         $aabb_sroa_0_0_copyload=(+(HEAPF32[(($aabb_sroa_0_0__idx)>>2)]));
         $aabb_sroa_1_4__idx5=(($75+4)|0);
         $aabb_sroa_1_4_copyload=(+(HEAPF32[(($aabb_sroa_1_4__idx5)>>2)]));
         $aabb_sroa_2_8__idx7=(($75+8)|0);
         $aabb_sroa_2_8_copyload=(+(HEAPF32[(($aabb_sroa_2_8__idx7)>>2)]));
         $aabb_sroa_3_12__idx9=(($75+12)|0);
         $aabb_sroa_3_12_copyload=(+(HEAPF32[(($aabb_sroa_3_12__idx9)>>2)]));
         __ZN6b2Vec23SetEff($58,$aabb_sroa_0_0_copyload,$aabb_sroa_1_4_copyload);
         __ZN6b2Vec23SetEff($59,$aabb_sroa_2_8_copyload,$aabb_sroa_1_4_copyload);
         __ZN6b2Vec23SetEff($60,$aabb_sroa_2_8_copyload,$aabb_sroa_3_12_copyload);
         __ZN6b2Vec23SetEff($61,$aabb_sroa_0_0_copyload,$aabb_sroa_3_12_copyload);
         $76=((HEAP32[(($6)>>2)])|0);
         $77=$76;
         $78=((HEAP32[(($77)>>2)])|0);
         $79=(($78+8)|0);
         $80=((HEAP32[(($79)>>2)])|0);
         FUNCTION_TABLE_viiii[($80)&127]($76,$58,4,$color1);
         $81=((($i_041)+(1))|0);
         $82=((HEAP32[(($67)>>2)])|0);
         $83=($81|0)<($82|0);
         if ($83) {
          $i_041=$81;
         } else {
          break;
         }
        }
       }
       $84=((__ZN9b2Fixture7GetNextEv($f3_044))|0);
       $85=($84|0)==0;
       if ($85) {
        break;
       } else {
        $f3_044=$84;
       }
      }
     }
    } while(0);
    $86=((__ZN6b2Body7GetNextEv($b2_046))|0);
    $87=($86|0)==0;
    if ($87) {
     break;
    } else {
     $b2_046=$86;
    }
   }
  }
 } while(0);
 $88=$10&16;
 $89=($88|0)==0;
 if ($89) {
  STACKTOP=sp;return;
 }
 $91=(($this+102952)|0);
 $92=((HEAP32[(($91)>>2)])|0);
 $93=($92|0)==0;
 if ($93) {
  STACKTOP=sp;return;
 }
 $94=$xf539;
 $b4_040=$92;
 while(1) {

  $96=((__ZNK6b2Body12GetTransformEv($b4_040))|0);
  $97=$96;
  HEAP32[(($94)>>2)]=((HEAP32[(($97)>>2)])|0);HEAP32[((($94)+(4))>>2)]=((HEAP32[((($97)+(4))>>2)])|0);HEAP32[((($94)+(8))>>2)]=((HEAP32[((($97)+(8))>>2)])|0);HEAP32[((($94)+(12))>>2)]=((HEAP32[((($97)+(12))>>2)])|0);
  $98=((__ZNK6b2Body14GetWorldCenterEv($b4_040))|0);
  $99=$98;
  $ld$0$0=(($99)|0);
  $100$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($99+4)|0);
  $100$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($xf539_sub)|0);
  HEAP32[(($st$2$0)>>2)]=$100$0;
  $st$3$1=(($xf539_sub+4)|0);
  HEAP32[(($st$3$1)>>2)]=$100$1;
  $101=((HEAP32[(($6)>>2)])|0);
  $102=$101;
  $103=((HEAP32[(($102)>>2)])|0);
  $104=(($103+28)|0);
  $105=((HEAP32[(($104)>>2)])|0);
  FUNCTION_TABLE_vii[($105)&255]($101,$tmpcast);
  $106=((__ZN6b2Body7GetNextEv($b4_040))|0);
  $107=($106|0)==0;
  if ($107) {
   break;
  } else {
   $b4_040=$106;
  }
 }
 STACKTOP=sp;return;
}


function __ZN6b2Body14GetFixtureListEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+100)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN9b2Fixture7GetNextEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN7b2Joint7GetNextEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZNK12b2BroadPhase10GetFatAABBEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((__ZNK13b2DynamicTree10GetFatAABBEi($1,$proxyId))|0);
 return (($2)|0);
}


function __ZNK6b2Body14GetWorldCenterEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+44)|0);
 return (($1)|0);
}


function __ZNK7b2World13GetProxyCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102872)|0);
 $2=((__ZNK12b2BroadPhase13GetProxyCountEv($1))|0);
 return (($2)|0);
}


function __ZNK12b2BroadPhase13GetProxyCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+28)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZNK7b2World13GetTreeHeightEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102872)|0);
 $2=((__ZNK12b2BroadPhase13GetTreeHeightEv($1))|0);
 return (($2)|0);
}


function __ZNK12b2BroadPhase13GetTreeHeightEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((__ZNK13b2DynamicTree9GetHeightEv($1))|0);
 return (($2)|0);
}


function __ZNK7b2World14GetTreeBalanceEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102872)|0);
 $2=((__ZNK12b2BroadPhase14GetTreeBalanceEv($1))|0);
 return (($2)|0);
}


function __ZNK12b2BroadPhase14GetTreeBalanceEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((__ZNK13b2DynamicTree13GetMaxBalanceEv($1))|0);
 return (($2)|0);
}


function __ZNK7b2World14GetTreeQualityEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+102872)|0);
 $2=(+(__ZNK12b2BroadPhase14GetTreeQualityEv($1)));
 return (+($2));
}


function __ZNK12b2BroadPhase14GetTreeQualityEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this)|0);
 $2=(+(__ZNK13b2DynamicTree12GetAreaRatioEv($1)));
 return (+($2));
}


function __ZN7b2World4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=.0,$8=.0,$9=0,$10=.0,$11=.0,$12=0,$13=0,$14=0,$15=0,$16=0,$b_026=0,$17=0,$b_028=0,$i_027=0,$18=0;
 var $19=0,$20=0,$b_0=0,$21=0,$22=0,$j_021=0,$23=0,$j1_018_pr=0,$24=0,$j_023=0,$i_122=0,$25=0,$26=0,$27=0,$j_0=0,$28=0,$j2_015_pr_pr=0,$29=0,$j1_019=0,$30=0;
 var $31=0,$32=0,$34=0,$35=0,$36=0,$37=0,$39=0,$j1_0=0,$40=0,$j2_016=0,$41=0,$42=0,$43=0,$45=0,$46=0,$47=0,$48=0,$50=0,$j2_0=0,$51=0;
 var label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+102868)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&2;
 $4=($3|0)==0;
 if (!($4)) {
  STACKTOP=sp;return;
 }
 $6=(($this+102968)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=$7;
 $9=(($this+102972)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=$10;
 __Z5b2LogPKcz(352,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$8,HEAPF64[(((tempVarArgs)+(8))>>3)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(11648,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+102960)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 __Z5b2LogPKcz(11288,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$13,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $14=(($this+102964)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 __Z5b2LogPKcz(10728,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$15,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $16=(($this+102952)|0);
 $b_026=((HEAP32[(($16)>>2)])|0);
 $17=($b_026|0)==0;
 if (!($17)) {
  $i_027=0;$b_028=$b_026;
  while(1) {


   $18=(($b_028+8)|0);
   HEAP32[(($18)>>2)]=$i_027;
   __ZN6b2Body4DumpEv($b_028);
   $19=((($i_027)+(1))|0);
   $20=(($b_028+96)|0);
   $b_0=((HEAP32[(($20)>>2)])|0);
   $21=($b_0|0)==0;
   if ($21) {
    break;
   } else {
    $i_027=$19;$b_028=$b_0;
   }
  }
 }
 $22=(($this+102956)|0);
 $j_021=((HEAP32[(($22)>>2)])|0);
 $23=($j_021|0)==0;
 do {
  if (!($23)) {
   $i_122=0;$j_023=$j_021;
   while(1) {


    $25=(($j_023+56)|0);
    HEAP32[(($25)>>2)]=$i_122;
    $26=((($i_122)+(1))|0);
    $27=(($j_023+12)|0);
    $j_0=((HEAP32[(($27)>>2)])|0);
    $28=($j_0|0)==0;
    if ($28) {
     break;
    } else {
     $i_122=$26;$j_023=$j_0;
    }
   }
   $j1_018_pr=((HEAP32[(($22)>>2)])|0);
   $24=($j1_018_pr|0)==0;
   if ($24) {
    break;
   } else {
    $j1_019=$j1_018_pr;
   }
   while(1) {

    $30=(($j1_019+4)|0);
    $31=((HEAP32[(($30)>>2)])|0);
    $32=($31|0)==6;
    if (!($32)) {
     __Z5b2LogPKcz(9728,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
     $34=$j1_019;
     $35=((HEAP32[(($34)>>2)])|0);
     $36=(($35+16)|0);
     $37=((HEAP32[(($36)>>2)])|0);
     FUNCTION_TABLE_vi[($37)&255]($j1_019);
     __Z5b2LogPKcz(9088,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
    }
    $39=(($j1_019+12)|0);
    $j1_0=((HEAP32[(($39)>>2)])|0);
    $40=($j1_0|0)==0;
    if ($40) {
     break;
    } else {
     $j1_019=$j1_0;
    }
   }
   $j2_015_pr_pr=((HEAP32[(($22)>>2)])|0);
   $29=($j2_015_pr_pr|0)==0;
   if ($29) {
    break;
   } else {
    $j2_016=$j2_015_pr_pr;
   }
   while(1) {

    $41=(($j2_016+4)|0);
    $42=((HEAP32[(($41)>>2)])|0);
    $43=($42|0)==6;
    if ($43) {
     __Z5b2LogPKcz(9728,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
     $45=$j2_016;
     $46=((HEAP32[(($45)>>2)])|0);
     $47=(($46+16)|0);
     $48=((HEAP32[(($47)>>2)])|0);
     FUNCTION_TABLE_vi[($48)&255]($j2_016);
     __Z5b2LogPKcz(9088,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
    }
    $50=(($j2_016+12)|0);
    $j2_0=((HEAP32[(($50)>>2)])|0);
    $51=($j2_0|0)==0;
    if ($51) {
     break;
    } else {
     $j2_016=$j2_0;
    }
   }
  }
 } while(0);
 __Z5b2LogPKcz(8688,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(8464,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(8224,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(7992,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput($this,$callback,$input){
 $this=($this)|0;
 $callback=($callback)|0;
 $input=($input)|0;
 var $p1=0,$tmpcast=0,$p2=0,$tmpcast20=0,$r=0,$v=0,$abs_v=0,$segmentAABB22=0,$tmpcast21=0,$t=0,$1=0,$2=0,$3=0,$stack=0,$c=0,$h=0,$4=0,$subInput=0,$t1=0,$5=0;
 var $6=0,$7=0,$tmpcast26=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$ld$4$0=0,$12$0=0,$ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,$13=.0,$14=0;
 var $tmpcast24=0,$17=.0,$18=0,$19=.0,$segmentAABB223031=0,$20=0,$ld$8$0=0,$21$0=0,$ld$9$1=0,$21$1=0,$st$10$0=0,$st$11$1=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0;
 var $maxFraction_0_ph28=.0,$31=0,$33=0,$34=0,$35=0,$lpad_phi$0=0,$lpad_phi$1=0,$38=0,$39=0,$40=0,$41=0,$43=.0,$44=.0,$45=.0,$46=.0,$47=0,$49=0,$ld$12$0=0,$51$0=0,$ld$13$1=0;
 var $51$1=0,$st$14$0=0,$st$15$1=0,$ld$16$0=0,$52$0=0,$ld$17$1=0,$52$1=0,$st$18$0=0,$st$19$1=0,$53=.0,$55=0,$57=0,$segmentAABB223233=0,$ld$20$0=0,$58$0=0,$ld$21$1=0,$58$1=0,$st$22$0=0,$st$23$1=0,$59=0;
 var $60=0,$62=0,$64=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,$67$0=0,$67$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $p1=((sp)|0);
 $tmpcast=$p1;
 $p2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast20=$p2;
 $r=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $v=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $abs_v=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $segmentAABB22=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast21=$segmentAABB22;
 $t=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $stack=STACKTOP;STACKTOP = (STACKTOP + 1036)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $c=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $h=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $subInput=STACKTOP;STACKTOP = (STACKTOP + 20)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $t1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast26=$7;
 $8=$input;
 $ld$0$0=(($8)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($8+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($p1)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($p1+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($input+8)|0);
 $11=$10;
 $ld$4$0=(($11)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($11+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($p2)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($p2+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 __ZmiRK6b2Vec2S1_($r,$tmpcast20,$tmpcast);
 $13=(+(__ZNK6b2Vec213LengthSquaredEv($r)));
 $14=$13>(0.0);
 if (!($14)) {
  ___assert_fail(((7792)|0),((7560)|0),((204)|0),((12000)|0));

 }
 $tmpcast24=$3;
 $17=(+(__ZN6b2Vec29NormalizeEv($r)));
 __Z7b2CrossfRK6b2Vec2($v,1.0,$r);
 __Z5b2AbsRK6b2Vec2($abs_v,$v);
 $18=(($input+16)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 __ZmiRK6b2Vec2S1_($2,$tmpcast20,$tmpcast);
 __ZmlfRK6b2Vec2($1,$19,$2);
 __ZplRK6b2Vec2S1_($t,$tmpcast,$1);
 $segmentAABB223031=$segmentAABB22;
 __Z5b2MinRK6b2Vec2S1_($segmentAABB223031,$tmpcast,$t);
 $20=(($segmentAABB22+8)|0);
 __Z5b2MaxRK6b2Vec2S1_($tmpcast24,$tmpcast,$t);
 $ld$8$0=(($3)|0);
 $21$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($3+4)|0);
 $21$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($20)|0);
 HEAP32[(($st$10$0)>>2)]=$21$0;
 $st$11$1=(($20+4)|0);
 HEAP32[(($st$11$1)>>2)]=$21$1;
 __ZN15b2GrowableStackIiLi256EEC1Ev($stack);
 $22=(($this)|0);
 __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$22);
 $23=((__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack))|0);
 $24=($23|0)>0;
 if (!($24)) {
  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP=sp;return;
 }
 $25=(($this+4)|0);
 $26=$subInput;
 $27=(($subInput+8)|0);
 $28=$27;
 $29=(($subInput+16)|0);
 $maxFraction_0_ph28=$19;
 L8: while(1) {

  L10: while(1) {
   $31=((__ZN15b2GrowableStackIiLi256EE3PopEv($stack))|0);
   $33=($31|0)==-1;
   do {
    if (!($33)) {
     $38=((HEAP32[(($25)>>2)])|0);
     $39=(($38+((($31)*(36))&-1))|0);
     $40=(($39)|0);
     $41=((__Z13b2TestOverlapRK6b2AABBS1_($40,$tmpcast21))|0);
     if (!($41)) {
      break;
     }
     __ZNK6b2AABB9GetCenterEv($c,$40);
     __ZNK6b2AABB10GetExtentsEv($h,$40);
     __ZmiRK6b2Vec2S1_($4,$tmpcast,$c);
     $43=(+(__Z5b2DotRK6b2Vec2S1_($v,$4)));
     $44=(+(__Z5b2AbsIfET_S0_($43)));
     $45=(+(__Z5b2DotRK6b2Vec2S1_($abs_v,$h)));
     $46=($44)-($45);
     $47=$46>(0.0);
     if ($47) {
      break;
     }
     $49=((__ZNK10b2TreeNode6IsLeafEv($39))|0);
     if (!($49)) {
      $62=(($38+((($31)*(36))&-1)+24)|0);
      __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$62);
      $64=(($38+((($31)*(36))&-1)+28)|0);
      __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$64);
      break;
     }
     $ld$12$0=(($8)|0);
     $51$0=((HEAP32[(($ld$12$0)>>2)])|0);
     $ld$13$1=(($8+4)|0);
     $51$1=((HEAP32[(($ld$13$1)>>2)])|0);
     $st$14$0=(($26)|0);
     HEAP32[(($st$14$0)>>2)]=$51$0;
     $st$15$1=(($26+4)|0);
     HEAP32[(($st$15$1)>>2)]=$51$1;
     $ld$16$0=(($11)|0);
     $52$0=((HEAP32[(($ld$16$0)>>2)])|0);
     $ld$17$1=(($11+4)|0);
     $52$1=((HEAP32[(($ld$17$1)>>2)])|0);
     $st$18$0=(($28)|0);
     HEAP32[(($st$18$0)>>2)]=$52$0;
     $st$19$1=(($28+4)|0);
     HEAP32[(($st$19$1)>>2)]=$52$1;
     HEAPF32[(($29)>>2)]=$maxFraction_0_ph28;
     $53=(+(__ZN21b2WorldRayCastWrapper15RayCastCallbackERK14b2RayCastInputi($callback,$subInput,$31)));
     $55=$53==(0.0);
     if ($55) {
      label = 22;
      break L8;
     }
     $57=$53>(0.0);
     if ($57) {
      break L10;
     }
    }
   } while(0);
   $34=((__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack))|0);
   $35=($34|0)>0;
   if (!($35)) {
    label = 22;
    break L8;
   }
  }
  __ZmiRK6b2Vec2S1_($6,$tmpcast20,$tmpcast);
  __ZmlfRK6b2Vec2($5,$53,$6);
  __ZplRK6b2Vec2S1_($t1,$tmpcast,$5);
  $segmentAABB223233=$segmentAABB22;
  __Z5b2MinRK6b2Vec2S1_($segmentAABB223233,$tmpcast,$t1);
  __Z5b2MaxRK6b2Vec2S1_($tmpcast26,$tmpcast,$t1);
  $ld$20$0=(($7)|0);
  $58$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($7+4)|0);
  $58$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($20)|0);
  HEAP32[(($st$22$0)>>2)]=$58$0;
  $st$23$1=(($20+4)|0);
  HEAP32[(($st$23$1)>>2)]=$58$1;
  $59=((__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack))|0);
  $60=($59|0)>0;
  if ($60) {
   $maxFraction_0_ph28=$53;
  } else {
   label = 22;
   break;
  }
 }
 if ((label|0) == 22) {
  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP=sp;return;
 }
}


function __ZNK6b2AABB9GetCenterEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($this)|0);
 $3=(($this+8)|0);
 __ZplRK6b2Vec2S1_($1,$2,$3);
 __ZmlfRK6b2Vec2($agg_result,0.5,$1);
 STACKTOP=sp;return;
}


function __ZNK6b2AABB10GetExtentsEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($this+8)|0);
 $3=(($this)|0);
 __ZmiRK6b2Vec2S1_($1,$2,$3);
 __ZmlfRK6b2Vec2($agg_result,0.5,$1);
 STACKTOP=sp;return;
}


function __ZN21b2WorldRayCastWrapper15RayCastCallbackERK14b2RayCastInputi($this,$input,$proxyId){
 $this=($this)|0;
 $input=($input)|0;
 $proxyId=($proxyId)|0;
 var $output=0,$point=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$14=0,$15=.0,$16=.0,$17=0,$18=0,$19=0;
 var $20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=.0,$28=0,$29=.0,$_0=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $output=((sp)|0);
 $point=(((sp)+(16))|0);
 $1=(((sp)+(24))|0);
 $2=(((sp)+(32))|0);
 $3=(($this)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZNK12b2BroadPhase11GetUserDataEi($4,$proxyId))|0);
 $6=(($5+16)|0);
 $7=$6;
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($5+20)|0);
 $10=$9;
 $11=((HEAP32[(($10)>>2)])|0);
 $12=((__ZNK9b2Fixture7RayCastEP15b2RayCastOutputRK14b2RayCastInputi($8,$output,$input,$11))|0);
 if ($12) {
  $14=(($output+8)|0);
  $15=(+(HEAPF32[(($14)>>2)]));
  $16=((1.0))-($15);
  $17=(($input)|0);
  __ZmlfRK6b2Vec2($1,$16,$17);
  $18=(($input+8)|0);
  __ZmlfRK6b2Vec2($2,$15,$18);
  __ZplRK6b2Vec2S1_($point,$1,$2);
  $19=(($this+4)|0);
  $20=((HEAP32[(($19)>>2)])|0);
  $21=$20;
  $22=((HEAP32[(($21)>>2)])|0);
  $23=(($22+8)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $25=(($output)|0);
  $26=(+(FUNCTION_TABLE_fiiiif[($24)&63]($20,$8,$point,$25,$15)));
  $_0=$26;

  STACKTOP=sp;return (+($_0));
 } else {
  $28=(($input+16)|0);
  $29=(+(HEAPF32[(($28)>>2)]));
  $_0=$29;

  STACKTOP=sp;return (+($_0));
 }
  return .0;
}


function __ZNK12b2BroadPhase11GetUserDataEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((__ZNK13b2DynamicTree11GetUserDataEi($1,$proxyId))|0);
 return (($2)|0);
}


function __ZNK9b2Fixture7RayCastEP15b2RayCastOutputRK14b2RayCastInputi($this,$output,$input,$childIndex){
 $this=($this)|0;
 $output=($output)|0;
 $input=($input)|0;
 $childIndex=($childIndex)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+20)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($this+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=((__ZNK6b2Body12GetTransformEv($8))|0);
 $10=((FUNCTION_TABLE_iiiiii[($6)&63]($2,$output,$input,$9,$childIndex))|0);
 return (($10)|0);
}


function __ZNK13b2DynamicTree5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB($this,$callback,$aabb){
 $this=($this)|0;
 $callback=($callback)|0;
 $aabb=($aabb)|0;
 var $stack=0,$1=0,$2=0,$3=0,$4=0,$6=0,$8=0,$9=0,$10=0,$lpad_phi$0=0,$lpad_phi$1=0,$13=0,$14=0,$15=0,$16=0,$18=0,$20=0,$23=0,$25=0,$lpad_loopexit$0=0;
 var $lpad_loopexit$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,$28$0=0,$28$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+1040)|0;
 $stack=((sp)|0);
 __ZN15b2GrowableStackIiLi256EEC1Ev($stack);
 $1=(($this)|0);
 __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$1);
 $2=((__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack))|0);
 $3=($2|0)>0;
 if (!($3)) {
  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP=sp;return;
 }
 $4=(($this+4)|0);
 L5: while(1) {
  $6=((__ZN15b2GrowableStackIiLi256EE3PopEv($stack))|0);
  $8=($6|0)==-1;
  do {
   if (!($8)) {
    $13=((HEAP32[(($4)>>2)])|0);
    $14=(($13+((($6)*(36))&-1))|0);
    $15=(($14)|0);
    $16=((__Z13b2TestOverlapRK6b2AABBS1_($15,$aabb))|0);
    if (!($16)) {
     break;
    }
    $18=((__ZNK10b2TreeNode6IsLeafEv($14))|0);
    if ($18) {
     $20=((__ZN19b2WorldQueryWrapper13QueryCallbackEi($callback,$6))|0);
     if ($20) {
      break;
     } else {
      label = 16;
      break L5;
     }
    } else {
     $23=(($13+((($6)*(36))&-1)+24)|0);
     __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$23);
     $25=(($13+((($6)*(36))&-1)+28)|0);
     __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$25);
     break;
    }
   }
  } while(0);
  $9=((__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack))|0);
  $10=($9|0)>0;
  if (!($10)) {
   label = 16;
   break;
  }
 }
 if ((label|0) == 16) {
  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP=sp;return;
 }
}


function __ZN19b2WorldQueryWrapper13QueryCallbackEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK12b2BroadPhase11GetUserDataEi($2,$proxyId))|0);
 $4=(($this+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=$5;
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($7+8)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($3+16)|0);
 $11=$10;
 $12=((HEAP32[(($11)>>2)])|0);
 $13=((FUNCTION_TABLE_iii[($9)&127]($5,$12))|0);
 return (($13)|0);
}


function __ZN7b2ColorC2Efff($this,$r,$g,$b){
 $this=($this)|0;
 $r=+($r);
 $g=+($g);
 $b=+($b);
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=$r;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=$g;
 $3=(($this+8)|0);
 HEAPF32[(($3)>>2)]=$b;
 return;
}


function __ZN10b2TOIInputC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN15b2DistanceProxyC1Ev($1);
 $2=(($this+28)|0);
 __ZN15b2DistanceProxyC1Ev($2);
 return;
}


function __ZN16b2ContactManagerD2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN12b2BroadPhaseD2Ev($1);
 return;
}


function __ZN15b2ContactFilter13ShouldCollideEP9b2FixtureS1_($this,$fixtureA,$fixtureB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $fixtureB=($fixtureB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$or_cond=0,$10=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$19=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$_0=0,label=0;

 $1=((__ZNK9b2Fixture13GetFilterDataEv($fixtureA))|0);
 $2=((__ZNK9b2Fixture13GetFilterDataEv($fixtureB))|0);
 $3=(($1+4)|0);
 $4=((HEAP16[(($3)>>1)])|0);
 $5=(($2+4)|0);
 $6=((HEAP16[(($5)>>1)])|0);
 $7=(($4<<16)>>16)!=(($6<<16)>>16);
 $8=(($4<<16)>>16)==0;
 $or_cond=$7|$8;
 if (!($or_cond)) {
  $10=(($4<<16)>>16)>0;
  $_0=$10;

  return (($_0)|0);
 }
 $12=(($1+2)|0);
 $13=((HEAP16[(($12)>>1)])|0);
 $14=(($2)|0);
 $15=((HEAP16[(($14)>>1)])|0);
 $16=$15&$13;
 $17=(($16<<16)>>16)==0;
 if ($17) {
  $_0=0;

  return (($_0)|0);
 }
 $19=(($1)|0);
 $20=((HEAP16[(($19)>>1)])|0);
 $21=(($2+2)|0);
 $22=((HEAP16[(($21)>>1)])|0);
 $23=$22&$20;
 $24=(($23<<16)>>16)!=0;
 $_0=$24;

 return (($_0)|0);
}


function __ZNK9b2Fixture13GetFilterDataEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+32)|0);
 return (($1)|0);
}


function __ZN23b2ChainAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$indexA,$fixtureB,$indexB,$allocator){
 $fixtureA=($fixtureA)|0;
 $indexA=($indexA)|0;
 $fixtureB=($fixtureB)|0;
 $indexB=($indexB)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($allocator,144))|0);
 $2=($1|0)==0;
 if ($2) {
  $6=0;

  $7=(($6)|0);
  return (($7)|0);
 }
 $4=$1;
 __ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i($4,$fixtureA,$indexA,$fixtureB,$indexB);
 $6=$4;

 $7=(($6)|0);
 return (($7)|0);
}


function __ZN23b2ChainAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,144);
 return;
}


function __ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i($this,$fixtureA,$indexA,$fixtureB,$indexB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $indexA=($indexA)|0;
 $fixtureB=($fixtureB)|0;
 $indexB=($indexB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,$indexA,$fixtureB,$indexB);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=13624;
 $3=(($this+48)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZNK9b2Fixture7GetTypeEv($4))|0);
 $6=($5|0)==3;
 if (!($6)) {
  ___assert_fail(((6952)|0),((10656)|0),((43)|0),((12592)|0));

 }
 $9=(($this+52)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((__ZNK9b2Fixture7GetTypeEv($10))|0);
 $12=($11|0)==0;
 if ($12) {
  return;
 } else {
  ___assert_fail(((7176)|0),((10656)|0),((44)|0),((12592)|0));

 }
}


function __ZN23b2ChainAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $edge=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $edge=((sp)|0);
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 __ZN11b2EdgeShapeC1Ev($edge);
 $5=(($this+56)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 __ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei($4,$edge,$6);
 $7=(($this+52)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=((__ZN9b2Fixture8GetShapeEv($8))|0);
 $10=$9;
 __Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_($manifold,$edge,$xfA,$10,$xfB);
 STACKTOP=sp;return;
}


function __ZN23b2ChainAndCircleContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN23b2ChainAndCircleContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN24b2ChainAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$indexA,$fixtureB,$indexB,$allocator){
 $fixtureA=($fixtureA)|0;
 $indexA=($indexA)|0;
 $fixtureB=($fixtureB)|0;
 $indexB=($indexB)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($allocator,144))|0);
 $2=($1|0)==0;
 if ($2) {
  $6=0;

  $7=(($6)|0);
  return (($7)|0);
 }
 $4=$1;
 __ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i($4,$fixtureA,$indexA,$fixtureB,$indexB);
 $6=$4;

 $7=(($6)|0);
 return (($7)|0);
}


function __ZN24b2ChainAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,144);
 return;
}


function __ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i($this,$fixtureA,$indexA,$fixtureB,$indexB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $indexA=($indexA)|0;
 $fixtureB=($fixtureB)|0;
 $indexB=($indexB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,$indexA,$fixtureB,$indexB);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=13560;
 $3=(($this+48)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZNK9b2Fixture7GetTypeEv($4))|0);
 $6=($5|0)==3;
 if (!($6)) {
  ___assert_fail(((6808)|0),((10584)|0),((43)|0),((12536)|0));

 }
 $9=(($this+52)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((__ZNK9b2Fixture7GetTypeEv($10))|0);
 $12=($11|0)==2;
 if ($12) {
  return;
 } else {
  ___assert_fail(((7128)|0),((10584)|0),((44)|0),((12536)|0));

 }
}


function __ZN24b2ChainAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $edge=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $edge=((sp)|0);
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 __ZN11b2EdgeShapeC1Ev($edge);
 $5=(($this+56)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 __ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei($4,$edge,$6);
 $7=(($this+52)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=((__ZN9b2Fixture8GetShapeEv($8))|0);
 $10=$9;
 __Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_($manifold,$edge,$xfA,$10,$xfB);
 STACKTOP=sp;return;
}


function __ZN24b2ChainAndPolygonContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN24b2ChainAndPolygonContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN15b2CircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$0,$fixtureB,$1,$allocator){
 $fixtureA=($fixtureA)|0;
 $0=($0)|0;
 $fixtureB=($fixtureB)|0;
 $1=($1)|0;
 $allocator=($allocator)|0;
 var $3=0,$4=0,$6=0,$8=0,$9=0,label=0;

 $3=((__ZN16b2BlockAllocator8AllocateEi($allocator,144))|0);
 $4=($3|0)==0;
 if ($4) {
  $8=0;

  $9=(($8)|0);
  return (($9)|0);
 }
 $6=$3;
 __ZN15b2CircleContactC2EP9b2FixtureS1_($6,$fixtureA,$fixtureB);
 $8=$6;

 $9=(($8)|0);
 return (($9)|0);
}


function __ZN15b2CircleContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,144);
 return;
}


function __ZN15b2CircleContactC2EP9b2FixtureS1_($this,$fixtureA,$fixtureB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $fixtureB=($fixtureB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,0,$fixtureB,0);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=14112;
 $3=(($this+48)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZNK9b2Fixture7GetTypeEv($4))|0);
 $6=($5|0)==0;
 if (!($6)) {
  ___assert_fail(((6560)|0),((10520)|0),((44)|0),((12952)|0));

 }
 $9=(($this+52)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((__ZNK9b2Fixture7GetTypeEv($10))|0);
 $12=($11|0)==0;
 if ($12) {
  return;
 } else {
  ___assert_fail(((7080)|0),((10520)|0),((45)|0),((12952)|0));

 }
}


function __ZN15b2CircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZN9b2Fixture8GetShapeEv($6))|0);
 $8=$7;
 __Z16b2CollideCirclesP10b2ManifoldPK13b2CircleShapeRK11b2TransformS3_S6_($manifold,$4,$xfA,$8,$xfB);
 return;
}


function __ZN15b2CircleContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN15b2CircleContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN9b2Contact19InitializeRegistersEv(){
 var label=0;

 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(50,42,0,0);
 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(52,74,2,0);
 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(42,92,2,2);
 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(48,102,1,0);
 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(62,144,1,2);
 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(56,80,3,0);
 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(44,66,3,2);
 return;
}


function __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_($createFcn,$destoryFcn,$type1,$type2){
 $createFcn=($createFcn)|0;
 $destoryFcn=($destoryFcn)|0;
 $type1=($type1)|0;
 $type2=($type2)|0;
 var $1=0,$4=0,$7=0,$8=0,$9=0,$10=0,$12=0,$13=0,$14=0,label=0;

 $1=($type1>>>0)<((4)>>>0);
 if (!($1)) {
  ___assert_fail(((6352)|0),((10464)|0),((54)|0),((12200)|0));

 }
 $4=($type2>>>0)<((4)>>>0);
 if (!($4)) {
  ___assert_fail(((7032)|0),((10464)|0),((55)|0),((12200)|0));

 }
 $7=((20688+((($type1)*(48))&-1)+((($type2)*(12))&-1))|0);
 HEAP32[(($7)>>2)]=$createFcn;
 $8=((20688+((($type1)*(48))&-1)+((($type2)*(12))&-1)+4)|0);
 HEAP32[(($8)>>2)]=$destoryFcn;
 $9=((20688+((($type1)*(48))&-1)+((($type2)*(12))&-1)+8)|0);
 HEAP8[($9)]=1;
 $10=($type1|0)==($type2|0);
 if ($10) {
  return;
 }
 $12=((20688+((($type2)*(48))&-1)+((($type1)*(12))&-1))|0);
 HEAP32[(($12)>>2)]=$createFcn;
 $13=((20688+((($type2)*(48))&-1)+((($type1)*(12))&-1)+4)|0);
 HEAP32[(($13)>>2)]=$destoryFcn;
 $14=((20688+((($type2)*(48))&-1)+((($type1)*(12))&-1)+8)|0);
 HEAP8[($14)]=0;
 return;
}


function __ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$indexA,$fixtureB,$indexB,$allocator){
 $fixtureA=($fixtureA)|0;
 $indexA=($indexA)|0;
 $fixtureB=($fixtureB)|0;
 $indexB=($indexB)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$5=0,$6=0,$7=0,$10=0,$13=0,$14=0,$15=0,$17=0,$18=0,$19=0,$21=0,$23=0,$_0=0,label=0;

 $1=((HEAP8[(20680)])|0);
 $2=(($1<<24)>>24)==0;
 if ($2) {
  __ZN9b2Contact19InitializeRegistersEv();
  HEAP8[(20680)]=1;
 }
 $5=((__ZNK9b2Fixture7GetTypeEv($fixtureA))|0);
 $6=((__ZNK9b2Fixture7GetTypeEv($fixtureB))|0);
 $7=($5>>>0)<((4)>>>0);
 if (!($7)) {
  ___assert_fail(((6352)|0),((10464)|0),((80)|0),((12208)|0));
  return ((0)|0);
 }
 $10=($6>>>0)<((4)>>>0);
 if (!($10)) {
  ___assert_fail(((7032)|0),((10464)|0),((81)|0),((12208)|0));
  return ((0)|0);
 }
 $13=((20688+((($5)*(48))&-1)+((($6)*(12))&-1))|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=($14|0)==0;
 if ($15) {
  $_0=0;

  return (($_0)|0);
 }
 $17=((20688+((($5)*(48))&-1)+((($6)*(12))&-1)+8)|0);
 $18=((HEAP8[($17)])|0);
 $19=(($18<<24)>>24)==0;
 if ($19) {
  $23=((FUNCTION_TABLE_iiiiii[($14)&63]($fixtureB,$indexB,$fixtureA,$indexA,$allocator))|0);
  $_0=$23;

  return (($_0)|0);
 } else {
  $21=((FUNCTION_TABLE_iiiiii[($14)&63]($fixtureA,$indexA,$fixtureB,$indexB,$allocator))|0);
  $_0=$21;

  return (($_0)|0);
 }
  return 0;
}


function __ZN9b2Contact7DestroyEPS_P16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,$14=0,$15=0,$16=0,$17=0,$18=0,$20=0,$brmerge_demorgan=0,$25=0,$26=0,label=0;

 $1=((HEAP8[(20680)])|0);
 $2=(($1<<24)>>24)==0;
 if ($2) {
  ___assert_fail(((4456)|0),((10464)|0),((103)|0),((12192)|0));

 }
 $5=(($contact+124)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 if ($7) {
  $9=((__ZN9b2Contact11GetFixtureAEv($contact))|0);
  $10=((__ZN9b2Fixture7GetBodyEv($9))|0);
  __ZN6b2Body8SetAwakeEb($10,1);
  $11=((__ZN9b2Contact11GetFixtureBEv($contact))|0);
  $12=((__ZN9b2Fixture7GetBodyEv($11))|0);
  __ZN6b2Body8SetAwakeEb($12,1);
 }
 $14=((__ZN9b2Contact11GetFixtureAEv($contact))|0);
 $15=((__ZNK9b2Fixture7GetTypeEv($14))|0);
 $16=((__ZN9b2Contact11GetFixtureBEv($contact))|0);
 $17=((__ZNK9b2Fixture7GetTypeEv($16))|0);
 $18=($15|0)>-1;
 if (!($18)) {
  ___assert_fail(((3352)|0),((10464)|0),((114)|0),((12192)|0));

 }
 $20=($17|0)<4;
 if (!($20)) {
  ___assert_fail(((3352)|0),((10464)|0),((114)|0),((12192)|0));

 }
 $brmerge_demorgan=$18&$20;
 if ($brmerge_demorgan) {
  $25=((20688+((($15)*(48))&-1)+((($17)*(12))&-1)+4)|0);
  $26=((HEAP32[(($25)>>2)])|0);
  FUNCTION_TABLE_vii[($26)&255]($contact,$allocator);
  return;
 } else {
  ___assert_fail(((3352)|0),((10464)|0),((115)|0),((12192)|0));

 }
}


function __ZN9b2ContactC2EP9b2FixtureiS1_i($this,$fA,$indexA,$fB,$indexB){
 $this=($this)|0;
 $fA=($fA)|0;
 $indexA=($indexA)|0;
 $fB=($fB)|0;
 $indexB=($indexB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=0,$15=0,$16=.0,$17=.0,$18=0,$19=0,$20=0;
 var $21=.0,$22=0,$23=0,$24=.0,$25=.0,$26=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=13344;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=4;
 $3=(($this+48)|0);
 HEAP32[(($3)>>2)]=$fA;
 $4=(($this+52)|0);
 HEAP32[(($4)>>2)]=$fB;
 $5=(($this+56)|0);
 HEAP32[(($5)>>2)]=$indexA;
 $6=(($this+60)|0);
 HEAP32[(($6)>>2)]=$indexB;
 $7=(($this+124)|0);
 HEAP32[(($7)>>2)]=0;
 $8=(($this+8)|0);
 $9=(($this+128)|0);
 HEAP32[(($9)>>2)]=0;
 $10=$8;
 _memset((((($10)|0))|0), ((((0)|0))|0), ((((40)|0))|0))|0;
 $11=((HEAP32[(($3)>>2)])|0);
 $12=(($11+16)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=((HEAP32[(($4)>>2)])|0);
 $15=(($14+16)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=(+(__Z13b2MixFrictionff($13,$16)));
 $18=(($this+136)|0);
 HEAPF32[(($18)>>2)]=$17;
 $19=((HEAP32[(($3)>>2)])|0);
 $20=(($19+20)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=((HEAP32[(($4)>>2)])|0);
 $23=(($22+20)|0);
 $24=(+(HEAPF32[(($23)>>2)]));
 $25=(+(__Z16b2MixRestitutionff($21,$24)));
 $26=(($this+140)|0);
 HEAPF32[(($26)>>2)]=$25;
 return;
}


function __Z13b2MixFrictionff($friction1,$friction2){
 $friction1=+($friction1);
 $friction2=+($friction2);
 var $1=.0,$2=.0,label=0;

 $1=($friction1)*($friction2);
 $2=(+(Math_sqrt($1)));
 return (+($2));
}


function __Z16b2MixRestitutionff($restitution1,$restitution2){
 $restitution1=+($restitution1);
 $restitution2=+($restitution2);
 var $1=0,$2=.0,label=0;

 $1=$restitution1>$restitution2;
 $2=($1?$restitution1:$restitution2);
 return (+($2));
}


function __ZN9b2Contact6UpdateEP17b2ContactListener($this,$listener){
 $this=($this)|0;
 $listener=($listener)|0;
 var $oldManifold=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$_=0,$14=0,$15=0,$16=0,$17=0,$19=0;
 var $20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$i_036=0,$38=0,$39=0,$id2_sroa_0_0__idx=0;
 var $id2_sroa_0_0_copyload=0,$j_0=0,$41=0,$43=0,$44=0,$45=0,$46=0,$48=0,$49=.0,$50=0,$51=.0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$touching_0_off0=0,$60=0,$61=0;
 var $62=0,$storemerge=0,$63=0,$64=0,$_not=0,$touching_0_off0_not=0,$brmerge=0,$65=0,$or_cond=0,$67=0,$68=0,$69=0,$70=0,$brmerge30=0,$or_cond31=0,$73=0,$74=0,$75=0,$76=0,$brmerge33=0;
 var $or_cond34=0,$79=0,$80=0,$81=0,$82=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $oldManifold=((sp)|0);
 $1=(($this+64)|0);
 $2=$oldManifold;
 $3=$1;
 (_memcpy((($2)|0), (($3)|0), 64)|0);
 $4=(($this+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=$5|4;
 HEAP32[(($4)>>2)]=$6;
 $7=$5>>>1;
 $8=(($this+48)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=((__ZNK9b2Fixture8IsSensorEv($9))|0);
 $11=(($this+52)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=((__ZNK9b2Fixture8IsSensorEv($12))|0);
 $_=$10|$13;
 $14=((__ZN9b2Fixture7GetBodyEv($9))|0);
 $15=((__ZN9b2Fixture7GetBodyEv($12))|0);
 $16=((__ZNK6b2Body12GetTransformEv($14))|0);
 $17=((__ZNK6b2Body12GetTransformEv($15))|0);
 do {
  if ($_) {
   $19=((__ZN9b2Fixture8GetShapeEv($9))|0);
   $20=((__ZN9b2Fixture8GetShapeEv($12))|0);
   $21=(($this+56)|0);
   $22=((HEAP32[(($21)>>2)])|0);
   $23=(($this+60)|0);
   $24=((HEAP32[(($23)>>2)])|0);
   $25=((__Z13b2TestOverlapPK7b2ShapeiS1_iRK11b2TransformS4_($19,$22,$20,$24,$16,$17))|0);
   $26=(($this+124)|0);
   HEAP32[(($26)>>2)]=0;
   $touching_0_off0=$25;
  } else {
   $28=$this;
   $29=((HEAP32[(($28)>>2)])|0);
   $30=((HEAP32[(($29)>>2)])|0);
   FUNCTION_TABLE_viiii[($30)&127]($this,$1,$16,$17);
   $31=(($this+124)|0);
   $32=((HEAP32[(($31)>>2)])|0);
   $33=($32|0)>0;
   $34=($32|0)>0;
   if ($34) {
    $35=(($oldManifold+60)|0);
    $36=((HEAP32[(($35)>>2)])|0);
    $i_036=0;
    while(1) {

     $38=(($this+64+((($i_036)*(20))&-1)+8)|0);
     HEAPF32[(($38)>>2)]=0.0;
     $39=(($this+64+((($i_036)*(20))&-1)+12)|0);
     HEAPF32[(($39)>>2)]=0.0;
     $id2_sroa_0_0__idx=(($this+64+((($i_036)*(20))&-1)+16)|0);
     $id2_sroa_0_0_copyload=((HEAP32[(($id2_sroa_0_0__idx)>>2)])|0);
     $j_0=0;
     while(1) {

      $41=($j_0|0)<($36|0);
      if (!($41)) {
       break;
      }
      $43=(($oldManifold+((($j_0)*(20))&-1)+16)|0);
      $44=((HEAP32[(($43)>>2)])|0);
      $45=($44|0)==($id2_sroa_0_0_copyload|0);
      $46=((($j_0)+(1))|0);
      if ($45) {
       label = 8;
       break;
      } else {
       $j_0=$46;
      }
     }
     if ((label|0) == 8) {
      label = 0;
      $48=(($oldManifold+((($j_0)*(20))&-1)+8)|0);
      $49=(+(HEAPF32[(($48)>>2)]));
      HEAPF32[(($38)>>2)]=$49;
      $50=(($oldManifold+((($j_0)*(20))&-1)+12)|0);
      $51=(+(HEAPF32[(($50)>>2)]));
      HEAPF32[(($39)>>2)]=$51;
     }
     $52=((($i_036)+(1))|0);
     $53=((HEAP32[(($31)>>2)])|0);
     $54=($52|0)<($53|0);
     if ($54) {
      $i_036=$52;
     } else {
      break;
     }
    }
   }
   $55=$7&1;
   $56=($55|0)!=0;
   $57=$33^$56;
   if (!($57)) {
    $touching_0_off0=$33;
    break;
   }
   __ZN6b2Body8SetAwakeEb($14,1);
   __ZN6b2Body8SetAwakeEb($15,1);
   $touching_0_off0=$33;
  }
 } while(0);

 $60=((HEAP32[(($4)>>2)])|0);
 $61=$60&-3;
 $62=$60|2;
 $storemerge=($touching_0_off0?$62:$61);
 HEAP32[(($4)>>2)]=$storemerge;
 $63=$7&1;
 $64=($63|0)==0;
 $_not=$64^1;
 $touching_0_off0_not=$touching_0_off0^1;
 $brmerge=$_not|$touching_0_off0_not;
 $65=($listener|0)==0;
 $or_cond=$brmerge|$65;
 if (!($or_cond)) {
  $67=$listener;
  $68=((HEAP32[(($67)>>2)])|0);
  $69=(($68+8)|0);
  $70=((HEAP32[(($69)>>2)])|0);
  FUNCTION_TABLE_vii[($70)&255]($listener,$this);
 }
 $brmerge30=$64|$touching_0_off0;
 $or_cond31=$brmerge30|$65;
 if (!($or_cond31)) {
  $73=$listener;
  $74=((HEAP32[(($73)>>2)])|0);
  $75=(($74+12)|0);
  $76=((HEAP32[(($75)>>2)])|0);
  FUNCTION_TABLE_vii[($76)&255]($listener,$this);
 }
 $brmerge33=$_|$touching_0_off0_not;
 $or_cond34=$brmerge33|$65;
 if ($or_cond34) {
  STACKTOP=sp;return;
 }
 $79=$listener;
 $80=((HEAP32[(($79)>>2)])|0);
 $81=(($80+16)|0);
 $82=((HEAP32[(($81)>>2)])|0);
 FUNCTION_TABLE_viii[($82)&63]($listener,$this,$oldManifold);
 STACKTOP=sp;return;
}


function __ZN9b2ContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN9b2ContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN15b2ContactSolverC2EP18b2ContactSolverDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$i_078=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0;
 var $41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$48=0,$49=0,$50=0,$51=0,$52=.0,$53=.0,$54=0,$55=0,$56=.0,$57=0,$58=0,$59=.0,$60=0,$61=0;
 var $62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=.0,$69=0,$70=0,$71=.0,$72=0,$73=0,$74=.0,$75=0,$76=0,$77=.0,$78=0,$79=0,$80=0,$81=0;
 var $82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$92=0,$93=0,$94=0,$95=0,$ld$0$0=0,$96$0=0,$ld$1$1=0,$96$1=0,$st$2$0=0,$st$3$1=0;
 var $97=0,$98=0,$99=0,$100=0,$ld$4$0=0,$101$0=0,$ld$5$1=0,$101$1=0,$st$6$0=0,$st$7$1=0,$102=.0,$103=0,$104=.0,$105=0,$106=0,$107=0,$108=0,$109=0,$ld$8$0=0,$110$0=0;
 var $ld$9$1=0,$110$1=0,$st$10$0=0,$st$11$1=0,$111=0,$112=0,$113=0,$114=0,$ld$12$0=0,$115$0=0,$ld$13$1=0,$115$1=0,$st$14$0=0,$st$15$1=0,$116=0,$117=0,$118=0,$119=0,$120=0,$121=0;
 var $j_077=0,$123=0,$124=0,$125=0,$127=.0,$128=0,$129=.0,$130=.0,$131=0,$132=.0,$133=0,$134=.0,$135=.0,$136=0,$138=0,$139=0,$141=0,$142=0,$143=0,$144=0;
 var $145=0,$146=0,$147=0,$148=0,$ld$16$0=0,$149$0=0,$ld$17$1=0,$149$1=0,$st$18$0=0,$st$19$1=0,$150=0,$151=0,$152=0,$153=0,$154=0,label=0;

 $1=$this;
 $2=$def;
 HEAP32[(($1)>>2)]=((HEAP32[(($2)>>2)])|0);HEAP32[((($1)+(4))>>2)]=((HEAP32[((($2)+(4))>>2)])|0);HEAP32[((($1)+(8))>>2)]=((HEAP32[((($2)+(8))>>2)])|0);HEAP32[((($1)+(12))>>2)]=((HEAP32[((($2)+(12))>>2)])|0);HEAP32[((($1)+(16))>>2)]=((HEAP32[((($2)+(16))>>2)])|0);HEAP32[((($1)+(20))>>2)]=((HEAP32[((($2)+(20))>>2)])|0);
 $3=(($def+40)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+32)|0);
 HEAP32[(($5)>>2)]=$4;
 $6=(($def+28)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($this+48)|0);
 HEAP32[(($8)>>2)]=$7;
 $9=((HEAP32[(($5)>>2)])|0);
 $10=((($7)*(88))&-1);
 $11=((__ZN16b2StackAllocator8AllocateEi($9,$10))|0);
 $12=$11;
 $13=(($this+36)|0);
 HEAP32[(($13)>>2)]=$12;
 $14=((HEAP32[(($5)>>2)])|0);
 $15=((HEAP32[(($8)>>2)])|0);
 $16=((($15)*(152))&-1);
 $17=((__ZN16b2StackAllocator8AllocateEi($14,$16))|0);
 $18=$17;
 $19=(($this+40)|0);
 HEAP32[(($19)>>2)]=$18;
 $20=(($def+32)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=(($this+24)|0);
 HEAP32[(($22)>>2)]=$21;
 $23=(($def+36)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=(($this+28)|0);
 HEAP32[(($25)>>2)]=$24;
 $26=(($def+24)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=(($this+44)|0);
 HEAP32[(($28)>>2)]=$27;
 $29=((HEAP32[(($8)>>2)])|0);
 $30=($29|0)>0;
 if (!($30)) {
  return;
 }
 $31=(($this+20)|0);
 $32=(($this+8)|0);
 $i_078=0;
 while(1) {

  $34=((HEAP32[(($28)>>2)])|0);
  $35=(($34+($i_078<<2))|0);
  $36=((HEAP32[(($35)>>2)])|0);
  $37=(($36+48)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $39=(($36+52)|0);
  $40=((HEAP32[(($39)>>2)])|0);
  $41=((__ZN9b2Fixture7GetBodyEv($38))|0);
  $42=((__ZN9b2Fixture7GetBodyEv($40))|0);
  $43=((__ZN9b2Contact11GetManifoldEv($36))|0);
  $44=(($43+60)|0);
  $45=((HEAP32[(($44)>>2)])|0);
  $46=($45|0)>0;
  if (!($46)) {
   label = 4;
   break;
  }
  $48=((__ZN9b2Fixture8GetShapeEv($40))|0);
  $49=((__ZN9b2Fixture8GetShapeEv($38))|0);
  $50=(($48+8)|0);
  $51=(($49+8)|0);
  $52=(+(HEAPF32[(($50)>>2)]));
  $53=(+(HEAPF32[(($51)>>2)]));
  $54=((HEAP32[(($19)>>2)])|0);
  $55=(($36+136)|0);
  $56=(+(HEAPF32[(($55)>>2)]));
  $57=(($54+((($i_078)*(152))&-1)+136)|0);
  HEAPF32[(($57)>>2)]=$56;
  $58=(($36+140)|0);
  $59=(+(HEAPF32[(($58)>>2)]));
  $60=(($54+((($i_078)*(152))&-1)+140)|0);
  HEAPF32[(($60)>>2)]=$59;
  $61=(($41+8)|0);
  $62=((HEAP32[(($61)>>2)])|0);
  $63=(($54+((($i_078)*(152))&-1)+112)|0);
  HEAP32[(($63)>>2)]=$62;
  $64=(($42+8)|0);
  $65=((HEAP32[(($64)>>2)])|0);
  $66=(($54+((($i_078)*(152))&-1)+116)|0);
  HEAP32[(($66)>>2)]=$65;
  $67=(($41+120)|0);
  $68=(+(HEAPF32[(($67)>>2)]));
  $69=(($54+((($i_078)*(152))&-1)+120)|0);
  HEAPF32[(($69)>>2)]=$68;
  $70=(($42+120)|0);
  $71=(+(HEAPF32[(($70)>>2)]));
  $72=(($54+((($i_078)*(152))&-1)+124)|0);
  HEAPF32[(($72)>>2)]=$71;
  $73=(($41+128)|0);
  $74=(+(HEAPF32[(($73)>>2)]));
  $75=(($54+((($i_078)*(152))&-1)+128)|0);
  HEAPF32[(($75)>>2)]=$74;
  $76=(($42+128)|0);
  $77=(+(HEAPF32[(($76)>>2)]));
  $78=(($54+((($i_078)*(152))&-1)+132)|0);
  HEAPF32[(($78)>>2)]=$77;
  $79=(($54+((($i_078)*(152))&-1)+148)|0);
  HEAP32[(($79)>>2)]=$i_078;
  $80=(($54+((($i_078)*(152))&-1)+144)|0);
  HEAP32[(($80)>>2)]=$45;
  $81=(($54+((($i_078)*(152))&-1)+96)|0);
  __ZN7b2Mat227SetZeroEv($81);
  $82=(($54+((($i_078)*(152))&-1)+80)|0);
  __ZN7b2Mat227SetZeroEv($82);
  $83=((HEAP32[(($13)>>2)])|0);
  $84=((HEAP32[(($61)>>2)])|0);
  $85=(($83+((($i_078)*(88))&-1)+32)|0);
  HEAP32[(($85)>>2)]=$84;
  $86=((HEAP32[(($64)>>2)])|0);
  $87=(($83+((($i_078)*(88))&-1)+36)|0);
  HEAP32[(($87)>>2)]=$86;
  $88=(+(HEAPF32[(($67)>>2)]));
  $89=(($83+((($i_078)*(88))&-1)+40)|0);
  HEAPF32[(($89)>>2)]=$88;
  $90=(+(HEAPF32[(($70)>>2)]));
  $91=(($83+((($i_078)*(88))&-1)+44)|0);
  HEAPF32[(($91)>>2)]=$90;
  $92=(($83+((($i_078)*(88))&-1)+48)|0);
  $93=(($41+28)|0);
  $94=$93;
  $95=$92;
  $ld$0$0=(($94)|0);
  $96$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($94+4)|0);
  $96$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($95)|0);
  HEAP32[(($st$2$0)>>2)]=$96$0;
  $st$3$1=(($95+4)|0);
  HEAP32[(($st$3$1)>>2)]=$96$1;
  $97=(($83+((($i_078)*(88))&-1)+56)|0);
  $98=(($42+28)|0);
  $99=$98;
  $100=$97;
  $ld$4$0=(($99)|0);
  $101$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($99+4)|0);
  $101$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($100)|0);
  HEAP32[(($st$6$0)>>2)]=$101$0;
  $st$7$1=(($100+4)|0);
  HEAP32[(($st$7$1)>>2)]=$101$1;
  $102=(+(HEAPF32[(($73)>>2)]));
  $103=(($83+((($i_078)*(88))&-1)+64)|0);
  HEAPF32[(($103)>>2)]=$102;
  $104=(+(HEAPF32[(($76)>>2)]));
  $105=(($83+((($i_078)*(88))&-1)+68)|0);
  HEAPF32[(($105)>>2)]=$104;
  $106=(($83+((($i_078)*(88))&-1)+16)|0);
  $107=(($43+40)|0);
  $108=$107;
  $109=$106;
  $ld$8$0=(($108)|0);
  $110$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($108+4)|0);
  $110$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($109)|0);
  HEAP32[(($st$10$0)>>2)]=$110$0;
  $st$11$1=(($109+4)|0);
  HEAP32[(($st$11$1)>>2)]=$110$1;
  $111=(($83+((($i_078)*(88))&-1)+24)|0);
  $112=(($43+48)|0);
  $113=$112;
  $114=$111;
  $ld$12$0=(($113)|0);
  $115$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($113+4)|0);
  $115$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($114)|0);
  HEAP32[(($st$14$0)>>2)]=$115$0;
  $st$15$1=(($114+4)|0);
  HEAP32[(($st$15$1)>>2)]=$115$1;
  $116=(($83+((($i_078)*(88))&-1)+84)|0);
  HEAP32[(($116)>>2)]=$45;
  $117=(($83+((($i_078)*(88))&-1)+76)|0);
  HEAPF32[(($117)>>2)]=$53;
  $118=(($83+((($i_078)*(88))&-1)+80)|0);
  HEAPF32[(($118)>>2)]=$52;
  $119=(($43+56)|0);
  $120=((HEAP32[(($119)>>2)])|0);
  $121=(($83+((($i_078)*(88))&-1)+72)|0);
  HEAP32[(($121)>>2)]=$120;
  $j_077=0;
  while(1) {

   $123=(($43+((($j_077)*(20))&-1))|0);
   $124=((HEAP8[($31)])|0);
   $125=(($124<<24)>>24)==0;
   if ($125) {
    $138=(($54+((($i_078)*(152))&-1)+((($j_077)*(36))&-1)+16)|0);
    HEAPF32[(($138)>>2)]=0.0;
    $139=(($54+((($i_078)*(152))&-1)+((($j_077)*(36))&-1)+20)|0);
    HEAPF32[(($139)>>2)]=0.0;
   } else {
    $127=(+(HEAPF32[(($32)>>2)]));
    $128=(($43+((($j_077)*(20))&-1)+8)|0);
    $129=(+(HEAPF32[(($128)>>2)]));
    $130=($127)*($129);
    $131=(($54+((($i_078)*(152))&-1)+((($j_077)*(36))&-1)+16)|0);
    HEAPF32[(($131)>>2)]=$130;
    $132=(+(HEAPF32[(($32)>>2)]));
    $133=(($43+((($j_077)*(20))&-1)+12)|0);
    $134=(+(HEAPF32[(($133)>>2)]));
    $135=($132)*($134);
    $136=(($54+((($i_078)*(152))&-1)+((($j_077)*(36))&-1)+20)|0);
    HEAPF32[(($136)>>2)]=$135;
   }
   $141=(($54+((($i_078)*(152))&-1)+((($j_077)*(36))&-1))|0);
   __ZN6b2Vec27SetZeroEv($141);
   $142=(($54+((($i_078)*(152))&-1)+((($j_077)*(36))&-1)+8)|0);
   __ZN6b2Vec27SetZeroEv($142);
   $143=(($54+((($i_078)*(152))&-1)+((($j_077)*(36))&-1)+24)|0);
   HEAPF32[(($143)>>2)]=0.0;
   $144=(($54+((($i_078)*(152))&-1)+((($j_077)*(36))&-1)+28)|0);
   HEAPF32[(($144)>>2)]=0.0;
   $145=(($54+((($i_078)*(152))&-1)+((($j_077)*(36))&-1)+32)|0);
   HEAPF32[(($145)>>2)]=0.0;
   $146=(($83+((($i_078)*(88))&-1)+($j_077<<3))|0);
   $147=$123;
   $148=$146;
   $ld$16$0=(($147)|0);
   $149$0=((HEAP32[(($ld$16$0)>>2)])|0);
   $ld$17$1=(($147+4)|0);
   $149$1=((HEAP32[(($ld$17$1)>>2)])|0);
   $st$18$0=(($148)|0);
   HEAP32[(($st$18$0)>>2)]=$149$0;
   $st$19$1=(($148+4)|0);
   HEAP32[(($st$19$1)>>2)]=$149$1;
   $150=((($j_077)+(1))|0);
   $151=($150|0)<($45|0);
   if ($151) {
    $j_077=$150;
   } else {
    break;
   }
  }
  $152=((($i_078)+(1))|0);
  $153=((HEAP32[(($8)>>2)])|0);
  $154=($152|0)<($153|0);
  if ($154) {
   $i_078=$152;
  } else {
   label = 11;
   break;
  }
 }
 if ((label|0) == 4) {
  ___assert_fail(((5944)|0),((10200)|0),((71)|0),((12872)|0));

 }
 else if ((label|0) == 11) {
  return;
 }
}


function __ZN9b2Contact11GetManifoldEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+64)|0);
 return (($1)|0);
}


function __ZN7b2Mat227SetZeroEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 _memset((((($1)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 return;
}


function __ZN15b2ContactSolverD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,label=0;

 $1=(($this+32)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+40)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=$4;
 __ZN16b2StackAllocator4FreeEPv($2,$5);
 $6=((HEAP32[(($1)>>2)])|0);
 $7=(($this+36)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=$8;
 __ZN16b2StackAllocator4FreeEPv($6,$9);
 return;
}


function __ZN15b2ContactSolver29InitializeVelocityConstraintsEv($this){
 $this=($this)|0;
 var $localCenterA=0,$tmpcast=0,$localCenterB=0,$tmpcast93=0,$cA=0,$tmpcast94=0,$vA=0,$tmpcast95=0,$cB=0,$tmpcast96=0,$vB=0,$tmpcast97=0,$xfA99=0,$tmpcast98=0,$xfB102=0,$tmpcast101=0,$1=0,$2=0,$worldManifold105=0,$worldManifold105_sub=0;
 var $tmpcast104=0,$3=0,$tmpcast106=0,$4=0,$tmpcast107=0,$tangent=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$i_0109=0,$27=0,$28=0,$29=0,$30=.0,$31=0,$32=.0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0;
 var $39=0,$40=0,$41=0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$48=.0,$49=0,$50=.0,$51=0,$52=0,$ld$0$0=0,$53$0=0,$ld$1$1=0,$53$1=0,$st$2$0=0,$st$3$1=0;
 var $54=0,$55=0,$ld$4$0=0,$56$0=0,$ld$5$1=0,$56$1=0,$st$6$0=0,$st$7$1=0,$57=0,$58=0,$59=0,$ld$8$0=0,$60$0=0,$ld$9$1=0,$60$1=0,$st$10$0=0,$st$11$1=0,$61=0,$62=0,$63=.0;
 var $64=0,$65=0,$66=0,$ld$12$0=0,$67$0=0,$ld$13$1=0,$67$1=0,$st$14$0=0,$st$15$1=0,$68=0,$69=0,$70=.0,$71=0,$72=0,$73=0,$ld$16$0=0,$74$0=0,$ld$17$1=0,$74$1=0,$st$18$0=0;
 var $st$19$1=0,$75=0,$76=0,$77=.0,$78=0,$79=0,$80=0,$ld$20$0=0,$81$0=0,$ld$21$1=0,$81$1=0,$st$22$0=0,$st$23$1=0,$82=0,$83=0,$84=.0,$85=0,$86=0,$87=0,$xfA99113114=0;
 var $xfB102115116=0,$90=0,$91=0,$ld$24$0=0,$92$0=0,$ld$25$1=0,$92$1=0,$st$26$0=0,$st$27$1=0,$93=0,$94=0,$95=0,$96=.0,$97=0,$j_0108=0,$99=0,$100=0,$101=0,$102=0,$ld$28$0=0;
 var $103$0=0,$ld$29$1=0,$103$1=0,$st$30$0=0,$st$31$1=0,$104=0,$105=0,$ld$32$0=0,$106$0=0,$ld$33$1=0,$106$1=0,$st$34$0=0,$st$35$1=0,$107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0;
 var $114=.0,$115=0,$117=.0,$119=.0,$120=0,$121=.0,$122=.0,$123=.0,$124=.0,$125=.0,$126=.0,$127=.0,$128=.0,$129=0,$131=.0,$133=.0,$134=0,$135=0,$136=.0,$137=0;
 var $139=.0,$140=.0,$141=.0,$143=0,$144=0,$_pr=0,$145=0,$147=0,$148=.0,$149=0,$150=.0,$151=0,$152=.0,$153=0,$154=.0,$155=.0,$156=.0,$157=.0,$158=.0,$159=.0;
 var $160=.0,$161=.0,$162=.0,$163=.0,$164=.0,$165=.0,$166=.0,$167=.0,$168=.0,$169=.0,$170=.0,$171=.0,$172=.0,$173=.0,$174=.0,$175=.0,$176=.0,$177=0,$179=0,$180=0;
 var $181=0,$182=0,$183=0,$185=0,$186=0,$187=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $localCenterA=((sp)|0);
 $tmpcast=$localCenterA;
 $localCenterB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast93=$localCenterB;
 $cA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast94=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast95=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast96=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast97=$vB;
 $xfA99=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast98=$xfA99;
 $xfB102=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast101=$xfB102;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $worldManifold105=STACKTOP;STACKTOP = (STACKTOP + 24)|0;
 $worldManifold105_sub=(($worldManifold105)|0);
 $tmpcast104=$worldManifold105;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast106=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast107=$4;
 $tangent=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $11=(($this+48)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=($12|0)>0;
 if (!($13)) {
  STACKTOP=sp;return;
 }
 $14=(($this+40)|0);
 $15=(($this+36)|0);
 $16=(($this+44)|0);
 $17=(($this+24)|0);
 $18=(($this+28)|0);
 $19=(($xfA99+8)|0);
 $20=$19;
 $21=(($xfB102+8)|0);
 $22=$21;
 $23=$10;
 $24=(($worldManifold105+8)|0);
 $25=$24;
 $i_0109=0;
 while(1) {

  $27=((HEAP32[(($14)>>2)])|0);
  $28=((HEAP32[(($15)>>2)])|0);
  $29=(($28+((($i_0109)*(88))&-1)+76)|0);
  $30=(+(HEAPF32[(($29)>>2)]));
  $31=(($28+((($i_0109)*(88))&-1)+80)|0);
  $32=(+(HEAPF32[(($31)>>2)]));
  $33=(($27+((($i_0109)*(152))&-1)+148)|0);
  $34=((HEAP32[(($33)>>2)])|0);
  $35=((HEAP32[(($16)>>2)])|0);
  $36=(($35+($34<<2))|0);
  $37=((HEAP32[(($36)>>2)])|0);
  $38=((__ZN9b2Contact11GetManifoldEv($37))|0);
  $39=(($27+((($i_0109)*(152))&-1)+112)|0);
  $40=((HEAP32[(($39)>>2)])|0);
  $41=(($27+((($i_0109)*(152))&-1)+116)|0);
  $42=((HEAP32[(($41)>>2)])|0);
  $43=(($27+((($i_0109)*(152))&-1)+120)|0);
  $44=(+(HEAPF32[(($43)>>2)]));
  $45=(($27+((($i_0109)*(152))&-1)+124)|0);
  $46=(+(HEAPF32[(($45)>>2)]));
  $47=(($27+((($i_0109)*(152))&-1)+128)|0);
  $48=(+(HEAPF32[(($47)>>2)]));
  $49=(($27+((($i_0109)*(152))&-1)+132)|0);
  $50=(+(HEAPF32[(($49)>>2)]));
  $51=(($28+((($i_0109)*(88))&-1)+48)|0);
  $52=$51;
  $ld$0$0=(($52)|0);
  $53$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($52+4)|0);
  $53$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($localCenterA)|0);
  HEAP32[(($st$2$0)>>2)]=$53$0;
  $st$3$1=(($localCenterA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$53$1;
  $54=(($28+((($i_0109)*(88))&-1)+56)|0);
  $55=$54;
  $ld$4$0=(($55)|0);
  $56$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($55+4)|0);
  $56$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($localCenterB)|0);
  HEAP32[(($st$6$0)>>2)]=$56$0;
  $st$7$1=(($localCenterB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$56$1;
  $57=((HEAP32[(($17)>>2)])|0);
  $58=(($57+((($40)*(12))&-1))|0);
  $59=$58;
  $ld$8$0=(($59)|0);
  $60$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($59+4)|0);
  $60$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($cA)|0);
  HEAP32[(($st$10$0)>>2)]=$60$0;
  $st$11$1=(($cA+4)|0);
  HEAP32[(($st$11$1)>>2)]=$60$1;
  $61=((HEAP32[(($17)>>2)])|0);
  $62=(($61+((($40)*(12))&-1)+8)|0);
  $63=(+(HEAPF32[(($62)>>2)]));
  $64=((HEAP32[(($18)>>2)])|0);
  $65=(($64+((($40)*(12))&-1))|0);
  $66=$65;
  $ld$12$0=(($66)|0);
  $67$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($66+4)|0);
  $67$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($vA)|0);
  HEAP32[(($st$14$0)>>2)]=$67$0;
  $st$15$1=(($vA+4)|0);
  HEAP32[(($st$15$1)>>2)]=$67$1;
  $68=((HEAP32[(($18)>>2)])|0);
  $69=(($68+((($40)*(12))&-1)+8)|0);
  $70=(+(HEAPF32[(($69)>>2)]));
  $71=((HEAP32[(($17)>>2)])|0);
  $72=(($71+((($42)*(12))&-1))|0);
  $73=$72;
  $ld$16$0=(($73)|0);
  $74$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($73+4)|0);
  $74$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($cB)|0);
  HEAP32[(($st$18$0)>>2)]=$74$0;
  $st$19$1=(($cB+4)|0);
  HEAP32[(($st$19$1)>>2)]=$74$1;
  $75=((HEAP32[(($17)>>2)])|0);
  $76=(($75+((($42)*(12))&-1)+8)|0);
  $77=(+(HEAPF32[(($76)>>2)]));
  $78=((HEAP32[(($18)>>2)])|0);
  $79=(($78+((($42)*(12))&-1))|0);
  $80=$79;
  $ld$20$0=(($80)|0);
  $81$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($80+4)|0);
  $81$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($vB)|0);
  HEAP32[(($st$22$0)>>2)]=$81$0;
  $st$23$1=(($vB+4)|0);
  HEAP32[(($st$23$1)>>2)]=$81$1;
  $82=((HEAP32[(($18)>>2)])|0);
  $83=(($82+((($42)*(12))&-1)+8)|0);
  $84=(+(HEAPF32[(($83)>>2)]));
  $85=(($38+60)|0);
  $86=((HEAP32[(($85)>>2)])|0);
  $87=($86|0)>0;
  if (!($87)) {
   label = 4;
   break;
  }
  __ZN5b2Rot3SetEf($20,$63);
  __ZN5b2Rot3SetEf($22,$77);
  __Z5b2MulRK5b2RotRK6b2Vec2($1,$20,$tmpcast);
  $xfA99113114=$xfA99;
  __ZmiRK6b2Vec2S1_($xfA99113114,$tmpcast94,$1);
  __Z5b2MulRK5b2RotRK6b2Vec2($2,$22,$tmpcast93);
  $xfB102115116=$xfB102;
  __ZmiRK6b2Vec2S1_($xfB102115116,$tmpcast96,$2);
  __ZN15b2WorldManifold10InitializeEPK10b2ManifoldRK11b2TransformfS5_f($tmpcast104,$38,$tmpcast98,$30,$tmpcast101,$32);
  $90=(($27+((($i_0109)*(152))&-1)+72)|0);
  $91=$90;
  $ld$24$0=(($worldManifold105_sub)|0);
  $92$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($worldManifold105_sub+4)|0);
  $92$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($91)|0);
  HEAP32[(($st$26$0)>>2)]=$92$0;
  $st$27$1=(($91+4)|0);
  HEAP32[(($st$27$1)>>2)]=$92$1;
  $93=(($27+((($i_0109)*(152))&-1)+144)|0);
  $94=((HEAP32[(($93)>>2)])|0);
  $95=($94|0)>0;
  do {
   if ($95) {
    $96=($44)+($46);
    $97=(($27+((($i_0109)*(152))&-1)+140)|0);
    $j_0108=0;
    while(1) {

     $99=(($27+((($i_0109)*(152))&-1)+((($j_0108)*(36))&-1))|0);
     $100=(($99)|0);
     $101=(($25+($j_0108<<3))|0);
     __ZmiRK6b2Vec2S1_($tmpcast106,$101,$tmpcast94);
     $102=$99;
     $ld$28$0=(($3)|0);
     $103$0=((HEAP32[(($ld$28$0)>>2)])|0);
     $ld$29$1=(($3+4)|0);
     $103$1=((HEAP32[(($ld$29$1)>>2)])|0);
     $st$30$0=(($102)|0);
     HEAP32[(($st$30$0)>>2)]=$103$0;
     $st$31$1=(($102+4)|0);
     HEAP32[(($st$31$1)>>2)]=$103$1;
     $104=(($27+((($i_0109)*(152))&-1)+((($j_0108)*(36))&-1)+8)|0);
     __ZmiRK6b2Vec2S1_($tmpcast107,$101,$tmpcast96);
     $105=$104;
     $ld$32$0=(($4)|0);
     $106$0=((HEAP32[(($ld$32$0)>>2)])|0);
     $ld$33$1=(($4+4)|0);
     $106$1=((HEAP32[(($ld$33$1)>>2)])|0);
     $st$34$0=(($105)|0);
     HEAP32[(($st$34$0)>>2)]=$106$0;
     $st$35$1=(($105+4)|0);
     HEAP32[(($st$35$1)>>2)]=$106$1;
     $107=(+(__Z7b2CrossRK6b2Vec2S1_($100,$90)));
     $108=(+(__Z7b2CrossRK6b2Vec2S1_($104,$90)));
     $109=($48)*($107);
     $110=($107)*($109);
     $111=($96)+($110);
     $112=($50)*($108);
     $113=($108)*($112);
     $114=($111)+($113);
     $115=$114>(0.0);
     if ($115) {
      $117=((1.0))/($114);
      $119=$117;
     } else {
      $119=0.0;
     }

     $120=(($27+((($i_0109)*(152))&-1)+((($j_0108)*(36))&-1)+24)|0);
     HEAPF32[(($120)>>2)]=$119;
     __Z7b2CrossRK6b2Vec2f($tangent,$90,1.0);
     $121=(+(__Z7b2CrossRK6b2Vec2S1_($100,$tangent)));
     $122=(+(__Z7b2CrossRK6b2Vec2S1_($104,$tangent)));
     $123=($48)*($121);
     $124=($121)*($123);
     $125=($96)+($124);
     $126=($50)*($122);
     $127=($122)*($126);
     $128=($125)+($127);
     $129=$128>(0.0);
     if ($129) {
      $131=((1.0))/($128);
      $133=$131;
     } else {
      $133=0.0;
     }

     $134=(($27+((($i_0109)*(152))&-1)+((($j_0108)*(36))&-1)+28)|0);
     HEAPF32[(($134)>>2)]=$133;
     $135=(($27+((($i_0109)*(152))&-1)+((($j_0108)*(36))&-1)+32)|0);
     HEAPF32[(($135)>>2)]=0.0;
     __Z7b2CrossfRK6b2Vec2($8,$84,$104);
     __ZplRK6b2Vec2S1_($7,$tmpcast97,$8);
     __ZmiRK6b2Vec2S1_($6,$7,$tmpcast95);
     __Z7b2CrossfRK6b2Vec2($9,$70,$100);
     __ZmiRK6b2Vec2S1_($5,$6,$9);
     $136=(+(__Z5b2DotRK6b2Vec2S1_($90,$5)));
     $137=$136<(-1.0);
     if ($137) {
      $139=(+(HEAPF32[(($97)>>2)]));
      $140=((-.0))-($139);
      $141=($136)*($140);
      HEAPF32[(($135)>>2)]=$141;
     }
     $143=((($j_0108)+(1))|0);
     $144=($143|0)<($94|0);
     if ($144) {
      $j_0108=$143;
     } else {
      break;
     }
    }
    $_pr=((HEAP32[(($93)>>2)])|0);
    $145=($_pr|0)==2;
    if (!($145)) {
     break;
    }
    $147=(($27+((($i_0109)*(152))&-1))|0);
    $148=(+(__Z7b2CrossRK6b2Vec2S1_($147,$90)));
    $149=(($27+((($i_0109)*(152))&-1)+8)|0);
    $150=(+(__Z7b2CrossRK6b2Vec2S1_($149,$90)));
    $151=(($27+((($i_0109)*(152))&-1)+36)|0);
    $152=(+(__Z7b2CrossRK6b2Vec2S1_($151,$90)));
    $153=(($27+((($i_0109)*(152))&-1)+44)|0);
    $154=(+(__Z7b2CrossRK6b2Vec2S1_($153,$90)));
    $155=($44)+($46);
    $156=($48)*($148);
    $157=($148)*($156);
    $158=($155)+($157);
    $159=($50)*($150);
    $160=($150)*($159);
    $161=($158)+($160);
    $162=($48)*($152);
    $163=($152)*($162);
    $164=($155)+($163);
    $165=($50)*($154);
    $166=($154)*($165);
    $167=($164)+($166);
    $168=($156)*($152);
    $169=($155)+($168);
    $170=($159)*($154);
    $171=($169)+($170);
    $172=($161)*($161);
    $173=($161)*($167);
    $174=($171)*($171);
    $175=($173)-($174);
    $176=($175)*((1000.0));
    $177=$172<$176;
    if ($177) {
     $179=(($27+((($i_0109)*(152))&-1)+96)|0);
     $180=(($179)|0);
     __ZN6b2Vec23SetEff($180,$161,$171);
     $181=(($27+((($i_0109)*(152))&-1)+104)|0);
     __ZN6b2Vec23SetEff($181,$171,$167);
     $182=(($27+((($i_0109)*(152))&-1)+80)|0);
     __ZNK7b2Mat2210GetInverseEv($10,$179);
     $183=$182;
     HEAP32[(($183)>>2)]=((HEAP32[(($23)>>2)])|0);HEAP32[((($183)+(4))>>2)]=((HEAP32[((($23)+(4))>>2)])|0);HEAP32[((($183)+(8))>>2)]=((HEAP32[((($23)+(8))>>2)])|0);HEAP32[((($183)+(12))>>2)]=((HEAP32[((($23)+(12))>>2)])|0);
     break;
    } else {
     HEAP32[(($93)>>2)]=1;
     break;
    }
   }
  } while(0);
  $185=((($i_0109)+(1))|0);
  $186=((HEAP32[(($11)>>2)])|0);
  $187=($185|0)<($186|0);
  if ($187) {
   $i_0109=$185;
  } else {
   label = 19;
   break;
  }
 }
 if ((label|0) == 4) {
  ___assert_fail(((7000)|0),((10200)|0),((168)|0),((12888)|0));

 }
 else if ((label|0) == 19) {
  STACKTOP=sp;return;
 }
}


function __ZNK7b2Mat2210GetInverseEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,$10=.0,$11=.0,$12=0,$14=.0,$det_0=.0,$16=.0,$17=0,$18=.0,$19=.0,$20=0,$21=.0;
 var $22=0,$23=.0,$24=0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+8)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+4)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($this+12)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($2)*($8);
 $10=($4)*($6);
 $11=($9)-($10);
 $12=$11!=(0.0);
 if ($12) {
  $14=((1.0))/($11);
  $det_0=$14;
 } else {
  $det_0=$11;
 }

 $16=($8)*($det_0);
 $17=(($agg_result)|0);
 HEAPF32[(($17)>>2)]=$16;
 $18=((-.0))-($det_0);
 $19=($4)*($18);
 $20=(($agg_result+8)|0);
 HEAPF32[(($20)>>2)]=$19;
 $21=($6)*($18);
 $22=(($agg_result+4)|0);
 HEAPF32[(($22)>>2)]=$21;
 $23=($2)*($det_0);
 $24=(($agg_result+12)|0);
 HEAPF32[(($24)>>2)]=$23;
 return;
}


function __ZN15b2ContactSolver9WarmStartEv($this){
 $this=($this)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast24=0,$normal=0,$tmpcast25=0,$tangent=0,$P=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$i_030=0,$11=0,$12=0;
 var $13=0,$14=0,$15=0,$16=0,$17=.0,$18=0,$19=.0,$20=0,$21=.0,$22=0,$23=.0,$24=0,$25=0,$26=0,$27=0,$28=0,$ld$0$0=0,$29$0=0,$ld$1$1=0,$29$1=0;
 var $st$2$0=0,$st$3$1=0,$30=0,$31=0,$32=.0,$33=0,$34=0,$ld$4$0=0,$35$0=0,$ld$5$1=0,$35$1=0,$st$6$0=0,$st$7$1=0,$36=0,$37=0,$38=.0,$39=0,$40=0,$ld$8$0=0,$41$0=0;
 var $ld$9$1=0,$41$1=0,$st$10$0=0,$st$11$1=0,$42=0,$j_028=0,$wB_027=.0,$wA_026=.0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=.0,$54=.0;
 var $55=0,$56=0,$wB_0_lcssa=.0,$wA_0_lcssa=.0,$57=0,$58=0,$59=0,$ld$12$0=0,$60$0=0,$ld$13$1=0,$60$1=0,$st$14$0=0,$st$15$1=0,$61=0,$62=0,$63=0,$64=0,$65=0,$ld$16$0=0,$66$0=0;
 var $ld$17$1=0,$66$1=0,$st$18$0=0,$st$19$1=0,$67=0,$68=0,$69=0,$70=0,$71=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast24=$vB;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast25=$normal;
 $tangent=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=(($this+48)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 if (!($7)) {
  STACKTOP=sp;return;
 }
 $8=(($this+40)|0);
 $9=(($this+28)|0);
 $i_030=0;
 while(1) {

  $11=((HEAP32[(($8)>>2)])|0);
  $12=(($11+((($i_030)*(152))&-1)+112)|0);
  $13=((HEAP32[(($12)>>2)])|0);
  $14=(($11+((($i_030)*(152))&-1)+116)|0);
  $15=((HEAP32[(($14)>>2)])|0);
  $16=(($11+((($i_030)*(152))&-1)+120)|0);
  $17=(+(HEAPF32[(($16)>>2)]));
  $18=(($11+((($i_030)*(152))&-1)+128)|0);
  $19=(+(HEAPF32[(($18)>>2)]));
  $20=(($11+((($i_030)*(152))&-1)+124)|0);
  $21=(+(HEAPF32[(($20)>>2)]));
  $22=(($11+((($i_030)*(152))&-1)+132)|0);
  $23=(+(HEAPF32[(($22)>>2)]));
  $24=(($11+((($i_030)*(152))&-1)+144)|0);
  $25=((HEAP32[(($24)>>2)])|0);
  $26=((HEAP32[(($9)>>2)])|0);
  $27=(($26+((($13)*(12))&-1))|0);
  $28=$27;
  $ld$0$0=(($28)|0);
  $29$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($28+4)|0);
  $29$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($vA)|0);
  HEAP32[(($st$2$0)>>2)]=$29$0;
  $st$3$1=(($vA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$29$1;
  $30=((HEAP32[(($9)>>2)])|0);
  $31=(($30+((($13)*(12))&-1)+8)|0);
  $32=(+(HEAPF32[(($31)>>2)]));
  $33=(($30+((($15)*(12))&-1))|0);
  $34=$33;
  $ld$4$0=(($34)|0);
  $35$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($34+4)|0);
  $35$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($vB)|0);
  HEAP32[(($st$6$0)>>2)]=$35$0;
  $st$7$1=(($vB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$35$1;
  $36=((HEAP32[(($9)>>2)])|0);
  $37=(($36+((($15)*(12))&-1)+8)|0);
  $38=(+(HEAPF32[(($37)>>2)]));
  $39=(($11+((($i_030)*(152))&-1)+72)|0);
  $40=$39;
  $ld$8$0=(($40)|0);
  $41$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($40+4)|0);
  $41$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($normal)|0);
  HEAP32[(($st$10$0)>>2)]=$41$0;
  $st$11$1=(($normal+4)|0);
  HEAP32[(($st$11$1)>>2)]=$41$1;
  __Z7b2CrossRK6b2Vec2f($tangent,$tmpcast25,1.0);
  $42=($25|0)>0;
  if ($42) {
   $wA_026=$32;$wB_027=$38;$j_028=0;
   while(1) {



    $43=(($11+((($i_030)*(152))&-1)+((($j_028)*(36))&-1)+16)|0);
    $44=(+(HEAPF32[(($43)>>2)]));
    __ZmlfRK6b2Vec2($1,$44,$tmpcast25);
    $45=(($11+((($i_030)*(152))&-1)+((($j_028)*(36))&-1)+20)|0);
    $46=(+(HEAPF32[(($45)>>2)]));
    __ZmlfRK6b2Vec2($2,$46,$tangent);
    __ZplRK6b2Vec2S1_($P,$1,$2);
    $47=(($11+((($i_030)*(152))&-1)+((($j_028)*(36))&-1))|0);
    $48=(+(__Z7b2CrossRK6b2Vec2S1_($47,$P)));
    $49=($19)*($48);
    $50=($wA_026)-($49);
    __ZmlfRK6b2Vec2($3,$17,$P);
    __ZN6b2Vec2mIERKS_($tmpcast,$3);
    $51=(($11+((($i_030)*(152))&-1)+((($j_028)*(36))&-1)+8)|0);
    $52=(+(__Z7b2CrossRK6b2Vec2S1_($51,$P)));
    $53=($23)*($52);
    $54=($wB_027)+($53);
    __ZmlfRK6b2Vec2($4,$21,$P);
    __ZN6b2Vec2pLERKS_($tmpcast24,$4);
    $55=((($j_028)+(1))|0);
    $56=($55|0)<($25|0);
    if ($56) {
     $wA_026=$50;$wB_027=$54;$j_028=$55;
    } else {
     $wA_0_lcssa=$50;$wB_0_lcssa=$54;
     break;
    }
   }
  } else {
   $wA_0_lcssa=$32;$wB_0_lcssa=$38;
  }


  $57=((HEAP32[(($9)>>2)])|0);
  $58=(($57+((($13)*(12))&-1))|0);
  $59=$58;
  $ld$12$0=(($vA)|0);
  $60$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($vA+4)|0);
  $60$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($59)|0);
  HEAP32[(($st$14$0)>>2)]=$60$0;
  $st$15$1=(($59+4)|0);
  HEAP32[(($st$15$1)>>2)]=$60$1;
  $61=((HEAP32[(($9)>>2)])|0);
  $62=(($61+((($13)*(12))&-1)+8)|0);
  HEAPF32[(($62)>>2)]=$wA_0_lcssa;
  $63=((HEAP32[(($9)>>2)])|0);
  $64=(($63+((($15)*(12))&-1))|0);
  $65=$64;
  $ld$16$0=(($vB)|0);
  $66$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($vB+4)|0);
  $66$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($65)|0);
  HEAP32[(($st$18$0)>>2)]=$66$0;
  $st$19$1=(($65+4)|0);
  HEAP32[(($st$19$1)>>2)]=$66$1;
  $67=((HEAP32[(($9)>>2)])|0);
  $68=(($67+((($15)*(12))&-1)+8)|0);
  HEAPF32[(($68)>>2)]=$wB_0_lcssa;
  $69=((($i_030)+(1))|0);
  $70=((HEAP32[(($5)>>2)])|0);
  $71=($69|0)<($70|0);
  if ($71) {
   $i_030=$69;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN15b2ContactSolver24SolveVelocityConstraintsEv($this){
 $this=($this)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast126=0,$normal=0,$tmpcast127=0,$tangent=0,$dv=0,$1=0,$2=0,$3=0,$4=0,$P=0,$5=0,$6=0,$dv2=0,$7=0,$8=0,$9=0,$10=0;
 var $P5=0,$11=0,$12=0,$a=0,$dv1=0,$13=0,$14=0,$15=0,$16=0,$dv26=0,$17=0,$18=0,$19=0,$20=0,$b=0,$21=0,$x=0,$22=0,$d=0,$P1=0;
 var $P2=0,$23=0,$24=0,$25=0,$26=0,$d7=0,$P18=0,$P29=0,$27=0,$28=0,$29=0,$30=0,$d10=0,$P111=0,$P212=0,$31=0,$32=0,$33=0,$34=0,$d13=0;
 var $P114=0,$P215=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0;
 var $53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$i_0132=0,$60=0,$61=0,$62=0,$63=0,$64=0,$65=0,$66=0,$67=.0,$68=0,$69=.0,$70=0,$71=.0,$72=0;
 var $73=.0,$74=0,$75=0,$76=0,$77=0,$78=0,$ld$0$0=0,$79$0=0,$ld$1$1=0,$79$1=0,$st$2$0=0,$st$3$1=0,$80=0,$81=0,$82=.0,$83=0,$84=0,$ld$4$0=0,$85$0=0,$ld$5$1=0;
 var $85$1=0,$st$6$0=0,$st$7$1=0,$86=0,$87=0,$88=.0,$89=0,$90=0,$ld$8$0=0,$91$0=0,$ld$9$1=0,$91$1=0,$st$10$0=0,$st$11$1=0,$92=0,$93=.0,$_off=0,$94=0,$wA_0130=.0,$wB_0129=.0;
 var $j_0128=0,$96=0,$97=0,$98=.0,$99=0,$100=.0,$101=.0,$102=.0,$103=0,$104=.0,$105=.0,$106=0,$107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0;
 var $115=.0,$116=.0,$117=.0,$118=0,$119=0,$120=0,$121=0,$123=0,$124=0,$125=.0,$126=0,$127=.0,$128=.0,$129=0,$130=.0,$131=.0,$132=.0,$133=0,$134=.0,$135=.0;
 var $136=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=.0,$143=.0,$145=0,$146=.0,$147=0,$148=.0,$149=.0,$150=0,$152=.0,$153=0,$156=0,$157=0,$158=0,$159=0;
 var $160=.0,$161=.0,$162=0,$163=.0,$164=.0,$165=0,$166=.0,$167=.0,$168=0,$169=0,$170=.0,$171=0,$173=.0,$174=0,$176=.0,$177=.0,$178=.0,$179=.0,$180=.0,$181=.0;
 var $182=.0,$183=.0,$184=.0,$185=.0,$186=.0,$187=.0,$188=.0,$189=.0,$191=0,$192=.0,$193=.0,$194=.0,$195=.0,$196=.0,$197=0,$199=0,$200=.0,$201=.0,$202=.0,$203=.0;
 var $204=0,$206=.0,$207=.0,$208=.0,$209=.0,$210=.0,$211=.0,$212=.0,$213=.0,$214=.0,$215=.0,$216=.0,$217=.0,$218=.0,$219=.0,$221=0,$222=.0,$223=.0,$224=.0,$225=.0;
 var $226=0,$228=0,$229=.0,$230=.0,$231=.0,$232=.0,$233=0,$235=.0,$236=.0,$237=.0,$238=.0,$239=.0,$240=.0,$241=.0,$242=.0,$243=.0,$244=.0,$245=.0,$246=.0,$247=.0;
 var $248=.0,$250=.0,$251=0,$253=.0,$254=0,$256=.0,$257=.0,$258=.0,$259=.0,$260=.0,$261=.0,$262=.0,$263=.0,$264=.0,$265=.0,$266=.0,$267=.0,$268=.0,$269=.0,$wB_1=.0;
 var $wA_1=.0,$271=0,$272=0,$273=0,$ld$12$0=0,$274$0=0,$ld$13$1=0,$274$1=0,$st$14$0=0,$st$15$1=0,$275=0,$276=0,$277=0,$278=0,$279=0,$ld$16$0=0,$280$0=0,$ld$17$1=0,$280$1=0,$st$18$0=0;
 var $st$19$1=0,$281=0,$282=0,$283=0,$284=0,$285=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast126=$vB;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast127=$normal;
 $tangent=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $dv=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $dv2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $a=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $dv1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $16=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $dv26=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $17=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $19=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $20=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $b=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $21=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $x=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $22=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $23=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $24=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $25=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $26=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P29=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $27=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $28=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $29=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $30=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P111=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P212=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $31=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $32=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $33=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $34=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P114=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P215=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $35=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $36=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $37=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $38=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $39=(($this+48)|0);
 $40=((HEAP32[(($39)>>2)])|0);
 $41=($40|0)>0;
 if (!($41)) {
  STACKTOP=sp;return;
 }
 $42=(($this+40)|0);
 $43=(($this+28)|0);
 $44=(($a)|0);
 $45=(($a+4)|0);
 $46=(($b)|0);
 $47=(($b+4)|0);
 $48=(($x)|0);
 $49=(($x+4)|0);
 $50=(($d13)|0);
 $51=(($d13+4)|0);
 $52=(($d10)|0);
 $53=(($d10+4)|0);
 $54=(($d7)|0);
 $55=(($d7+4)|0);
 $56=(($x+4)|0);
 $57=(($d)|0);
 $58=(($d+4)|0);
 $i_0132=0;
 L4: while(1) {

  $60=((HEAP32[(($42)>>2)])|0);
  $61=(($60+((($i_0132)*(152))&-1))|0);
  $62=(($60+((($i_0132)*(152))&-1)+112)|0);
  $63=((HEAP32[(($62)>>2)])|0);
  $64=(($60+((($i_0132)*(152))&-1)+116)|0);
  $65=((HEAP32[(($64)>>2)])|0);
  $66=(($60+((($i_0132)*(152))&-1)+120)|0);
  $67=(+(HEAPF32[(($66)>>2)]));
  $68=(($60+((($i_0132)*(152))&-1)+128)|0);
  $69=(+(HEAPF32[(($68)>>2)]));
  $70=(($60+((($i_0132)*(152))&-1)+124)|0);
  $71=(+(HEAPF32[(($70)>>2)]));
  $72=(($60+((($i_0132)*(152))&-1)+132)|0);
  $73=(+(HEAPF32[(($72)>>2)]));
  $74=(($60+((($i_0132)*(152))&-1)+144)|0);
  $75=((HEAP32[(($74)>>2)])|0);
  $76=((HEAP32[(($43)>>2)])|0);
  $77=(($76+((($63)*(12))&-1))|0);
  $78=$77;
  $ld$0$0=(($78)|0);
  $79$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($78+4)|0);
  $79$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($vA)|0);
  HEAP32[(($st$2$0)>>2)]=$79$0;
  $st$3$1=(($vA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$79$1;
  $80=((HEAP32[(($43)>>2)])|0);
  $81=(($80+((($63)*(12))&-1)+8)|0);
  $82=(+(HEAPF32[(($81)>>2)]));
  $83=(($80+((($65)*(12))&-1))|0);
  $84=$83;
  $ld$4$0=(($84)|0);
  $85$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($84+4)|0);
  $85$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($vB)|0);
  HEAP32[(($st$6$0)>>2)]=$85$0;
  $st$7$1=(($vB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$85$1;
  $86=((HEAP32[(($43)>>2)])|0);
  $87=(($86+((($65)*(12))&-1)+8)|0);
  $88=(+(HEAPF32[(($87)>>2)]));
  $89=(($60+((($i_0132)*(152))&-1)+72)|0);
  $90=$89;
  $ld$8$0=(($90)|0);
  $91$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($90+4)|0);
  $91$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($normal)|0);
  HEAP32[(($st$10$0)>>2)]=$91$0;
  $st$11$1=(($normal+4)|0);
  HEAP32[(($st$11$1)>>2)]=$91$1;
  __Z7b2CrossRK6b2Vec2f($tangent,$tmpcast127,1.0);
  $92=(($60+((($i_0132)*(152))&-1)+136)|0);
  $93=(+(HEAPF32[(($92)>>2)]));
  $_off=((($75)-(1))|0);
  $94=($_off>>>0)<((2)>>>0);
  if ($94) {
   $j_0128=0;$wB_0129=$88;$wA_0130=$82;
  } else {
   label = 4;
   break;
  }
  while(1) {



   $96=(($60+((($i_0132)*(152))&-1)+((($j_0128)*(36))&-1)+8)|0);
   __Z7b2CrossfRK6b2Vec2($3,$wB_0129,$96);
   __ZplRK6b2Vec2S1_($2,$tmpcast126,$3);
   __ZmiRK6b2Vec2S1_($1,$2,$tmpcast);
   $97=(($60+((($i_0132)*(152))&-1)+((($j_0128)*(36))&-1))|0);
   __Z7b2CrossfRK6b2Vec2($4,$wA_0130,$97);
   __ZmiRK6b2Vec2S1_($dv,$1,$4);
   $98=(+(__Z5b2DotRK6b2Vec2S1_($dv,$tangent)));
   $99=(($60+((($i_0132)*(152))&-1)+((($j_0128)*(36))&-1)+28)|0);
   $100=(+(HEAPF32[(($99)>>2)]));
   $101=((-.0))-($98);
   $102=($100)*($101);
   $103=(($60+((($i_0132)*(152))&-1)+((($j_0128)*(36))&-1)+16)|0);
   $104=(+(HEAPF32[(($103)>>2)]));
   $105=($93)*($104);
   $106=(($60+((($i_0132)*(152))&-1)+((($j_0128)*(36))&-1)+20)|0);
   $107=(+(HEAPF32[(($106)>>2)]));
   $108=($102)+($107);
   $109=((-.0))-($105);
   $110=(+(__Z7b2ClampIfET_S0_S0_S0_($108,$109,$105)));
   $111=($110)-($107);
   HEAPF32[(($106)>>2)]=$110;
   __ZmlfRK6b2Vec2($P,$111,$tangent);
   __ZmlfRK6b2Vec2($5,$67,$P);
   __ZN6b2Vec2mIERKS_($tmpcast,$5);
   $112=(+(__Z7b2CrossRK6b2Vec2S1_($97,$P)));
   $113=($69)*($112);
   $114=($wA_0130)-($113);
   __ZmlfRK6b2Vec2($6,$71,$P);
   __ZN6b2Vec2pLERKS_($tmpcast126,$6);
   $115=(+(__Z7b2CrossRK6b2Vec2S1_($96,$P)));
   $116=($73)*($115);
   $117=($wB_0129)+($116);
   $118=((($j_0128)+(1))|0);
   $119=($118|0)<($75|0);
   if ($119) {
    $j_0128=$118;$wB_0129=$117;$wA_0130=$114;
   } else {
    break;
   }
  }
  $120=((HEAP32[(($74)>>2)])|0);
  $121=($120|0)==1;
  L9: do {
   if ($121) {
    $123=(($60+((($i_0132)*(152))&-1)+8)|0);
    __Z7b2CrossfRK6b2Vec2($9,$117,$123);
    __ZplRK6b2Vec2S1_($8,$tmpcast126,$9);
    __ZmiRK6b2Vec2S1_($7,$8,$tmpcast);
    $124=(($61)|0);
    __Z7b2CrossfRK6b2Vec2($10,$114,$124);
    __ZmiRK6b2Vec2S1_($dv2,$7,$10);
    $125=(+(__Z5b2DotRK6b2Vec2S1_($dv2,$tmpcast127)));
    $126=(($60+((($i_0132)*(152))&-1)+24)|0);
    $127=(+(HEAPF32[(($126)>>2)]));
    $128=((-.0))-($127);
    $129=(($60+((($i_0132)*(152))&-1)+32)|0);
    $130=(+(HEAPF32[(($129)>>2)]));
    $131=($125)-($130);
    $132=($131)*($128);
    $133=(($60+((($i_0132)*(152))&-1)+16)|0);
    $134=(+(HEAPF32[(($133)>>2)]));
    $135=($134)+($132);
    $136=(+(__Z5b2MaxIfET_S0_S0_($135,0.0)));
    $137=($136)-($134);
    HEAPF32[(($133)>>2)]=$136;
    __ZmlfRK6b2Vec2($P5,$137,$tmpcast127);
    __ZmlfRK6b2Vec2($11,$67,$P5);
    __ZN6b2Vec2mIERKS_($tmpcast,$11);
    $138=(+(__Z7b2CrossRK6b2Vec2S1_($124,$P5)));
    $139=($69)*($138);
    $140=($114)-($139);
    __ZmlfRK6b2Vec2($12,$71,$P5);
    __ZN6b2Vec2pLERKS_($tmpcast126,$12);
    $141=(+(__Z7b2CrossRK6b2Vec2S1_($123,$P5)));
    $142=($73)*($141);
    $143=($117)+($142);
    $wA_1=$140;$wB_1=$143;
   } else {
    $145=(($60+((($i_0132)*(152))&-1)+16)|0);
    $146=(+(HEAPF32[(($145)>>2)]));
    $147=(($60+((($i_0132)*(152))&-1)+52)|0);
    $148=(+(HEAPF32[(($147)>>2)]));
    __ZN6b2Vec2C1Eff($a,$146,$148);
    $149=(+(HEAPF32[(($44)>>2)]));
    $150=$149<(0.0);
    if ($150) {
     label = 10;
     break L4;
    }
    $152=(+(HEAPF32[(($45)>>2)]));
    $153=$152<(0.0);
    if ($153) {
     label = 10;
     break L4;
    }
    $156=(($60+((($i_0132)*(152))&-1)+8)|0);
    __Z7b2CrossfRK6b2Vec2($15,$117,$156);
    __ZplRK6b2Vec2S1_($14,$tmpcast126,$15);
    __ZmiRK6b2Vec2S1_($13,$14,$tmpcast);
    $157=(($61)|0);
    __Z7b2CrossfRK6b2Vec2($16,$114,$157);
    __ZmiRK6b2Vec2S1_($dv1,$13,$16);
    $158=(($60+((($i_0132)*(152))&-1)+44)|0);
    __Z7b2CrossfRK6b2Vec2($19,$117,$158);
    __ZplRK6b2Vec2S1_($18,$tmpcast126,$19);
    __ZmiRK6b2Vec2S1_($17,$18,$tmpcast);
    $159=(($60+((($i_0132)*(152))&-1)+36)|0);
    __Z7b2CrossfRK6b2Vec2($20,$114,$159);
    __ZmiRK6b2Vec2S1_($dv26,$17,$20);
    $160=(+(__Z5b2DotRK6b2Vec2S1_($dv1,$tmpcast127)));
    $161=(+(__Z5b2DotRK6b2Vec2S1_($dv26,$tmpcast127)));
    $162=(($60+((($i_0132)*(152))&-1)+32)|0);
    $163=(+(HEAPF32[(($162)>>2)]));
    $164=($160)-($163);
    HEAPF32[(($46)>>2)]=$164;
    $165=(($60+((($i_0132)*(152))&-1)+68)|0);
    $166=(+(HEAPF32[(($165)>>2)]));
    $167=($161)-($166);
    HEAPF32[(($47)>>2)]=$167;
    $168=(($60+((($i_0132)*(152))&-1)+96)|0);
    __Z5b2MulRK7b2Mat22RK6b2Vec2($21,$168,$a);
    __ZN6b2Vec2mIERKS_($b,$21);
    $169=(($60+((($i_0132)*(152))&-1)+80)|0);
    __Z5b2MulRK7b2Mat22RK6b2Vec2($22,$169,$b);
    __ZNK6b2Vec2ngEv($x,$22);
    $170=(+(HEAPF32[(($48)>>2)]));
    $171=$170<(0.0);
    do {
     if (!($171)) {
      $173=(+(HEAPF32[(($56)>>2)]));
      $174=$173<(0.0);
      if ($174) {
       break;
      }
      __ZmiRK6b2Vec2S1_($d,$x,$a);
      $176=(+(HEAPF32[(($57)>>2)]));
      __ZmlfRK6b2Vec2($P1,$176,$tmpcast127);
      $177=(+(HEAPF32[(($58)>>2)]));
      __ZmlfRK6b2Vec2($P2,$177,$tmpcast127);
      __ZplRK6b2Vec2S1_($24,$P1,$P2);
      __ZmlfRK6b2Vec2($23,$67,$24);
      __ZN6b2Vec2mIERKS_($tmpcast,$23);
      $178=(+(__Z7b2CrossRK6b2Vec2S1_($157,$P1)));
      $179=(+(__Z7b2CrossRK6b2Vec2S1_($159,$P2)));
      $180=($178)+($179);
      $181=($69)*($180);
      $182=($114)-($181);
      __ZplRK6b2Vec2S1_($26,$P1,$P2);
      __ZmlfRK6b2Vec2($25,$71,$26);
      __ZN6b2Vec2pLERKS_($tmpcast126,$25);
      $183=(+(__Z7b2CrossRK6b2Vec2S1_($156,$P1)));
      $184=(+(__Z7b2CrossRK6b2Vec2S1_($158,$P2)));
      $185=($183)+($184);
      $186=($73)*($185);
      $187=($117)+($186);
      $188=(+(HEAPF32[(($48)>>2)]));
      HEAPF32[(($145)>>2)]=$188;
      $189=(+(HEAPF32[(($56)>>2)]));
      HEAPF32[(($147)>>2)]=$189;
      $wA_1=$182;$wB_1=$187;
      break L9;
     }
    } while(0);
    $191=(($60+((($i_0132)*(152))&-1)+24)|0);
    $192=(+(HEAPF32[(($191)>>2)]));
    $193=((-.0))-($192);
    $194=(+(HEAPF32[(($46)>>2)]));
    $195=($194)*($193);
    HEAPF32[(($48)>>2)]=$195;
    HEAPF32[(($49)>>2)]=0.0;
    $196=(+(HEAPF32[(($48)>>2)]));
    $197=$196<(0.0);
    do {
     if (!($197)) {
      $199=(($60+((($i_0132)*(152))&-1)+100)|0);
      $200=(+(HEAPF32[(($199)>>2)]));
      $201=(+(HEAPF32[(($47)>>2)]));
      $202=($196)*($200);
      $203=($202)+($201);
      $204=$203<(0.0);
      if ($204) {
       break;
      }
      __ZmiRK6b2Vec2S1_($d7,$x,$a);
      $206=(+(HEAPF32[(($54)>>2)]));
      __ZmlfRK6b2Vec2($P18,$206,$tmpcast127);
      $207=(+(HEAPF32[(($55)>>2)]));
      __ZmlfRK6b2Vec2($P29,$207,$tmpcast127);
      __ZplRK6b2Vec2S1_($28,$P18,$P29);
      __ZmlfRK6b2Vec2($27,$67,$28);
      __ZN6b2Vec2mIERKS_($tmpcast,$27);
      $208=(+(__Z7b2CrossRK6b2Vec2S1_($157,$P18)));
      $209=(+(__Z7b2CrossRK6b2Vec2S1_($159,$P29)));
      $210=($208)+($209);
      $211=($69)*($210);
      $212=($114)-($211);
      __ZplRK6b2Vec2S1_($30,$P18,$P29);
      __ZmlfRK6b2Vec2($29,$71,$30);
      __ZN6b2Vec2pLERKS_($tmpcast126,$29);
      $213=(+(__Z7b2CrossRK6b2Vec2S1_($156,$P18)));
      $214=(+(__Z7b2CrossRK6b2Vec2S1_($158,$P29)));
      $215=($213)+($214);
      $216=($73)*($215);
      $217=($117)+($216);
      $218=(+(HEAPF32[(($48)>>2)]));
      HEAPF32[(($145)>>2)]=$218;
      $219=(+(HEAPF32[(($49)>>2)]));
      HEAPF32[(($147)>>2)]=$219;
      $wA_1=$212;$wB_1=$217;
      break L9;
     }
    } while(0);
    HEAPF32[(($48)>>2)]=0.0;
    $221=(($60+((($i_0132)*(152))&-1)+60)|0);
    $222=(+(HEAPF32[(($221)>>2)]));
    $223=((-.0))-($222);
    $224=(+(HEAPF32[(($47)>>2)]));
    $225=($224)*($223);
    HEAPF32[(($49)>>2)]=$225;
    $226=$225<(0.0);
    do {
     if (!($226)) {
      $228=(($60+((($i_0132)*(152))&-1)+104)|0);
      $229=(+(HEAPF32[(($228)>>2)]));
      $230=(+(HEAPF32[(($46)>>2)]));
      $231=($225)*($229);
      $232=($231)+($230);
      $233=$232<(0.0);
      if ($233) {
       break;
      }
      __ZmiRK6b2Vec2S1_($d10,$x,$a);
      $235=(+(HEAPF32[(($52)>>2)]));
      __ZmlfRK6b2Vec2($P111,$235,$tmpcast127);
      $236=(+(HEAPF32[(($53)>>2)]));
      __ZmlfRK6b2Vec2($P212,$236,$tmpcast127);
      __ZplRK6b2Vec2S1_($32,$P111,$P212);
      __ZmlfRK6b2Vec2($31,$67,$32);
      __ZN6b2Vec2mIERKS_($tmpcast,$31);
      $237=(+(__Z7b2CrossRK6b2Vec2S1_($157,$P111)));
      $238=(+(__Z7b2CrossRK6b2Vec2S1_($159,$P212)));
      $239=($237)+($238);
      $240=($69)*($239);
      $241=($114)-($240);
      __ZplRK6b2Vec2S1_($34,$P111,$P212);
      __ZmlfRK6b2Vec2($33,$71,$34);
      __ZN6b2Vec2pLERKS_($tmpcast126,$33);
      $242=(+(__Z7b2CrossRK6b2Vec2S1_($156,$P111)));
      $243=(+(__Z7b2CrossRK6b2Vec2S1_($158,$P212)));
      $244=($242)+($243);
      $245=($73)*($244);
      $246=($117)+($245);
      $247=(+(HEAPF32[(($48)>>2)]));
      HEAPF32[(($145)>>2)]=$247;
      $248=(+(HEAPF32[(($49)>>2)]));
      HEAPF32[(($147)>>2)]=$248;
      $wA_1=$241;$wB_1=$246;
      break L9;
     }
    } while(0);
    HEAPF32[(($48)>>2)]=0.0;
    HEAPF32[(($49)>>2)]=0.0;
    $250=(+(HEAPF32[(($46)>>2)]));
    $251=$250<(0.0);
    if ($251) {
     $wA_1=$114;$wB_1=$117;
     break;
    }
    $253=(+(HEAPF32[(($47)>>2)]));
    $254=$253<(0.0);
    if ($254) {
     $wA_1=$114;$wB_1=$117;
     break;
    }
    __ZmiRK6b2Vec2S1_($d13,$x,$a);
    $256=(+(HEAPF32[(($50)>>2)]));
    __ZmlfRK6b2Vec2($P114,$256,$tmpcast127);
    $257=(+(HEAPF32[(($51)>>2)]));
    __ZmlfRK6b2Vec2($P215,$257,$tmpcast127);
    __ZplRK6b2Vec2S1_($36,$P114,$P215);
    __ZmlfRK6b2Vec2($35,$67,$36);
    __ZN6b2Vec2mIERKS_($tmpcast,$35);
    $258=(+(__Z7b2CrossRK6b2Vec2S1_($157,$P114)));
    $259=(+(__Z7b2CrossRK6b2Vec2S1_($159,$P215)));
    $260=($258)+($259);
    $261=($69)*($260);
    $262=($114)-($261);
    __ZplRK6b2Vec2S1_($38,$P114,$P215);
    __ZmlfRK6b2Vec2($37,$71,$38);
    __ZN6b2Vec2pLERKS_($tmpcast126,$37);
    $263=(+(__Z7b2CrossRK6b2Vec2S1_($156,$P114)));
    $264=(+(__Z7b2CrossRK6b2Vec2S1_($158,$P215)));
    $265=($263)+($264);
    $266=($73)*($265);
    $267=($117)+($266);
    $268=(+(HEAPF32[(($48)>>2)]));
    HEAPF32[(($145)>>2)]=$268;
    $269=(+(HEAPF32[(($49)>>2)]));
    HEAPF32[(($147)>>2)]=$269;
    $wA_1=$262;$wB_1=$267;
   }
  } while(0);


  $271=((HEAP32[(($43)>>2)])|0);
  $272=(($271+((($63)*(12))&-1))|0);
  $273=$272;
  $ld$12$0=(($vA)|0);
  $274$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($vA+4)|0);
  $274$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($273)|0);
  HEAP32[(($st$14$0)>>2)]=$274$0;
  $st$15$1=(($273+4)|0);
  HEAP32[(($st$15$1)>>2)]=$274$1;
  $275=((HEAP32[(($43)>>2)])|0);
  $276=(($275+((($63)*(12))&-1)+8)|0);
  HEAPF32[(($276)>>2)]=$wA_1;
  $277=((HEAP32[(($43)>>2)])|0);
  $278=(($277+((($65)*(12))&-1))|0);
  $279=$278;
  $ld$16$0=(($vB)|0);
  $280$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($vB+4)|0);
  $280$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($279)|0);
  HEAP32[(($st$18$0)>>2)]=$280$0;
  $st$19$1=(($279+4)|0);
  HEAP32[(($st$19$1)>>2)]=$280$1;
  $281=((HEAP32[(($43)>>2)])|0);
  $282=(($281+((($65)*(12))&-1)+8)|0);
  HEAPF32[(($282)>>2)]=$wB_1;
  $283=((($i_0132)+(1))|0);
  $284=((HEAP32[(($39)>>2)])|0);
  $285=($283|0)<($284|0);
  if ($285) {
   $i_0132=$283;
  } else {
   label = 24;
   break;
  }
 }
 if ((label|0) == 4) {
  ___assert_fail(((4416)|0),((10200)|0),((311)|0),((12920)|0));

 }
 else if ((label|0) == 10) {
  ___assert_fail(((3320)|0),((10200)|0),((406)|0),((12920)|0));

 }
 else if ((label|0) == 24) {
  STACKTOP=sp;return;
 }
}


function __Z5b2MulRK7b2Mat22RK6b2Vec2($agg_result,$A,$v){
 $agg_result=($agg_result)|0;
 $A=($A)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=.0,label=0;

 $1=(($A)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($v)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($A+8)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($v+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)+($10);
 $12=(($A+4)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=($4)*($13);
 $15=(($A+12)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=($9)*($16);
 $18=($14)+($17);
 __ZN6b2Vec2C1Eff($agg_result,$11,$18);
 return;
}


function __ZN15b2ContactSolver13StoreImpulsesEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i_013=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$j_012=0,$17=0,$18=.0,$19=0;
 var $20=0,$21=.0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 if (!($3)) {
  return;
 }
 $4=(($this+40)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($this+44)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $i_013=0;
 while(1) {

  $9=(($5+((($i_013)*(152))&-1)+148)|0);
  $10=((HEAP32[(($9)>>2)])|0);
  $11=(($7+($10<<2))|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=((__ZN9b2Contact11GetManifoldEv($12))|0);
  $14=(($5+((($i_013)*(152))&-1)+144)|0);
  $15=((HEAP32[(($14)>>2)])|0);
  $16=($15|0)>0;
  if ($16) {
   $j_012=0;
   while(1) {

    $17=(($5+((($i_013)*(152))&-1)+((($j_012)*(36))&-1)+16)|0);
    $18=(+(HEAPF32[(($17)>>2)]));
    $19=(($13+((($j_012)*(20))&-1)+8)|0);
    HEAPF32[(($19)>>2)]=$18;
    $20=(($5+((($i_013)*(152))&-1)+((($j_012)*(36))&-1)+20)|0);
    $21=(+(HEAPF32[(($20)>>2)]));
    $22=(($13+((($j_012)*(20))&-1)+12)|0);
    HEAPF32[(($22)>>2)]=$21;
    $23=((($j_012)+(1))|0);
    $24=((HEAP32[(($14)>>2)])|0);
    $25=($23|0)<($24|0);
    if ($25) {
     $j_012=$23;
    } else {
     break;
    }
   }
  }
  $26=((($i_013)+(1))|0);
  $27=((HEAP32[(($1)>>2)])|0);
  $28=($26|0)<($27|0);
  if ($28) {
   $i_013=$26;
  } else {
   break;
  }
 }
 return;
}


function __ZN15b2ContactSolver24SolvePositionConstraintsEv($this){
 $this=($this)|0;
 var $localCenterA=0,$tmpcast=0,$localCenterB=0,$tmpcast33=0,$cA=0,$tmpcast34=0,$cB=0,$tmpcast35=0,$xfA37=0,$tmpcast36=0,$xfB40=0,$tmpcast39=0,$1=0,$2=0,$psm=0,$normal=0,$tmpcast42=0,$point=0,$tmpcast43=0,$rA=0;
 var $rB=0,$P=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$minSeparation_051=.0,$i_050=0,$19=0;
 var $20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$ld$0$0=0,$27$0=0,$ld$1$1=0,$27$1=0,$st$2$0=0,$st$3$1=0,$28=0,$29=.0,$30=0,$31=.0,$32=0,$33=0,$ld$4$0=0;
 var $34$0=0,$ld$5$1=0,$34$1=0,$st$6$0=0,$st$7$1=0,$35=0,$36=.0,$37=0,$38=.0,$39=0,$40=0,$41=0,$42=0,$43=0,$ld$8$0=0,$44$0=0,$ld$9$1=0,$44$1=0,$st$10$0=0,$st$11$1=0;
 var $45=0,$46=0,$47=.0,$48=0,$49=0,$ld$12$0=0,$50$0=0,$ld$13$1=0,$50$1=0,$st$14$0=0,$st$15$1=0,$51=0,$52=0,$53=.0,$54=0,$55=.0,$minSeparation_147=.0,$aA_046=.0,$aB_045=.0,$j_044=0;
 var $xfA375859=0,$xfB406061=0,$ld$16$0=0,$57$0=0,$ld$17$1=0,$57$1=0,$st$18$0=0,$st$19$1=0,$ld$20$0=0,$58$0=0,$ld$21$1=0,$58$1=0,$st$22$0=0,$st$23$1=0,$59=.0,$60=.0,$61=.0,$62=.0,$63=.0,$64=.0;
 var $65=.0,$66=.0,$67=.0,$68=.0,$69=0,$71=.0,$72=.0,$73=.0,$74=.0,$75=.0,$77=.0,$78=.0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0,$84=0,$85=0,$minSeparation_1_lcssa=.0;
 var $aA_0_lcssa=.0,$aB_0_lcssa=.0,$86=0,$87=0,$88=0,$ld$24$0=0,$89$0=0,$ld$25$1=0,$89$1=0,$st$26$0=0,$st$27$1=0,$90=0,$91=0,$92=0,$93=0,$94=0,$ld$28$0=0,$95$0=0,$ld$29$1=0,$95$1=0;
 var $st$30$0=0,$st$31$1=0,$96=0,$97=0,$98=0,$99=0,$100=0,$minSeparation_0_lcssa=.0,$101=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $localCenterA=((sp)|0);
 $tmpcast=$localCenterA;
 $localCenterB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$localCenterB;
 $cA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$cB;
 $xfA37=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast36=$xfA37;
 $xfB40=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast39=$xfB40;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $psm=STACKTOP;STACKTOP = (STACKTOP + 20)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast42=$normal;
 $point=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast43=$point;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=(($this+48)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 if (!($7)) {
  $minSeparation_0_lcssa=0.0;

  $101=$minSeparation_0_lcssa>=(-0.014999999664723873);
  STACKTOP=sp;return (($101)|0);
 }
 $8=(($this+36)|0);
 $9=(($this+24)|0);
 $10=(($xfA37+8)|0);
 $11=$10;
 $12=(($xfB40+8)|0);
 $13=$12;
 $14=$psm;
 $15=(($psm+8)|0);
 $16=$15;
 $17=(($psm+16)|0);
 $i_050=0;$minSeparation_051=0.0;
 while(1) {


  $19=((HEAP32[(($8)>>2)])|0);
  $20=(($19+((($i_050)*(88))&-1))|0);
  $21=(($19+((($i_050)*(88))&-1)+32)|0);
  $22=((HEAP32[(($21)>>2)])|0);
  $23=(($19+((($i_050)*(88))&-1)+36)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $25=(($19+((($i_050)*(88))&-1)+48)|0);
  $26=$25;
  $ld$0$0=(($26)|0);
  $27$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($26+4)|0);
  $27$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($localCenterA)|0);
  HEAP32[(($st$2$0)>>2)]=$27$0;
  $st$3$1=(($localCenterA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$27$1;
  $28=(($19+((($i_050)*(88))&-1)+40)|0);
  $29=(+(HEAPF32[(($28)>>2)]));
  $30=(($19+((($i_050)*(88))&-1)+64)|0);
  $31=(+(HEAPF32[(($30)>>2)]));
  $32=(($19+((($i_050)*(88))&-1)+56)|0);
  $33=$32;
  $ld$4$0=(($33)|0);
  $34$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($33+4)|0);
  $34$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($localCenterB)|0);
  HEAP32[(($st$6$0)>>2)]=$34$0;
  $st$7$1=(($localCenterB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$34$1;
  $35=(($19+((($i_050)*(88))&-1)+44)|0);
  $36=(+(HEAPF32[(($35)>>2)]));
  $37=(($19+((($i_050)*(88))&-1)+68)|0);
  $38=(+(HEAPF32[(($37)>>2)]));
  $39=(($19+((($i_050)*(88))&-1)+84)|0);
  $40=((HEAP32[(($39)>>2)])|0);
  $41=((HEAP32[(($9)>>2)])|0);
  $42=(($41+((($22)*(12))&-1))|0);
  $43=$42;
  $ld$8$0=(($43)|0);
  $44$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($43+4)|0);
  $44$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($cA)|0);
  HEAP32[(($st$10$0)>>2)]=$44$0;
  $st$11$1=(($cA+4)|0);
  HEAP32[(($st$11$1)>>2)]=$44$1;
  $45=((HEAP32[(($9)>>2)])|0);
  $46=(($45+((($22)*(12))&-1)+8)|0);
  $47=(+(HEAPF32[(($46)>>2)]));
  $48=(($45+((($24)*(12))&-1))|0);
  $49=$48;
  $ld$12$0=(($49)|0);
  $50$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($49+4)|0);
  $50$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($cB)|0);
  HEAP32[(($st$14$0)>>2)]=$50$0;
  $st$15$1=(($cB+4)|0);
  HEAP32[(($st$15$1)>>2)]=$50$1;
  $51=((HEAP32[(($9)>>2)])|0);
  $52=(($51+((($24)*(12))&-1)+8)|0);
  $53=(+(HEAPF32[(($52)>>2)]));
  $54=($40|0)>0;
  if ($54) {
   $55=($29)+($36);
   $j_044=0;$aB_045=$53;$aA_046=$47;$minSeparation_147=$minSeparation_051;
   while(1) {




    __ZN5b2Rot3SetEf($11,$aA_046);
    __ZN5b2Rot3SetEf($13,$aB_045);
    __Z5b2MulRK5b2RotRK6b2Vec2($1,$11,$tmpcast);
    $xfA375859=$xfA37;
    __ZmiRK6b2Vec2S1_($xfA375859,$tmpcast34,$1);
    __Z5b2MulRK5b2RotRK6b2Vec2($2,$13,$tmpcast33);
    $xfB406061=$xfB40;
    __ZmiRK6b2Vec2S1_($xfB406061,$tmpcast35,$2);
    __ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i($psm,$20,$tmpcast36,$tmpcast39,$j_044);
    $ld$16$0=(($14)|0);
    $57$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($14+4)|0);
    $57$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $st$18$0=(($normal)|0);
    HEAP32[(($st$18$0)>>2)]=$57$0;
    $st$19$1=(($normal+4)|0);
    HEAP32[(($st$19$1)>>2)]=$57$1;
    $ld$20$0=(($16)|0);
    $58$0=((HEAP32[(($ld$20$0)>>2)])|0);
    $ld$21$1=(($16+4)|0);
    $58$1=((HEAP32[(($ld$21$1)>>2)])|0);
    $st$22$0=(($point)|0);
    HEAP32[(($st$22$0)>>2)]=$58$0;
    $st$23$1=(($point+4)|0);
    HEAP32[(($st$23$1)>>2)]=$58$1;
    $59=(+(HEAPF32[(($17)>>2)]));
    __ZmiRK6b2Vec2S1_($rA,$tmpcast43,$tmpcast34);
    __ZmiRK6b2Vec2S1_($rB,$tmpcast43,$tmpcast35);
    $60=(+(__Z5b2MinIfET_S0_S0_($minSeparation_147,$59)));
    $61=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$tmpcast42)));
    $62=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$tmpcast42)));
    $63=($31)*($61);
    $64=($61)*($63);
    $65=($55)+($64);
    $66=($38)*($62);
    $67=($62)*($66);
    $68=($65)+($67);
    $69=$68>(0.0);
    if ($69) {
     $71=($59)+((0.004999999888241291));
     $72=($71)*((0.20000000298023224));
     $73=(+(__Z7b2ClampIfET_S0_S0_S0_($72,-0.20000000298023224,0.0)));
     $74=((-.0))-($73);
     $75=($74)/($68);
     $77=$75;
    } else {
     $77=0.0;
    }

    __ZmlfRK6b2Vec2($P,$77,$tmpcast42);
    __ZmlfRK6b2Vec2($3,$29,$P);
    __ZN6b2Vec2mIERKS_($tmpcast34,$3);
    $78=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$P)));
    $79=($31)*($78);
    $80=($aA_046)-($79);
    __ZmlfRK6b2Vec2($4,$36,$P);
    __ZN6b2Vec2pLERKS_($tmpcast35,$4);
    $81=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$P)));
    $82=($38)*($81);
    $83=($aB_045)+($82);
    $84=((($j_044)+(1))|0);
    $85=($84|0)<($40|0);
    if ($85) {
     $j_044=$84;$aB_045=$83;$aA_046=$80;$minSeparation_147=$60;
    } else {
     $aB_0_lcssa=$83;$aA_0_lcssa=$80;$minSeparation_1_lcssa=$60;
     break;
    }
   }
  } else {
   $aB_0_lcssa=$53;$aA_0_lcssa=$47;$minSeparation_1_lcssa=$minSeparation_051;
  }



  $86=((HEAP32[(($9)>>2)])|0);
  $87=(($86+((($22)*(12))&-1))|0);
  $88=$87;
  $ld$24$0=(($cA)|0);
  $89$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($cA+4)|0);
  $89$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($88)|0);
  HEAP32[(($st$26$0)>>2)]=$89$0;
  $st$27$1=(($88+4)|0);
  HEAP32[(($st$27$1)>>2)]=$89$1;
  $90=((HEAP32[(($9)>>2)])|0);
  $91=(($90+((($22)*(12))&-1)+8)|0);
  HEAPF32[(($91)>>2)]=$aA_0_lcssa;
  $92=((HEAP32[(($9)>>2)])|0);
  $93=(($92+((($24)*(12))&-1))|0);
  $94=$93;
  $ld$28$0=(($cB)|0);
  $95$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($cB+4)|0);
  $95$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($94)|0);
  HEAP32[(($st$30$0)>>2)]=$95$0;
  $st$31$1=(($94+4)|0);
  HEAP32[(($st$31$1)>>2)]=$95$1;
  $96=((HEAP32[(($9)>>2)])|0);
  $97=(($96+((($24)*(12))&-1)+8)|0);
  HEAPF32[(($97)>>2)]=$aB_0_lcssa;
  $98=((($i_050)+(1))|0);
  $99=((HEAP32[(($5)>>2)])|0);
  $100=($98|0)<($99|0);
  if ($100) {
   $i_050=$98;$minSeparation_051=$minSeparation_1_lcssa;
  } else {
   $minSeparation_0_lcssa=$minSeparation_1_lcssa;
   break;
  }
 }

 $101=$minSeparation_0_lcssa>=(-0.014999999664723873);
 STACKTOP=sp;return (($101)|0);
}


function __ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i($this,$pc,$xfA,$xfB,$index){
 $this=($this)|0;
 $pc=($pc)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 $index=($index)|0;
 var $pointA=0,$pointB=0,$1=0,$tmpcast31=0,$2=0,$tmpcast32=0,$3=0,$4=0,$5=0,$tmpcast29=0,$planePoint=0,$clipPoint=0,$tmpcast30=0,$6=0,$7=0,$tmpcast=0,$planePoint1=0,$clipPoint2=0,$tmpcast27=0,$8=0;
 var $9=0,$tmpcast28=0,$10=0,$11=0,$12=0,$15=0,$16=0,$18=0,$19=0,$20=0,$21=0,$ld$0$0=0,$22$0=0,$ld$1$1=0,$22$1=0,$st$2$0=0,$st$3$1=0,$23=.0,$24=0,$25=0;
 var $ld$4$0=0,$26$0=0,$ld$5$1=0,$26$1=0,$st$6$0=0,$st$7$1=0,$27=.0,$28=0,$29=.0,$30=.0,$31=0,$32=.0,$33=.0,$34=0,$36=0,$37=0,$38=0,$39=0,$ld$8$0=0,$40$0=0;
 var $ld$9$1=0,$40$1=0,$st$10$0=0,$st$11$1=0,$41=0,$42=0,$43=.0,$44=0,$45=.0,$46=.0,$47=0,$48=.0,$49=.0,$50=0,$51=0,$52=0,$ld$12$0=0,$53$0=0,$ld$13$1=0,$53$1=0;
 var $st$14$0=0,$st$15$1=0,$55=0,$56=0,$57=0,$58=0,$ld$16$0=0,$59$0=0,$ld$17$1=0,$59$1=0,$st$18$0=0,$st$19$1=0,$60=0,$61=0,$62=.0,$63=0,$64=.0,$65=.0,$66=0,$67=.0;
 var $68=.0,$69=0,$70=0,$71=0,$ld$20$0=0,$72$0=0,$ld$21$1=0,$72$1=0,$st$22$0=0,$st$23$1=0,$ld$24$0=0,$73$0=0,$ld$25$1=0,$73$1=0,$st$26$0=0,$st$27$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $pointA=((sp)|0);
 $pointB=(((sp)+(8))|0);
 $1=(((sp)+(16))|0);
 $tmpcast31=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast32=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast29=$5;
 $planePoint=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $clipPoint=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast30=$clipPoint;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$7;
 $planePoint1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $clipPoint2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast27=$clipPoint2;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast28=$9;
 $10=(($pc+84)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=($11|0)>0;
 if (!($12)) {
  ___assert_fail(((2592)|0),((10200)|0),((617)|0),((12520)|0));

 }
 $15=(($pc+72)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 if (((($16|0))|0)==((0)|0)) {
  $18=(($pc+24)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA,$xfA,$18);
  $19=(($pc)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB,$xfB,$19);
  $20=(($this)|0);
  __ZmiRK6b2Vec2S1_($tmpcast31,$pointB,$pointA);
  $21=$this;
  $ld$0$0=(($1)|0);
  $22$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($1+4)|0);
  $22$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($21)|0);
  HEAP32[(($st$2$0)>>2)]=$22$0;
  $st$3$1=(($21+4)|0);
  HEAP32[(($st$3$1)>>2)]=$22$1;
  $23=(+(__ZN6b2Vec29NormalizeEv($20)));
  $24=(($this+8)|0);
  __ZplRK6b2Vec2S1_($3,$pointA,$pointB);
  __ZmlfRK6b2Vec2($tmpcast32,0.5,$3);
  $25=$24;
  $ld$4$0=(($2)|0);
  $26$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($2+4)|0);
  $26$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($25)|0);
  HEAP32[(($st$6$0)>>2)]=$26$0;
  $st$7$1=(($25+4)|0);
  HEAP32[(($st$7$1)>>2)]=$26$1;
  __ZmiRK6b2Vec2S1_($4,$pointB,$pointA);
  $27=(+(__Z5b2DotRK6b2Vec2S1_($4,$20)));
  $28=(($pc+76)|0);
  $29=(+(HEAPF32[(($28)>>2)]));
  $30=($27)-($29);
  $31=(($pc+80)|0);
  $32=(+(HEAPF32[(($31)>>2)]));
  $33=($30)-($32);
  $34=(($this+16)|0);
  HEAPF32[(($34)>>2)]=$33;
  STACKTOP=sp;return;
 } else if (((($16|0))|0)==((2)|0)) {
  $55=(($this)|0);
  $56=(($xfB+8)|0);
  $57=(($pc+16)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast,$56,$57);
  $58=$this;
  $ld$16$0=(($7)|0);
  $59$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($7+4)|0);
  $59$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($58)|0);
  HEAP32[(($st$18$0)>>2)]=$59$0;
  $st$19$1=(($58+4)|0);
  HEAP32[(($st$19$1)>>2)]=$59$1;
  $60=(($pc+24)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($planePoint1,$xfB,$60);
  $61=(($pc+($index<<3))|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast27,$xfA,$61);
  __ZmiRK6b2Vec2S1_($8,$tmpcast27,$planePoint1);
  $62=(+(__Z5b2DotRK6b2Vec2S1_($8,$55)));
  $63=(($pc+76)|0);
  $64=(+(HEAPF32[(($63)>>2)]));
  $65=($62)-($64);
  $66=(($pc+80)|0);
  $67=(+(HEAPF32[(($66)>>2)]));
  $68=($65)-($67);
  $69=(($this+16)|0);
  HEAPF32[(($69)>>2)]=$68;
  $70=(($this+8)|0);
  $71=$70;
  $ld$20$0=(($clipPoint2)|0);
  $72$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($clipPoint2+4)|0);
  $72$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($71)|0);
  HEAP32[(($st$22$0)>>2)]=$72$0;
  $st$23$1=(($71+4)|0);
  HEAP32[(($st$23$1)>>2)]=$72$1;
  __ZNK6b2Vec2ngEv($tmpcast28,$55);
  $ld$24$0=(($9)|0);
  $73$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($9+4)|0);
  $73$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($58)|0);
  HEAP32[(($st$26$0)>>2)]=$73$0;
  $st$27$1=(($58+4)|0);
  HEAP32[(($st$27$1)>>2)]=$73$1;
  STACKTOP=sp;return;
 } else if (((($16|0))|0)==((1)|0)) {
  $36=(($this)|0);
  $37=(($xfA+8)|0);
  $38=(($pc+16)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast29,$37,$38);
  $39=$this;
  $ld$8$0=(($5)|0);
  $40$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($5+4)|0);
  $40$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($39)|0);
  HEAP32[(($st$10$0)>>2)]=$40$0;
  $st$11$1=(($39+4)|0);
  HEAP32[(($st$11$1)>>2)]=$40$1;
  $41=(($pc+24)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($planePoint,$xfA,$41);
  $42=(($pc+($index<<3))|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast30,$xfB,$42);
  __ZmiRK6b2Vec2S1_($6,$tmpcast30,$planePoint);
  $43=(+(__Z5b2DotRK6b2Vec2S1_($6,$36)));
  $44=(($pc+76)|0);
  $45=(+(HEAPF32[(($44)>>2)]));
  $46=($43)-($45);
  $47=(($pc+80)|0);
  $48=(+(HEAPF32[(($47)>>2)]));
  $49=($46)-($48);
  $50=(($this+16)|0);
  HEAPF32[(($50)>>2)]=$49;
  $51=(($this+8)|0);
  $52=$51;
  $ld$12$0=(($clipPoint)|0);
  $53$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($clipPoint+4)|0);
  $53$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($52)|0);
  HEAP32[(($st$14$0)>>2)]=$53$0;
  $st$15$1=(($52+4)|0);
  HEAP32[(($st$15$1)>>2)]=$53$1;
  STACKTOP=sp;return;
 } else {
  STACKTOP=sp;return;
 }
}


function __ZN15b2ContactSolver27SolveTOIPositionConstraintsEii($this,$toiIndexA,$toiIndexB){
 $this=($this)|0;
 $toiIndexA=($toiIndexA)|0;
 $toiIndexB=($toiIndexB)|0;
 var $localCenterA=0,$tmpcast=0,$localCenterB=0,$tmpcast43=0,$cA=0,$tmpcast44=0,$cB=0,$tmpcast45=0,$xfA47=0,$tmpcast46=0,$xfB50=0,$tmpcast49=0,$1=0,$2=0,$psm=0,$normal=0,$tmpcast52=0,$point=0,$tmpcast53=0,$rA=0;
 var $rB=0,$P=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$minSeparation_062=.0,$i_061=0,$19=0;
 var $20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$ld$0$0=0,$27$0=0,$ld$1$1=0,$27$1=0,$st$2$0=0,$st$3$1=0,$28=0,$29=0,$ld$4$0=0,$30$0=0,$ld$5$1=0,$30$1=0,$st$6$0=0;
 var $st$7$1=0,$31=0,$32=0,$33=0,$34=0,$or_cond=0,$36=0,$37=.0,$38=0,$39=.0,$iA_0=.0,$mA_0=.0,$41=0,$42=0,$mB_0=.0,$iB_0=.0,$43=0,$44=0,$45=0,$ld$8$0=0;
 var $46$0=0,$ld$9$1=0,$46$1=0,$st$10$0=0,$st$11$1=0,$47=0,$48=0,$49=.0,$50=0,$51=0,$ld$12$0=0,$52$0=0,$ld$13$1=0,$52$1=0,$st$14$0=0,$st$15$1=0,$53=0,$54=0,$55=.0,$56=0;
 var $57=.0,$minSeparation_158=.0,$j_057=0,$aB_056=.0,$aA_055=.0,$xfA476970=0,$xfB507172=0,$ld$16$0=0,$59$0=0,$ld$17$1=0,$59$1=0,$st$18$0=0,$st$19$1=0,$ld$20$0=0,$60$0=0,$ld$21$1=0,$60$1=0,$st$22$0=0,$st$23$1=0,$61=.0;
 var $62=.0,$63=.0,$64=.0,$65=.0,$66=.0,$67=.0,$68=.0,$69=.0,$70=.0,$71=0,$73=.0,$74=.0,$75=.0,$76=.0,$77=.0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0;
 var $84=.0,$85=.0,$86=0,$87=0,$minSeparation_1_lcssa=.0,$aB_0_lcssa=.0,$aA_0_lcssa=.0,$88=0,$89=0,$90=0,$ld$24$0=0,$91$0=0,$ld$25$1=0,$91$1=0,$st$26$0=0,$st$27$1=0,$92=0,$93=0,$94=0,$95=0;
 var $96=0,$ld$28$0=0,$97$0=0,$ld$29$1=0,$97$1=0,$st$30$0=0,$st$31$1=0,$98=0,$99=0,$100=0,$101=0,$102=0,$minSeparation_0_lcssa=.0,$103=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $localCenterA=((sp)|0);
 $tmpcast=$localCenterA;
 $localCenterB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast43=$localCenterB;
 $cA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast44=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast45=$cB;
 $xfA47=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast46=$xfA47;
 $xfB50=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast49=$xfB50;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $psm=STACKTOP;STACKTOP = (STACKTOP + 20)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast52=$normal;
 $point=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast53=$point;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=(($this+48)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 if (!($7)) {
  $minSeparation_0_lcssa=0.0;

  $103=$minSeparation_0_lcssa>=(-0.007499999832361937);
  STACKTOP=sp;return (($103)|0);
 }
 $8=(($this+36)|0);
 $9=(($this+24)|0);
 $10=(($xfA47+8)|0);
 $11=$10;
 $12=(($xfB50+8)|0);
 $13=$12;
 $14=$psm;
 $15=(($psm+8)|0);
 $16=$15;
 $17=(($psm+16)|0);
 $i_061=0;$minSeparation_062=0.0;
 while(1) {


  $19=((HEAP32[(($8)>>2)])|0);
  $20=(($19+((($i_061)*(88))&-1))|0);
  $21=(($19+((($i_061)*(88))&-1)+32)|0);
  $22=((HEAP32[(($21)>>2)])|0);
  $23=(($19+((($i_061)*(88))&-1)+36)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $25=(($19+((($i_061)*(88))&-1)+48)|0);
  $26=$25;
  $ld$0$0=(($26)|0);
  $27$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($26+4)|0);
  $27$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($localCenterA)|0);
  HEAP32[(($st$2$0)>>2)]=$27$0;
  $st$3$1=(($localCenterA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$27$1;
  $28=(($19+((($i_061)*(88))&-1)+56)|0);
  $29=$28;
  $ld$4$0=(($29)|0);
  $30$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($29+4)|0);
  $30$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($localCenterB)|0);
  HEAP32[(($st$6$0)>>2)]=$30$0;
  $st$7$1=(($localCenterB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$30$1;
  $31=(($19+((($i_061)*(88))&-1)+84)|0);
  $32=((HEAP32[(($31)>>2)])|0);
  $33=($22|0)==($toiIndexA|0);
  $34=($22|0)==($toiIndexB|0);
  $or_cond=$33|$34;
  if ($or_cond) {
   $36=(($19+((($i_061)*(88))&-1)+40)|0);
   $37=(+(HEAPF32[(($36)>>2)]));
   $38=(($19+((($i_061)*(88))&-1)+64)|0);
   $39=(+(HEAPF32[(($38)>>2)]));
   $mA_0=$37;$iA_0=$39;
  } else {
   $mA_0=0.0;$iA_0=0.0;
  }


  $41=(($19+((($i_061)*(88))&-1)+44)|0);
  $42=(($19+((($i_061)*(88))&-1)+68)|0);
  $mB_0=(+(HEAPF32[(($41)>>2)]));
  $iB_0=(+(HEAPF32[(($42)>>2)]));
  $43=((HEAP32[(($9)>>2)])|0);
  $44=(($43+((($22)*(12))&-1))|0);
  $45=$44;
  $ld$8$0=(($45)|0);
  $46$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($45+4)|0);
  $46$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($cA)|0);
  HEAP32[(($st$10$0)>>2)]=$46$0;
  $st$11$1=(($cA+4)|0);
  HEAP32[(($st$11$1)>>2)]=$46$1;
  $47=((HEAP32[(($9)>>2)])|0);
  $48=(($47+((($22)*(12))&-1)+8)|0);
  $49=(+(HEAPF32[(($48)>>2)]));
  $50=(($47+((($24)*(12))&-1))|0);
  $51=$50;
  $ld$12$0=(($51)|0);
  $52$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($51+4)|0);
  $52$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($cB)|0);
  HEAP32[(($st$14$0)>>2)]=$52$0;
  $st$15$1=(($cB+4)|0);
  HEAP32[(($st$15$1)>>2)]=$52$1;
  $53=((HEAP32[(($9)>>2)])|0);
  $54=(($53+((($24)*(12))&-1)+8)|0);
  $55=(+(HEAPF32[(($54)>>2)]));
  $56=($32|0)>0;
  if ($56) {
   $57=($mA_0)+($mB_0);
   $aA_055=$49;$aB_056=$55;$j_057=0;$minSeparation_158=$minSeparation_062;
   while(1) {




    __ZN5b2Rot3SetEf($11,$aA_055);
    __ZN5b2Rot3SetEf($13,$aB_056);
    __Z5b2MulRK5b2RotRK6b2Vec2($1,$11,$tmpcast);
    $xfA476970=$xfA47;
    __ZmiRK6b2Vec2S1_($xfA476970,$tmpcast44,$1);
    __Z5b2MulRK5b2RotRK6b2Vec2($2,$13,$tmpcast43);
    $xfB507172=$xfB50;
    __ZmiRK6b2Vec2S1_($xfB507172,$tmpcast45,$2);
    __ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i($psm,$20,$tmpcast46,$tmpcast49,$j_057);
    $ld$16$0=(($14)|0);
    $59$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($14+4)|0);
    $59$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $st$18$0=(($normal)|0);
    HEAP32[(($st$18$0)>>2)]=$59$0;
    $st$19$1=(($normal+4)|0);
    HEAP32[(($st$19$1)>>2)]=$59$1;
    $ld$20$0=(($16)|0);
    $60$0=((HEAP32[(($ld$20$0)>>2)])|0);
    $ld$21$1=(($16+4)|0);
    $60$1=((HEAP32[(($ld$21$1)>>2)])|0);
    $st$22$0=(($point)|0);
    HEAP32[(($st$22$0)>>2)]=$60$0;
    $st$23$1=(($point+4)|0);
    HEAP32[(($st$23$1)>>2)]=$60$1;
    $61=(+(HEAPF32[(($17)>>2)]));
    __ZmiRK6b2Vec2S1_($rA,$tmpcast53,$tmpcast44);
    __ZmiRK6b2Vec2S1_($rB,$tmpcast53,$tmpcast45);
    $62=(+(__Z5b2MinIfET_S0_S0_($minSeparation_158,$61)));
    $63=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$tmpcast52)));
    $64=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$tmpcast52)));
    $65=($iA_0)*($63);
    $66=($63)*($65);
    $67=($57)+($66);
    $68=($iB_0)*($64);
    $69=($64)*($68);
    $70=($67)+($69);
    $71=$70>(0.0);
    if ($71) {
     $73=($61)+((0.004999999888241291));
     $74=($73)*((0.75));
     $75=(+(__Z7b2ClampIfET_S0_S0_S0_($74,-0.20000000298023224,0.0)));
     $76=((-.0))-($75);
     $77=($76)/($70);
     $79=$77;
    } else {
     $79=0.0;
    }

    __ZmlfRK6b2Vec2($P,$79,$tmpcast52);
    __ZmlfRK6b2Vec2($3,$mA_0,$P);
    __ZN6b2Vec2mIERKS_($tmpcast44,$3);
    $80=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$P)));
    $81=($iA_0)*($80);
    $82=($aA_055)-($81);
    __ZmlfRK6b2Vec2($4,$mB_0,$P);
    __ZN6b2Vec2pLERKS_($tmpcast45,$4);
    $83=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$P)));
    $84=($iB_0)*($83);
    $85=($aB_056)+($84);
    $86=((($j_057)+(1))|0);
    $87=($86|0)<($32|0);
    if ($87) {
     $aA_055=$82;$aB_056=$85;$j_057=$86;$minSeparation_158=$62;
    } else {
     $aA_0_lcssa=$82;$aB_0_lcssa=$85;$minSeparation_1_lcssa=$62;
     break;
    }
   }
  } else {
   $aA_0_lcssa=$49;$aB_0_lcssa=$55;$minSeparation_1_lcssa=$minSeparation_062;
  }



  $88=((HEAP32[(($9)>>2)])|0);
  $89=(($88+((($22)*(12))&-1))|0);
  $90=$89;
  $ld$24$0=(($cA)|0);
  $91$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($cA+4)|0);
  $91$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($90)|0);
  HEAP32[(($st$26$0)>>2)]=$91$0;
  $st$27$1=(($90+4)|0);
  HEAP32[(($st$27$1)>>2)]=$91$1;
  $92=((HEAP32[(($9)>>2)])|0);
  $93=(($92+((($22)*(12))&-1)+8)|0);
  HEAPF32[(($93)>>2)]=$aA_0_lcssa;
  $94=((HEAP32[(($9)>>2)])|0);
  $95=(($94+((($24)*(12))&-1))|0);
  $96=$95;
  $ld$28$0=(($cB)|0);
  $97$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($cB+4)|0);
  $97$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($96)|0);
  HEAP32[(($st$30$0)>>2)]=$97$0;
  $st$31$1=(($96+4)|0);
  HEAP32[(($st$31$1)>>2)]=$97$1;
  $98=((HEAP32[(($9)>>2)])|0);
  $99=(($98+((($24)*(12))&-1)+8)|0);
  HEAPF32[(($99)>>2)]=$aB_0_lcssa;
  $100=((($i_061)+(1))|0);
  $101=((HEAP32[(($5)>>2)])|0);
  $102=($100|0)<($101|0);
  if ($102) {
   $i_061=$100;$minSeparation_062=$minSeparation_1_lcssa;
  } else {
   $minSeparation_0_lcssa=$minSeparation_1_lcssa;
   break;
  }
 }

 $103=$minSeparation_0_lcssa>=(-0.007499999832361937);
 STACKTOP=sp;return (($103)|0);
}


function __ZN22b2EdgeAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$0,$fixtureB,$1,$allocator){
 $fixtureA=($fixtureA)|0;
 $0=($0)|0;
 $fixtureB=($fixtureB)|0;
 $1=($1)|0;
 $allocator=($allocator)|0;
 var $3=0,$4=0,$6=0,$8=0,$9=0,label=0;

 $3=((__ZN16b2BlockAllocator8AllocateEi($allocator,144))|0);
 $4=($3|0)==0;
 if ($4) {
  $8=0;

  $9=(($8)|0);
  return (($9)|0);
 }
 $6=$3;
 __ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_($6,$fixtureA,$fixtureB);
 $8=$6;

 $9=(($8)|0);
 return (($9)|0);
}


function __ZN22b2EdgeAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,144);
 return;
}


function __ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_($this,$fixtureA,$fixtureB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $fixtureB=($fixtureB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,0,$fixtureB,0);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=13656;
 $3=(($this+48)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZNK9b2Fixture7GetTypeEv($4))|0);
 $6=($5|0)==1;
 if (!($6)) {
  ___assert_fail(((5560)|0),((10136)|0),((41)|0),((12616)|0));

 }
 $9=(($this+52)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((__ZNK9b2Fixture7GetTypeEv($10))|0);
 $12=($11|0)==0;
 if ($12) {
  return;
 } else {
  ___assert_fail(((6904)|0),((10136)|0),((42)|0),((12616)|0));

 }
}


function __ZN22b2EdgeAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZN9b2Fixture8GetShapeEv($6))|0);
 $8=$7;
 __Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_($manifold,$4,$xfA,$8,$xfB);
 return;
}


function __ZN22b2EdgeAndCircleContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN22b2EdgeAndCircleContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN23b2EdgeAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$0,$fixtureB,$1,$allocator){
 $fixtureA=($fixtureA)|0;
 $0=($0)|0;
 $fixtureB=($fixtureB)|0;
 $1=($1)|0;
 $allocator=($allocator)|0;
 var $3=0,$4=0,$6=0,$8=0,$9=0,label=0;

 $3=((__ZN16b2BlockAllocator8AllocateEi($allocator,144))|0);
 $4=($3|0)==0;
 if ($4) {
  $8=0;

  $9=(($8)|0);
  return (($9)|0);
 }
 $6=$3;
 __ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_($6,$fixtureA,$fixtureB);
 $8=$6;

 $9=(($8)|0);
 return (($9)|0);
}


function __ZN23b2EdgeAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,144);
 return;
}


function __ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_($this,$fixtureA,$fixtureB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $fixtureB=($fixtureB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,0,$fixtureB,0);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=13592;
 $3=(($this+48)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZNK9b2Fixture7GetTypeEv($4))|0);
 $6=($5|0)==1;
 if (!($6)) {
  ___assert_fail(((5328)|0),((10064)|0),((41)|0),((12568)|0));

 }
 $9=(($this+52)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((__ZNK9b2Fixture7GetTypeEv($10))|0);
 $12=($11|0)==2;
 if ($12) {
  return;
 } else {
  ___assert_fail(((6856)|0),((10064)|0),((42)|0),((12568)|0));

 }
}


function __ZN23b2EdgeAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZN9b2Fixture8GetShapeEv($6))|0);
 $8=$7;
 __Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_($manifold,$4,$xfA,$8,$xfB);
 return;
}


function __ZN23b2EdgeAndPolygonContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN23b2EdgeAndPolygonContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN25b2PolygonAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$0,$fixtureB,$1,$allocator){
 $fixtureA=($fixtureA)|0;
 $0=($0)|0;
 $fixtureB=($fixtureB)|0;
 $1=($1)|0;
 $allocator=($allocator)|0;
 var $3=0,$4=0,$6=0,$8=0,$9=0,label=0;

 $3=((__ZN16b2BlockAllocator8AllocateEi($allocator,144))|0);
 $4=($3|0)==0;
 if ($4) {
  $8=0;

  $9=(($8)|0);
  return (($9)|0);
 }
 $6=$3;
 __ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_($6,$fixtureA,$fixtureB);
 $8=$6;

 $9=(($8)|0);
 return (($9)|0);
}


function __ZN25b2PolygonAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,144);
 return;
}


function __ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_($this,$fixtureA,$fixtureB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $fixtureB=($fixtureB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,0,$fixtureB,0);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=13528;
 $3=(($this+48)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZNK9b2Fixture7GetTypeEv($4))|0);
 $6=($5|0)==2;
 if (!($6)) {
  ___assert_fail(((5096)|0),((9992)|0),((41)|0),((12488)|0));

 }
 $9=(($this+52)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((__ZNK9b2Fixture7GetTypeEv($10))|0);
 $12=($11|0)==0;
 if ($12) {
  return;
 } else {
  ___assert_fail(((6760)|0),((9992)|0),((42)|0),((12488)|0));

 }
}


function __ZN25b2PolygonAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZN9b2Fixture8GetShapeEv($6))|0);
 $8=$7;
 __Z25b2CollidePolygonAndCircleP10b2ManifoldPK14b2PolygonShapeRK11b2TransformPK13b2CircleShapeS6_($manifold,$4,$xfA,$8,$xfB);
 return;
}


function __ZN25b2PolygonAndCircleContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN25b2PolygonAndCircleContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN16b2PolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$0,$fixtureB,$1,$allocator){
 $fixtureA=($fixtureA)|0;
 $0=($0)|0;
 $fixtureB=($fixtureB)|0;
 $1=($1)|0;
 $allocator=($allocator)|0;
 var $3=0,$4=0,$6=0,$8=0,$9=0,label=0;

 $3=((__ZN16b2BlockAllocator8AllocateEi($allocator,144))|0);
 $4=($3|0)==0;
 if ($4) {
  $8=0;

  $9=(($8)|0);
  return (($9)|0);
 }
 $6=$3;
 __ZN16b2PolygonContactC2EP9b2FixtureS1_($6,$fixtureA,$fixtureB);
 $8=$6;

 $9=(($8)|0);
 return (($9)|0);
}


function __ZN16b2PolygonContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,144);
 return;
}


function __ZN16b2PolygonContactC2EP9b2FixtureS1_($this,$fixtureA,$fixtureB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $fixtureB=($fixtureB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,0,$fixtureB,0);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=13848;
 $3=(($this+48)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZNK9b2Fixture7GetTypeEv($4))|0);
 $6=($5|0)==2;
 if (!($6)) {
  ___assert_fail(((4992)|0),((9928)|0),((44)|0),((12736)|0));

 }
 $9=(($this+52)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((__ZNK9b2Fixture7GetTypeEv($10))|0);
 $12=($11|0)==2;
 if ($12) {
  return;
 } else {
  ___assert_fail(((6712)|0),((9928)|0),((45)|0),((12736)|0));

 }
}


function __ZN16b2PolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZN9b2Fixture8GetShapeEv($6))|0);
 $8=$7;
 __Z17b2CollidePolygonsP10b2ManifoldPK14b2PolygonShapeRK11b2TransformS3_S6_($manifold,$4,$xfA,$8,$xfB);
 return;
}


function __ZN16b2PolygonContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN16b2PolygonContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN18b2DistanceJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($this,$b1,$b2,$anchor1,$anchor2){
 $this=($this)|0;
 $b1=($b1)|0;
 $b2=($b2)|0;
 $anchor1=($anchor1)|0;
 $anchor2=($anchor2)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast7=0,$d=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0,$ld$4$0=0;
 var $12$0=0,$ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,$13=.0,$14=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast7=$2;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=$b1;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$b2;
 $5=(($this+20)|0);
 $6=((HEAP32[(($3)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$6,$anchor1);
 $7=$5;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($this+28)|0);
 $10=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast7,$10,$anchor2);
 $11=$9;
 $ld$4$0=(($2)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 __ZmiRK6b2Vec2S1_($d,$anchor2,$anchor1);
 $13=(+(__ZNK6b2Vec26LengthEv($d)));
 $14=(($this+36)|0);
 HEAPF32[(($14)>>2)]=$13;
 STACKTOP=sp;return;
}


function __ZNK6b2Body13GetLocalPointERK6b2Vec2($agg_result,$this,$worldPoint){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $worldPoint=($worldPoint)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 __Z6b2MulTRK11b2TransformRK6b2Vec2($agg_result,$1,$worldPoint);
 return;
}


function __ZN15b2DistanceJointC2EPK18b2DistanceJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0,$ld$4$0=0,$13$0=0,$ld$5$1=0;
 var $13$1=0,$st$6$0=0,$st$7$1=0,$14=0,$15=.0,$16=0,$17=0,$18=.0,$19=0,$20=0,$21=.0,$22=0,$23=0,$24=0,$25=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=14024;
 $4=(($this+80)|0);
 $5=(($this+88)|0);
 $6=(($def+20)|0);
 $7=$6;
 $8=$4;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($def+28)|0);
 $11=$10;
 $12=$5;
 $ld$4$0=(($11)|0);
 $13$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($11+4)|0);
 $13$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($12)|0);
 HEAP32[(($st$6$0)>>2)]=$13$0;
 $st$7$1=(($12+4)|0);
 HEAP32[(($st$7$1)>>2)]=$13$1;
 $14=(($def+36)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=(($this+104)|0);
 HEAPF32[(($16)>>2)]=$15;
 $17=(($def+40)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=(($this+68)|0);
 HEAPF32[(($19)>>2)]=$18;
 $20=(($def+44)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=(($this+72)|0);
 HEAPF32[(($22)>>2)]=$21;
 $23=(($this+100)|0);
 HEAPF32[(($23)>>2)]=0.0;
 $24=(($this+96)|0);
 HEAPF32[(($24)>>2)]=0.0;
 $25=(($this+76)|0);
 HEAPF32[(($25)>>2)]=0.0;
 return;
}



function __ZN15b2DistanceJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$vA=0,$tmpcast31=0,$cB=0,$tmpcast32=0,$vB=0,$tmpcast33=0,$qA=0,$qB=0,$1=0,$tmpcast34=0,$2=0,$3=0,$tmpcast35=0,$4=0,$5=0,$tmpcast36=0,$6=0,$7=0;
 var $P=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$ld$0$0=0,$25$0=0;
 var $ld$1$1=0,$25$1=0,$st$2$0=0,$st$3$1=0,$26=0,$27=0,$28=0,$29=0,$30=0,$ld$4$0=0,$31$0=0,$ld$5$1=0,$31$1=0,$st$6$0=0,$st$7$1=0,$32=0,$33=0,$34=.0,$35=0,$36=0;
 var $37=0,$38=.0,$39=0,$40=0,$41=0,$42=.0,$43=0,$44=0,$45=0,$46=.0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$ld$8$0=0,$53$0=0,$ld$9$1=0,$53$1=0;
 var $st$10$0=0,$st$11$1=0,$54=0,$55=0,$56=0,$57=.0,$58=0,$59=0,$60=0,$61=0,$ld$12$0=0,$62$0=0,$ld$13$1=0,$62$1=0,$st$14$0=0,$st$15$1=0,$63=0,$64=0,$65=0,$66=.0;
 var $67=0,$68=0,$69=0,$70=0,$ld$16$0=0,$71$0=0,$ld$17$1=0,$71$1=0,$st$18$0=0,$st$19$1=0,$72=0,$73=0,$74=0,$75=.0,$76=0,$77=0,$78=0,$ld$20$0=0,$79$0=0,$ld$21$1=0;
 var $79$1=0,$st$22$0=0,$st$23$1=0,$80=0,$81=0,$82=0,$83=.0,$84=0,$85=0,$86=0,$ld$24$0=0,$87$0=0,$ld$25$1=0,$87$1=0,$st$26$0=0,$st$27$1=0,$88=0,$89=0,$90=0,$ld$28$0=0;
 var $91$0=0,$ld$29$1=0,$91$1=0,$st$30$0=0,$st$31$1=0,$92=0,$93=0,$ld$32$0=0,$94$0=0,$ld$33$1=0,$94$1=0,$st$34$0=0,$st$35$1=0,$95=.0,$96=0,$98=.0,$101=.0,$102=.0,$103=.0,$104=.0;
 var $105=.0,$106=.0,$107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=0,$116=.0,$118=.0,$119=0,$120=0,$121=.0,$122=0,$124=0,$125=.0,$126=.0,$127=.0;
 var $128=.0,$129=0,$130=.0,$131=.0,$132=.0,$133=.0,$134=.0,$135=0,$136=.0,$137=.0,$138=.0,$139=.0,$140=0,$141=0,$143=.0,$145=.0,$146=.0,$147=.0,$148=.0,$149=0;
 var $150=.0,$151=.0,$152=0,$154=.0,$156=.0,$158=0,$159=0,$161=0,$162=0,$163=0,$165=0,$166=.0,$167=0,$168=.0,$169=.0,$170=.0,$171=.0,$172=.0,$173=.0,$174=.0;
 var $175=.0,$176=.0,$177=.0,$178=.0,$179=.0,$181=0,$wB_0=.0,$wA_0=.0,$183=0,$184=0,$185=0,$186=0,$ld$36$0=0,$187$0=0,$ld$37$1=0,$187$1=0,$st$38$0=0,$st$39$1=0,$188=0,$189=0;
 var $190=0,$191=0,$192=0,$193=0,$194=0,$ld$40$0=0,$195$0=0,$ld$41$1=0,$195$1=0,$st$42$0=0,$st$43$1=0,$196=0,$197=0,$198=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast31=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast32=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=(($this+48)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+8)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($this+108)|0);
 HEAP32[(($14)>>2)]=$13;
 $15=(($this+52)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($16+8)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($this+112)|0);
 HEAP32[(($19)>>2)]=$18;
 $20=(($this+140)|0);
 $21=((HEAP32[(($10)>>2)])|0);
 $22=(($21+28)|0);
 $23=$22;
 $24=$20;
 $ld$0$0=(($23)|0);
 $25$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($23+4)|0);
 $25$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($24)|0);
 HEAP32[(($st$2$0)>>2)]=$25$0;
 $st$3$1=(($24+4)|0);
 HEAP32[(($st$3$1)>>2)]=$25$1;
 $26=(($this+148)|0);
 $27=((HEAP32[(($15)>>2)])|0);
 $28=(($27+28)|0);
 $29=$28;
 $30=$26;
 $ld$4$0=(($29)|0);
 $31$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($29+4)|0);
 $31$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($30)|0);
 HEAP32[(($st$6$0)>>2)]=$31$0;
 $st$7$1=(($30+4)|0);
 HEAP32[(($st$7$1)>>2)]=$31$1;
 $32=((HEAP32[(($10)>>2)])|0);
 $33=(($32+120)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=(($this+156)|0);
 HEAPF32[(($35)>>2)]=$34;
 $36=((HEAP32[(($15)>>2)])|0);
 $37=(($36+120)|0);
 $38=(+(HEAPF32[(($37)>>2)]));
 $39=(($this+160)|0);
 HEAPF32[(($39)>>2)]=$38;
 $40=((HEAP32[(($10)>>2)])|0);
 $41=(($40+128)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+164)|0);
 HEAPF32[(($43)>>2)]=$42;
 $44=((HEAP32[(($15)>>2)])|0);
 $45=(($44+128)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=(($this+168)|0);
 HEAPF32[(($47)>>2)]=$46;
 $48=((HEAP32[(($14)>>2)])|0);
 $49=(($data+24)|0);
 $50=((HEAP32[(($49)>>2)])|0);
 $51=(($50+((($48)*(12))&-1))|0);
 $52=$51;
 $ld$8$0=(($52)|0);
 $53$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($52+4)|0);
 $53$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cA)|0);
 HEAP32[(($st$10$0)>>2)]=$53$0;
 $st$11$1=(($cA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$53$1;
 $54=((HEAP32[(($14)>>2)])|0);
 $55=((HEAP32[(($49)>>2)])|0);
 $56=(($55+((($54)*(12))&-1)+8)|0);
 $57=(+(HEAPF32[(($56)>>2)]));
 $58=(($data+28)|0);
 $59=((HEAP32[(($58)>>2)])|0);
 $60=(($59+((($54)*(12))&-1))|0);
 $61=$60;
 $ld$12$0=(($61)|0);
 $62$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($61+4)|0);
 $62$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vA)|0);
 HEAP32[(($st$14$0)>>2)]=$62$0;
 $st$15$1=(($vA+4)|0);
 HEAP32[(($st$15$1)>>2)]=$62$1;
 $63=((HEAP32[(($14)>>2)])|0);
 $64=((HEAP32[(($58)>>2)])|0);
 $65=(($64+((($63)*(12))&-1)+8)|0);
 $66=(+(HEAPF32[(($65)>>2)]));
 $67=((HEAP32[(($19)>>2)])|0);
 $68=((HEAP32[(($49)>>2)])|0);
 $69=(($68+((($67)*(12))&-1))|0);
 $70=$69;
 $ld$16$0=(($70)|0);
 $71$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($70+4)|0);
 $71$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($cB)|0);
 HEAP32[(($st$18$0)>>2)]=$71$0;
 $st$19$1=(($cB+4)|0);
 HEAP32[(($st$19$1)>>2)]=$71$1;
 $72=((HEAP32[(($19)>>2)])|0);
 $73=((HEAP32[(($49)>>2)])|0);
 $74=(($73+((($72)*(12))&-1)+8)|0);
 $75=(+(HEAPF32[(($74)>>2)]));
 $76=((HEAP32[(($58)>>2)])|0);
 $77=(($76+((($72)*(12))&-1))|0);
 $78=$77;
 $ld$20$0=(($78)|0);
 $79$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($78+4)|0);
 $79$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$79$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$79$1;
 $80=((HEAP32[(($19)>>2)])|0);
 $81=((HEAP32[(($58)>>2)])|0);
 $82=(($81+((($80)*(12))&-1)+8)|0);
 $83=(+(HEAPF32[(($82)>>2)]));
 __ZN5b2RotC1Ef($qA,$57);
 __ZN5b2RotC1Ef($qB,$75);
 $84=(($this+124)|0);
 $85=(($this+80)|0);
 __ZmiRK6b2Vec2S1_($2,$85,$20);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast34,$qA,$2);
 $86=$84;
 $ld$24$0=(($1)|0);
 $87$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($1+4)|0);
 $87$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($86)|0);
 HEAP32[(($st$26$0)>>2)]=$87$0;
 $st$27$1=(($86+4)|0);
 HEAP32[(($st$27$1)>>2)]=$87$1;
 $88=(($this+132)|0);
 $89=(($this+88)|0);
 __ZmiRK6b2Vec2S1_($4,$89,$26);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast35,$qB,$4);
 $90=$88;
 $ld$28$0=(($3)|0);
 $91$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($3+4)|0);
 $91$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($90)|0);
 HEAP32[(($st$30$0)>>2)]=$91$0;
 $st$31$1=(($90+4)|0);
 HEAP32[(($st$31$1)>>2)]=$91$1;
 $92=(($this+116)|0);
 __ZplRK6b2Vec2S1_($7,$tmpcast32,$88);
 __ZmiRK6b2Vec2S1_($6,$7,$tmpcast);
 __ZmiRK6b2Vec2S1_($tmpcast36,$6,$84);
 $93=$92;
 $ld$32$0=(($5)|0);
 $94$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($5+4)|0);
 $94$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($93)|0);
 HEAP32[(($st$34$0)>>2)]=$94$0;
 $st$35$1=(($93+4)|0);
 HEAP32[(($st$35$1)>>2)]=$94$1;
 $95=(+(__ZNK6b2Vec26LengthEv($92)));
 $96=$95>(0.004999999888241291);
 if ($96) {
  $98=((1.0))/($95);
  __ZN6b2Vec2mLEf($92,$98);
 } else {
  __ZN6b2Vec23SetEff($92,0.0,0.0);
 }
 $101=(+(__Z7b2CrossRK6b2Vec2S1_($84,$92)));
 $102=(+(__Z7b2CrossRK6b2Vec2S1_($88,$92)));
 $103=(+(HEAPF32[(($35)>>2)]));
 $104=(+(HEAPF32[(($43)>>2)]));
 $105=($101)*($104);
 $106=($101)*($105);
 $107=($103)+($106);
 $108=(+(HEAPF32[(($39)>>2)]));
 $109=($108)+($107);
 $110=(+(HEAPF32[(($47)>>2)]));
 $111=($102)*($110);
 $112=($102)*($111);
 $113=($109)+($112);
 $114=$113!=(0.0);
 if ($114) {
  $116=((1.0))/($113);
  $118=$116;
 } else {
  $118=0.0;
 }

 $119=(($this+172)|0);
 HEAPF32[(($119)>>2)]=$118;
 $120=(($this+68)|0);
 $121=(+(HEAPF32[(($120)>>2)]));
 $122=$121>(0.0);
 if ($122) {
  $124=(($this+104)|0);
  $125=(+(HEAPF32[(($124)>>2)]));
  $126=($95)-($125);
  $127=($121)*((6.2831854820251465));
  $128=($118)*((2.0));
  $129=(($this+72)|0);
  $130=(+(HEAPF32[(($129)>>2)]));
  $131=($128)*($130);
  $132=($127)*($131);
  $133=($118)*($127);
  $134=($127)*($133);
  $135=(($data)|0);
  $136=(+(HEAPF32[(($135)>>2)]));
  $137=($134)*($136);
  $138=($132)+($137);
  $139=($136)*($138);
  $140=(($this+96)|0);
  HEAPF32[(($140)>>2)]=$139;
  $141=$139!=(0.0);
  if ($141) {
   $143=((1.0))/($139);
   $145=$143;
  } else {
   $145=0.0;
  }

  HEAPF32[(($140)>>2)]=$145;
  $146=($126)*($136);
  $147=($134)*($146);
  $148=($147)*($145);
  $149=(($this+76)|0);
  HEAPF32[(($149)>>2)]=$148;
  $150=(+(HEAPF32[(($140)>>2)]));
  $151=($113)+($150);
  $152=$151!=(0.0);
  if ($152) {
   $154=((1.0))/($151);
   $156=$154;
  } else {
   $156=0.0;
  }

  HEAPF32[(($119)>>2)]=$156;
 } else {
  $158=(($this+96)|0);
  HEAPF32[(($158)>>2)]=0.0;
  $159=(($this+76)|0);
  HEAPF32[(($159)>>2)]=0.0;
 }
 $161=(($data+20)|0);
 $162=((HEAP8[($161)])|0);
 $163=(($162<<24)>>24)==0;
 if ($163) {
  $181=(($this+100)|0);
  HEAPF32[(($181)>>2)]=0.0;
  $wA_0=$66;$wB_0=$83;


  $183=((HEAP32[(($14)>>2)])|0);
  $184=((HEAP32[(($58)>>2)])|0);
  $185=(($184+((($183)*(12))&-1))|0);
  $186=$185;
  $ld$36$0=(($vA)|0);
  $187$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vA+4)|0);
  $187$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($186)|0);
  HEAP32[(($st$38$0)>>2)]=$187$0;
  $st$39$1=(($186+4)|0);
  HEAP32[(($st$39$1)>>2)]=$187$1;
  $188=((HEAP32[(($14)>>2)])|0);
  $189=((HEAP32[(($58)>>2)])|0);
  $190=(($189+((($188)*(12))&-1)+8)|0);
  HEAPF32[(($190)>>2)]=$wA_0;
  $191=((HEAP32[(($19)>>2)])|0);
  $192=((HEAP32[(($58)>>2)])|0);
  $193=(($192+((($191)*(12))&-1))|0);
  $194=$193;
  $ld$40$0=(($vB)|0);
  $195$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vB+4)|0);
  $195$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($194)|0);
  HEAP32[(($st$42$0)>>2)]=$195$0;
  $st$43$1=(($194+4)|0);
  HEAP32[(($st$43$1)>>2)]=$195$1;
  $196=((HEAP32[(($19)>>2)])|0);
  $197=((HEAP32[(($58)>>2)])|0);
  $198=(($197+((($196)*(12))&-1)+8)|0);
  HEAPF32[(($198)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $165=(($data+8)|0);
  $166=(+(HEAPF32[(($165)>>2)]));
  $167=(($this+100)|0);
  $168=(+(HEAPF32[(($167)>>2)]));
  $169=($166)*($168);
  HEAPF32[(($167)>>2)]=$169;
  __ZmlfRK6b2Vec2($P,$169,$92);
  $170=(+(HEAPF32[(($35)>>2)]));
  __ZmlfRK6b2Vec2($8,$170,$P);
  __ZN6b2Vec2mIERKS_($tmpcast31,$8);
  $171=(+(HEAPF32[(($43)>>2)]));
  $172=(+(__Z7b2CrossRK6b2Vec2S1_($84,$P)));
  $173=($171)*($172);
  $174=($66)-($173);
  $175=(+(HEAPF32[(($39)>>2)]));
  __ZmlfRK6b2Vec2($9,$175,$P);
  __ZN6b2Vec2pLERKS_($tmpcast33,$9);
  $176=(+(HEAPF32[(($47)>>2)]));
  $177=(+(__Z7b2CrossRK6b2Vec2S1_($88,$P)));
  $178=($176)*($177);
  $179=($83)+($178);
  $wA_0=$174;$wB_0=$179;


  $183=((HEAP32[(($14)>>2)])|0);
  $184=((HEAP32[(($58)>>2)])|0);
  $185=(($184+((($183)*(12))&-1))|0);
  $186=$185;
  $ld$36$0=(($vA)|0);
  $187$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vA+4)|0);
  $187$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($186)|0);
  HEAP32[(($st$38$0)>>2)]=$187$0;
  $st$39$1=(($186+4)|0);
  HEAP32[(($st$39$1)>>2)]=$187$1;
  $188=((HEAP32[(($14)>>2)])|0);
  $189=((HEAP32[(($58)>>2)])|0);
  $190=(($189+((($188)*(12))&-1)+8)|0);
  HEAPF32[(($190)>>2)]=$wA_0;
  $191=((HEAP32[(($19)>>2)])|0);
  $192=((HEAP32[(($58)>>2)])|0);
  $193=(($192+((($191)*(12))&-1))|0);
  $194=$193;
  $ld$40$0=(($vB)|0);
  $195$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vB+4)|0);
  $195$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($194)|0);
  HEAP32[(($st$42$0)>>2)]=$195$0;
  $st$43$1=(($194+4)|0);
  HEAP32[(($st$43$1)>>2)]=$195$1;
  $196=((HEAP32[(($19)>>2)])|0);
  $197=((HEAP32[(($58)>>2)])|0);
  $198=(($197+((($196)*(12))&-1)+8)|0);
  HEAPF32[(($198)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN5b2RotC1Ef($this,$angle){
 $this=($this)|0;
 $angle=+($angle);
 var label=0;

 __ZN5b2RotC2Ef($this,$angle);
 return;
}


function __ZN15b2DistanceJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast14=0,$vpA=0,$1=0,$vpB=0,$2=0,$3=0,$P=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0;
 var $ld$1$1=0,$12$1=0,$st$2$0=0,$st$3$1=0,$13=0,$14=0,$15=0,$16=.0,$17=0,$18=0,$19=0,$20=0,$ld$4$0=0,$21$0=0,$ld$5$1=0,$21$1=0,$st$6$0=0,$st$7$1=0,$22=0,$23=0;
 var $24=0,$25=.0,$26=0,$27=0,$28=0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=.0,$35=.0,$36=0,$37=.0,$38=0,$39=.0,$40=.0,$41=.0,$42=.0,$43=.0;
 var $44=0,$45=.0,$46=0,$47=.0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=0,$54=.0,$55=.0,$56=.0,$57=.0,$58=0,$59=0,$60=0,$61=0,$ld$8$0=0,$62$0=0;
 var $ld$9$1=0,$62$1=0,$st$10$0=0,$st$11$1=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$ld$12$0=0,$70$0=0,$ld$13$1=0,$70$1=0,$st$14$0=0,$st$15$1=0,$71=0,$72=0,$73=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast14=$vB;
 $vpA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $vpB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=(($this+108)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($data+28)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+((($7)*(12))&-1))|0);
 $11=$10;
 $ld$0$0=(($11)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($11+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$12$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$12$1;
 $13=((HEAP32[(($6)>>2)])|0);
 $14=((HEAP32[(($8)>>2)])|0);
 $15=(($14+((($13)*(12))&-1)+8)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=(($this+112)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($14+((($18)*(12))&-1))|0);
 $20=$19;
 $ld$4$0=(($20)|0);
 $21$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$21$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$21$1;
 $22=((HEAP32[(($17)>>2)])|0);
 $23=((HEAP32[(($8)>>2)])|0);
 $24=(($23+((($22)*(12))&-1)+8)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=(($this+124)|0);
 __Z7b2CrossfRK6b2Vec2($1,$16,$26);
 __ZplRK6b2Vec2S1_($vpA,$tmpcast,$1);
 $27=(($this+132)|0);
 __Z7b2CrossfRK6b2Vec2($2,$25,$27);
 __ZplRK6b2Vec2S1_($vpB,$tmpcast14,$2);
 $28=(($this+116)|0);
 __ZmiRK6b2Vec2S1_($3,$vpB,$vpA);
 $29=(+(__Z5b2DotRK6b2Vec2S1_($28,$3)));
 $30=(($this+172)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=((-.0))-($31);
 $33=(($this+76)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=($29)+($34);
 $36=(($this+96)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=(($this+100)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=($37)*($39);
 $41=($35)+($40);
 $42=($41)*($32);
 $43=($39)+($42);
 HEAPF32[(($38)>>2)]=$43;
 __ZmlfRK6b2Vec2($P,$42,$28);
 $44=(($this+156)|0);
 $45=(+(HEAPF32[(($44)>>2)]));
 __ZmlfRK6b2Vec2($4,$45,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$4);
 $46=(($this+164)|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=(+(__Z7b2CrossRK6b2Vec2S1_($26,$P)));
 $49=($47)*($48);
 $50=($16)-($49);
 $51=(($this+160)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 __ZmlfRK6b2Vec2($5,$52,$P);
 __ZN6b2Vec2pLERKS_($tmpcast14,$5);
 $53=(($this+168)|0);
 $54=(+(HEAPF32[(($53)>>2)]));
 $55=(+(__Z7b2CrossRK6b2Vec2S1_($27,$P)));
 $56=($54)*($55);
 $57=($25)+($56);
 $58=((HEAP32[(($6)>>2)])|0);
 $59=((HEAP32[(($8)>>2)])|0);
 $60=(($59+((($58)*(12))&-1))|0);
 $61=$60;
 $ld$8$0=(($vA)|0);
 $62$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vA+4)|0);
 $62$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($61)|0);
 HEAP32[(($st$10$0)>>2)]=$62$0;
 $st$11$1=(($61+4)|0);
 HEAP32[(($st$11$1)>>2)]=$62$1;
 $63=((HEAP32[(($6)>>2)])|0);
 $64=((HEAP32[(($8)>>2)])|0);
 $65=(($64+((($63)*(12))&-1)+8)|0);
 HEAPF32[(($65)>>2)]=$50;
 $66=((HEAP32[(($17)>>2)])|0);
 $67=((HEAP32[(($8)>>2)])|0);
 $68=(($67+((($66)*(12))&-1))|0);
 $69=$68;
 $ld$12$0=(($vB)|0);
 $70$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vB+4)|0);
 $70$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($69)|0);
 HEAP32[(($st$14$0)>>2)]=$70$0;
 $st$15$1=(($69+4)|0);
 HEAP32[(($st$15$1)>>2)]=$70$1;
 $71=((HEAP32[(($17)>>2)])|0);
 $72=((HEAP32[(($8)>>2)])|0);
 $73=(($72+((($71)*(12))&-1)+8)|0);
 HEAPF32[(($73)>>2)]=$57;
 STACKTOP=sp;return;
}


function __ZN15b2DistanceJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast16=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$u=0,$3=0,$4=0,$P=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$11=0;
 var $12=0,$13=0,$14=0,$15=0,$16=0,$ld$0$0=0,$17$0=0,$ld$1$1=0,$17$1=0,$st$2$0=0,$st$3$1=0,$18=0,$19=0,$20=0,$21=.0,$22=0,$23=0,$24=0,$25=0,$ld$4$0=0;
 var $26$0=0,$ld$5$1=0,$26$1=0,$st$6$0=0,$st$7$1=0,$27=0,$28=0,$29=0,$30=.0,$31=0,$32=0,$33=0,$34=0,$35=.0,$36=0,$37=.0,$38=.0,$39=.0,$40=0,$41=.0;
 var $42=.0,$43=.0,$44=0,$45=.0,$46=0,$47=.0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=0,$54=.0,$55=.0,$56=.0,$57=.0,$58=0,$59=0,$60=0,$61=0;
 var $ld$8$0=0,$62$0=0,$ld$9$1=0,$62$1=0,$st$10$0=0,$st$11$1=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$ld$12$0=0,$70$0=0,$ld$13$1=0,$70$1=0,$st$14$0=0,$st$15$1=0,$71=0;
 var $72=0,$73=0,$74=.0,$75=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast16=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $u=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+68)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=$8>(0.0);
 if ($9) {
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
 $11=(($this+108)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=(($data+24)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($14+((($12)*(12))&-1))|0);
 $16=$15;
 $ld$0$0=(($16)|0);
 $17$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($16+4)|0);
 $17$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$17$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$17$1;
 $18=((HEAP32[(($11)>>2)])|0);
 $19=((HEAP32[(($13)>>2)])|0);
 $20=(($19+((($18)*(12))&-1)+8)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=(($this+112)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=(($19+((($23)*(12))&-1))|0);
 $25=$24;
 $ld$4$0=(($25)|0);
 $26$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($25+4)|0);
 $26$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$26$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$26$1;
 $27=((HEAP32[(($22)>>2)])|0);
 $28=((HEAP32[(($13)>>2)])|0);
 $29=(($28+((($27)*(12))&-1)+8)|0);
 $30=(+(HEAPF32[(($29)>>2)]));
 __ZN5b2RotC1Ef($qA,$21);
 __ZN5b2RotC1Ef($qB,$30);
 $31=(($this+80)|0);
 $32=(($this+140)|0);
 __ZmiRK6b2Vec2S1_($1,$31,$32);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $33=(($this+88)|0);
 $34=(($this+148)|0);
 __ZmiRK6b2Vec2S1_($2,$33,$34);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZplRK6b2Vec2S1_($4,$tmpcast16,$rB);
 __ZmiRK6b2Vec2S1_($3,$4,$tmpcast);
 __ZmiRK6b2Vec2S1_($u,$3,$rA);
 $35=(+(__ZN6b2Vec29NormalizeEv($u)));
 $36=(($this+104)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=($35)-($37);
 $39=(+(__Z7b2ClampIfET_S0_S0_S0_($38,-0.20000000298023224,0.20000000298023224)));
 $40=(($this+172)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=((-.0))-($41);
 $43=($39)*($42);
 __ZmlfRK6b2Vec2($P,$43,$u);
 $44=(($this+156)|0);
 $45=(+(HEAPF32[(($44)>>2)]));
 __ZmlfRK6b2Vec2($5,$45,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$5);
 $46=(($this+164)|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$P)));
 $49=($47)*($48);
 $50=($21)-($49);
 $51=(($this+160)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 __ZmlfRK6b2Vec2($6,$52,$P);
 __ZN6b2Vec2pLERKS_($tmpcast16,$6);
 $53=(($this+168)|0);
 $54=(+(HEAPF32[(($53)>>2)]));
 $55=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$P)));
 $56=($54)*($55);
 $57=($30)+($56);
 $58=((HEAP32[(($11)>>2)])|0);
 $59=((HEAP32[(($13)>>2)])|0);
 $60=(($59+((($58)*(12))&-1))|0);
 $61=$60;
 $ld$8$0=(($cA)|0);
 $62$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $62$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($61)|0);
 HEAP32[(($st$10$0)>>2)]=$62$0;
 $st$11$1=(($61+4)|0);
 HEAP32[(($st$11$1)>>2)]=$62$1;
 $63=((HEAP32[(($11)>>2)])|0);
 $64=((HEAP32[(($13)>>2)])|0);
 $65=(($64+((($63)*(12))&-1)+8)|0);
 HEAPF32[(($65)>>2)]=$50;
 $66=((HEAP32[(($22)>>2)])|0);
 $67=((HEAP32[(($13)>>2)])|0);
 $68=(($67+((($66)*(12))&-1))|0);
 $69=$68;
 $ld$12$0=(($cB)|0);
 $70$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $70$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($69)|0);
 HEAP32[(($st$14$0)>>2)]=$70$0;
 $st$15$1=(($69+4)|0);
 HEAP32[(($st$15$1)>>2)]=$70$1;
 $71=((HEAP32[(($22)>>2)])|0);
 $72=((HEAP32[(($13)>>2)])|0);
 $73=(($72+((($71)*(12))&-1)+8)|0);
 HEAPF32[(($73)>>2)]=$57;
 $74=(+(__Z5b2AbsIfET_S0_($39)));
 $75=$74<(0.004999999888241291);
 $_0=$75;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNK15b2DistanceJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+80)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$this,$localPoint){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $localPoint=($localPoint)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($agg_result,$1,$localPoint);
 return;
}


function __ZNK15b2DistanceJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+88)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK15b2DistanceJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,$4=0,label=0;

 $1=(($this+100)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 $4=(($this+116)|0);
 __ZmlfRK6b2Vec2($agg_result,$3,$4);
 return;
}


function __ZNK15b2DistanceJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var label=0;

 return 0.0;
}


function __ZN15b2DistanceJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(4880,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(9896,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(6680,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(4336,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+80)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+84)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(3272,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+88)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+92)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(2544,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+104)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 __Z5b2LogPKcz(1864,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$26,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $27=(($this+68)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(1280,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+72)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=$31;
 __Z5b2LogPKcz(760,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$32,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $33=(($this+56)|0);
 $34=((HEAP32[(($33)>>2)])|0);
 __Z5b2LogPKcz(280,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$34,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN15b2DistanceJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN15b2DistanceJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN5b2RotC2Ef($this,$angle){
 $this=($this)|0;
 $angle=+($angle);
 var $1=.0,$2=0,$3=.0,$4=0,label=0;

 $1=(+(Math_sin($angle)));
 $2=(($this)|0);
 HEAPF32[(($2)>>2)]=$1;
 $3=(+(Math_cos($angle)));
 $4=(($this+4)|0);
 HEAPF32[(($4)>>2)]=$3;
 return;
}


function __ZN18b2FrictionJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($this,$bA,$bB,$anchor){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 $anchor=($anchor)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0,$ld$4$0=0,$12$0=0;
 var $ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=$bA;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$bB;
 $5=(($this+20)|0);
 $6=((HEAP32[(($3)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$6,$anchor);
 $7=$5;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($this+28)|0);
 $10=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast5,$10,$anchor);
 $11=$9;
 $ld$4$0=(($2)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 STACKTOP=sp;return;
}


function __ZN15b2FrictionJointC2EPK18b2FrictionJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$11=0,$12=0,$13=0,$ld$4$0=0,$14$0=0;
 var $ld$5$1=0,$14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=0,$17=.0,$18=0,$19=0,$20=.0,$21=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=13968;
 $4=(($this+68)|0);
 $5=(($this+76)|0);
 $6=(($this+84)|0);
 $7=(($def+20)|0);
 $8=$7;
 $9=$4;
 $ld$0$0=(($8)|0);
 $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($8+4)|0);
 $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($9)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 $st$3$1=(($9+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 $11=(($def+28)|0);
 $12=$11;
 $13=$5;
 $ld$4$0=(($12)|0);
 $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($12+4)|0);
 $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($13)|0);
 HEAP32[(($st$6$0)>>2)]=$14$0;
 $st$7$1=(($13+4)|0);
 HEAP32[(($st$7$1)>>2)]=$14$1;
 __ZN6b2Vec27SetZeroEv($6);
 $15=(($this+92)|0);
 HEAPF32[(($15)>>2)]=0.0;
 $16=(($def+36)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+96)|0);
 HEAPF32[(($18)>>2)]=$17;
 $19=(($def+40)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=(($this+100)|0);
 HEAPF32[(($21)>>2)]=$20;
 return;
}


function __ZN15b2FrictionJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast28=0,$qA=0,$qB=0,$1=0,$tmpcast29=0,$2=0,$3=0,$tmpcast30=0,$4=0,$K=0,$5=0,$P=0,$6=0,$7=0,$8=0,$9=0,$10=0;
 var $11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$ld$0$0=0,$23$0=0,$ld$1$1=0,$23$1=0,$st$2$0=0,$st$3$1=0,$24=0,$25=0;
 var $26=0,$27=0,$28=0,$ld$4$0=0,$29$0=0,$ld$5$1=0,$29$1=0,$st$6$0=0,$st$7$1=0,$30=0,$31=0,$32=.0,$33=0,$34=0,$35=0,$36=.0,$37=0,$38=0,$39=0,$40=.0;
 var $41=0,$42=0,$43=0,$44=.0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=.0,$51=0,$52=0,$53=0,$54=0,$ld$8$0=0,$55$0=0,$ld$9$1=0,$55$1=0,$st$10$0=0,$st$11$1=0;
 var $56=0,$57=0,$58=0,$59=.0,$60=0,$61=0,$62=0,$63=.0,$64=0,$65=0,$ld$12$0=0,$66$0=0,$ld$13$1=0,$66$1=0,$st$14$0=0,$st$15$1=0,$67=0,$68=0,$69=0,$70=.0;
 var $71=0,$72=0,$73=0,$ld$16$0=0,$74$0=0,$ld$17$1=0,$74$1=0,$st$18$0=0,$st$19$1=0,$75=0,$76=0,$77=0,$ld$20$0=0,$78$0=0,$ld$21$1=0,$78$1=0,$st$22$0=0,$st$23$1=0,$79=.0,$80=.0;
 var $81=.0,$82=.0,$83=.0,$84=0,$85=.0,$86=.0,$87=.0,$88=.0,$89=0,$90=.0,$91=.0,$92=.0,$93=.0,$94=0,$95=.0,$96=0,$97=.0,$98=.0,$99=.0,$100=.0;
 var $101=0,$102=.0,$103=.0,$104=.0,$105=.0,$106=.0,$107=0,$108=0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0,$115=.0,$116=.0,$117=0,$118=0,$119=0,$120=0;
 var $121=.0,$122=0,$123=0,$125=.0,$storemerge=.0,$127=0,$128=0,$129=0,$130=0,$132=0,$133=.0,$134=.0,$135=0,$136=.0,$137=.0,$138=0,$139=.0,$140=0,$141=.0,$142=.0;
 var $143=.0,$144=.0,$145=.0,$146=.0,$147=.0,$148=.0,$149=.0,$150=.0,$151=.0,$153=0,$wB_0=.0,$wA_0=.0,$155=0,$156=0,$157=0,$158=0,$ld$24$0=0,$159$0=0,$ld$25$1=0,$159$1=0;
 var $st$26$0=0,$st$27$1=0,$160=0,$161=0,$162=0,$163=0,$164=0,$165=0,$166=0,$ld$28$0=0,$167$0=0,$ld$29$1=0,$167$1=0,$st$30$0=0,$st$31$1=0,$168=0,$169=0,$170=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast28=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast29=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast30=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=(($this+48)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+8)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($this+104)|0);
 HEAP32[(($12)>>2)]=$11;
 $13=(($this+52)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($14+8)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($this+108)|0);
 HEAP32[(($17)>>2)]=$16;
 $18=(($this+128)|0);
 $19=((HEAP32[(($8)>>2)])|0);
 $20=(($19+28)|0);
 $21=$20;
 $22=$18;
 $ld$0$0=(($21)|0);
 $23$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($21+4)|0);
 $23$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($22)|0);
 HEAP32[(($st$2$0)>>2)]=$23$0;
 $st$3$1=(($22+4)|0);
 HEAP32[(($st$3$1)>>2)]=$23$1;
 $24=(($this+136)|0);
 $25=((HEAP32[(($13)>>2)])|0);
 $26=(($25+28)|0);
 $27=$26;
 $28=$24;
 $ld$4$0=(($27)|0);
 $29$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($27+4)|0);
 $29$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($28)|0);
 HEAP32[(($st$6$0)>>2)]=$29$0;
 $st$7$1=(($28+4)|0);
 HEAP32[(($st$7$1)>>2)]=$29$1;
 $30=((HEAP32[(($8)>>2)])|0);
 $31=(($30+120)|0);
 $32=(+(HEAPF32[(($31)>>2)]));
 $33=(($this+144)|0);
 HEAPF32[(($33)>>2)]=$32;
 $34=((HEAP32[(($13)>>2)])|0);
 $35=(($34+120)|0);
 $36=(+(HEAPF32[(($35)>>2)]));
 $37=(($this+148)|0);
 HEAPF32[(($37)>>2)]=$36;
 $38=((HEAP32[(($8)>>2)])|0);
 $39=(($38+128)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=(($this+152)|0);
 HEAPF32[(($41)>>2)]=$40;
 $42=((HEAP32[(($13)>>2)])|0);
 $43=(($42+128)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=(($this+156)|0);
 HEAPF32[(($45)>>2)]=$44;
 $46=((HEAP32[(($12)>>2)])|0);
 $47=(($data+24)|0);
 $48=((HEAP32[(($47)>>2)])|0);
 $49=(($48+((($46)*(12))&-1)+8)|0);
 $50=(+(HEAPF32[(($49)>>2)]));
 $51=(($data+28)|0);
 $52=((HEAP32[(($51)>>2)])|0);
 $53=(($52+((($46)*(12))&-1))|0);
 $54=$53;
 $ld$8$0=(($54)|0);
 $55$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($54+4)|0);
 $55$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($vA)|0);
 HEAP32[(($st$10$0)>>2)]=$55$0;
 $st$11$1=(($vA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$55$1;
 $56=((HEAP32[(($12)>>2)])|0);
 $57=((HEAP32[(($51)>>2)])|0);
 $58=(($57+((($56)*(12))&-1)+8)|0);
 $59=(+(HEAPF32[(($58)>>2)]));
 $60=((HEAP32[(($17)>>2)])|0);
 $61=((HEAP32[(($47)>>2)])|0);
 $62=(($61+((($60)*(12))&-1)+8)|0);
 $63=(+(HEAPF32[(($62)>>2)]));
 $64=(($57+((($60)*(12))&-1))|0);
 $65=$64;
 $ld$12$0=(($65)|0);
 $66$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($65+4)|0);
 $66$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vB)|0);
 HEAP32[(($st$14$0)>>2)]=$66$0;
 $st$15$1=(($vB+4)|0);
 HEAP32[(($st$15$1)>>2)]=$66$1;
 $67=((HEAP32[(($17)>>2)])|0);
 $68=((HEAP32[(($51)>>2)])|0);
 $69=(($68+((($67)*(12))&-1)+8)|0);
 $70=(+(HEAPF32[(($69)>>2)]));
 __ZN5b2RotC1Ef($qA,$50);
 __ZN5b2RotC1Ef($qB,$63);
 $71=(($this+112)|0);
 $72=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($2,$72,$18);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast29,$qA,$2);
 $73=$71;
 $ld$16$0=(($1)|0);
 $74$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($1+4)|0);
 $74$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($73)|0);
 HEAP32[(($st$18$0)>>2)]=$74$0;
 $st$19$1=(($73+4)|0);
 HEAP32[(($st$19$1)>>2)]=$74$1;
 $75=(($this+120)|0);
 $76=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($4,$76,$24);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast30,$qB,$4);
 $77=$75;
 $ld$20$0=(($3)|0);
 $78$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($3+4)|0);
 $78$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($77)|0);
 HEAP32[(($st$22$0)>>2)]=$78$0;
 $st$23$1=(($77+4)|0);
 HEAP32[(($st$23$1)>>2)]=$78$1;
 $79=(+(HEAPF32[(($33)>>2)]));
 $80=(+(HEAPF32[(($37)>>2)]));
 $81=(+(HEAPF32[(($41)>>2)]));
 $82=(+(HEAPF32[(($45)>>2)]));
 $83=($79)+($80);
 $84=(($this+116)|0);
 $85=(+(HEAPF32[(($84)>>2)]));
 $86=($81)*($85);
 $87=($85)*($86);
 $88=($83)+($87);
 $89=(($this+124)|0);
 $90=(+(HEAPF32[(($89)>>2)]));
 $91=($82)*($90);
 $92=($90)*($91);
 $93=($88)+($92);
 $94=(($K)|0);
 HEAPF32[(($94)>>2)]=$93;
 $95=((-.0))-($81);
 $96=(($71)|0);
 $97=(+(HEAPF32[(($96)>>2)]));
 $98=($97)*($95);
 $99=(+(HEAPF32[(($84)>>2)]));
 $100=($98)*($99);
 $101=(($75)|0);
 $102=(+(HEAPF32[(($101)>>2)]));
 $103=($82)*($102);
 $104=(+(HEAPF32[(($89)>>2)]));
 $105=($103)*($104);
 $106=($100)-($105);
 $107=(($K+4)|0);
 HEAPF32[(($107)>>2)]=$106;
 $108=(($K+8)|0);
 HEAPF32[(($108)>>2)]=$106;
 $109=(+(HEAPF32[(($96)>>2)]));
 $110=($81)*($109);
 $111=($109)*($110);
 $112=($83)+($111);
 $113=(+(HEAPF32[(($101)>>2)]));
 $114=($82)*($113);
 $115=($113)*($114);
 $116=($112)+($115);
 $117=(($K+12)|0);
 HEAPF32[(($117)>>2)]=$116;
 $118=(($this+160)|0);
 __ZNK7b2Mat2210GetInverseEv($5,$K);
 $119=$118;
 $120=$5;
 HEAP32[(($119)>>2)]=((HEAP32[(($120)>>2)])|0);HEAP32[((($119)+(4))>>2)]=((HEAP32[((($120)+(4))>>2)])|0);HEAP32[((($119)+(8))>>2)]=((HEAP32[((($120)+(8))>>2)])|0);HEAP32[((($119)+(12))>>2)]=((HEAP32[((($120)+(12))>>2)])|0);
 $121=($81)+($82);
 $122=(($this+176)|0);
 $123=$121>(0.0);
 if ($123) {
  $125=((1.0))/($121);
  $storemerge=$125;
 } else {
  $storemerge=$121;
 }

 HEAPF32[(($122)>>2)]=$storemerge;
 $127=(($data+20)|0);
 $128=((HEAP8[($127)])|0);
 $129=(($128<<24)>>24)==0;
 $130=(($this+84)|0);
 if ($129) {
  __ZN6b2Vec27SetZeroEv($130);
  $153=(($this+92)|0);
  HEAPF32[(($153)>>2)]=0.0;
  $wA_0=$59;$wB_0=$70;


  $155=((HEAP32[(($12)>>2)])|0);
  $156=((HEAP32[(($51)>>2)])|0);
  $157=(($156+((($155)*(12))&-1))|0);
  $158=$157;
  $ld$24$0=(($vA)|0);
  $159$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($vA+4)|0);
  $159$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($158)|0);
  HEAP32[(($st$26$0)>>2)]=$159$0;
  $st$27$1=(($158+4)|0);
  HEAP32[(($st$27$1)>>2)]=$159$1;
  $160=((HEAP32[(($12)>>2)])|0);
  $161=((HEAP32[(($51)>>2)])|0);
  $162=(($161+((($160)*(12))&-1)+8)|0);
  HEAPF32[(($162)>>2)]=$wA_0;
  $163=((HEAP32[(($17)>>2)])|0);
  $164=((HEAP32[(($51)>>2)])|0);
  $165=(($164+((($163)*(12))&-1))|0);
  $166=$165;
  $ld$28$0=(($vB)|0);
  $167$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($vB+4)|0);
  $167$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($166)|0);
  HEAP32[(($st$30$0)>>2)]=$167$0;
  $st$31$1=(($166+4)|0);
  HEAP32[(($st$31$1)>>2)]=$167$1;
  $168=((HEAP32[(($17)>>2)])|0);
  $169=((HEAP32[(($51)>>2)])|0);
  $170=(($169+((($168)*(12))&-1)+8)|0);
  HEAPF32[(($170)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $132=(($data+8)|0);
  $133=(+(HEAPF32[(($132)>>2)]));
  __ZN6b2Vec2mLEf($130,$133);
  $134=(+(HEAPF32[(($132)>>2)]));
  $135=(($this+92)|0);
  $136=(+(HEAPF32[(($135)>>2)]));
  $137=($134)*($136);
  HEAPF32[(($135)>>2)]=$137;
  $138=(($130)|0);
  $139=(+(HEAPF32[(($138)>>2)]));
  $140=(($this+88)|0);
  $141=(+(HEAPF32[(($140)>>2)]));
  __ZN6b2Vec2C1Eff($P,$139,$141);
  __ZmlfRK6b2Vec2($6,$79,$P);
  __ZN6b2Vec2mIERKS_($tmpcast,$6);
  $142=(+(__Z7b2CrossRK6b2Vec2S1_($71,$P)));
  $143=(+(HEAPF32[(($135)>>2)]));
  $144=($142)+($143);
  $145=($81)*($144);
  $146=($59)-($145);
  __ZmlfRK6b2Vec2($7,$80,$P);
  __ZN6b2Vec2pLERKS_($tmpcast28,$7);
  $147=(+(__Z7b2CrossRK6b2Vec2S1_($75,$P)));
  $148=(+(HEAPF32[(($135)>>2)]));
  $149=($147)+($148);
  $150=($82)*($149);
  $151=($70)+($150);
  $wA_0=$146;$wB_0=$151;


  $155=((HEAP32[(($12)>>2)])|0);
  $156=((HEAP32[(($51)>>2)])|0);
  $157=(($156+((($155)*(12))&-1))|0);
  $158=$157;
  $ld$24$0=(($vA)|0);
  $159$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($vA+4)|0);
  $159$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($158)|0);
  HEAP32[(($st$26$0)>>2)]=$159$0;
  $st$27$1=(($158+4)|0);
  HEAP32[(($st$27$1)>>2)]=$159$1;
  $160=((HEAP32[(($12)>>2)])|0);
  $161=((HEAP32[(($51)>>2)])|0);
  $162=(($161+((($160)*(12))&-1)+8)|0);
  HEAPF32[(($162)>>2)]=$wA_0;
  $163=((HEAP32[(($17)>>2)])|0);
  $164=((HEAP32[(($51)>>2)])|0);
  $165=(($164+((($163)*(12))&-1))|0);
  $166=$165;
  $ld$28$0=(($vB)|0);
  $167$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($vB+4)|0);
  $167$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($166)|0);
  HEAP32[(($st$30$0)>>2)]=$167$0;
  $st$31$1=(($166+4)|0);
  HEAP32[(($st$31$1)>>2)]=$167$1;
  $168=((HEAP32[(($17)>>2)])|0);
  $169=((HEAP32[(($51)>>2)])|0);
  $170=(($169+((($168)*(12))&-1)+8)|0);
  HEAPF32[(($170)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN15b2FrictionJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast26=0,$Cdot1=0,$1=0,$2=0,$3=0,$4=0,$impulse2=0,$tmpcast28=0,$5=0,$oldImpulse3=0,$tmpcast27=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0;
 var $12=0,$13=0,$ld$0$0=0,$14$0=0,$ld$1$1=0,$14$1=0,$st$2$0=0,$st$3$1=0,$15=0,$16=0,$17=0,$18=.0,$19=0,$20=0,$21=0,$22=0,$ld$4$0=0,$23$0=0,$ld$5$1=0,$23$1=0;
 var $st$6$0=0,$st$7$1=0,$24=0,$25=0,$26=0,$27=.0,$28=0,$29=.0,$30=0,$31=.0,$32=0,$33=.0,$34=0,$35=.0,$36=0,$37=.0,$38=.0,$39=0,$40=.0,$41=.0;
 var $42=.0,$43=0,$44=.0,$45=0,$46=.0,$47=.0,$48=.0,$49=.0,$50=.0,$51=.0,$52=.0,$53=.0,$54=.0,$55=.0,$56=0,$57=0,$58=0,$59=0,$60=0,$ld$8$0=0;
 var $61$0=0,$ld$9$1=0,$61$1=0,$st$10$0=0,$st$11$1=0,$62=0,$63=.0,$64=.0,$65=.0,$66=.0,$67=0,$69=.0,$impulse230=0,$71=.0,$72=.0,$73=.0,$74=.0,$75=.0,$76=.0,$77=0;
 var $78=0,$79=0,$80=0,$ld$12$0=0,$81$0=0,$ld$13$1=0,$81$1=0,$st$14$0=0,$st$15$1=0,$82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$ld$16$0=0,$89$0=0,$ld$17$1=0,$89$1=0;
 var $st$18$0=0,$st$19$1=0,$90=0,$91=0,$92=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast26=$vB;
 $Cdot1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $impulse2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast28=$impulse2;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $oldImpulse3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast27=$oldImpulse3;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=(($this+104)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($data+28)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+((($9)*(12))&-1))|0);
 $13=$12;
 $ld$0$0=(($13)|0);
 $14$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$14$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$14$1;
 $15=((HEAP32[(($8)>>2)])|0);
 $16=((HEAP32[(($10)>>2)])|0);
 $17=(($16+((($15)*(12))&-1)+8)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=(($this+108)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=(($16+((($20)*(12))&-1))|0);
 $22=$21;
 $ld$4$0=(($22)|0);
 $23$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($22+4)|0);
 $23$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$23$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$23$1;
 $24=((HEAP32[(($19)>>2)])|0);
 $25=((HEAP32[(($10)>>2)])|0);
 $26=(($25+((($24)*(12))&-1)+8)|0);
 $27=(+(HEAPF32[(($26)>>2)]));
 $28=(($this+144)|0);
 $29=(+(HEAPF32[(($28)>>2)]));
 $30=(($this+148)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+152)|0);
 $33=(+(HEAPF32[(($32)>>2)]));
 $34=(($this+156)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($data)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=($27)-($18);
 $39=(($this+176)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=((-.0))-($40);
 $42=($38)*($41);
 $43=(($this+92)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=(($this+100)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=($37)*($46);
 $48=($44)+($42);
 $49=((-.0))-($47);
 $50=(+(__Z7b2ClampIfET_S0_S0_S0_($48,$49,$47)));
 HEAPF32[(($43)>>2)]=$50;
 $51=($50)-($44);
 $52=($33)*($51);
 $53=($18)-($52);
 $54=($35)*($51);
 $55=($27)+($54);
 $56=(($this+120)|0);
 __Z7b2CrossfRK6b2Vec2($3,$55,$56);
 __ZplRK6b2Vec2S1_($2,$tmpcast26,$3);
 __ZmiRK6b2Vec2S1_($1,$2,$tmpcast);
 $57=(($this+112)|0);
 __Z7b2CrossfRK6b2Vec2($4,$53,$57);
 __ZmiRK6b2Vec2S1_($Cdot1,$1,$4);
 $58=(($this+160)|0);
 __Z5b2MulRK7b2Mat22RK6b2Vec2($5,$58,$Cdot1);
 __ZNK6b2Vec2ngEv($tmpcast28,$5);
 $59=(($this+84)|0);
 $60=$59;
 $ld$8$0=(($60)|0);
 $61$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($60+4)|0);
 $61$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($oldImpulse3)|0);
 HEAP32[(($st$10$0)>>2)]=$61$0;
 $st$11$1=(($oldImpulse3+4)|0);
 HEAP32[(($st$11$1)>>2)]=$61$1;
 __ZN6b2Vec2pLERKS_($59,$tmpcast28);
 $62=(($this+96)|0);
 $63=(+(HEAPF32[(($62)>>2)]));
 $64=($37)*($63);
 $65=(+(__ZNK6b2Vec213LengthSquaredEv($59)));
 $66=($64)*($64);
 $67=$65>$66;
 if ($67) {
  $69=(+(__ZN6b2Vec29NormalizeEv($59)));
  __ZN6b2Vec2mLEf($59,$64);
 }
 $impulse230=$impulse2;
 __ZmiRK6b2Vec2S1_($impulse230,$59,$tmpcast27);
 __ZmlfRK6b2Vec2($6,$29,$tmpcast28);
 __ZN6b2Vec2mIERKS_($tmpcast,$6);
 $71=(+(__Z7b2CrossRK6b2Vec2S1_($57,$tmpcast28)));
 $72=($33)*($71);
 $73=($53)-($72);
 __ZmlfRK6b2Vec2($7,$31,$tmpcast28);
 __ZN6b2Vec2pLERKS_($tmpcast26,$7);
 $74=(+(__Z7b2CrossRK6b2Vec2S1_($56,$tmpcast28)));
 $75=($35)*($74);
 $76=($55)+($75);
 $77=((HEAP32[(($8)>>2)])|0);
 $78=((HEAP32[(($10)>>2)])|0);
 $79=(($78+((($77)*(12))&-1))|0);
 $80=$79;
 $ld$12$0=(($vA)|0);
 $81$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vA+4)|0);
 $81$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($80)|0);
 HEAP32[(($st$14$0)>>2)]=$81$0;
 $st$15$1=(($80+4)|0);
 HEAP32[(($st$15$1)>>2)]=$81$1;
 $82=((HEAP32[(($8)>>2)])|0);
 $83=((HEAP32[(($10)>>2)])|0);
 $84=(($83+((($82)*(12))&-1)+8)|0);
 HEAPF32[(($84)>>2)]=$73;
 $85=((HEAP32[(($19)>>2)])|0);
 $86=((HEAP32[(($10)>>2)])|0);
 $87=(($86+((($85)*(12))&-1))|0);
 $88=$87;
 $ld$16$0=(($vB)|0);
 $89$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($vB+4)|0);
 $89$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($88)|0);
 HEAP32[(($st$18$0)>>2)]=$89$0;
 $st$19$1=(($88+4)|0);
 HEAP32[(($st$19$1)>>2)]=$89$1;
 $90=((HEAP32[(($19)>>2)])|0);
 $91=((HEAP32[(($10)>>2)])|0);
 $92=(($91+((($90)*(12))&-1)+8)|0);
 HEAPF32[(($92)>>2)]=$76;
 STACKTOP=sp;return;
}


function __ZN15b2FrictionJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var label=0;

 return ((1)|0);
}


function __ZNK15b2FrictionJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+68)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK15b2FrictionJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+76)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK15b2FrictionJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,label=0;

 $1=(($this+84)|0);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$1);
 return;
}


function __ZNK15b2FrictionJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+92)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZN15b2FrictionJoint11SetMaxForceEf($this,$force){
 $this=($this)|0;
 $force=+($force);
 var $1=0,$2=0,$or_cond=0,$5=0,label=0;

 $1=((__Z9b2IsValidf($force))|0);
 $2=$force>=(0.0);
 $or_cond=$1&$2;
 if ($or_cond) {
  $5=(($this+96)|0);
  HEAPF32[(($5)>>2)]=$force;
  return;
 } else {
  ___assert_fail(((4712)|0),((9784)|0),((217)|0),((12848)|0));

 }
}


function __ZNK15b2FrictionJoint11GetMaxForceEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+96)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZN15b2FrictionJoint12SetMaxTorqueEf($this,$torque){
 $this=($this)|0;
 $torque=+($torque);
 var $1=0,$2=0,$or_cond=0,$5=0,label=0;

 $1=((__Z9b2IsValidf($torque))|0);
 $2=$torque>=(0.0);
 $or_cond=$1&$2;
 if ($or_cond) {
  $5=(($this+100)|0);
  HEAPF32[(($5)>>2)]=$torque;
  return;
 } else {
  ___assert_fail(((6608)|0),((9784)|0),((228)|0),((12832)|0));

 }
}


function __ZNK15b2FrictionJoint12GetMaxTorqueEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+100)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZN15b2FrictionJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(4296,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3216,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2512,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(1824,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+68)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+72)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(1232,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+76)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+80)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(712,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+96)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 __Z5b2LogPKcz(248,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$26,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $27=(($this+100)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(11616,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+56)|0);
 $31=((HEAP32[(($30)>>2)])|0);
 __Z5b2LogPKcz(11240,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$31,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN15b2FrictionJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN15b2FrictionJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN11b2GearJointC2EPK14b2GearJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $xfA=0,$xfC=0,$pC=0,$tmpcast=0,$pA=0,$1=0,$2=0,$3=0,$4=0,$xfB=0,$xfD=0,$pD=0,$tmpcast19=0,$pB=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0;
 var $11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0;
 var $_off=0,$switch=0,$_off20=0,$switch21=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=.0,$47=0,$48=0,$49=0,$50=0;
 var $51=0,$52=0,$53=0,$55=0,$56=0,$57=.0,$58=0,$59=0,$60=0,$ld$0$0=0,$61$0=0,$ld$1$1=0,$61$1=0,$st$2$0=0,$st$3$1=0,$62=0,$63=0,$64=0,$ld$4$0=0,$65$0=0;
 var $ld$5$1=0,$65$1=0,$st$6$0=0,$st$7$1=0,$66=0,$67=0,$68=.0,$69=0,$70=.0,$71=.0,$72=.0,$74=0,$75=0,$76=0,$ld$8$0=0,$77$0=0,$ld$9$1=0,$77$1=0,$st$10$0=0,$st$11$1=0;
 var $78=0,$79=0,$80=0,$ld$12$0=0,$81$0=0,$ld$13$1=0,$81$1=0,$st$14$0=0,$st$15$1=0,$82=0,$83=0,$84=.0,$85=0,$86=0,$87=0,$88=0,$ld$16$0=0,$89$0=0,$ld$17$1=0,$89$1=0;
 var $st$18$0=0,$st$19$1=0,$ld$20$0=0,$90$0=0,$ld$21$1=0,$90$1=0,$st$22$0=0,$st$23$1=0,$91=0,$92=0,$93=0,$94=0,$95=.0,$coordinateA_0=.0,$97=0,$98=0,$99=0,$100=0,$101=0,$102=0;
 var $103=0,$104=0,$105=0,$106=0,$107=0,$108=.0,$109=0,$110=0,$111=0,$112=0,$113=0,$114=0,$115=0,$117=0,$118=0,$119=.0,$120=0,$121=0,$122=0,$ld$24$0=0;
 var $123$0=0,$ld$25$1=0,$123$1=0,$st$26$0=0,$st$27$1=0,$124=0,$125=0,$126=0,$ld$28$0=0,$127$0=0,$ld$29$1=0,$127$1=0,$st$30$0=0,$st$31$1=0,$128=0,$129=0,$130=.0,$131=0,$132=.0,$133=.0;
 var $134=.0,$136=0,$137=0,$138=0,$ld$32$0=0,$139$0=0,$ld$33$1=0,$139$1=0,$st$34$0=0,$st$35$1=0,$140=0,$141=0,$142=0,$ld$36$0=0,$143$0=0,$ld$37$1=0,$143$1=0,$st$38$0=0,$st$39$1=0,$144=0;
 var $145=0,$146=.0,$147=0,$148=0,$149=0,$150=0,$ld$40$0=0,$151$0=0,$ld$41$1=0,$151$1=0,$st$42$0=0,$st$43$1=0,$ld$44$0=0,$152$0=0,$ld$45$1=0,$152$1=0,$st$46$0=0,$st$47$1=0,$153=0,$154=0;
 var $155=0,$156=0,$157=.0,$coordinateB_0=.0,$159=0,$160=.0,$161=0,$162=.0,$163=.0,$164=0,$165=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $xfA=((sp)|0);
 $xfC=(((sp)+(16))|0);
 $pC=(((sp)+(32))|0);
 $tmpcast=$pC;
 $pA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $xfB=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $xfD=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $pD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast19=$pD;
 $pB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=(($this)|0);
 $10=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($9,$10);
 $11=(($this)|0);
 HEAP32[(($11)>>2)]=14568;
 $12=(($this+92)|0);
 $13=(($this+100)|0);
 $14=(($this+108)|0);
 $15=(($this+116)|0);
 $16=(($this+124)|0);
 $17=(($this+132)|0);
 $18=(($def+20)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($this+68)|0);
 HEAP32[(($20)>>2)]=$19;
 $21=(($def+24)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=(($this+72)|0);
 HEAP32[(($23)>>2)]=$22;
 $24=((HEAP32[(($20)>>2)])|0);
 $25=((__ZNK7b2Joint7GetTypeEv($24))|0);
 $26=(($this+76)|0);
 HEAP32[(($26)>>2)]=$25;
 $27=((HEAP32[(($23)>>2)])|0);
 $28=((__ZNK7b2Joint7GetTypeEv($27))|0);
 $29=(($this+80)|0);
 HEAP32[(($29)>>2)]=$28;
 $30=((HEAP32[(($26)>>2)])|0);
 $_off=((($30)-(1))|0);
 $switch=($_off>>>0)<((2)>>>0);
 if (!($switch)) {
  ___assert_fail(((4512)|0),((9672)|0),((53)|0),((13152)|0));

 }
 $_off20=((($28)-(1))|0);
 $switch21=($_off20>>>0)<((2)>>>0);
 if (!($switch21)) {
  ___assert_fail(((6432)|0),((9672)|0),((54)|0),((13152)|0));

 }
 $35=((HEAP32[(($20)>>2)])|0);
 $36=((__ZN7b2Joint8GetBodyAEv($35))|0);
 $37=(($this+84)|0);
 HEAP32[(($37)>>2)]=$36;
 $38=((HEAP32[(($20)>>2)])|0);
 $39=((__ZN7b2Joint8GetBodyBEv($38))|0);
 $40=(($this+48)|0);
 HEAP32[(($40)>>2)]=$39;
 $41=(($39+12)|0);
 $42=$xfA;
 $43=$41;
 HEAP32[(($42)>>2)]=((HEAP32[(($43)>>2)])|0);HEAP32[((($42)+(4))>>2)]=((HEAP32[((($43)+(4))>>2)])|0);HEAP32[((($42)+(8))>>2)]=((HEAP32[((($43)+(8))>>2)])|0);HEAP32[((($42)+(12))>>2)]=((HEAP32[((($43)+(12))>>2)])|0);
 $44=((HEAP32[(($40)>>2)])|0);
 $45=(($44+56)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=((HEAP32[(($37)>>2)])|0);
 $48=(($47+12)|0);
 $49=$xfC;
 $50=$48;
 HEAP32[(($49)>>2)]=((HEAP32[(($50)>>2)])|0);HEAP32[((($49)+(4))>>2)]=((HEAP32[((($50)+(4))>>2)])|0);HEAP32[((($49)+(8))>>2)]=((HEAP32[((($50)+(8))>>2)])|0);HEAP32[((($49)+(12))>>2)]=((HEAP32[((($50)+(12))>>2)])|0);
 $51=((HEAP32[(($26)>>2)])|0);
 $52=($51|0)==1;
 $53=((HEAP32[(($18)>>2)])|0);
 if ($52) {
  $55=((HEAP32[(($37)>>2)])|0);
  $56=(($55+56)|0);
  $57=(+(HEAPF32[(($56)>>2)]));
  $58=(($53+68)|0);
  $59=$58;
  $60=$14;
  $ld$0$0=(($59)|0);
  $61$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($59+4)|0);
  $61$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($60)|0);
  HEAP32[(($st$2$0)>>2)]=$61$0;
  $st$3$1=(($60+4)|0);
  HEAP32[(($st$3$1)>>2)]=$61$1;
  $62=(($53+76)|0);
  $63=$62;
  $64=$12;
  $ld$4$0=(($63)|0);
  $65$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($63+4)|0);
  $65$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($64)|0);
  HEAP32[(($st$6$0)>>2)]=$65$0;
  $st$7$1=(($64+4)|0);
  HEAP32[(($st$7$1)>>2)]=$65$1;
  $66=(($53+116)|0);
  $67=$66;
  $68=(+(HEAPF32[(($67)>>2)]));
  $69=(($this+140)|0);
  HEAPF32[(($69)>>2)]=$68;
  __ZN6b2Vec27SetZeroEv($16);
  $70=($46)-($57);
  $71=(+(HEAPF32[(($69)>>2)]));
  $72=($70)-($71);
  $coordinateA_0=$72;
 } else {
  $74=(($53+68)|0);
  $75=$74;
  $76=$14;
  $ld$8$0=(($75)|0);
  $77$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($75+4)|0);
  $77$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($76)|0);
  HEAP32[(($st$10$0)>>2)]=$77$0;
  $st$11$1=(($76+4)|0);
  HEAP32[(($st$11$1)>>2)]=$77$1;
  $78=(($53+76)|0);
  $79=$78;
  $80=$12;
  $ld$12$0=(($79)|0);
  $81$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($79+4)|0);
  $81$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($80)|0);
  HEAP32[(($st$14$0)>>2)]=$81$0;
  $st$15$1=(($80+4)|0);
  HEAP32[(($st$15$1)>>2)]=$81$1;
  $82=(($53+100)|0);
  $83=$82;
  $84=(+(HEAPF32[(($83)>>2)]));
  $85=(($this+140)|0);
  HEAPF32[(($85)>>2)]=$84;
  $86=(($53+84)|0);
  $87=$86;
  $88=$16;
  $ld$16$0=(($87)|0);
  $89$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($87+4)|0);
  $89$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($88)|0);
  HEAP32[(($st$18$0)>>2)]=$89$0;
  $st$19$1=(($88+4)|0);
  HEAP32[(($st$19$1)>>2)]=$89$1;
  $ld$20$0=(($76)|0);
  $90$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($76+4)|0);
  $90$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($pC)|0);
  HEAP32[(($st$22$0)>>2)]=$90$0;
  $st$23$1=(($pC+4)|0);
  HEAP32[(($st$23$1)>>2)]=$90$1;
  $91=(($xfC+8)|0);
  $92=(($xfA+8)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($2,$92,$12);
  $93=(($xfA)|0);
  $94=(($xfC)|0);
  __ZmiRK6b2Vec2S1_($3,$93,$94);
  __ZplRK6b2Vec2S1_($1,$2,$3);
  __Z6b2MulTRK5b2RotRK6b2Vec2($pA,$91,$1);
  __ZmiRK6b2Vec2S1_($4,$pA,$tmpcast);
  $95=(+(__Z5b2DotRK6b2Vec2S1_($4,$16)));
  $coordinateA_0=$95;
 }

 $97=((HEAP32[(($23)>>2)])|0);
 $98=((__ZN7b2Joint8GetBodyAEv($97))|0);
 $99=(($this+88)|0);
 HEAP32[(($99)>>2)]=$98;
 $100=((HEAP32[(($23)>>2)])|0);
 $101=((__ZN7b2Joint8GetBodyBEv($100))|0);
 $102=(($this+52)|0);
 HEAP32[(($102)>>2)]=$101;
 $103=(($101+12)|0);
 $104=$xfB;
 $105=$103;
 HEAP32[(($104)>>2)]=((HEAP32[(($105)>>2)])|0);HEAP32[((($104)+(4))>>2)]=((HEAP32[((($105)+(4))>>2)])|0);HEAP32[((($104)+(8))>>2)]=((HEAP32[((($105)+(8))>>2)])|0);HEAP32[((($104)+(12))>>2)]=((HEAP32[((($105)+(12))>>2)])|0);
 $106=((HEAP32[(($102)>>2)])|0);
 $107=(($106+56)|0);
 $108=(+(HEAPF32[(($107)>>2)]));
 $109=((HEAP32[(($99)>>2)])|0);
 $110=(($109+12)|0);
 $111=$xfD;
 $112=$110;
 HEAP32[(($111)>>2)]=((HEAP32[(($112)>>2)])|0);HEAP32[((($111)+(4))>>2)]=((HEAP32[((($112)+(4))>>2)])|0);HEAP32[((($111)+(8))>>2)]=((HEAP32[((($112)+(8))>>2)])|0);HEAP32[((($111)+(12))>>2)]=((HEAP32[((($112)+(12))>>2)])|0);
 $113=((HEAP32[(($29)>>2)])|0);
 $114=($113|0)==1;
 $115=((HEAP32[(($21)>>2)])|0);
 if ($114) {
  $117=((HEAP32[(($99)>>2)])|0);
  $118=(($117+56)|0);
  $119=(+(HEAPF32[(($118)>>2)]));
  $120=(($115+68)|0);
  $121=$120;
  $122=$15;
  $ld$24$0=(($121)|0);
  $123$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($121+4)|0);
  $123$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($122)|0);
  HEAP32[(($st$26$0)>>2)]=$123$0;
  $st$27$1=(($122+4)|0);
  HEAP32[(($st$27$1)>>2)]=$123$1;
  $124=(($115+76)|0);
  $125=$124;
  $126=$13;
  $ld$28$0=(($125)|0);
  $127$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($125+4)|0);
  $127$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($126)|0);
  HEAP32[(($st$30$0)>>2)]=$127$0;
  $st$31$1=(($126+4)|0);
  HEAP32[(($st$31$1)>>2)]=$127$1;
  $128=(($115+116)|0);
  $129=$128;
  $130=(+(HEAPF32[(($129)>>2)]));
  $131=(($this+144)|0);
  HEAPF32[(($131)>>2)]=$130;
  __ZN6b2Vec27SetZeroEv($17);
  $132=($108)-($119);
  $133=(+(HEAPF32[(($131)>>2)]));
  $134=($132)-($133);
  $coordinateB_0=$134;

  $159=(($def+28)|0);
  $160=(+(HEAPF32[(($159)>>2)]));
  $161=(($this+152)|0);
  HEAPF32[(($161)>>2)]=$160;
  $162=($coordinateB_0)*($160);
  $163=($coordinateA_0)+($162);
  $164=(($this+148)|0);
  HEAPF32[(($164)>>2)]=$163;
  $165=(($this+156)|0);
  HEAPF32[(($165)>>2)]=0.0;
  STACKTOP=sp;return;
 } else {
  $136=(($115+68)|0);
  $137=$136;
  $138=$15;
  $ld$32$0=(($137)|0);
  $139$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($137+4)|0);
  $139$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($138)|0);
  HEAP32[(($st$34$0)>>2)]=$139$0;
  $st$35$1=(($138+4)|0);
  HEAP32[(($st$35$1)>>2)]=$139$1;
  $140=(($115+76)|0);
  $141=$140;
  $142=$13;
  $ld$36$0=(($141)|0);
  $143$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($141+4)|0);
  $143$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($142)|0);
  HEAP32[(($st$38$0)>>2)]=$143$0;
  $st$39$1=(($142+4)|0);
  HEAP32[(($st$39$1)>>2)]=$143$1;
  $144=(($115+100)|0);
  $145=$144;
  $146=(+(HEAPF32[(($145)>>2)]));
  $147=(($this+144)|0);
  HEAPF32[(($147)>>2)]=$146;
  $148=(($115+84)|0);
  $149=$148;
  $150=$17;
  $ld$40$0=(($149)|0);
  $151$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($149+4)|0);
  $151$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($150)|0);
  HEAP32[(($st$42$0)>>2)]=$151$0;
  $st$43$1=(($150+4)|0);
  HEAP32[(($st$43$1)>>2)]=$151$1;
  $ld$44$0=(($138)|0);
  $152$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($138+4)|0);
  $152$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($pD)|0);
  HEAP32[(($st$46$0)>>2)]=$152$0;
  $st$47$1=(($pD+4)|0);
  HEAP32[(($st$47$1)>>2)]=$152$1;
  $153=(($xfD+8)|0);
  $154=(($xfB+8)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($6,$154,$13);
  $155=(($xfB)|0);
  $156=(($xfD)|0);
  __ZmiRK6b2Vec2S1_($7,$155,$156);
  __ZplRK6b2Vec2S1_($5,$6,$7);
  __Z6b2MulTRK5b2RotRK6b2Vec2($pB,$153,$5);
  __ZmiRK6b2Vec2S1_($8,$pB,$tmpcast19);
  $157=(+(__Z5b2DotRK6b2Vec2S1_($8,$17)));
  $coordinateB_0=$157;

  $159=(($def+28)|0);
  $160=(+(HEAPF32[(($159)>>2)]));
  $161=(($this+152)|0);
  HEAPF32[(($161)>>2)]=$160;
  $162=($coordinateB_0)*($160);
  $163=($coordinateA_0)+($162);
  $164=(($this+148)|0);
  HEAPF32[(($164)>>2)]=$163;
  $165=(($this+156)|0);
  HEAPF32[(($165)>>2)]=0.0;
  STACKTOP=sp;return;
 }
}


function __ZN11b2GearJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast30=0,$vC=0,$tmpcast31=0,$vD=0,$tmpcast32=0,$qA=0,$qB=0,$qC=0,$qD=0,$u=0,$tmpcast33=0,$rC=0,$1=0,$rA=0,$2=0,$u1=0,$rD=0;
 var $3=0,$rB=0,$4=0,$5=0,$tmpcast34=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$ld$0$0=0,$35$0=0,$ld$1$1=0,$35$1=0,$st$2$0=0,$st$3$1=0;
 var $36=0,$37=0,$38=0,$39=0,$40=0,$ld$4$0=0,$41$0=0,$ld$5$1=0,$41$1=0,$st$6$0=0,$st$7$1=0,$42=0,$43=0,$44=0,$45=0,$46=0,$ld$8$0=0,$47$0=0,$ld$9$1=0,$47$1=0;
 var $st$10$0=0,$st$11$1=0,$48=0,$49=0,$50=0,$51=0,$52=0,$ld$12$0=0,$53$0=0,$ld$13$1=0,$53$1=0,$st$14$0=0,$st$15$1=0,$54=0,$55=0,$56=.0,$57=0,$58=0,$59=0,$60=.0;
 var $61=0,$62=0,$63=0,$64=.0,$65=0,$66=0,$67=0,$68=.0,$69=0,$70=0,$71=0,$72=.0,$73=0,$74=0,$75=0,$76=.0,$77=0,$78=0,$79=0,$80=.0;
 var $81=0,$82=0,$83=0,$84=.0,$85=0,$86=0,$87=0,$88=0,$89=0,$90=.0,$91=0,$92=0,$93=0,$94=0,$ld$16$0=0,$95$0=0,$ld$17$1=0,$95$1=0,$st$18$0=0,$st$19$1=0;
 var $96=0,$97=0,$98=0,$99=.0,$100=0,$101=0,$102=0,$103=.0,$104=0,$105=0,$ld$20$0=0,$106$0=0,$ld$21$1=0,$106$1=0,$st$22$0=0,$st$23$1=0,$107=0,$108=0,$109=0,$110=.0;
 var $111=0,$112=0,$113=0,$114=.0,$115=0,$116=0,$ld$24$0=0,$117$0=0,$ld$25$1=0,$117$1=0,$st$26$0=0,$st$27$1=0,$118=0,$119=0,$120=0,$121=.0,$122=0,$123=0,$124=0,$125=.0;
 var $126=0,$127=0,$ld$28$0=0,$128$0=0,$ld$29$1=0,$128$1=0,$st$30$0=0,$st$31$1=0,$129=0,$130=0,$131=0,$132=.0,$133=0,$134=0,$135=0,$136=0,$138=0,$139=0,$140=0,$141=.0;
 var $142=.0,$143=.0,$144=.0,$145=.0,$147=0,$148=0,$149=0,$150=0,$151=0,$ld$32$0=0,$152$0=0,$ld$33$1=0,$152$1=0,$st$34$0=0,$st$35$1=0,$153=.0,$154=0,$155=.0,$156=0,$157=.0;
 var $158=.0,$159=.0,$160=.0,$161=.0,$162=.0,$163=.0,$164=.0,$165=.0,$166=.0,$167=.0,$168=.0,$169=.0,$170=.0,$storemerge=.0,$172=0,$173=0,$174=0,$176=0,$177=0,$178=.0;
 var $179=0,$180=.0,$181=0,$182=.0,$183=.0,$184=.0,$185=.0,$186=.0,$187=.0,$188=.0,$189=.0,$191=0,$192=0,$193=0,$194=0,$195=0,$196=.0,$197=0,$ld$36$0=0,$198$0=0;
 var $ld$37$1=0,$198$1=0,$st$38$0=0,$st$39$1=0,$199=.0,$200=.0,$201=.0,$202=0,$203=.0,$204=.0,$205=.0,$206=0,$207=.0,$208=.0,$209=.0,$210=.0,$211=.0,$212=.0,$213=.0,$214=.0;
 var $215=.0,$216=.0,$217=.0,$218=.0,$219=.0,$220=.0,$221=.0,$222=.0,$223=.0,$storemerge35=.0,$225=0,$227=.0,$229=.0,$230=0,$231=0,$232=0,$234=.0,$235=0,$236=.0,$237=.0;
 var $238=0,$239=.0,$240=.0,$241=.0,$242=0,$243=.0,$244=.0,$245=.0,$246=.0,$247=.0,$248=0,$249=.0,$250=.0,$251=.0,$252=0,$253=.0,$254=.0,$255=.0,$256=.0,$257=.0;
 var $258=.0,$259=.0,$260=.0,$261=0,$262=.0,$263=.0,$264=.0,$265=.0,$266=.0,$267=.0,$268=.0,$269=.0,$270=0,$271=.0,$272=.0,$273=.0,$275=0,$wB_0=.0,$wC_0=.0,$wA_0=.0;
 var $wD_0=.0,$277=0,$278=0,$279=0,$280=0,$ld$40$0=0,$281$0=0,$ld$41$1=0,$281$1=0,$st$42$0=0,$st$43$1=0,$282=0,$283=0,$284=0,$285=0,$286=0,$287=0,$288=0,$ld$44$0=0,$289$0=0;
 var $ld$45$1=0,$289$1=0,$st$46$0=0,$st$47$1=0,$290=0,$291=0,$292=0,$293=0,$294=0,$295=0,$296=0,$ld$48$0=0,$297$0=0,$ld$49$1=0,$297$1=0,$st$50$0=0,$st$51$1=0,$298=0,$299=0,$300=0;
 var $301=0,$302=0,$303=0,$304=0,$ld$52$0=0,$305$0=0,$ld$53$1=0,$305$1=0,$st$54$0=0,$st$55$1=0,$306=0,$307=0,$308=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast30=$vB;
 $vC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast31=$vC;
 $vD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast32=$vD;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $u=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$u;
 $rC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $u1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=(($this+48)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+8)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($this+160)|0);
 HEAP32[(($14)>>2)]=$13;
 $15=(($this+52)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($16+8)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($this+164)|0);
 HEAP32[(($19)>>2)]=$18;
 $20=(($this+84)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=(($21+8)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=(($this+168)|0);
 HEAP32[(($24)>>2)]=$23;
 $25=(($this+88)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=(($26+8)|0);
 $28=((HEAP32[(($27)>>2)])|0);
 $29=(($this+172)|0);
 HEAP32[(($29)>>2)]=$28;
 $30=(($this+176)|0);
 $31=((HEAP32[(($10)>>2)])|0);
 $32=(($31+28)|0);
 $33=$32;
 $34=$30;
 $ld$0$0=(($33)|0);
 $35$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($33+4)|0);
 $35$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($34)|0);
 HEAP32[(($st$2$0)>>2)]=$35$0;
 $st$3$1=(($34+4)|0);
 HEAP32[(($st$3$1)>>2)]=$35$1;
 $36=(($this+184)|0);
 $37=((HEAP32[(($15)>>2)])|0);
 $38=(($37+28)|0);
 $39=$38;
 $40=$36;
 $ld$4$0=(($39)|0);
 $41$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($39+4)|0);
 $41$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($40)|0);
 HEAP32[(($st$6$0)>>2)]=$41$0;
 $st$7$1=(($40+4)|0);
 HEAP32[(($st$7$1)>>2)]=$41$1;
 $42=(($this+192)|0);
 $43=((HEAP32[(($20)>>2)])|0);
 $44=(($43+28)|0);
 $45=$44;
 $46=$42;
 $ld$8$0=(($45)|0);
 $47$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($45+4)|0);
 $47$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($46)|0);
 HEAP32[(($st$10$0)>>2)]=$47$0;
 $st$11$1=(($46+4)|0);
 HEAP32[(($st$11$1)>>2)]=$47$1;
 $48=(($this+200)|0);
 $49=((HEAP32[(($25)>>2)])|0);
 $50=(($49+28)|0);
 $51=$50;
 $52=$48;
 $ld$12$0=(($51)|0);
 $53$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($51+4)|0);
 $53$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($52)|0);
 HEAP32[(($st$14$0)>>2)]=$53$0;
 $st$15$1=(($52+4)|0);
 HEAP32[(($st$15$1)>>2)]=$53$1;
 $54=((HEAP32[(($10)>>2)])|0);
 $55=(($54+120)|0);
 $56=(+(HEAPF32[(($55)>>2)]));
 $57=(($this+208)|0);
 HEAPF32[(($57)>>2)]=$56;
 $58=((HEAP32[(($15)>>2)])|0);
 $59=(($58+120)|0);
 $60=(+(HEAPF32[(($59)>>2)]));
 $61=(($this+212)|0);
 HEAPF32[(($61)>>2)]=$60;
 $62=((HEAP32[(($20)>>2)])|0);
 $63=(($62+120)|0);
 $64=(+(HEAPF32[(($63)>>2)]));
 $65=(($this+216)|0);
 HEAPF32[(($65)>>2)]=$64;
 $66=((HEAP32[(($25)>>2)])|0);
 $67=(($66+120)|0);
 $68=(+(HEAPF32[(($67)>>2)]));
 $69=(($this+220)|0);
 HEAPF32[(($69)>>2)]=$68;
 $70=((HEAP32[(($10)>>2)])|0);
 $71=(($70+128)|0);
 $72=(+(HEAPF32[(($71)>>2)]));
 $73=(($this+224)|0);
 HEAPF32[(($73)>>2)]=$72;
 $74=((HEAP32[(($15)>>2)])|0);
 $75=(($74+128)|0);
 $76=(+(HEAPF32[(($75)>>2)]));
 $77=(($this+228)|0);
 HEAPF32[(($77)>>2)]=$76;
 $78=((HEAP32[(($20)>>2)])|0);
 $79=(($78+128)|0);
 $80=(+(HEAPF32[(($79)>>2)]));
 $81=(($this+232)|0);
 HEAPF32[(($81)>>2)]=$80;
 $82=((HEAP32[(($25)>>2)])|0);
 $83=(($82+128)|0);
 $84=(+(HEAPF32[(($83)>>2)]));
 $85=(($this+236)|0);
 HEAPF32[(($85)>>2)]=$84;
 $86=((HEAP32[(($14)>>2)])|0);
 $87=(($data+24)|0);
 $88=((HEAP32[(($87)>>2)])|0);
 $89=(($88+((($86)*(12))&-1)+8)|0);
 $90=(+(HEAPF32[(($89)>>2)]));
 $91=(($data+28)|0);
 $92=((HEAP32[(($91)>>2)])|0);
 $93=(($92+((($86)*(12))&-1))|0);
 $94=$93;
 $ld$16$0=(($94)|0);
 $95$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($94+4)|0);
 $95$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($vA)|0);
 HEAP32[(($st$18$0)>>2)]=$95$0;
 $st$19$1=(($vA+4)|0);
 HEAP32[(($st$19$1)>>2)]=$95$1;
 $96=((HEAP32[(($14)>>2)])|0);
 $97=((HEAP32[(($91)>>2)])|0);
 $98=(($97+((($96)*(12))&-1)+8)|0);
 $99=(+(HEAPF32[(($98)>>2)]));
 $100=((HEAP32[(($19)>>2)])|0);
 $101=((HEAP32[(($87)>>2)])|0);
 $102=(($101+((($100)*(12))&-1)+8)|0);
 $103=(+(HEAPF32[(($102)>>2)]));
 $104=(($97+((($100)*(12))&-1))|0);
 $105=$104;
 $ld$20$0=(($105)|0);
 $106$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($105+4)|0);
 $106$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$106$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$106$1;
 $107=((HEAP32[(($19)>>2)])|0);
 $108=((HEAP32[(($91)>>2)])|0);
 $109=(($108+((($107)*(12))&-1)+8)|0);
 $110=(+(HEAPF32[(($109)>>2)]));
 $111=((HEAP32[(($24)>>2)])|0);
 $112=((HEAP32[(($87)>>2)])|0);
 $113=(($112+((($111)*(12))&-1)+8)|0);
 $114=(+(HEAPF32[(($113)>>2)]));
 $115=(($108+((($111)*(12))&-1))|0);
 $116=$115;
 $ld$24$0=(($116)|0);
 $117$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($116+4)|0);
 $117$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($vC)|0);
 HEAP32[(($st$26$0)>>2)]=$117$0;
 $st$27$1=(($vC+4)|0);
 HEAP32[(($st$27$1)>>2)]=$117$1;
 $118=((HEAP32[(($24)>>2)])|0);
 $119=((HEAP32[(($91)>>2)])|0);
 $120=(($119+((($118)*(12))&-1)+8)|0);
 $121=(+(HEAPF32[(($120)>>2)]));
 $122=((HEAP32[(($29)>>2)])|0);
 $123=((HEAP32[(($87)>>2)])|0);
 $124=(($123+((($122)*(12))&-1)+8)|0);
 $125=(+(HEAPF32[(($124)>>2)]));
 $126=(($119+((($122)*(12))&-1))|0);
 $127=$126;
 $ld$28$0=(($127)|0);
 $128$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($127+4)|0);
 $128$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($vD)|0);
 HEAP32[(($st$30$0)>>2)]=$128$0;
 $st$31$1=(($vD+4)|0);
 HEAP32[(($st$31$1)>>2)]=$128$1;
 $129=((HEAP32[(($29)>>2)])|0);
 $130=((HEAP32[(($91)>>2)])|0);
 $131=(($130+((($129)*(12))&-1)+8)|0);
 $132=(+(HEAPF32[(($131)>>2)]));
 __ZN5b2RotC1Ef($qA,$90);
 __ZN5b2RotC1Ef($qB,$103);
 __ZN5b2RotC1Ef($qC,$114);
 __ZN5b2RotC1Ef($qD,$125);
 $133=(($this+272)|0);
 HEAPF32[(($133)>>2)]=0.0;
 $134=(($this+76)|0);
 $135=((HEAP32[(($134)>>2)])|0);
 $136=($135|0)==1;
 if ($136) {
  $138=(($this+240)|0);
  __ZN6b2Vec27SetZeroEv($138);
  $139=(($this+256)|0);
  HEAPF32[(($139)>>2)]=1.0;
  $140=(($this+264)|0);
  HEAPF32[(($140)>>2)]=1.0;
  $141=(+(HEAPF32[(($73)>>2)]));
  $142=(+(HEAPF32[(($81)>>2)]));
  $143=($141)+($142);
  $144=(+(HEAPF32[(($133)>>2)]));
  $145=($144)+($143);
  $storemerge=$145;
 } else {
  $147=(($this+124)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast33,$qC,$147);
  $148=(($this+108)|0);
  __ZmiRK6b2Vec2S1_($1,$148,$42);
  __Z5b2MulRK5b2RotRK6b2Vec2($rC,$qC,$1);
  $149=(($this+92)|0);
  __ZmiRK6b2Vec2S1_($2,$149,$30);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$2);
  $150=(($this+240)|0);
  $151=$150;
  $ld$32$0=(($u)|0);
  $152$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($u+4)|0);
  $152$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($151)|0);
  HEAP32[(($st$34$0)>>2)]=$152$0;
  $st$35$1=(($151+4)|0);
  HEAP32[(($st$35$1)>>2)]=$152$1;
  $153=(+(__Z7b2CrossRK6b2Vec2S1_($rC,$tmpcast33)));
  $154=(($this+264)|0);
  HEAPF32[(($154)>>2)]=$153;
  $155=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$tmpcast33)));
  $156=(($this+256)|0);
  HEAPF32[(($156)>>2)]=$155;
  $157=(+(HEAPF32[(($65)>>2)]));
  $158=(+(HEAPF32[(($57)>>2)]));
  $159=($157)+($158);
  $160=(+(HEAPF32[(($81)>>2)]));
  $161=(+(HEAPF32[(($154)>>2)]));
  $162=($160)*($161);
  $163=($161)*($162);
  $164=($159)+($163);
  $165=(+(HEAPF32[(($73)>>2)]));
  $166=($155)*($165);
  $167=($155)*($166);
  $168=($164)+($167);
  $169=(+(HEAPF32[(($133)>>2)]));
  $170=($169)+($168);
  $storemerge=$170;
 }

 HEAPF32[(($133)>>2)]=$storemerge;
 $172=(($this+80)|0);
 $173=((HEAP32[(($172)>>2)])|0);
 $174=($173|0)==1;
 if ($174) {
  $176=(($this+248)|0);
  __ZN6b2Vec27SetZeroEv($176);
  $177=(($this+152)|0);
  $178=(+(HEAPF32[(($177)>>2)]));
  $179=(($this+260)|0);
  HEAPF32[(($179)>>2)]=$178;
  $180=(+(HEAPF32[(($177)>>2)]));
  $181=(($this+268)|0);
  HEAPF32[(($181)>>2)]=$180;
  $182=(+(HEAPF32[(($177)>>2)]));
  $183=($182)*($182);
  $184=(+(HEAPF32[(($77)>>2)]));
  $185=(+(HEAPF32[(($85)>>2)]));
  $186=($184)+($185);
  $187=($183)*($186);
  $188=(+(HEAPF32[(($133)>>2)]));
  $189=($188)+($187);
  $storemerge35=$189;
 } else {
  $191=(($this+132)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($u1,$qD,$191);
  $192=(($this+116)|0);
  __ZmiRK6b2Vec2S1_($3,$192,$48);
  __Z5b2MulRK5b2RotRK6b2Vec2($rD,$qD,$3);
  $193=(($this+100)|0);
  __ZmiRK6b2Vec2S1_($4,$193,$36);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$4);
  $194=(($this+248)|0);
  $195=(($this+152)|0);
  $196=(+(HEAPF32[(($195)>>2)]));
  __ZmlfRK6b2Vec2($tmpcast34,$196,$u1);
  $197=$194;
  $ld$36$0=(($5)|0);
  $198$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($5+4)|0);
  $198$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($197)|0);
  HEAP32[(($st$38$0)>>2)]=$198$0;
  $st$39$1=(($197+4)|0);
  HEAP32[(($st$39$1)>>2)]=$198$1;
  $199=(+(HEAPF32[(($195)>>2)]));
  $200=(+(__Z7b2CrossRK6b2Vec2S1_($rD,$u1)));
  $201=($199)*($200);
  $202=(($this+268)|0);
  HEAPF32[(($202)>>2)]=$201;
  $203=(+(HEAPF32[(($195)>>2)]));
  $204=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$u1)));
  $205=($203)*($204);
  $206=(($this+260)|0);
  HEAPF32[(($206)>>2)]=$205;
  $207=(+(HEAPF32[(($195)>>2)]));
  $208=($207)*($207);
  $209=(+(HEAPF32[(($69)>>2)]));
  $210=(+(HEAPF32[(($61)>>2)]));
  $211=($209)+($210);
  $212=($208)*($211);
  $213=(+(HEAPF32[(($85)>>2)]));
  $214=(+(HEAPF32[(($202)>>2)]));
  $215=($213)*($214);
  $216=($214)*($215);
  $217=($212)+($216);
  $218=(+(HEAPF32[(($77)>>2)]));
  $219=($205)*($218);
  $220=($205)*($219);
  $221=($217)+($220);
  $222=(+(HEAPF32[(($133)>>2)]));
  $223=($222)+($221);
  $storemerge35=$223;
 }

 HEAPF32[(($133)>>2)]=$storemerge35;
 $225=$storemerge35>(0.0);
 if ($225) {
  $227=((1.0))/($storemerge35);
  $229=$227;
 } else {
  $229=0.0;
 }

 HEAPF32[(($133)>>2)]=$229;
 $230=(($data+20)|0);
 $231=((HEAP8[($230)])|0);
 $232=(($231<<24)>>24)==0;
 if ($232) {
  $275=(($this+156)|0);
  HEAPF32[(($275)>>2)]=0.0;
  $wD_0=$132;$wA_0=$99;$wC_0=$121;$wB_0=$110;




  $277=((HEAP32[(($14)>>2)])|0);
  $278=((HEAP32[(($91)>>2)])|0);
  $279=(($278+((($277)*(12))&-1))|0);
  $280=$279;
  $ld$40$0=(($vA)|0);
  $281$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vA+4)|0);
  $281$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($280)|0);
  HEAP32[(($st$42$0)>>2)]=$281$0;
  $st$43$1=(($280+4)|0);
  HEAP32[(($st$43$1)>>2)]=$281$1;
  $282=((HEAP32[(($14)>>2)])|0);
  $283=((HEAP32[(($91)>>2)])|0);
  $284=(($283+((($282)*(12))&-1)+8)|0);
  HEAPF32[(($284)>>2)]=$wA_0;
  $285=((HEAP32[(($19)>>2)])|0);
  $286=((HEAP32[(($91)>>2)])|0);
  $287=(($286+((($285)*(12))&-1))|0);
  $288=$287;
  $ld$44$0=(($vB)|0);
  $289$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($vB+4)|0);
  $289$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($288)|0);
  HEAP32[(($st$46$0)>>2)]=$289$0;
  $st$47$1=(($288+4)|0);
  HEAP32[(($st$47$1)>>2)]=$289$1;
  $290=((HEAP32[(($19)>>2)])|0);
  $291=((HEAP32[(($91)>>2)])|0);
  $292=(($291+((($290)*(12))&-1)+8)|0);
  HEAPF32[(($292)>>2)]=$wB_0;
  $293=((HEAP32[(($24)>>2)])|0);
  $294=((HEAP32[(($91)>>2)])|0);
  $295=(($294+((($293)*(12))&-1))|0);
  $296=$295;
  $ld$48$0=(($vC)|0);
  $297$0=((HEAP32[(($ld$48$0)>>2)])|0);
  $ld$49$1=(($vC+4)|0);
  $297$1=((HEAP32[(($ld$49$1)>>2)])|0);
  $st$50$0=(($296)|0);
  HEAP32[(($st$50$0)>>2)]=$297$0;
  $st$51$1=(($296+4)|0);
  HEAP32[(($st$51$1)>>2)]=$297$1;
  $298=((HEAP32[(($24)>>2)])|0);
  $299=((HEAP32[(($91)>>2)])|0);
  $300=(($299+((($298)*(12))&-1)+8)|0);
  HEAPF32[(($300)>>2)]=$wC_0;
  $301=((HEAP32[(($29)>>2)])|0);
  $302=((HEAP32[(($91)>>2)])|0);
  $303=(($302+((($301)*(12))&-1))|0);
  $304=$303;
  $ld$52$0=(($vD)|0);
  $305$0=((HEAP32[(($ld$52$0)>>2)])|0);
  $ld$53$1=(($vD+4)|0);
  $305$1=((HEAP32[(($ld$53$1)>>2)])|0);
  $st$54$0=(($304)|0);
  HEAP32[(($st$54$0)>>2)]=$305$0;
  $st$55$1=(($304+4)|0);
  HEAP32[(($st$55$1)>>2)]=$305$1;
  $306=((HEAP32[(($29)>>2)])|0);
  $307=((HEAP32[(($91)>>2)])|0);
  $308=(($307+((($306)*(12))&-1)+8)|0);
  HEAPF32[(($308)>>2)]=$wD_0;
  STACKTOP=sp;return;
 } else {
  $234=(+(HEAPF32[(($57)>>2)]));
  $235=(($this+156)|0);
  $236=(+(HEAPF32[(($235)>>2)]));
  $237=($234)*($236);
  $238=(($this+240)|0);
  __ZmlfRK6b2Vec2($6,$237,$238);
  __ZN6b2Vec2pLERKS_($tmpcast,$6);
  $239=(+(HEAPF32[(($73)>>2)]));
  $240=(+(HEAPF32[(($235)>>2)]));
  $241=($239)*($240);
  $242=(($this+256)|0);
  $243=(+(HEAPF32[(($242)>>2)]));
  $244=($241)*($243);
  $245=($99)+($244);
  $246=(+(HEAPF32[(($61)>>2)]));
  $247=($240)*($246);
  $248=(($this+248)|0);
  __ZmlfRK6b2Vec2($7,$247,$248);
  __ZN6b2Vec2pLERKS_($tmpcast30,$7);
  $249=(+(HEAPF32[(($77)>>2)]));
  $250=(+(HEAPF32[(($235)>>2)]));
  $251=($249)*($250);
  $252=(($this+260)|0);
  $253=(+(HEAPF32[(($252)>>2)]));
  $254=($251)*($253);
  $255=($110)+($254);
  $256=(+(HEAPF32[(($65)>>2)]));
  $257=($250)*($256);
  __ZmlfRK6b2Vec2($8,$257,$238);
  __ZN6b2Vec2mIERKS_($tmpcast31,$8);
  $258=(+(HEAPF32[(($81)>>2)]));
  $259=(+(HEAPF32[(($235)>>2)]));
  $260=($258)*($259);
  $261=(($this+264)|0);
  $262=(+(HEAPF32[(($261)>>2)]));
  $263=($260)*($262);
  $264=($121)-($263);
  $265=(+(HEAPF32[(($69)>>2)]));
  $266=($259)*($265);
  __ZmlfRK6b2Vec2($9,$266,$248);
  __ZN6b2Vec2mIERKS_($tmpcast32,$9);
  $267=(+(HEAPF32[(($85)>>2)]));
  $268=(+(HEAPF32[(($235)>>2)]));
  $269=($267)*($268);
  $270=(($this+268)|0);
  $271=(+(HEAPF32[(($270)>>2)]));
  $272=($269)*($271);
  $273=($132)-($272);
  $wD_0=$273;$wA_0=$245;$wC_0=$264;$wB_0=$255;




  $277=((HEAP32[(($14)>>2)])|0);
  $278=((HEAP32[(($91)>>2)])|0);
  $279=(($278+((($277)*(12))&-1))|0);
  $280=$279;
  $ld$40$0=(($vA)|0);
  $281$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vA+4)|0);
  $281$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($280)|0);
  HEAP32[(($st$42$0)>>2)]=$281$0;
  $st$43$1=(($280+4)|0);
  HEAP32[(($st$43$1)>>2)]=$281$1;
  $282=((HEAP32[(($14)>>2)])|0);
  $283=((HEAP32[(($91)>>2)])|0);
  $284=(($283+((($282)*(12))&-1)+8)|0);
  HEAPF32[(($284)>>2)]=$wA_0;
  $285=((HEAP32[(($19)>>2)])|0);
  $286=((HEAP32[(($91)>>2)])|0);
  $287=(($286+((($285)*(12))&-1))|0);
  $288=$287;
  $ld$44$0=(($vB)|0);
  $289$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($vB+4)|0);
  $289$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($288)|0);
  HEAP32[(($st$46$0)>>2)]=$289$0;
  $st$47$1=(($288+4)|0);
  HEAP32[(($st$47$1)>>2)]=$289$1;
  $290=((HEAP32[(($19)>>2)])|0);
  $291=((HEAP32[(($91)>>2)])|0);
  $292=(($291+((($290)*(12))&-1)+8)|0);
  HEAPF32[(($292)>>2)]=$wB_0;
  $293=((HEAP32[(($24)>>2)])|0);
  $294=((HEAP32[(($91)>>2)])|0);
  $295=(($294+((($293)*(12))&-1))|0);
  $296=$295;
  $ld$48$0=(($vC)|0);
  $297$0=((HEAP32[(($ld$48$0)>>2)])|0);
  $ld$49$1=(($vC+4)|0);
  $297$1=((HEAP32[(($ld$49$1)>>2)])|0);
  $st$50$0=(($296)|0);
  HEAP32[(($st$50$0)>>2)]=$297$0;
  $st$51$1=(($296+4)|0);
  HEAP32[(($st$51$1)>>2)]=$297$1;
  $298=((HEAP32[(($24)>>2)])|0);
  $299=((HEAP32[(($91)>>2)])|0);
  $300=(($299+((($298)*(12))&-1)+8)|0);
  HEAPF32[(($300)>>2)]=$wC_0;
  $301=((HEAP32[(($29)>>2)])|0);
  $302=((HEAP32[(($91)>>2)])|0);
  $303=(($302+((($301)*(12))&-1))|0);
  $304=$303;
  $ld$52$0=(($vD)|0);
  $305$0=((HEAP32[(($ld$52$0)>>2)])|0);
  $ld$53$1=(($vD+4)|0);
  $305$1=((HEAP32[(($ld$53$1)>>2)])|0);
  $st$54$0=(($304)|0);
  HEAP32[(($st$54$0)>>2)]=$305$0;
  $st$55$1=(($304+4)|0);
  HEAP32[(($st$55$1)>>2)]=$305$1;
  $306=((HEAP32[(($29)>>2)])|0);
  $307=((HEAP32[(($91)>>2)])|0);
  $308=(($307+((($306)*(12))&-1)+8)|0);
  HEAPF32[(($308)>>2)]=$wD_0;
  STACKTOP=sp;return;
 }
}


function __ZN11b2GearJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast34=0,$vC=0,$tmpcast35=0,$vD=0,$tmpcast36=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0;
 var $ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$st$2$0=0,$st$3$1=0,$14=0,$15=0,$16=0,$17=.0,$18=0,$19=0,$20=0,$21=0,$ld$4$0=0,$22$0=0,$ld$5$1=0,$22$1=0,$st$6$0=0,$st$7$1=0;
 var $23=0,$24=0,$25=0,$26=.0,$27=0,$28=0,$29=0,$30=0,$ld$8$0=0,$31$0=0,$ld$9$1=0,$31$1=0,$st$10$0=0,$st$11$1=0,$32=0,$33=0,$34=0,$35=.0,$36=0,$37=0;
 var $38=0,$39=0,$ld$12$0=0,$40$0=0,$ld$13$1=0,$40$1=0,$st$14$0=0,$st$15$1=0,$41=0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=0,$51=.0,$52=.0;
 var $53=0,$54=.0,$55=.0,$56=.0,$57=0,$58=.0,$59=.0,$60=0,$61=.0,$62=.0,$63=.0,$64=.0,$65=.0,$66=0,$67=.0,$68=.0,$69=.0,$70=0,$71=.0,$72=.0;
 var $73=0,$74=.0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$80=.0,$81=.0,$82=0,$83=.0,$84=.0,$85=0,$86=.0,$87=.0,$88=.0,$89=.0,$90=.0,$91=0,$92=.0;
 var $93=.0,$94=0,$95=.0,$96=.0,$97=.0,$98=.0,$99=.0,$100=0,$101=.0,$102=.0,$103=0,$104=.0,$105=.0,$106=.0,$107=.0,$108=.0,$109=0,$110=0,$111=0,$112=0;
 var $ld$16$0=0,$113$0=0,$ld$17$1=0,$113$1=0,$st$18$0=0,$st$19$1=0,$114=0,$115=0,$116=0,$117=0,$118=0,$119=0,$120=0,$ld$20$0=0,$121$0=0,$ld$21$1=0,$121$1=0,$st$22$0=0,$st$23$1=0,$122=0;
 var $123=0,$124=0,$125=0,$126=0,$127=0,$128=0,$ld$24$0=0,$129$0=0,$ld$25$1=0,$129$1=0,$st$26$0=0,$st$27$1=0,$130=0,$131=0,$132=0,$133=0,$134=0,$135=0,$136=0,$ld$28$0=0;
 var $137$0=0,$ld$29$1=0,$137$1=0,$st$30$0=0,$st$31$1=0,$138=0,$139=0,$140=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$vB;
 $vC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$vC;
 $vD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$vD;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+160)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($data+28)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+((($8)*(12))&-1))|0);
 $12=$11;
 $ld$0$0=(($12)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($12+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$13$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$13$1;
 $14=((HEAP32[(($7)>>2)])|0);
 $15=((HEAP32[(($9)>>2)])|0);
 $16=(($15+((($14)*(12))&-1)+8)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+164)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($15+((($19)*(12))&-1))|0);
 $21=$20;
 $ld$4$0=(($21)|0);
 $22$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($21+4)|0);
 $22$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$22$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$22$1;
 $23=((HEAP32[(($18)>>2)])|0);
 $24=((HEAP32[(($9)>>2)])|0);
 $25=(($24+((($23)*(12))&-1)+8)|0);
 $26=(+(HEAPF32[(($25)>>2)]));
 $27=(($this+168)|0);
 $28=((HEAP32[(($27)>>2)])|0);
 $29=(($24+((($28)*(12))&-1))|0);
 $30=$29;
 $ld$8$0=(($30)|0);
 $31$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($30+4)|0);
 $31$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($vC)|0);
 HEAP32[(($st$10$0)>>2)]=$31$0;
 $st$11$1=(($vC+4)|0);
 HEAP32[(($st$11$1)>>2)]=$31$1;
 $32=((HEAP32[(($27)>>2)])|0);
 $33=((HEAP32[(($9)>>2)])|0);
 $34=(($33+((($32)*(12))&-1)+8)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+172)|0);
 $37=((HEAP32[(($36)>>2)])|0);
 $38=(($33+((($37)*(12))&-1))|0);
 $39=$38;
 $ld$12$0=(($39)|0);
 $40$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($39+4)|0);
 $40$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vD)|0);
 HEAP32[(($st$14$0)>>2)]=$40$0;
 $st$15$1=(($vD+4)|0);
 HEAP32[(($st$15$1)>>2)]=$40$1;
 $41=((HEAP32[(($36)>>2)])|0);
 $42=((HEAP32[(($9)>>2)])|0);
 $43=(($42+((($41)*(12))&-1)+8)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=(($this+240)|0);
 __ZmiRK6b2Vec2S1_($1,$tmpcast,$tmpcast35);
 $46=(+(__Z5b2DotRK6b2Vec2S1_($45,$1)));
 $47=(($this+248)|0);
 __ZmiRK6b2Vec2S1_($2,$tmpcast34,$tmpcast36);
 $48=(+(__Z5b2DotRK6b2Vec2S1_($47,$2)));
 $49=($46)+($48);
 $50=(($this+256)|0);
 $51=(+(HEAPF32[(($50)>>2)]));
 $52=($17)*($51);
 $53=(($this+264)|0);
 $54=(+(HEAPF32[(($53)>>2)]));
 $55=($35)*($54);
 $56=($52)-($55);
 $57=(($this+260)|0);
 $58=(+(HEAPF32[(($57)>>2)]));
 $59=($26)*($58);
 $60=(($this+268)|0);
 $61=(+(HEAPF32[(($60)>>2)]));
 $62=($44)*($61);
 $63=($59)-($62);
 $64=($56)+($63);
 $65=($49)+($64);
 $66=(($this+272)|0);
 $67=(+(HEAPF32[(($66)>>2)]));
 $68=((-.0))-($67);
 $69=($65)*($68);
 $70=(($this+156)|0);
 $71=(+(HEAPF32[(($70)>>2)]));
 $72=($71)+($69);
 HEAPF32[(($70)>>2)]=$72;
 $73=(($this+208)|0);
 $74=(+(HEAPF32[(($73)>>2)]));
 $75=($74)*($69);
 __ZmlfRK6b2Vec2($3,$75,$45);
 __ZN6b2Vec2pLERKS_($tmpcast,$3);
 $76=(($this+224)|0);
 $77=(+(HEAPF32[(($76)>>2)]));
 $78=($69)*($77);
 $79=(+(HEAPF32[(($50)>>2)]));
 $80=($78)*($79);
 $81=($17)+($80);
 $82=(($this+212)|0);
 $83=(+(HEAPF32[(($82)>>2)]));
 $84=($69)*($83);
 __ZmlfRK6b2Vec2($4,$84,$47);
 __ZN6b2Vec2pLERKS_($tmpcast34,$4);
 $85=(($this+228)|0);
 $86=(+(HEAPF32[(($85)>>2)]));
 $87=($69)*($86);
 $88=(+(HEAPF32[(($57)>>2)]));
 $89=($87)*($88);
 $90=($26)+($89);
 $91=(($this+216)|0);
 $92=(+(HEAPF32[(($91)>>2)]));
 $93=($69)*($92);
 __ZmlfRK6b2Vec2($5,$93,$45);
 __ZN6b2Vec2mIERKS_($tmpcast35,$5);
 $94=(($this+232)|0);
 $95=(+(HEAPF32[(($94)>>2)]));
 $96=($69)*($95);
 $97=(+(HEAPF32[(($53)>>2)]));
 $98=($96)*($97);
 $99=($35)-($98);
 $100=(($this+220)|0);
 $101=(+(HEAPF32[(($100)>>2)]));
 $102=($69)*($101);
 __ZmlfRK6b2Vec2($6,$102,$47);
 __ZN6b2Vec2mIERKS_($tmpcast36,$6);
 $103=(($this+236)|0);
 $104=(+(HEAPF32[(($103)>>2)]));
 $105=($69)*($104);
 $106=(+(HEAPF32[(($60)>>2)]));
 $107=($105)*($106);
 $108=($44)-($107);
 $109=((HEAP32[(($7)>>2)])|0);
 $110=((HEAP32[(($9)>>2)])|0);
 $111=(($110+((($109)*(12))&-1))|0);
 $112=$111;
 $ld$16$0=(($vA)|0);
 $113$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($vA+4)|0);
 $113$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($112)|0);
 HEAP32[(($st$18$0)>>2)]=$113$0;
 $st$19$1=(($112+4)|0);
 HEAP32[(($st$19$1)>>2)]=$113$1;
 $114=((HEAP32[(($7)>>2)])|0);
 $115=((HEAP32[(($9)>>2)])|0);
 $116=(($115+((($114)*(12))&-1)+8)|0);
 HEAPF32[(($116)>>2)]=$81;
 $117=((HEAP32[(($18)>>2)])|0);
 $118=((HEAP32[(($9)>>2)])|0);
 $119=(($118+((($117)*(12))&-1))|0);
 $120=$119;
 $ld$20$0=(($vB)|0);
 $121$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($vB+4)|0);
 $121$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($120)|0);
 HEAP32[(($st$22$0)>>2)]=$121$0;
 $st$23$1=(($120+4)|0);
 HEAP32[(($st$23$1)>>2)]=$121$1;
 $122=((HEAP32[(($18)>>2)])|0);
 $123=((HEAP32[(($9)>>2)])|0);
 $124=(($123+((($122)*(12))&-1)+8)|0);
 HEAPF32[(($124)>>2)]=$90;
 $125=((HEAP32[(($27)>>2)])|0);
 $126=((HEAP32[(($9)>>2)])|0);
 $127=(($126+((($125)*(12))&-1))|0);
 $128=$127;
 $ld$24$0=(($vC)|0);
 $129$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($vC+4)|0);
 $129$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($128)|0);
 HEAP32[(($st$26$0)>>2)]=$129$0;
 $st$27$1=(($128+4)|0);
 HEAP32[(($st$27$1)>>2)]=$129$1;
 $130=((HEAP32[(($27)>>2)])|0);
 $131=((HEAP32[(($9)>>2)])|0);
 $132=(($131+((($130)*(12))&-1)+8)|0);
 HEAPF32[(($132)>>2)]=$99;
 $133=((HEAP32[(($36)>>2)])|0);
 $134=((HEAP32[(($9)>>2)])|0);
 $135=(($134+((($133)*(12))&-1))|0);
 $136=$135;
 $ld$28$0=(($vD)|0);
 $137$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($vD+4)|0);
 $137$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($136)|0);
 HEAP32[(($st$30$0)>>2)]=$137$0;
 $st$31$1=(($136+4)|0);
 HEAP32[(($st$31$1)>>2)]=$137$1;
 $138=((HEAP32[(($36)>>2)])|0);
 $139=((HEAP32[(($9)>>2)])|0);
 $140=(($139+((($138)*(12))&-1)+8)|0);
 HEAPF32[(($140)>>2)]=$108;
 STACKTOP=sp;return;
}


function __ZN11b2GearJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast49=0,$cC=0,$tmpcast50=0,$cD=0,$tmpcast51=0,$qA=0,$qB=0,$qC=0,$qD=0,$JvAC=0,$tmpcast52=0,$JvBD=0,$tmpcast54=0,$u=0,$tmpcast53=0,$rC=0,$1=0;
 var $rA=0,$2=0,$pC=0,$pA=0,$3=0,$4=0,$5=0,$u1=0,$rD=0,$6=0,$rB=0,$7=0,$pD=0,$pB=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0;
 var $14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$ld$0$0=0,$21$0=0,$ld$1$1=0,$21$1=0,$st$2$0=0,$st$3$1=0,$22=0,$23=0,$24=0,$25=.0,$26=0,$27=0,$28=0;
 var $29=0,$ld$4$0=0,$30$0=0,$ld$5$1=0,$30$1=0,$st$6$0=0,$st$7$1=0,$31=0,$32=0,$33=0,$34=.0,$35=0,$36=0,$37=0,$38=0,$ld$8$0=0,$39$0=0,$ld$9$1=0,$39$1=0,$st$10$0=0;
 var $st$11$1=0,$40=0,$41=0,$42=0,$43=.0,$44=0,$45=0,$46=0,$47=0,$ld$12$0=0,$48$0=0,$ld$13$1=0,$48$1=0,$st$14$0=0,$st$15$1=0,$49=0,$50=0,$51=0,$52=.0,$53=0;
 var $54=0,$55=0,$57=0,$58=.0,$59=0,$60=.0,$61=.0,$62=.0,$63=0,$64=.0,$65=.0,$67=0,$68=0,$69=0,$70=0,$71=0,$ld$16$0=0,$72$0=0,$ld$17$1=0,$72$1=0;
 var $st$18$0=0,$st$19$1=0,$73=.0,$74=.0,$75=0,$76=.0,$77=0,$78=.0,$79=.0,$80=0,$81=.0,$82=.0,$83=.0,$84=.0,$85=0,$86=.0,$87=.0,$88=.0,$89=.0,$90=.0;
 var $coordinateA_0=.0,$JwA_0=.0,$JwC_0=.0,$mass_0_in=.0,$mass_0=.0,$92=0,$93=0,$94=0,$96=0,$97=.0,$98=.0,$99=0,$100=.0,$101=0,$102=.0,$103=.0,$104=.0,$105=.0,$106=0,$107=.0;
 var $108=.0,$110=0,$111=0,$112=0,$113=0,$114=0,$115=0,$116=.0,$JvBD56=0,$117=.0,$118=.0,$119=.0,$120=.0,$121=.0,$122=.0,$123=0,$124=.0,$125=0,$126=.0,$127=.0;
 var $128=.0,$129=0,$130=.0,$131=.0,$132=.0,$133=.0,$134=0,$135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$coordinateB_0=.0,$JwB_0=.0,$JwD_0=.0,$_pn=.0,$mass_1=.0,$141=0,$143=0,$144=.0;
 var $145=0,$146=.0,$147=.0,$148=.0,$149=.0,$150=.0,$151=.0,$impulse_0=.0,$153=0,$154=.0,$155=.0,$156=0,$157=.0,$158=.0,$159=.0,$160=.0,$161=0,$162=.0,$163=.0,$164=0;
 var $165=.0,$166=.0,$167=.0,$168=.0,$169=0,$170=.0,$171=.0,$172=0,$173=.0,$174=.0,$175=.0,$176=.0,$177=0,$178=.0,$179=.0,$180=0,$181=.0,$182=.0,$183=.0,$184=.0;
 var $185=0,$186=0,$187=0,$188=0,$ld$20$0=0,$189$0=0,$ld$21$1=0,$189$1=0,$st$22$0=0,$st$23$1=0,$190=0,$191=0,$192=0,$193=0,$194=0,$195=0,$196=0,$ld$24$0=0,$197$0=0,$ld$25$1=0;
 var $197$1=0,$st$26$0=0,$st$27$1=0,$198=0,$199=0,$200=0,$201=0,$202=0,$203=0,$204=0,$ld$28$0=0,$205$0=0,$ld$29$1=0,$205$1=0,$st$30$0=0,$st$31$1=0,$206=0,$207=0,$208=0,$209=0;
 var $210=0,$211=0,$212=0,$ld$32$0=0,$213$0=0,$ld$33$1=0,$213$1=0,$st$34$0=0,$st$35$1=0,$214=0,$215=0,$216=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast49=$cB;
 $cC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast50=$cC;
 $cD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast51=$cD;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $JvAC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast52=$JvAC;
 $JvBD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast54=$JvBD;
 $u=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast53=$u;
 $rC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $u1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=(($this+160)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($data+24)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($18+((($16)*(12))&-1))|0);
 $20=$19;
 $ld$0$0=(($20)|0);
 $21$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$21$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$21$1;
 $22=((HEAP32[(($15)>>2)])|0);
 $23=((HEAP32[(($17)>>2)])|0);
 $24=(($23+((($22)*(12))&-1)+8)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=(($this+164)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=(($23+((($27)*(12))&-1))|0);
 $29=$28;
 $ld$4$0=(($29)|0);
 $30$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($29+4)|0);
 $30$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$30$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$30$1;
 $31=((HEAP32[(($26)>>2)])|0);
 $32=((HEAP32[(($17)>>2)])|0);
 $33=(($32+((($31)*(12))&-1)+8)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=(($this+168)|0);
 $36=((HEAP32[(($35)>>2)])|0);
 $37=(($32+((($36)*(12))&-1))|0);
 $38=$37;
 $ld$8$0=(($38)|0);
 $39$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($38+4)|0);
 $39$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cC)|0);
 HEAP32[(($st$10$0)>>2)]=$39$0;
 $st$11$1=(($cC+4)|0);
 HEAP32[(($st$11$1)>>2)]=$39$1;
 $40=((HEAP32[(($35)>>2)])|0);
 $41=((HEAP32[(($17)>>2)])|0);
 $42=(($41+((($40)*(12))&-1)+8)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=(($this+172)|0);
 $45=((HEAP32[(($44)>>2)])|0);
 $46=(($41+((($45)*(12))&-1))|0);
 $47=$46;
 $ld$12$0=(($47)|0);
 $48$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($47+4)|0);
 $48$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($cD)|0);
 HEAP32[(($st$14$0)>>2)]=$48$0;
 $st$15$1=(($cD+4)|0);
 HEAP32[(($st$15$1)>>2)]=$48$1;
 $49=((HEAP32[(($44)>>2)])|0);
 $50=((HEAP32[(($17)>>2)])|0);
 $51=(($50+((($49)*(12))&-1)+8)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 __ZN5b2RotC1Ef($qA,$25);
 __ZN5b2RotC1Ef($qB,$34);
 __ZN5b2RotC1Ef($qC,$43);
 __ZN5b2RotC1Ef($qD,$52);
 $53=(($this+76)|0);
 $54=((HEAP32[(($53)>>2)])|0);
 $55=($54|0)==1;
 if ($55) {
  __ZN6b2Vec27SetZeroEv($tmpcast52);
  $57=(($this+224)|0);
  $58=(+(HEAPF32[(($57)>>2)]));
  $59=(($this+232)|0);
  $60=(+(HEAPF32[(($59)>>2)]));
  $61=($58)+($60);
  $62=($25)-($43);
  $63=(($this+140)|0);
  $64=(+(HEAPF32[(($63)>>2)]));
  $65=($62)-($64);
  $mass_0_in=$61;$JwC_0=1.0;$JwA_0=1.0;$coordinateA_0=$65;
 } else {
  $67=(($this+124)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast53,$qC,$67);
  $68=(($this+108)|0);
  $69=(($this+192)|0);
  __ZmiRK6b2Vec2S1_($1,$68,$69);
  __Z5b2MulRK5b2RotRK6b2Vec2($rC,$qC,$1);
  $70=(($this+92)|0);
  $71=(($this+176)|0);
  __ZmiRK6b2Vec2S1_($2,$70,$71);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$2);
  $ld$16$0=(($u)|0);
  $72$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($u+4)|0);
  $72$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($JvAC)|0);
  HEAP32[(($st$18$0)>>2)]=$72$0;
  $st$19$1=(($JvAC+4)|0);
  HEAP32[(($st$19$1)>>2)]=$72$1;
  $73=(+(__Z7b2CrossRK6b2Vec2S1_($rC,$tmpcast53)));
  $74=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$tmpcast53)));
  $75=(($this+216)|0);
  $76=(+(HEAPF32[(($75)>>2)]));
  $77=(($this+208)|0);
  $78=(+(HEAPF32[(($77)>>2)]));
  $79=($76)+($78);
  $80=(($this+232)|0);
  $81=(+(HEAPF32[(($80)>>2)]));
  $82=($73)*($81);
  $83=($73)*($82);
  $84=($79)+($83);
  $85=(($this+224)|0);
  $86=(+(HEAPF32[(($85)>>2)]));
  $87=($74)*($86);
  $88=($74)*($87);
  $89=($84)+($88);
  __ZmiRK6b2Vec2S1_($pC,$68,$69);
  __ZmiRK6b2Vec2S1_($4,$tmpcast,$tmpcast50);
  __ZplRK6b2Vec2S1_($3,$rA,$4);
  __Z6b2MulTRK5b2RotRK6b2Vec2($pA,$qC,$3);
  __ZmiRK6b2Vec2S1_($5,$pA,$pC);
  $90=(+(__Z5b2DotRK6b2Vec2S1_($5,$67)));
  $mass_0_in=$89;$JwC_0=$73;$JwA_0=$74;$coordinateA_0=$90;
 }




 $mass_0=($mass_0_in)+((0.0));
 $92=(($this+80)|0);
 $93=((HEAP32[(($92)>>2)])|0);
 $94=($93|0)==1;
 if ($94) {
  __ZN6b2Vec27SetZeroEv($tmpcast54);
  $96=(($this+152)|0);
  $97=(+(HEAPF32[(($96)>>2)]));
  $98=($97)*($97);
  $99=(($this+228)|0);
  $100=(+(HEAPF32[(($99)>>2)]));
  $101=(($this+236)|0);
  $102=(+(HEAPF32[(($101)>>2)]));
  $103=($100)+($102);
  $104=($98)*($103);
  $105=($34)-($52);
  $106=(($this+144)|0);
  $107=(+(HEAPF32[(($106)>>2)]));
  $108=($105)-($107);
  $_pn=$104;$JwD_0=$97;$JwB_0=$97;$coordinateB_0=$108;
 } else {
  $110=(($this+132)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($u1,$qD,$110);
  $111=(($this+116)|0);
  $112=(($this+200)|0);
  __ZmiRK6b2Vec2S1_($6,$111,$112);
  __Z5b2MulRK5b2RotRK6b2Vec2($rD,$qD,$6);
  $113=(($this+100)|0);
  $114=(($this+184)|0);
  __ZmiRK6b2Vec2S1_($7,$113,$114);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$7);
  $115=(($this+152)|0);
  $116=(+(HEAPF32[(($115)>>2)]));
  $JvBD56=$JvBD;
  __ZmlfRK6b2Vec2($JvBD56,$116,$u1);
  $117=(+(HEAPF32[(($115)>>2)]));
  $118=(+(__Z7b2CrossRK6b2Vec2S1_($rD,$u1)));
  $119=($117)*($118);
  $120=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$u1)));
  $121=($117)*($120);
  $122=($117)*($117);
  $123=(($this+220)|0);
  $124=(+(HEAPF32[(($123)>>2)]));
  $125=(($this+212)|0);
  $126=(+(HEAPF32[(($125)>>2)]));
  $127=($124)+($126);
  $128=($122)*($127);
  $129=(($this+236)|0);
  $130=(+(HEAPF32[(($129)>>2)]));
  $131=($119)*($130);
  $132=($119)*($131);
  $133=($128)+($132);
  $134=(($this+228)|0);
  $135=(+(HEAPF32[(($134)>>2)]));
  $136=($121)*($135);
  $137=($121)*($136);
  $138=($133)+($137);
  __ZmiRK6b2Vec2S1_($pD,$111,$112);
  __ZmiRK6b2Vec2S1_($9,$tmpcast49,$tmpcast51);
  __ZplRK6b2Vec2S1_($8,$rB,$9);
  __Z6b2MulTRK5b2RotRK6b2Vec2($pB,$qD,$8);
  __ZmiRK6b2Vec2S1_($10,$pB,$pD);
  $139=(+(__Z5b2DotRK6b2Vec2S1_($10,$110)));
  $_pn=$138;$JwD_0=$119;$JwB_0=$121;$coordinateB_0=$139;
 }




 $mass_1=($mass_0)+($_pn);
 $141=$mass_1>(0.0);
 if ($141) {
  $143=(($this+152)|0);
  $144=(+(HEAPF32[(($143)>>2)]));
  $145=(($this+148)|0);
  $146=($coordinateB_0)*($144);
  $147=(+(HEAPF32[(($145)>>2)]));
  $148=($coordinateA_0)+($146);
  $149=($148)-($147);
  $150=((-.0))-($149);
  $151=($150)/($mass_1);
  $impulse_0=$151;
 } else {
  $impulse_0=0.0;
 }

 $153=(($this+208)|0);
 $154=(+(HEAPF32[(($153)>>2)]));
 $155=($impulse_0)*($154);
 __ZmlfRK6b2Vec2($11,$155,$tmpcast52);
 __ZN6b2Vec2pLERKS_($tmpcast,$11);
 $156=(($this+224)|0);
 $157=(+(HEAPF32[(($156)>>2)]));
 $158=($impulse_0)*($157);
 $159=($JwA_0)*($158);
 $160=($25)+($159);
 $161=(($this+212)|0);
 $162=(+(HEAPF32[(($161)>>2)]));
 $163=($impulse_0)*($162);
 __ZmlfRK6b2Vec2($12,$163,$tmpcast54);
 __ZN6b2Vec2pLERKS_($tmpcast49,$12);
 $164=(($this+228)|0);
 $165=(+(HEAPF32[(($164)>>2)]));
 $166=($impulse_0)*($165);
 $167=($JwB_0)*($166);
 $168=($34)+($167);
 $169=(($this+216)|0);
 $170=(+(HEAPF32[(($169)>>2)]));
 $171=($impulse_0)*($170);
 __ZmlfRK6b2Vec2($13,$171,$tmpcast52);
 __ZN6b2Vec2mIERKS_($tmpcast50,$13);
 $172=(($this+232)|0);
 $173=(+(HEAPF32[(($172)>>2)]));
 $174=($impulse_0)*($173);
 $175=($JwC_0)*($174);
 $176=($43)-($175);
 $177=(($this+220)|0);
 $178=(+(HEAPF32[(($177)>>2)]));
 $179=($impulse_0)*($178);
 __ZmlfRK6b2Vec2($14,$179,$tmpcast54);
 __ZN6b2Vec2mIERKS_($tmpcast51,$14);
 $180=(($this+236)|0);
 $181=(+(HEAPF32[(($180)>>2)]));
 $182=($impulse_0)*($181);
 $183=($JwD_0)*($182);
 $184=($52)-($183);
 $185=((HEAP32[(($15)>>2)])|0);
 $186=((HEAP32[(($17)>>2)])|0);
 $187=(($186+((($185)*(12))&-1))|0);
 $188=$187;
 $ld$20$0=(($cA)|0);
 $189$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($cA+4)|0);
 $189$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($188)|0);
 HEAP32[(($st$22$0)>>2)]=$189$0;
 $st$23$1=(($188+4)|0);
 HEAP32[(($st$23$1)>>2)]=$189$1;
 $190=((HEAP32[(($15)>>2)])|0);
 $191=((HEAP32[(($17)>>2)])|0);
 $192=(($191+((($190)*(12))&-1)+8)|0);
 HEAPF32[(($192)>>2)]=$160;
 $193=((HEAP32[(($26)>>2)])|0);
 $194=((HEAP32[(($17)>>2)])|0);
 $195=(($194+((($193)*(12))&-1))|0);
 $196=$195;
 $ld$24$0=(($cB)|0);
 $197$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($cB+4)|0);
 $197$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($196)|0);
 HEAP32[(($st$26$0)>>2)]=$197$0;
 $st$27$1=(($196+4)|0);
 HEAP32[(($st$27$1)>>2)]=$197$1;
 $198=((HEAP32[(($26)>>2)])|0);
 $199=((HEAP32[(($17)>>2)])|0);
 $200=(($199+((($198)*(12))&-1)+8)|0);
 HEAPF32[(($200)>>2)]=$168;
 $201=((HEAP32[(($35)>>2)])|0);
 $202=((HEAP32[(($17)>>2)])|0);
 $203=(($202+((($201)*(12))&-1))|0);
 $204=$203;
 $ld$28$0=(($cC)|0);
 $205$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($cC+4)|0);
 $205$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($204)|0);
 HEAP32[(($st$30$0)>>2)]=$205$0;
 $st$31$1=(($204+4)|0);
 HEAP32[(($st$31$1)>>2)]=$205$1;
 $206=((HEAP32[(($35)>>2)])|0);
 $207=((HEAP32[(($17)>>2)])|0);
 $208=(($207+((($206)*(12))&-1)+8)|0);
 HEAPF32[(($208)>>2)]=$176;
 $209=((HEAP32[(($44)>>2)])|0);
 $210=((HEAP32[(($17)>>2)])|0);
 $211=(($210+((($209)*(12))&-1))|0);
 $212=$211;
 $ld$32$0=(($cD)|0);
 $213$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($cD+4)|0);
 $213$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($212)|0);
 HEAP32[(($st$34$0)>>2)]=$213$0;
 $st$35$1=(($212+4)|0);
 HEAP32[(($st$35$1)>>2)]=$213$1;
 $214=((HEAP32[(($44)>>2)])|0);
 $215=((HEAP32[(($17)>>2)])|0);
 $216=(($215+((($214)*(12))&-1)+8)|0);
 HEAPF32[(($216)>>2)]=$184;
 STACKTOP=sp;return ((1)|0);
}


function __ZNK11b2GearJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+92)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK11b2GearJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+100)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK11b2GearJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $P=0,$1=0,$2=.0,$3=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $P=((sp)|0);
 $1=(($this+156)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+240)|0);
 __ZmlfRK6b2Vec2($P,$2,$3);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$P);
 STACKTOP=sp;return;
}


function __ZNK11b2GearJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=.0,label=0;

 $1=(($this+156)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+256)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=($5)*($inv_dt);
 return (+($6));
}


function __ZN11b2GearJoint8SetRatioEf($this,$ratio){
 $this=($this)|0;
 $ratio=+($ratio);
 var $1=0,$4=0,label=0;

 $1=((__Z9b2IsValidf($ratio))|0);
 if ($1) {
  $4=(($this+152)|0);
  HEAPF32[(($4)>>2)]=$ratio;
  return;
 } else {
  ___assert_fail(((4272)|0),((9672)|0),((398)|0),((13168)|0));

 }
}


function __ZNK11b2GearJoint8GetRatioEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+152)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZN11b2GearJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=.0,$22=.0,$23=0,$24=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($this+68)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+56)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=(($this+72)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($14+56)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 __Z5b2LogPKcz(3192,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2480,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(1792,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $17=(($this+61)|0);
 $18=((HEAP8[($17)])|0);
 $19=($18&255);
 __Z5b2LogPKcz(1192,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$19,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(680,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$12,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(216,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$16,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $20=(($this+152)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=$21;
 __Z5b2LogPKcz(11592,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$22,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $23=(($this+56)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 __Z5b2LogPKcz(11192,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$24,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN11b2GearJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN11b2GearJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator($def,$allocator){
 $def=($def)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$5=0,$7=0,$8=0,$10=0,$11=0,$13=0,$14=0,$16=0,$17=0,$19=0,$20=0,$22=0,$23=0,$25=0,$26=0,$28=0,$29=0;
 var $31=0,$32=0,$34=0,$35=0,$37=0,$38=0,$40=0,$41=0,$43=0,$44=0,$46=0,$47=0,$49=0,$50=0,$52=0,$53=0,$55=0,$56=0,$58=0,$59=0;
 var $61=0,$62=0,$64=0,$65=0,$67=0,$68=0,$70=0,$71=0,$73=0,$74=0,$76=0,$77=0,$79=0,$80=0,$82=0,$83=0,$85=0,$86=0,$88=0,$89=0;
 var $91=0,$92=0,$joint_0=0,label=0;

 $1=(($def)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 switch (($2|0)) {
 case 9: {
  $76=((__ZN16b2BlockAllocator8AllocateEi($allocator,180))|0);
  $77=($76|0)==0;
  if ($77) {
   $82=0;
  } else {
   $79=$76;
   $80=$def;
   __ZN15b2FrictionJointC2EPK18b2FrictionJointDef($79,$80);
   $82=$79;
  }

  $83=(($82)|0);
  $joint_0=$83;

  return (($joint_0)|0);
  break;
 }
 case 10: {
  $85=((__ZN16b2BlockAllocator8AllocateEi($allocator,168))|0);
  $86=($85|0)==0;
  if ($86) {
   $91=0;
  } else {
   $88=$85;
   $89=$def;
   __ZN11b2RopeJointC2EPK14b2RopeJointDef($88,$89);
   $91=$88;
  }

  $92=(($91)|0);
  $joint_0=$92;

  return (($joint_0)|0);
  break;
 }
 case 3: {
  $4=((__ZN16b2BlockAllocator8AllocateEi($allocator,176))|0);
  $5=($4|0)==0;
  if ($5) {
   $10=0;
  } else {
   $7=$4;
   $8=$def;
   __ZN15b2DistanceJointC2EPK18b2DistanceJointDef($7,$8);
   $10=$7;
  }

  $11=(($10)|0);
  $joint_0=$11;

  return (($joint_0)|0);
  break;
 }
 case 5: {
  $13=((__ZN16b2BlockAllocator8AllocateEi($allocator,168))|0);
  $14=($13|0)==0;
  if ($14) {
   $19=0;
  } else {
   $16=$13;
   $17=$def;
   __ZN12b2MouseJointC2EPK15b2MouseJointDef($16,$17);
   $19=$16;
  }

  $20=(($19)|0);
  $joint_0=$20;

  return (($joint_0)|0);
  break;
 }
 case 2: {
  $22=((__ZN16b2BlockAllocator8AllocateEi($allocator,256))|0);
  $23=($22|0)==0;
  if ($23) {
   $28=0;
  } else {
   $25=$22;
   $26=$def;
   __ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef($25,$26);
   $28=$25;
  }

  $29=(($28)|0);
  $joint_0=$29;

  return (($joint_0)|0);
  break;
 }
 case 1: {
  $31=((__ZN16b2BlockAllocator8AllocateEi($allocator,228))|0);
  $32=($31|0)==0;
  if ($32) {
   $37=0;
  } else {
   $34=$31;
   $35=$def;
   __ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef($34,$35);
   $37=$34;
  }

  $38=(($37)|0);
  $joint_0=$38;

  return (($joint_0)|0);
  break;
 }
 case 4: {
  $40=((__ZN16b2BlockAllocator8AllocateEi($allocator,196))|0);
  $41=($40|0)==0;
  if ($41) {
   $46=0;
  } else {
   $43=$40;
   $44=$def;
   __ZN13b2PulleyJointC2EPK16b2PulleyJointDef($43,$44);
   $46=$43;
  }

  $47=(($46)|0);
  $joint_0=$47;

  return (($joint_0)|0);
  break;
 }
 case 6: {
  $49=((__ZN16b2BlockAllocator8AllocateEi($allocator,276))|0);
  $50=($49|0)==0;
  if ($50) {
   $55=0;
  } else {
   $52=$49;
   $53=$def;
   __ZN11b2GearJointC2EPK14b2GearJointDef($52,$53);
   $55=$52;
  }

  $56=(($55)|0);
  $joint_0=$56;

  return (($joint_0)|0);
  break;
 }
 case 7: {
  $58=((__ZN16b2BlockAllocator8AllocateEi($allocator,224))|0);
  $59=($58|0)==0;
  if ($59) {
   $64=0;
  } else {
   $61=$58;
   $62=$def;
   __ZN12b2WheelJointC2EPK15b2WheelJointDef($61,$62);
   $64=$61;
  }

  $65=(($64)|0);
  $joint_0=$65;

  return (($joint_0)|0);
  break;
 }
 case 8: {
  $67=((__ZN16b2BlockAllocator8AllocateEi($allocator,208))|0);
  $68=($67|0)==0;
  if ($68) {
   $73=0;
  } else {
   $70=$67;
   $71=$def;
   __ZN11b2WeldJointC2EPK14b2WeldJointDef($70,$71);
   $73=$70;
  }

  $74=(($73)|0);
  $joint_0=$74;

  return (($joint_0)|0);
  break;
 }
 default: {
  ___assert_fail(((4328)|0),((9568)|0),((113)|0),((12368)|0));
  return ((0)|0);
 }
 }
  return 0;
}


function __ZN7b2Joint7DestroyEPS_P16b2BlockAllocator($joint,$allocator){
 $joint=($joint)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$8=0,$10=0,$12=0,$14=0,$16=0,$18=0,$20=0,$22=0,$24=0,$26=0,label=0;

 $1=$joint;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+20)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($joint);
 $5=(($joint+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 switch (($6|0)) {
 case 4: {
  $16=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$16,196);
  return;
  break;
 }
 case 6: {
  $18=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$18,276);
  return;
  break;
 }
 case 10: {
  $26=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$26,168);
  return;
  break;
 }
 case 7: {
  $20=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$20,224);
  return;
  break;
 }
 case 1: {
  $14=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$14,228);
  return;
  break;
 }
 case 5: {
  $10=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$10,168);
  return;
  break;
 }
 case 2: {
  $12=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$12,256);
  return;
  break;
 }
 case 8: {
  $22=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$22,208);
  return;
  break;
 }
 case 9: {
  $24=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$24,180);
  return;
  break;
 }
 case 3: {
  $8=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$8,176);
  return;
  break;
 }
 default: {
  ___assert_fail(((4328)|0),((9568)|0),((166)|0),((12360)|0));

 }
 }
}


function __ZN7b2JointC2EPK10b2JointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$25=0,$26=0,$27=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=13424;
 $2=(($def+8)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($def+12)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)==($5|0);
 if ($6) {
  ___assert_fail(((6400)|0),((9568)|0),((173)|0),((12352)|0));

 } else {
  $9=(($def)|0);
  $10=((HEAP32[(($9)>>2)])|0);
  $11=(($this+4)|0);
  HEAP32[(($11)>>2)]=$10;
  $12=(($this+8)|0);
  HEAP32[(($12)>>2)]=0;
  $13=(($this+12)|0);
  HEAP32[(($13)>>2)]=0;
  $14=((HEAP32[(($2)>>2)])|0);
  $15=(($this+48)|0);
  HEAP32[(($15)>>2)]=$14;
  $16=((HEAP32[(($4)>>2)])|0);
  $17=(($this+52)|0);
  HEAP32[(($17)>>2)]=$16;
  $18=(($this+56)|0);
  HEAP32[(($18)>>2)]=0;
  $19=(($def+16)|0);
  $20=((HEAP8[($19)])|0);
  $21=(($this+61)|0);
  HEAP8[($21)]=$20;
  $22=(($this+60)|0);
  HEAP8[($22)]=0;
  $23=(($def+4)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $25=(($this+64)|0);
  HEAP32[(($25)>>2)]=$24;
  $26=(($this+16)|0);
  $27=$26;
  _memset((((($27)|0))|0), ((((0)|0))|0), ((((32)|0))|0))|0;
  return;
 }
}


function __ZNK7b2Joint8IsActiveEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK6b2Body8IsActiveEv($2))|0);
 if (!($3)) {
  $9=0;

  return (($9)|0);
 }
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZNK6b2Body8IsActiveEv($6))|0);
 $9=$7;

 return (($9)|0);
}


function __ZN7b2Joint4DumpEv($this){
 $this=($this)|0;
 var label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 __Z5b2LogPKcz(4224,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN7b2JointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN7b2JointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN12b2MouseJointC2EPK15b2MouseJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$12=0,$13=.0,$14=0,$_not=0,$15=0,$or_cond=0,$18=0,$19=.0,$20=0,$_not15=0;
 var $21=0,$or_cond16=0,$24=0,$25=.0,$26=0,$_not17=0,$27=0,$or_cond18=0,$30=0,$31=0,$ld$0$0=0,$32$0=0,$ld$1$1=0,$32$1=0,$st$2$0=0,$st$3$1=0,$33=0,$34=0,$35=0,$36=0;
 var $ld$4$0=0,$37$0=0,$ld$5$1=0,$37$1=0,$st$6$0=0,$st$7$1=0,$38=.0,$39=0,$40=.0,$41=0,$42=.0,$43=0,$44=0,$45=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=(($this)|0);
 $3=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($2,$3);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=14352;
 $5=(($this+68)|0);
 $6=(($this+76)|0);
 $7=(($this+96)|0);
 $8=(($def+20)|0);
 $9=((__ZNK6b2Vec27IsValidEv($8))|0);
 if (!($9)) {
  ___assert_fail(((4056)|0),((9424)|0),((34)|0),((13080)|0));

 }
 $12=(($def+28)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=((__Z9b2IsValidf($13))|0);
 $_not=$14^1;
 $15=$13<(0.0);
 $or_cond=$15|$_not;
 if ($or_cond) {
  ___assert_fail(((6296)|0),((9424)|0),((35)|0),((13080)|0));

 }
 $18=(($def+32)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=((__Z9b2IsValidf($19))|0);
 $_not15=$20^1;
 $21=$19<(0.0);
 $or_cond16=$21|$_not15;
 if ($or_cond16) {
  ___assert_fail(((4168)|0),((9424)|0),((36)|0),((13080)|0));

 }
 $24=(($def+36)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=((__Z9b2IsValidf($25))|0);
 $_not17=$26^1;
 $27=$25<(0.0);
 $or_cond18=$27|$_not17;
 if ($or_cond18) {
  ___assert_fail(((3128)|0),((9424)|0),((37)|0),((13080)|0));

 } else {
  $30=$8;
  $31=$6;
  $ld$0$0=(($30)|0);
  $32$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($30+4)|0);
  $32$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($31)|0);
  HEAP32[(($st$2$0)>>2)]=$32$0;
  $st$3$1=(($31+4)|0);
  HEAP32[(($st$3$1)>>2)]=$32$1;
  $33=(($this+52)|0);
  $34=((HEAP32[(($33)>>2)])|0);
  $35=((__ZNK6b2Body12GetTransformEv($34))|0);
  __Z6b2MulTRK11b2TransformRK6b2Vec2($tmpcast,$35,$6);
  $36=$5;
  $ld$4$0=(($1)|0);
  $37$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($1+4)|0);
  $37$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($36)|0);
  HEAP32[(($st$6$0)>>2)]=$37$0;
  $st$7$1=(($36+4)|0);
  HEAP32[(($st$7$1)>>2)]=$37$1;
  $38=(+(HEAPF32[(($12)>>2)]));
  $39=(($this+104)|0);
  HEAPF32[(($39)>>2)]=$38;
  __ZN6b2Vec27SetZeroEv($7);
  $40=(+(HEAPF32[(($18)>>2)]));
  $41=(($this+84)|0);
  HEAPF32[(($41)>>2)]=$40;
  $42=(+(HEAPF32[(($24)>>2)]));
  $43=(($this+88)|0);
  HEAPF32[(($43)>>2)]=$42;
  $44=(($this+92)|0);
  HEAPF32[(($44)>>2)]=0.0;
  $45=(($this+108)|0);
  HEAPF32[(($45)>>2)]=0.0;
  STACKTOP=sp;return;
 }
}


function __ZN12b2MouseJoint9SetTargetERK6b2Vec2($this,$target){
 $this=($this)|0;
 $target=($target)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK6b2Body7IsAwakeEv($2))|0);
 if (!($3)) {
  __ZN6b2Body8SetAwakeEb($2,1);
 }
 $6=(($this+76)|0);
 $7=$target;
 $8=$6;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 return;
}


function __ZNK12b2MouseJoint9GetTargetEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+76)|0);
 return (($1)|0);
}


function __ZN12b2MouseJoint11SetMaxForceEf($this,$force){
 $this=($this)|0;
 $force=+($force);
 var $1=0,label=0;

 $1=(($this+104)|0);
 HEAPF32[(($1)>>2)]=$force;
 return;
}


function __ZNK12b2MouseJoint11GetMaxForceEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+104)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZN12b2MouseJoint12SetFrequencyEf($this,$hz){
 $this=($this)|0;
 $hz=+($hz);
 var $1=0,label=0;

 $1=(($this+84)|0);
 HEAPF32[(($1)>>2)]=$hz;
 return;
}


function __ZNK12b2MouseJoint12GetFrequencyEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+84)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZN12b2MouseJoint15SetDampingRatioEf($this,$ratio){
 $this=($this)|0;
 $ratio=+($ratio);
 var $1=0,label=0;

 $1=(($this+88)|0);
 HEAPF32[(($1)>>2)]=$ratio;
 return;
}


function __ZNK12b2MouseJoint15GetDampingRatioEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+88)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cB=0,$tmpcast=0,$vB=0,$tmpcast21=0,$qB=0,$1=0,$tmpcast22=0,$2=0,$K=0,$3=0,$4=0,$tmpcast23=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0;
 var $13=0,$14=0,$15=0,$16=0,$ld$0$0=0,$17$0=0,$ld$1$1=0,$17$1=0,$st$2$0=0,$st$3$1=0,$18=0,$19=0,$20=.0,$21=0,$22=0,$23=0,$24=.0,$25=0,$26=0,$27=0;
 var $28=0,$29=0,$30=0,$ld$4$0=0,$31$0=0,$ld$5$1=0,$31$1=0,$st$6$0=0,$st$7$1=0,$32=0,$33=0,$34=0,$35=.0,$36=0,$37=0,$38=0,$39=0,$ld$8$0=0,$40$0=0,$ld$9$1=0;
 var $40$1=0,$st$10$0=0,$st$11$1=0,$41=0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=.0,$54=.0,$55=.0,$56=.0,$57=0;
 var $58=.0,$59=.0,$60=.0,$61=0,$64=.0,$65=0,$66=0,$68=.0,$storemerge=.0,$70=.0,$71=0,$72=0,$73=0,$74=0,$ld$12$0=0,$75$0=0,$ld$13$1=0,$75$1=0,$st$14$0=0,$st$15$1=0;
 var $76=.0,$77=.0,$78=0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0,$84=.0,$85=0,$86=.0,$87=.0,$88=0,$89=.0,$90=.0,$91=.0,$92=.0,$93=0,$94=0,$95=.0;
 var $96=.0,$97=.0,$98=.0,$99=.0,$100=.0,$101=.0,$102=.0,$103=0,$104=0,$105=0,$106=0,$107=0,$108=0,$109=0,$ld$16$0=0,$110$0=0,$ld$17$1=0,$110$1=0,$st$18$0=0,$st$19$1=0;
 var $111=.0,$112=.0,$113=0,$114=0,$115=0,$116=0,$118=0,$119=.0,$120=.0,$121=.0,$122=.0,$123=.0,$124=.0,$wB_0=.0,$127=0,$128=0,$129=0,$130=0,$ld$20$0=0,$131$0=0;
 var $ld$21$1=0,$131$1=0,$st$22$0=0,$st$23$1=0,$132=0,$133=0,$134=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cB=((sp)|0);
 $tmpcast=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast21=$vB;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast22=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast23=$4;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+52)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($8+8)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($this+116)|0);
 HEAP32[(($11)>>2)]=$10;
 $12=(($this+128)|0);
 $13=((HEAP32[(($7)>>2)])|0);
 $14=(($13+28)|0);
 $15=$14;
 $16=$12;
 $ld$0$0=(($15)|0);
 $17$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($15+4)|0);
 $17$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($16)|0);
 HEAP32[(($st$2$0)>>2)]=$17$0;
 $st$3$1=(($16+4)|0);
 HEAP32[(($st$3$1)>>2)]=$17$1;
 $18=((HEAP32[(($7)>>2)])|0);
 $19=(($18+120)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=(($this+136)|0);
 HEAPF32[(($21)>>2)]=$20;
 $22=((HEAP32[(($7)>>2)])|0);
 $23=(($22+128)|0);
 $24=(+(HEAPF32[(($23)>>2)]));
 $25=(($this+140)|0);
 HEAPF32[(($25)>>2)]=$24;
 $26=((HEAP32[(($11)>>2)])|0);
 $27=(($data+24)|0);
 $28=((HEAP32[(($27)>>2)])|0);
 $29=(($28+((($26)*(12))&-1))|0);
 $30=$29;
 $ld$4$0=(($30)|0);
 $31$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($30+4)|0);
 $31$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$31$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$31$1;
 $32=((HEAP32[(($11)>>2)])|0);
 $33=((HEAP32[(($27)>>2)])|0);
 $34=(($33+((($32)*(12))&-1)+8)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($data+28)|0);
 $37=((HEAP32[(($36)>>2)])|0);
 $38=(($37+((($32)*(12))&-1))|0);
 $39=$38;
 $ld$8$0=(($39)|0);
 $40$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($39+4)|0);
 $40$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($vB)|0);
 HEAP32[(($st$10$0)>>2)]=$40$0;
 $st$11$1=(($vB+4)|0);
 HEAP32[(($st$11$1)>>2)]=$40$1;
 $41=((HEAP32[(($11)>>2)])|0);
 $42=((HEAP32[(($36)>>2)])|0);
 $43=(($42+((($41)*(12))&-1)+8)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 __ZN5b2RotC1Ef($qB,$35);
 $45=((HEAP32[(($7)>>2)])|0);
 $46=(+(__ZNK6b2Body7GetMassEv($45)));
 $47=(($this+84)|0);
 $48=(+(HEAPF32[(($47)>>2)]));
 $49=($48)*((6.2831854820251465));
 $50=($46)*((2.0));
 $51=(($this+88)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 $53=($50)*($52);
 $54=($49)*($53);
 $55=($49)*($49);
 $56=($46)*($55);
 $57=(($data)|0);
 $58=(+(HEAPF32[(($57)>>2)]));
 $59=($58)*($56);
 $60=($54)+($59);
 $61=$60>(1.1920928955078125e-7);
 if (!($61)) {
  ___assert_fail(((2448)|0),((9424)|0),((125)|0),((13096)|0));

 }
 $64=($58)*($60);
 $65=(($this+108)|0);
 $66=$64!=(0.0);
 if ($66) {
  $68=((1.0))/($64);
  $storemerge=$68;
 } else {
  $storemerge=$64;
 }

 HEAPF32[(($65)>>2)]=$storemerge;
 $70=($59)*($storemerge);
 $71=(($this+92)|0);
 HEAPF32[(($71)>>2)]=$70;
 $72=(($this+120)|0);
 $73=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($2,$73,$12);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast22,$qB,$2);
 $74=$72;
 $ld$12$0=(($1)|0);
 $75$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($1+4)|0);
 $75$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($74)|0);
 HEAP32[(($st$14$0)>>2)]=$75$0;
 $st$15$1=(($74+4)|0);
 HEAP32[(($st$15$1)>>2)]=$75$1;
 $76=(+(HEAPF32[(($21)>>2)]));
 $77=(+(HEAPF32[(($25)>>2)]));
 $78=(($this+124)|0);
 $79=(+(HEAPF32[(($78)>>2)]));
 $80=($77)*($79);
 $81=($79)*($80);
 $82=($76)+($81);
 $83=(+(HEAPF32[(($65)>>2)]));
 $84=($83)+($82);
 $85=(($K)|0);
 HEAPF32[(($85)>>2)]=$84;
 $86=(+(HEAPF32[(($25)>>2)]));
 $87=((-.0))-($86);
 $88=(($72)|0);
 $89=(+(HEAPF32[(($88)>>2)]));
 $90=($89)*($87);
 $91=(+(HEAPF32[(($78)>>2)]));
 $92=($90)*($91);
 $93=(($K+4)|0);
 HEAPF32[(($93)>>2)]=$92;
 $94=(($K+8)|0);
 HEAPF32[(($94)>>2)]=$92;
 $95=(+(HEAPF32[(($21)>>2)]));
 $96=(+(HEAPF32[(($25)>>2)]));
 $97=(+(HEAPF32[(($88)>>2)]));
 $98=($96)*($97);
 $99=($97)*($98);
 $100=($95)+($99);
 $101=(+(HEAPF32[(($65)>>2)]));
 $102=($101)+($100);
 $103=(($K+12)|0);
 HEAPF32[(($103)>>2)]=$102;
 $104=(($this+144)|0);
 __ZNK7b2Mat2210GetInverseEv($3,$K);
 $105=$104;
 $106=$3;
 HEAP32[(($105)>>2)]=((HEAP32[(($106)>>2)])|0);HEAP32[((($105)+(4))>>2)]=((HEAP32[((($106)+(4))>>2)])|0);HEAP32[((($105)+(8))>>2)]=((HEAP32[((($106)+(8))>>2)])|0);HEAP32[((($105)+(12))>>2)]=((HEAP32[((($106)+(12))>>2)])|0);
 $107=(($this+160)|0);
 __ZplRK6b2Vec2S1_($5,$tmpcast,$72);
 $108=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($tmpcast23,$5,$108);
 $109=$107;
 $ld$16$0=(($4)|0);
 $110$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($4+4)|0);
 $110$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($109)|0);
 HEAP32[(($st$18$0)>>2)]=$110$0;
 $st$19$1=(($109+4)|0);
 HEAP32[(($st$19$1)>>2)]=$110$1;
 $111=(+(HEAPF32[(($71)>>2)]));
 __ZN6b2Vec2mLEf($107,$111);
 $112=($44)*((0.9800000190734863));
 $113=(($data+20)|0);
 $114=((HEAP8[($113)])|0);
 $115=(($114<<24)>>24)==0;
 $116=(($this+96)|0);
 if ($115) {
  __ZN6b2Vec27SetZeroEv($116);
  $wB_0=$112;

  $127=((HEAP32[(($11)>>2)])|0);
  $128=((HEAP32[(($36)>>2)])|0);
  $129=(($128+((($127)*(12))&-1))|0);
  $130=$129;
  $ld$20$0=(($vB)|0);
  $131$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($vB+4)|0);
  $131$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($130)|0);
  HEAP32[(($st$22$0)>>2)]=$131$0;
  $st$23$1=(($130+4)|0);
  HEAP32[(($st$23$1)>>2)]=$131$1;
  $132=((HEAP32[(($11)>>2)])|0);
  $133=((HEAP32[(($36)>>2)])|0);
  $134=(($133+((($132)*(12))&-1)+8)|0);
  HEAPF32[(($134)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $118=(($data+8)|0);
  $119=(+(HEAPF32[(($118)>>2)]));
  __ZN6b2Vec2mLEf($116,$119);
  $120=(+(HEAPF32[(($21)>>2)]));
  __ZmlfRK6b2Vec2($6,$120,$116);
  __ZN6b2Vec2pLERKS_($tmpcast21,$6);
  $121=(+(HEAPF32[(($25)>>2)]));
  $122=(+(__Z7b2CrossRK6b2Vec2S1_($72,$116)));
  $123=($121)*($122);
  $124=($112)+($123);
  $wB_0=$124;

  $127=((HEAP32[(($11)>>2)])|0);
  $128=((HEAP32[(($36)>>2)])|0);
  $129=(($128+((($127)*(12))&-1))|0);
  $130=$129;
  $ld$20$0=(($vB)|0);
  $131$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($vB+4)|0);
  $131$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($130)|0);
  HEAP32[(($st$22$0)>>2)]=$131$0;
  $st$23$1=(($130+4)|0);
  HEAP32[(($st$23$1)>>2)]=$131$1;
  $132=((HEAP32[(($11)>>2)])|0);
  $133=((HEAP32[(($36)>>2)])|0);
  $134=(($133+((($132)*(12))&-1)+8)|0);
  HEAPF32[(($134)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZNK6b2Body7GetMassEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+116)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZN12b2MouseJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vB=0,$tmpcast=0,$Cdot=0,$1=0,$impulse=0,$tmpcast11=0,$2=0,$3=0,$4=0,$5=0,$oldImpulse=0,$tmpcast10=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0;
 var $13$0=0,$ld$1$1=0,$13$1=0,$st$2$0=0,$st$3$1=0,$14=0,$15=0,$16=0,$17=.0,$18=0,$19=0,$20=0,$21=0,$22=.0,$23=0,$24=0,$ld$4$0=0,$25$0=0,$ld$5$1=0,$25$1=0;
 var $st$6$0=0,$st$7$1=0,$26=0,$27=.0,$28=0,$29=.0,$30=.0,$31=.0,$32=.0,$33=0,$35=.0,$36=.0,$impulse13=0,$38=0,$39=.0,$40=0,$41=.0,$42=.0,$43=.0,$44=.0;
 var $45=0,$46=0,$47=0,$48=0,$ld$8$0=0,$49$0=0,$ld$9$1=0,$49$1=0,$st$10$0=0,$st$11$1=0,$50=0,$51=0,$52=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vB=((sp)|0);
 $tmpcast=$vB;
 $Cdot=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $impulse=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast11=$impulse;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $oldImpulse=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast10=$oldImpulse;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+116)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($data+28)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+((($8)*(12))&-1))|0);
 $12=$11;
 $ld$0$0=(($12)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($12+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vB)|0);
 HEAP32[(($st$2$0)>>2)]=$13$0;
 $st$3$1=(($vB+4)|0);
 HEAP32[(($st$3$1)>>2)]=$13$1;
 $14=((HEAP32[(($7)>>2)])|0);
 $15=((HEAP32[(($9)>>2)])|0);
 $16=(($15+((($14)*(12))&-1)+8)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+120)|0);
 __Z7b2CrossfRK6b2Vec2($1,$17,$18);
 __ZplRK6b2Vec2S1_($Cdot,$tmpcast,$1);
 $19=(($this+144)|0);
 $20=(($this+160)|0);
 __ZplRK6b2Vec2S1_($3,$Cdot,$20);
 $21=(($this+108)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=(($this+96)|0);
 __ZmlfRK6b2Vec2($4,$22,$23);
 __ZplRK6b2Vec2S1_($5,$3,$4);
 __ZNK6b2Vec2ngEv($2,$5);
 __Z5b2MulRK7b2Mat22RK6b2Vec2($tmpcast11,$19,$2);
 $24=$23;
 $ld$4$0=(($24)|0);
 $25$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($24+4)|0);
 $25$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($oldImpulse)|0);
 HEAP32[(($st$6$0)>>2)]=$25$0;
 $st$7$1=(($oldImpulse+4)|0);
 HEAP32[(($st$7$1)>>2)]=$25$1;
 __ZN6b2Vec2pLERKS_($23,$tmpcast11);
 $26=(($data)|0);
 $27=(+(HEAPF32[(($26)>>2)]));
 $28=(($this+104)|0);
 $29=(+(HEAPF32[(($28)>>2)]));
 $30=($27)*($29);
 $31=(+(__ZNK6b2Vec213LengthSquaredEv($23)));
 $32=($30)*($30);
 $33=$31>$32;
 if ($33) {
  $35=(+(__ZNK6b2Vec26LengthEv($23)));
  $36=($30)/($35);
  __ZN6b2Vec2mLEf($23,$36);
 }
 $impulse13=$impulse;
 __ZmiRK6b2Vec2S1_($impulse13,$23,$tmpcast10);
 $38=(($this+136)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 __ZmlfRK6b2Vec2($6,$39,$tmpcast11);
 __ZN6b2Vec2pLERKS_($tmpcast,$6);
 $40=(($this+140)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=(+(__Z7b2CrossRK6b2Vec2S1_($18,$tmpcast11)));
 $43=($41)*($42);
 $44=($17)+($43);
 $45=((HEAP32[(($7)>>2)])|0);
 $46=((HEAP32[(($9)>>2)])|0);
 $47=(($46+((($45)*(12))&-1))|0);
 $48=$47;
 $ld$8$0=(($vB)|0);
 $49$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vB+4)|0);
 $49$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($48)|0);
 HEAP32[(($st$10$0)>>2)]=$49$0;
 $st$11$1=(($48+4)|0);
 HEAP32[(($st$11$1)>>2)]=$49$1;
 $50=((HEAP32[(($7)>>2)])|0);
 $51=((HEAP32[(($9)>>2)])|0);
 $52=(($51+((($50)*(12))&-1)+8)|0);
 HEAPF32[(($52)>>2)]=$44;
 STACKTOP=sp;return;
}


function __ZN12b2MouseJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var label=0;

 return ((1)|0);
}


function __ZNK12b2MouseJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this+76)|0);
 $2=$1;
 $3=$agg_result;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function __ZNK12b2MouseJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+68)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK12b2MouseJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,label=0;

 $1=(($this+96)|0);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$1);
 return;
}


function __ZNK12b2MouseJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=.0,label=0;

 $1=($inv_dt)*((0.0));
 return (+($1));
}


function __ZN12b2MouseJoint4DumpEv($this){
 $this=($this)|0;
 var label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 __Z5b2LogPKcz(1752,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN12b2MouseJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN12b2MouseJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN19b2PrismaticJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($this,$bA,$bB,$anchor,$axis){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 $anchor=($anchor)|0;
 $axis=($axis)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast6=0,$3=0,$tmpcast7=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0;
 var $ld$4$0=0,$13$0=0,$ld$5$1=0,$13$1=0,$st$6$0=0,$st$7$1=0,$14=0,$15=0,$16=0,$ld$8$0=0,$17$0=0,$ld$9$1=0,$17$1=0,$st$10$0=0,$st$11$1=0,$18=0,$19=.0,$20=0,$21=.0,$22=.0;
 var $23=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast6=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast7=$3;
 $4=(($this+8)|0);
 HEAP32[(($4)>>2)]=$bA;
 $5=(($this+12)|0);
 HEAP32[(($5)>>2)]=$bB;
 $6=(($this+20)|0);
 $7=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$7,$anchor);
 $8=$6;
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($this+28)|0);
 $11=((HEAP32[(($5)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast6,$11,$anchor);
 $12=$10;
 $ld$4$0=(($2)|0);
 $13$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $13$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($12)|0);
 HEAP32[(($st$6$0)>>2)]=$13$0;
 $st$7$1=(($12+4)|0);
 HEAP32[(($st$7$1)>>2)]=$13$1;
 $14=(($this+36)|0);
 $15=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body14GetLocalVectorERK6b2Vec2($tmpcast7,$15,$axis);
 $16=$14;
 $ld$8$0=(($3)|0);
 $17$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($3+4)|0);
 $17$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($16)|0);
 HEAP32[(($st$10$0)>>2)]=$17$0;
 $st$11$1=(($16+4)|0);
 HEAP32[(($st$11$1)>>2)]=$17$1;
 $18=((HEAP32[(($5)>>2)])|0);
 $19=(+(__ZNK6b2Body8GetAngleEv($18)));
 $20=((HEAP32[(($4)>>2)])|0);
 $21=(+(__ZNK6b2Body8GetAngleEv($20)));
 $22=($19)-($21);
 $23=(($this+44)|0);
 HEAPF32[(($23)>>2)]=$22;
 STACKTOP=sp;return;
}


function __ZNK6b2Body14GetLocalVectorERK6b2Vec2($agg_result,$this,$worldVector){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $worldVector=($worldVector)|0;
 var $1=0,label=0;

 $1=(($this+20)|0);
 __Z6b2MulTRK5b2RotRK6b2Vec2($agg_result,$1,$worldVector);
 return;
}


function __ZNK6b2Body8GetAngleEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+56)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$ld$0$0=0,$15$0=0,$ld$1$1=0,$15$1=0,$st$2$0=0;
 var $st$3$1=0,$16=0,$17=0,$18=0,$ld$4$0=0,$19$0=0,$ld$5$1=0,$19$1=0,$st$6$0=0,$st$7$1=0,$20=0,$21=0,$22=0,$ld$8$0=0,$23$0=0,$ld$9$1=0,$23$1=0,$st$10$0=0,$st$11$1=0,$24=.0;
 var $25=0,$ld$12$0=0,$26$0=0,$ld$13$1=0,$26$1=0,$st$14$0=0,$st$15$1=0,$27=0,$28=.0,$29=0,$30=0,$31=0,$32=0,$33=.0,$34=0,$35=0,$36=.0,$37=0,$38=0,$39=.0;
 var $40=0,$41=0,$42=.0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=(($this)|0);
 $3=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($2,$3);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=13792;
 $5=(($this+68)|0);
 $6=(($this+76)|0);
 $7=(($this+84)|0);
 $8=(($this+92)|0);
 $9=(($this+104)|0);
 $10=(($this+184)|0);
 $11=(($this+192)|0);
 $12=(($def+20)|0);
 $13=$12;
 $14=$5;
 $ld$0$0=(($13)|0);
 $15$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $15$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($14)|0);
 HEAP32[(($st$2$0)>>2)]=$15$0;
 $st$3$1=(($14+4)|0);
 HEAP32[(($st$3$1)>>2)]=$15$1;
 $16=(($def+28)|0);
 $17=$16;
 $18=$6;
 $ld$4$0=(($17)|0);
 $19$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($17+4)|0);
 $19$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($18)|0);
 HEAP32[(($st$6$0)>>2)]=$19$0;
 $st$7$1=(($18+4)|0);
 HEAP32[(($st$7$1)>>2)]=$19$1;
 $20=(($def+36)|0);
 $21=$20;
 $22=$7;
 $ld$8$0=(($21)|0);
 $23$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($21+4)|0);
 $23$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($22)|0);
 HEAP32[(($st$10$0)>>2)]=$23$0;
 $st$11$1=(($22+4)|0);
 HEAP32[(($st$11$1)>>2)]=$23$1;
 $24=(+(__ZN6b2Vec29NormalizeEv($7)));
 __Z7b2CrossfRK6b2Vec2($tmpcast,1.0,$7);
 $25=$8;
 $ld$12$0=(($1)|0);
 $26$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($1+4)|0);
 $26$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($25)|0);
 HEAP32[(($st$14$0)>>2)]=$26$0;
 $st$15$1=(($25+4)|0);
 HEAP32[(($st$15$1)>>2)]=$26$1;
 $27=(($def+44)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=(($this+100)|0);
 HEAPF32[(($29)>>2)]=$28;
 __ZN6b2Vec37SetZeroEv($9);
 $30=(($this+252)|0);
 HEAPF32[(($30)>>2)]=0.0;
 $31=(($this+116)|0);
 HEAPF32[(($31)>>2)]=0.0;
 $32=(($def+52)|0);
 $33=(+(HEAPF32[(($32)>>2)]));
 $34=(($this+120)|0);
 HEAPF32[(($34)>>2)]=$33;
 $35=(($def+56)|0);
 $36=(+(HEAPF32[(($35)>>2)]));
 $37=(($this+124)|0);
 HEAPF32[(($37)>>2)]=$36;
 $38=(($def+64)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=(($this+128)|0);
 HEAPF32[(($40)>>2)]=$39;
 $41=(($def+68)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+132)|0);
 HEAPF32[(($43)>>2)]=$42;
 $44=(($def+48)|0);
 $45=((HEAP8[($44)])|0);
 $46=(($this+136)|0);
 HEAP8[($46)]=$45;
 $47=(($def+60)|0);
 $48=((HEAP8[($47)])|0);
 $49=(($this+137)|0);
 HEAP8[($49)]=$48;
 $50=(($this+140)|0);
 HEAP32[(($50)>>2)]=0;
 __ZN6b2Vec27SetZeroEv($10);
 __ZN6b2Vec27SetZeroEv($11);
 STACKTOP=sp;return;
}


function __ZN6b2Vec37SetZeroEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=0.0;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=0.0;
 $3=(($this+8)|0);
 HEAPF32[(($3)>>2)]=0.0;
 return;
}


function __ZN16b2PrismaticJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$vA=0,$tmpcast43=0,$cB=0,$tmpcast44=0,$vB=0,$tmpcast45=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$d=0,$3=0,$4=0,$5=0,$tmpcast46=0,$6=0;
 var $7=0,$tmpcast47=0,$8=0,$P=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0;
 var $25=0,$26=0,$27=0,$ld$0$0=0,$28$0=0,$ld$1$1=0,$28$1=0,$st$2$0=0,$st$3$1=0,$29=0,$30=0,$31=0,$32=0,$33=0,$ld$4$0=0,$34$0=0,$ld$5$1=0,$34$1=0,$st$6$0=0,$st$7$1=0;
 var $35=0,$36=0,$37=.0,$38=0,$39=0,$40=0,$41=.0,$42=0,$43=0,$44=0,$45=.0,$46=0,$47=0,$48=0,$49=.0,$50=0,$51=0,$52=0,$53=0,$54=0;
 var $55=0,$ld$8$0=0,$56$0=0,$ld$9$1=0,$56$1=0,$st$10$0=0,$st$11$1=0,$57=0,$58=0,$59=0,$60=.0,$61=0,$62=0,$63=0,$64=0,$ld$12$0=0,$65$0=0,$ld$13$1=0,$65$1=0,$st$14$0=0;
 var $st$15$1=0,$66=0,$67=0,$68=0,$69=.0,$70=0,$71=0,$72=0,$73=0,$ld$16$0=0,$74$0=0,$ld$17$1=0,$74$1=0,$st$18$0=0,$st$19$1=0,$75=0,$76=0,$77=0,$78=.0,$79=0;
 var $80=0,$81=0,$ld$20$0=0,$82$0=0,$ld$21$1=0,$82$1=0,$st$22$0=0,$st$23$1=0,$83=0,$84=0,$85=0,$86=.0,$87=0,$88=0,$89=.0,$90=.0,$91=.0,$92=.0,$93=0,$94=0;
 var $95=0,$ld$24$0=0,$96$0=0,$ld$25$1=0,$96$1=0,$st$26$0=0,$st$27$1=0,$97=.0,$98=0,$99=.0,$100=0,$101=.0,$102=.0,$103=.0,$104=.0,$105=.0,$106=.0,$107=.0,$108=.0,$109=0;
 var $110=0,$112=.0,$storemerge=.0,$114=0,$115=0,$116=0,$ld$28$0=0,$117$0=0,$ld$29$1=0,$117$1=0,$st$30$0=0,$st$31$1=0,$118=.0,$119=0,$120=.0,$121=0,$122=.0,$123=.0,$124=.0,$125=.0;
 var $126=.0,$127=.0,$128=.0,$129=.0,$130=.0,$131=.0,$132=.0,$133=.0,$134=.0,$135=.0,$136=0,$k22_0=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=.0,$143=.0,$144=0;
 var $145=0,$146=0,$147=0,$148=0,$149=0,$151=.0,$152=0,$153=.0,$154=0,$155=.0,$156=.0,$157=.0,$158=0,$160=0,$162=0,$164=0,$165=0,$166=0,$168=0,$170=0;
 var $171=0,$173=0,$174=0,$176=0,$178=0,$180=0,$181=0,$183=0,$184=0,$185=0,$187=0,$189=0,$190=0,$191=0,$192=0,$194=0,$195=.0,$196=.0,$197=0,$198=.0;
 var $199=.0,$200=0,$201=.0,$202=.0,$203=0,$204=.0,$205=.0,$206=.0,$207=.0,$208=.0,$209=0,$210=.0,$211=.0,$212=.0,$213=.0,$214=.0,$215=.0,$216=.0,$217=.0,$218=.0;
 var $219=.0,$220=.0,$221=.0,$222=.0,$223=.0,$224=.0,$225=.0,$226=.0,$227=.0,$229=0,$wB_0=.0,$wA_0=.0,$231=0,$232=0,$233=0,$234=0,$ld$32$0=0,$235$0=0,$ld$33$1=0,$235$1=0;
 var $st$34$0=0,$st$35$1=0,$236=0,$237=0,$238=0,$239=0,$240=0,$241=0,$242=0,$ld$36$0=0,$243$0=0,$ld$37$1=0,$243$1=0,$st$38$0=0,$st$39$1=0,$244=0,$245=0,$246=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast43=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast44=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast45=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast46=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast47=$7;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=(($this+48)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($14+8)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($this+144)|0);
 HEAP32[(($17)>>2)]=$16;
 $18=(($this+52)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($19+8)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=(($this+148)|0);
 HEAP32[(($22)>>2)]=$21;
 $23=(($this+152)|0);
 $24=((HEAP32[(($13)>>2)])|0);
 $25=(($24+28)|0);
 $26=$25;
 $27=$23;
 $ld$0$0=(($26)|0);
 $28$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($26+4)|0);
 $28$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($27)|0);
 HEAP32[(($st$2$0)>>2)]=$28$0;
 $st$3$1=(($27+4)|0);
 HEAP32[(($st$3$1)>>2)]=$28$1;
 $29=(($this+160)|0);
 $30=((HEAP32[(($18)>>2)])|0);
 $31=(($30+28)|0);
 $32=$31;
 $33=$29;
 $ld$4$0=(($32)|0);
 $34$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($32+4)|0);
 $34$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($33)|0);
 HEAP32[(($st$6$0)>>2)]=$34$0;
 $st$7$1=(($33+4)|0);
 HEAP32[(($st$7$1)>>2)]=$34$1;
 $35=((HEAP32[(($13)>>2)])|0);
 $36=(($35+120)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=(($this+168)|0);
 HEAPF32[(($38)>>2)]=$37;
 $39=((HEAP32[(($18)>>2)])|0);
 $40=(($39+120)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=(($this+172)|0);
 HEAPF32[(($42)>>2)]=$41;
 $43=((HEAP32[(($13)>>2)])|0);
 $44=(($43+128)|0);
 $45=(+(HEAPF32[(($44)>>2)]));
 $46=(($this+176)|0);
 HEAPF32[(($46)>>2)]=$45;
 $47=((HEAP32[(($18)>>2)])|0);
 $48=(($47+128)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=(($this+180)|0);
 HEAPF32[(($50)>>2)]=$49;
 $51=((HEAP32[(($17)>>2)])|0);
 $52=(($data+24)|0);
 $53=((HEAP32[(($52)>>2)])|0);
 $54=(($53+((($51)*(12))&-1))|0);
 $55=$54;
 $ld$8$0=(($55)|0);
 $56$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($55+4)|0);
 $56$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cA)|0);
 HEAP32[(($st$10$0)>>2)]=$56$0;
 $st$11$1=(($cA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$56$1;
 $57=((HEAP32[(($17)>>2)])|0);
 $58=((HEAP32[(($52)>>2)])|0);
 $59=(($58+((($57)*(12))&-1)+8)|0);
 $60=(+(HEAPF32[(($59)>>2)]));
 $61=(($data+28)|0);
 $62=((HEAP32[(($61)>>2)])|0);
 $63=(($62+((($57)*(12))&-1))|0);
 $64=$63;
 $ld$12$0=(($64)|0);
 $65$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($64+4)|0);
 $65$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vA)|0);
 HEAP32[(($st$14$0)>>2)]=$65$0;
 $st$15$1=(($vA+4)|0);
 HEAP32[(($st$15$1)>>2)]=$65$1;
 $66=((HEAP32[(($17)>>2)])|0);
 $67=((HEAP32[(($61)>>2)])|0);
 $68=(($67+((($66)*(12))&-1)+8)|0);
 $69=(+(HEAPF32[(($68)>>2)]));
 $70=((HEAP32[(($22)>>2)])|0);
 $71=((HEAP32[(($52)>>2)])|0);
 $72=(($71+((($70)*(12))&-1))|0);
 $73=$72;
 $ld$16$0=(($73)|0);
 $74$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($73+4)|0);
 $74$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($cB)|0);
 HEAP32[(($st$18$0)>>2)]=$74$0;
 $st$19$1=(($cB+4)|0);
 HEAP32[(($st$19$1)>>2)]=$74$1;
 $75=((HEAP32[(($22)>>2)])|0);
 $76=((HEAP32[(($52)>>2)])|0);
 $77=(($76+((($75)*(12))&-1)+8)|0);
 $78=(+(HEAPF32[(($77)>>2)]));
 $79=((HEAP32[(($61)>>2)])|0);
 $80=(($79+((($75)*(12))&-1))|0);
 $81=$80;
 $ld$20$0=(($81)|0);
 $82$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($81+4)|0);
 $82$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$82$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$82$1;
 $83=((HEAP32[(($22)>>2)])|0);
 $84=((HEAP32[(($61)>>2)])|0);
 $85=(($84+((($83)*(12))&-1)+8)|0);
 $86=(+(HEAPF32[(($85)>>2)]));
 __ZN5b2RotC1Ef($qA,$60);
 __ZN5b2RotC1Ef($qB,$78);
 $87=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($1,$87,$23);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $88=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($2,$88,$29);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZmiRK6b2Vec2S1_($4,$tmpcast44,$tmpcast);
 __ZplRK6b2Vec2S1_($3,$4,$rB);
 __ZmiRK6b2Vec2S1_($d,$3,$rA);
 $89=(+(HEAPF32[(($38)>>2)]));
 $90=(+(HEAPF32[(($42)>>2)]));
 $91=(+(HEAPF32[(($46)>>2)]));
 $92=(+(HEAPF32[(($50)>>2)]));
 $93=(($this+184)|0);
 $94=(($this+84)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast46,$qA,$94);
 $95=$93;
 $ld$24$0=(($5)|0);
 $96$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($5+4)|0);
 $96$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($95)|0);
 HEAP32[(($st$26$0)>>2)]=$96$0;
 $st$27$1=(($95+4)|0);
 HEAP32[(($st$27$1)>>2)]=$96$1;
 __ZplRK6b2Vec2S1_($6,$d,$rA);
 $97=(+(__Z7b2CrossRK6b2Vec2S1_($6,$93)));
 $98=(($this+208)|0);
 HEAPF32[(($98)>>2)]=$97;
 $99=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$93)));
 $100=(($this+212)|0);
 HEAPF32[(($100)>>2)]=$99;
 $101=($89)+($90);
 $102=(+(HEAPF32[(($98)>>2)]));
 $103=($91)*($102);
 $104=($102)*($103);
 $105=($101)+($104);
 $106=($92)*($99);
 $107=($99)*($106);
 $108=($107)+($105);
 $109=(($this+252)|0);
 $110=$108>(0.0);
 if ($110) {
  $112=((1.0))/($108);
  $storemerge=$112;
 } else {
  $storemerge=$108;
 }

 HEAPF32[(($109)>>2)]=$storemerge;
 $114=(($this+192)|0);
 $115=(($this+92)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast47,$qA,$115);
 $116=$114;
 $ld$28$0=(($7)|0);
 $117$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($7+4)|0);
 $117$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($116)|0);
 HEAP32[(($st$30$0)>>2)]=$117$0;
 $st$31$1=(($116+4)|0);
 HEAP32[(($st$31$1)>>2)]=$117$1;
 __ZplRK6b2Vec2S1_($8,$d,$rA);
 $118=(+(__Z7b2CrossRK6b2Vec2S1_($8,$114)));
 $119=(($this+200)|0);
 HEAPF32[(($119)>>2)]=$118;
 $120=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$114)));
 $121=(($this+204)|0);
 HEAPF32[(($121)>>2)]=$120;
 $122=(+(HEAPF32[(($119)>>2)]));
 $123=($91)*($122);
 $124=($122)*($123);
 $125=($101)+($124);
 $126=($92)*($120);
 $127=($120)*($126);
 $128=($127)+($125);
 $129=($126)+($123);
 $130=(+(HEAPF32[(($98)>>2)]));
 $131=($123)*($130);
 $132=(+(HEAPF32[(($100)>>2)]));
 $133=($126)*($132);
 $134=($131)+($133);
 $135=($91)+($92);
 $136=$135==(0.0);
 $k22_0=($136?(1.0):$135);
 $137=($91)*($130);
 $138=($92)*($132);
 $139=($137)+($138);
 $140=($130)*($137);
 $141=($101)+($140);
 $142=($132)*($138);
 $143=($141)+($142);
 $144=(($this+216)|0);
 __ZN6b2Vec33SetEfff($144,$128,$129,$134);
 $145=(($this+228)|0);
 __ZN6b2Vec33SetEfff($145,$129,$k22_0,$139);
 $146=(($this+240)|0);
 __ZN6b2Vec33SetEfff($146,$134,$139,$143);
 $147=(($this+136)|0);
 $148=((HEAP8[($147)])|0);
 $149=(($148<<24)>>24)==0;
 do {
  if ($149) {
   $180=(($this+140)|0);
   HEAP32[(($180)>>2)]=0;
   $181=(($this+112)|0);
   HEAPF32[(($181)>>2)]=0.0;
  } else {
   $151=(+(__Z5b2DotRK6b2Vec2S1_($93,$d)));
   $152=(($this+124)|0);
   $153=(+(HEAPF32[(($152)>>2)]));
   $154=(($this+120)|0);
   $155=(+(HEAPF32[(($154)>>2)]));
   $156=($153)-($155);
   $157=(+(__Z5b2AbsIfET_S0_($156)));
   $158=$157<(0.009999999776482582);
   if ($158) {
    $160=(($this+140)|0);
    HEAP32[(($160)>>2)]=3;
    break;
   }
   $162=$151>$155;
   if (!($162)) {
    $164=(($this+140)|0);
    $165=((HEAP32[(($164)>>2)])|0);
    $166=($165|0)==1;
    if ($166) {
     break;
    }
    HEAP32[(($164)>>2)]=1;
    $168=(($this+112)|0);
    HEAPF32[(($168)>>2)]=0.0;
    break;
   }
   $170=$151<$153;
   $171=(($this+140)|0);
   if ($170) {
    HEAP32[(($171)>>2)]=0;
    $178=(($this+112)|0);
    HEAPF32[(($178)>>2)]=0.0;
    break;
   }
   $173=((HEAP32[(($171)>>2)])|0);
   $174=($173|0)==2;
   if ($174) {
    break;
   }
   HEAP32[(($171)>>2)]=2;
   $176=(($this+112)|0);
   HEAPF32[(($176)>>2)]=0.0;
  }
 } while(0);
 $183=(($this+137)|0);
 $184=((HEAP8[($183)])|0);
 $185=(($184<<24)>>24)==0;
 if ($185) {
  $187=(($this+116)|0);
  HEAPF32[(($187)>>2)]=0.0;
 }
 $189=(($data+20)|0);
 $190=((HEAP8[($189)])|0);
 $191=(($190<<24)>>24)==0;
 $192=(($this+104)|0);
 if ($191) {
  __ZN6b2Vec37SetZeroEv($192);
  $229=(($this+116)|0);
  HEAPF32[(($229)>>2)]=0.0;
  $wA_0=$69;$wB_0=$86;


  $231=((HEAP32[(($17)>>2)])|0);
  $232=((HEAP32[(($61)>>2)])|0);
  $233=(($232+((($231)*(12))&-1))|0);
  $234=$233;
  $ld$32$0=(($vA)|0);
  $235$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($vA+4)|0);
  $235$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($234)|0);
  HEAP32[(($st$34$0)>>2)]=$235$0;
  $st$35$1=(($234+4)|0);
  HEAP32[(($st$35$1)>>2)]=$235$1;
  $236=((HEAP32[(($17)>>2)])|0);
  $237=((HEAP32[(($61)>>2)])|0);
  $238=(($237+((($236)*(12))&-1)+8)|0);
  HEAPF32[(($238)>>2)]=$wA_0;
  $239=((HEAP32[(($22)>>2)])|0);
  $240=((HEAP32[(($61)>>2)])|0);
  $241=(($240+((($239)*(12))&-1))|0);
  $242=$241;
  $ld$36$0=(($vB)|0);
  $243$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vB+4)|0);
  $243$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($242)|0);
  HEAP32[(($st$38$0)>>2)]=$243$0;
  $st$39$1=(($242+4)|0);
  HEAP32[(($st$39$1)>>2)]=$243$1;
  $244=((HEAP32[(($22)>>2)])|0);
  $245=((HEAP32[(($61)>>2)])|0);
  $246=(($245+((($244)*(12))&-1)+8)|0);
  HEAPF32[(($246)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $194=(($data+8)|0);
  $195=(+(HEAPF32[(($194)>>2)]));
  __ZN6b2Vec3mLEf($192,$195);
  $196=(+(HEAPF32[(($194)>>2)]));
  $197=(($this+116)|0);
  $198=(+(HEAPF32[(($197)>>2)]));
  $199=($196)*($198);
  HEAPF32[(($197)>>2)]=$199;
  $200=(($192)|0);
  $201=(+(HEAPF32[(($200)>>2)]));
  __ZmlfRK6b2Vec2($9,$201,$114);
  $202=(+(HEAPF32[(($197)>>2)]));
  $203=(($this+112)|0);
  $204=(+(HEAPF32[(($203)>>2)]));
  $205=($202)+($204);
  __ZmlfRK6b2Vec2($10,$205,$93);
  __ZplRK6b2Vec2S1_($P,$9,$10);
  $206=(+(HEAPF32[(($200)>>2)]));
  $207=(+(HEAPF32[(($119)>>2)]));
  $208=($206)*($207);
  $209=(($this+108)|0);
  $210=(+(HEAPF32[(($209)>>2)]));
  $211=($208)+($210);
  $212=(+(HEAPF32[(($197)>>2)]));
  $213=(+(HEAPF32[(($203)>>2)]));
  $214=($212)+($213);
  $215=(+(HEAPF32[(($98)>>2)]));
  $216=($214)*($215);
  $217=($211)+($216);
  $218=(+(HEAPF32[(($121)>>2)]));
  $219=($206)*($218);
  $220=($210)+($219);
  $221=(+(HEAPF32[(($100)>>2)]));
  $222=($214)*($221);
  $223=($220)+($222);
  __ZmlfRK6b2Vec2($11,$89,$P);
  __ZN6b2Vec2mIERKS_($tmpcast43,$11);
  $224=($91)*($217);
  $225=($69)-($224);
  __ZmlfRK6b2Vec2($12,$90,$P);
  __ZN6b2Vec2pLERKS_($tmpcast45,$12);
  $226=($92)*($223);
  $227=($86)+($226);
  $wA_0=$225;$wB_0=$227;


  $231=((HEAP32[(($17)>>2)])|0);
  $232=((HEAP32[(($61)>>2)])|0);
  $233=(($232+((($231)*(12))&-1))|0);
  $234=$233;
  $ld$32$0=(($vA)|0);
  $235$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($vA+4)|0);
  $235$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($234)|0);
  HEAP32[(($st$34$0)>>2)]=$235$0;
  $st$35$1=(($234+4)|0);
  HEAP32[(($st$35$1)>>2)]=$235$1;
  $236=((HEAP32[(($17)>>2)])|0);
  $237=((HEAP32[(($61)>>2)])|0);
  $238=(($237+((($236)*(12))&-1)+8)|0);
  HEAPF32[(($238)>>2)]=$wA_0;
  $239=((HEAP32[(($22)>>2)])|0);
  $240=((HEAP32[(($61)>>2)])|0);
  $241=(($240+((($239)*(12))&-1))|0);
  $242=$241;
  $ld$36$0=(($vB)|0);
  $243$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vB+4)|0);
  $243$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($242)|0);
  HEAP32[(($st$38$0)>>2)]=$243$0;
  $st$39$1=(($242+4)|0);
  HEAP32[(($st$39$1)>>2)]=$243$1;
  $244=((HEAP32[(($22)>>2)])|0);
  $245=((HEAP32[(($61)>>2)])|0);
  $246=(($245+((($244)*(12))&-1)+8)|0);
  HEAPF32[(($246)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN6b2Vec33SetEfff($this,$x_,$y_,$z_){
 $this=($this)|0;
 $x_=+($x_);
 $y_=+($y_);
 $z_=+($z_);
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=$x_;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=$y_;
 $3=(($this+8)|0);
 HEAPF32[(($3)>>2)]=$z_;
 return;
}


function __ZN6b2Vec3mLEf($this,$s){
 $this=($this)|0;
 $s=+($s);
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,$7=0,$8=.0,$9=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($s);
 HEAPF32[(($1)>>2)]=$3;
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($s);
 HEAPF32[(($4)>>2)]=$6;
 $7=(($this+8)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($8)*($s);
 HEAPF32[(($7)>>2)]=$9;
 return;
}


function __ZN16b2PrismaticJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast40=0,$1=0,$P=0,$2=0,$3=0,$Cdot1=0,$4=0,$5=0,$Cdot3=0,$f1=0,$df=0,$6=0,$b=0,$7=0,$8=0,$9=0,$f2r=0;
 var $10=0,$11=0,$12=0,$P4=0,$13=0,$14=0,$15=0,$16=0,$df7=0,$17=0,$P8=0,$18=0,$19=0,$20=0,$test=0,$21=0,$22=0,$23=0,$24=0,$25=0;
 var $26=0,$ld$0$0=0,$27$0=0,$ld$1$1=0,$27$1=0,$st$2$0=0,$st$3$1=0,$28=0,$29=0,$30=0,$31=.0,$32=0,$33=0,$34=0,$35=0,$ld$4$0=0,$36$0=0,$ld$5$1=0,$36$1=0,$st$6$0=0;
 var $st$7$1=0,$37=0,$38=0,$39=0,$40=.0,$41=0,$42=.0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$48=.0,$49=0,$50=0,$51=0,$53=0,$54=0,$55=0,$57=0;
 var $58=.0,$59=0,$60=.0,$61=.0,$62=.0,$63=0,$64=.0,$65=.0,$66=.0,$67=0,$68=.0,$69=0,$70=.0,$71=.0,$72=.0,$73=0,$74=.0,$75=0,$76=.0,$77=0;
 var $78=.0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0,$84=.0,$85=.0,$86=.0,$87=.0,$88=.0,$89=.0,$90=.0,$91=.0,$wB_0=.0,$wA_0=.0,$93=0,$94=.0,$95=0,$96=.0;
 var $97=.0,$98=.0,$99=0,$100=.0,$101=.0,$102=.0,$103=0,$104=.0,$105=0,$106=0,$107=0,$108=0,$110=0,$111=0,$112=0,$114=0,$115=.0,$116=0,$117=.0,$118=.0;
 var $119=.0,$120=0,$121=.0,$122=.0,$123=.0,$124=.0,$125=.0,$126=0,$127=0,$128=0,$129=0,$130=0,$132=0,$133=.0,$134=.0,$136=0,$137=.0,$138=.0,$140=0,$141=.0;
 var $142=0,$143=.0,$144=.0,$145=0,$146=.0,$147=0,$148=.0,$149=0,$150=.0,$151=0,$152=.0,$153=0,$154=.0,$155=0,$156=0,$157=.0,$158=0,$159=0,$160=0,$161=0;
 var $162=.0,$163=0,$164=.0,$165=.0,$166=.0,$167=.0,$168=0,$169=.0,$170=.0,$171=.0,$172=.0,$173=.0,$174=.0,$175=.0,$176=.0,$177=.0,$178=.0,$179=.0,$180=.0,$181=.0;
 var $182=.0,$183=.0,$184=.0,$186=0,$187=0,$188=.0,$189=0,$190=.0,$191=.0,$192=0,$193=.0,$194=0,$195=.0,$196=.0,$197=.0,$198=.0,$199=.0,$200=.0,$201=.0,$202=.0;
 var $203=.0,$204=.0,$205=.0,$206=.0,$207=.0,$208=.0,$209=.0,$210=.0,$211=.0,$212=.0,$213=.0,$214=.0,$215=.0,$216=.0,$217=.0,$218=.0,$219=.0,$220=0,$222=.0,$223=0;
 var $225=.0,$226=.0,$wB_1=.0,$wA_1=.0,$228=0,$229=0,$230=0,$231=0,$ld$8$0=0,$232$0=0,$ld$9$1=0,$232$1=0,$st$10$0=0,$st$11$1=0,$233=0,$234=0,$235=0,$236=0,$237=0,$238=0;
 var $239=0,$ld$12$0=0,$240$0=0,$ld$13$1=0,$240$1=0,$st$14$0=0,$st$15$1=0,$241=0,$242=0,$243=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast40=$vB;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $Cdot1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $Cdot3=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $f1=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $df=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $6=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $b=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $f2r=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $P4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $16=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $df7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $17=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $19=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $20=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $test=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $21=(($this+144)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=(($data+28)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=(($24+((($22)*(12))&-1))|0);
 $26=$25;
 $ld$0$0=(($26)|0);
 $27$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($26+4)|0);
 $27$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$27$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$27$1;
 $28=((HEAP32[(($21)>>2)])|0);
 $29=((HEAP32[(($23)>>2)])|0);
 $30=(($29+((($28)*(12))&-1)+8)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+148)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=(($29+((($33)*(12))&-1))|0);
 $35=$34;
 $ld$4$0=(($35)|0);
 $36$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($35+4)|0);
 $36$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$36$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$36$1;
 $37=((HEAP32[(($32)>>2)])|0);
 $38=((HEAP32[(($23)>>2)])|0);
 $39=(($38+((($37)*(12))&-1)+8)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=(($this+168)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+172)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=(($this+176)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=(($this+180)|0);
 $48=(+(HEAPF32[(($47)>>2)]));
 $49=(($this+137)|0);
 $50=((HEAP8[($49)])|0);
 $51=(($50<<24)>>24)==0;
 do {
  if ($51) {
   $wA_0=$31;$wB_0=$40;
  } else {
   $53=(($this+140)|0);
   $54=((HEAP32[(($53)>>2)])|0);
   $55=($54|0)==3;
   if ($55) {
    $wA_0=$31;$wB_0=$40;
    break;
   }
   $57=(($this+184)|0);
   __ZmiRK6b2Vec2S1_($1,$tmpcast40,$tmpcast);
   $58=(+(__Z5b2DotRK6b2Vec2S1_($57,$1)));
   $59=(($this+212)|0);
   $60=(+(HEAPF32[(($59)>>2)]));
   $61=($40)*($60);
   $62=($58)+($61);
   $63=(($this+208)|0);
   $64=(+(HEAPF32[(($63)>>2)]));
   $65=($31)*($64);
   $66=($62)-($65);
   $67=(($this+252)|0);
   $68=(+(HEAPF32[(($67)>>2)]));
   $69=(($this+132)|0);
   $70=(+(HEAPF32[(($69)>>2)]));
   $71=($70)-($66);
   $72=($68)*($71);
   $73=(($this+116)|0);
   $74=(+(HEAPF32[(($73)>>2)]));
   $75=(($data)|0);
   $76=(+(HEAPF32[(($75)>>2)]));
   $77=(($this+128)|0);
   $78=(+(HEAPF32[(($77)>>2)]));
   $79=($76)*($78);
   $80=($74)+($72);
   $81=((-.0))-($79);
   $82=(+(__Z7b2ClampIfET_S0_S0_S0_($80,$81,$79)));
   HEAPF32[(($73)>>2)]=$82;
   $83=($82)-($74);
   __ZmlfRK6b2Vec2($P,$83,$57);
   $84=(+(HEAPF32[(($63)>>2)]));
   $85=($83)*($84);
   $86=(+(HEAPF32[(($59)>>2)]));
   $87=($83)*($86);
   __ZmlfRK6b2Vec2($2,$42,$P);
   __ZN6b2Vec2mIERKS_($tmpcast,$2);
   $88=($46)*($85);
   $89=($31)-($88);
   __ZmlfRK6b2Vec2($3,$44,$P);
   __ZN6b2Vec2pLERKS_($tmpcast40,$3);
   $90=($48)*($87);
   $91=($40)+($90);
   $wA_0=$89;$wB_0=$91;
  }
 } while(0);


 $93=(($this+192)|0);
 __ZmiRK6b2Vec2S1_($4,$tmpcast40,$tmpcast);
 $94=(+(__Z5b2DotRK6b2Vec2S1_($93,$4)));
 $95=(($this+204)|0);
 $96=(+(HEAPF32[(($95)>>2)]));
 $97=($wB_0)*($96);
 $98=($94)+($97);
 $99=(($this+200)|0);
 $100=(+(HEAPF32[(($99)>>2)]));
 $101=($wA_0)*($100);
 $102=($98)-($101);
 $103=(($Cdot1)|0);
 HEAPF32[(($103)>>2)]=$102;
 $104=($wB_0)-($wA_0);
 $105=(($Cdot1+4)|0);
 HEAPF32[(($105)>>2)]=$104;
 $106=(($this+136)|0);
 $107=((HEAP8[($106)])|0);
 $108=(($107<<24)>>24)==0;
 do {
  if (!($108)) {
   $110=(($this+140)|0);
   $111=((HEAP32[(($110)>>2)])|0);
   $112=($111|0)==0;
   if ($112) {
    break;
   }
   $114=(($this+184)|0);
   __ZmiRK6b2Vec2S1_($5,$tmpcast40,$tmpcast);
   $115=(+(__Z5b2DotRK6b2Vec2S1_($114,$5)));
   $116=(($this+212)|0);
   $117=(+(HEAPF32[(($116)>>2)]));
   $118=($wB_0)*($117);
   $119=($115)+($118);
   $120=(($this+208)|0);
   $121=(+(HEAPF32[(($120)>>2)]));
   $122=($wA_0)*($121);
   $123=($119)-($122);
   $124=(+(HEAPF32[(($103)>>2)]));
   $125=(+(HEAPF32[(($105)>>2)]));
   __ZN6b2Vec3C1Efff($Cdot3,$124,$125,$123);
   $126=(($this+104)|0);
   $127=$f1;
   $128=$126;
   HEAP32[(($127)>>2)]=((HEAP32[(($128)>>2)])|0);HEAP32[((($127)+(4))>>2)]=((HEAP32[((($128)+(4))>>2)])|0);HEAP32[((($127)+(8))>>2)]=((HEAP32[((($128)+(8))>>2)])|0);
   $129=(($this+216)|0);
   __ZNK6b2Vec3ngEv($6,$Cdot3);
   __ZNK7b2Mat337Solve33ERK6b2Vec3($df,$129,$6);
   __ZN6b2Vec3pLERKS_($126,$df);
   $130=((HEAP32[(($110)>>2)])|0);
   if (((($130|0))|0)==((2)|0)) {
    $136=(($this+112)|0);
    $137=(+(HEAPF32[(($136)>>2)]));
    $138=(+(__Z5b2MinIfET_S0_S0_($137,0.0)));
    HEAPF32[(($136)>>2)]=$138;
   } else if (((($130|0))|0)==((1)|0)) {
    $132=(($this+112)|0);
    $133=(+(HEAPF32[(($132)>>2)]));
    $134=(+(__Z5b2MaxIfET_S0_S0_($133,0.0)));
    HEAPF32[(($132)>>2)]=$134;
   }
   __ZNK6b2Vec2ngEv($7,$Cdot1);
   $140=(($this+112)|0);
   $141=(+(HEAPF32[(($140)>>2)]));
   $142=(($f1+8)|0);
   $143=(+(HEAPF32[(($142)>>2)]));
   $144=($141)-($143);
   $145=(($this+240)|0);
   $146=(+(HEAPF32[(($145)>>2)]));
   $147=(($this+244)|0);
   $148=(+(HEAPF32[(($147)>>2)]));
   __ZN6b2Vec2C1Eff($9,$146,$148);
   __ZmlfRK6b2Vec2($8,$144,$9);
   __ZmiRK6b2Vec2S1_($b,$7,$8);
   __ZNK7b2Mat337Solve22ERK6b2Vec2($10,$129,$b);
   $149=(($f1)|0);
   $150=(+(HEAPF32[(($149)>>2)]));
   $151=(($f1+4)|0);
   $152=(+(HEAPF32[(($151)>>2)]));
   __ZN6b2Vec2C1Eff($11,$150,$152);
   __ZplRK6b2Vec2S1_($f2r,$10,$11);
   $153=(($f2r)|0);
   $154=(+(HEAPF32[(($153)>>2)]));
   $155=(($126)|0);
   HEAPF32[(($155)>>2)]=$154;
   $156=(($f2r+4)|0);
   $157=(+(HEAPF32[(($156)>>2)]));
   $158=(($this+108)|0);
   HEAPF32[(($158)>>2)]=$157;
   __ZmiRK6b2Vec3S1_($12,$126,$f1);
   $159=$df;
   $160=$12;
   HEAP32[(($159)>>2)]=((HEAP32[(($160)>>2)])|0);HEAP32[((($159)+(4))>>2)]=((HEAP32[((($160)+(4))>>2)])|0);HEAP32[((($159)+(8))>>2)]=((HEAP32[((($160)+(8))>>2)])|0);
   $161=(($df)|0);
   $162=(+(HEAPF32[(($161)>>2)]));
   __ZmlfRK6b2Vec2($13,$162,$93);
   $163=(($df+8)|0);
   $164=(+(HEAPF32[(($163)>>2)]));
   __ZmlfRK6b2Vec2($14,$164,$114);
   __ZplRK6b2Vec2S1_($P4,$13,$14);
   $165=(+(HEAPF32[(($161)>>2)]));
   $166=(+(HEAPF32[(($99)>>2)]));
   $167=($165)*($166);
   $168=(($df+4)|0);
   $169=(+(HEAPF32[(($168)>>2)]));
   $170=($167)+($169);
   $171=(+(HEAPF32[(($163)>>2)]));
   $172=(+(HEAPF32[(($120)>>2)]));
   $173=($171)*($172);
   $174=($170)+($173);
   $175=(+(HEAPF32[(($95)>>2)]));
   $176=($165)*($175);
   $177=($169)+($176);
   $178=(+(HEAPF32[(($116)>>2)]));
   $179=($171)*($178);
   $180=($177)+($179);
   __ZmlfRK6b2Vec2($15,$42,$P4);
   __ZN6b2Vec2mIERKS_($tmpcast,$15);
   $181=($46)*($174);
   $182=($wA_0)-($181);
   __ZmlfRK6b2Vec2($16,$44,$P4);
   __ZN6b2Vec2pLERKS_($tmpcast40,$16);
   $183=($48)*($180);
   $184=($wB_0)+($183);
   $wA_1=$182;$wB_1=$184;


   $228=((HEAP32[(($21)>>2)])|0);
   $229=((HEAP32[(($23)>>2)])|0);
   $230=(($229+((($228)*(12))&-1))|0);
   $231=$230;
   $ld$8$0=(($vA)|0);
   $232$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($vA+4)|0);
   $232$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($231)|0);
   HEAP32[(($st$10$0)>>2)]=$232$0;
   $st$11$1=(($231+4)|0);
   HEAP32[(($st$11$1)>>2)]=$232$1;
   $233=((HEAP32[(($21)>>2)])|0);
   $234=((HEAP32[(($23)>>2)])|0);
   $235=(($234+((($233)*(12))&-1)+8)|0);
   HEAPF32[(($235)>>2)]=$wA_1;
   $236=((HEAP32[(($32)>>2)])|0);
   $237=((HEAP32[(($23)>>2)])|0);
   $238=(($237+((($236)*(12))&-1))|0);
   $239=$238;
   $ld$12$0=(($vB)|0);
   $240$0=((HEAP32[(($ld$12$0)>>2)])|0);
   $ld$13$1=(($vB+4)|0);
   $240$1=((HEAP32[(($ld$13$1)>>2)])|0);
   $st$14$0=(($239)|0);
   HEAP32[(($st$14$0)>>2)]=$240$0;
   $st$15$1=(($239+4)|0);
   HEAP32[(($st$15$1)>>2)]=$240$1;
   $241=((HEAP32[(($32)>>2)])|0);
   $242=((HEAP32[(($23)>>2)])|0);
   $243=(($242+((($241)*(12))&-1)+8)|0);
   HEAPF32[(($243)>>2)]=$wB_1;
   STACKTOP=sp;return;
  }
 } while(0);
 $186=(($this+216)|0);
 __ZNK6b2Vec2ngEv($17,$Cdot1);
 __ZNK7b2Mat337Solve22ERK6b2Vec2($df7,$186,$17);
 $187=(($df7)|0);
 $188=(+(HEAPF32[(($187)>>2)]));
 $189=(($this+104)|0);
 $190=(+(HEAPF32[(($189)>>2)]));
 $191=($188)+($190);
 HEAPF32[(($189)>>2)]=$191;
 $192=(($df7+4)|0);
 $193=(+(HEAPF32[(($192)>>2)]));
 $194=(($this+108)|0);
 $195=(+(HEAPF32[(($194)>>2)]));
 $196=($193)+($195);
 HEAPF32[(($194)>>2)]=$196;
 $197=(+(HEAPF32[(($187)>>2)]));
 __ZmlfRK6b2Vec2($P8,$197,$93);
 $198=(+(HEAPF32[(($187)>>2)]));
 $199=(+(HEAPF32[(($99)>>2)]));
 $200=($198)*($199);
 $201=(+(HEAPF32[(($192)>>2)]));
 $202=($200)+($201);
 $203=(+(HEAPF32[(($95)>>2)]));
 $204=($198)*($203);
 $205=($201)+($204);
 __ZmlfRK6b2Vec2($18,$42,$P8);
 __ZN6b2Vec2mIERKS_($tmpcast,$18);
 $206=($46)*($202);
 $207=($wA_0)-($206);
 __ZmlfRK6b2Vec2($19,$44,$P8);
 __ZN6b2Vec2pLERKS_($tmpcast40,$19);
 $208=($48)*($205);
 $209=($wB_0)+($208);
 __ZmiRK6b2Vec2S1_($20,$tmpcast40,$tmpcast);
 $210=(+(__Z5b2DotRK6b2Vec2S1_($93,$20)));
 $211=(+(HEAPF32[(($95)>>2)]));
 $212=($209)*($211);
 $213=($210)+($212);
 $214=(+(HEAPF32[(($99)>>2)]));
 $215=($207)*($214);
 $216=($213)-($215);
 HEAPF32[(($103)>>2)]=$216;
 $217=($209)-($207);
 HEAPF32[(($105)>>2)]=$217;
 $218=(+(HEAPF32[(($103)>>2)]));
 $219=(+(__Z5b2AbsIfET_S0_($218)));
 $220=$219>(0.009999999776482582);
 do {
  if (!($220)) {
   $222=(+(__Z5b2AbsIfET_S0_($217)));
   $223=$222>(0.009999999776482582);
   if ($223) {
    break;
   } else {
    $wA_1=$207;$wB_1=$209;
   }


   $228=((HEAP32[(($21)>>2)])|0);
   $229=((HEAP32[(($23)>>2)])|0);
   $230=(($229+((($228)*(12))&-1))|0);
   $231=$230;
   $ld$8$0=(($vA)|0);
   $232$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($vA+4)|0);
   $232$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($231)|0);
   HEAP32[(($st$10$0)>>2)]=$232$0;
   $st$11$1=(($231+4)|0);
   HEAP32[(($st$11$1)>>2)]=$232$1;
   $233=((HEAP32[(($21)>>2)])|0);
   $234=((HEAP32[(($23)>>2)])|0);
   $235=(($234+((($233)*(12))&-1)+8)|0);
   HEAPF32[(($235)>>2)]=$wA_1;
   $236=((HEAP32[(($32)>>2)])|0);
   $237=((HEAP32[(($23)>>2)])|0);
   $238=(($237+((($236)*(12))&-1))|0);
   $239=$238;
   $ld$12$0=(($vB)|0);
   $240$0=((HEAP32[(($ld$12$0)>>2)])|0);
   $ld$13$1=(($vB+4)|0);
   $240$1=((HEAP32[(($ld$13$1)>>2)])|0);
   $st$14$0=(($239)|0);
   HEAP32[(($st$14$0)>>2)]=$240$0;
   $st$15$1=(($239+4)|0);
   HEAP32[(($st$15$1)>>2)]=$240$1;
   $241=((HEAP32[(($32)>>2)])|0);
   $242=((HEAP32[(($23)>>2)])|0);
   $243=(($242+((($241)*(12))&-1)+8)|0);
   HEAPF32[(($243)>>2)]=$wB_1;
   STACKTOP=sp;return;
  }
 } while(0);
 __Z7b2Mul22RK7b2Mat33RK6b2Vec2($test,$186,$df7);
 $225=(+(HEAPF32[(($103)>>2)]));
 $226=($225)+((0.0));
 HEAPF32[(($103)>>2)]=$226;
 $wA_1=$207;$wB_1=$209;


 $228=((HEAP32[(($21)>>2)])|0);
 $229=((HEAP32[(($23)>>2)])|0);
 $230=(($229+((($228)*(12))&-1))|0);
 $231=$230;
 $ld$8$0=(($vA)|0);
 $232$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vA+4)|0);
 $232$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($231)|0);
 HEAP32[(($st$10$0)>>2)]=$232$0;
 $st$11$1=(($231+4)|0);
 HEAP32[(($st$11$1)>>2)]=$232$1;
 $233=((HEAP32[(($21)>>2)])|0);
 $234=((HEAP32[(($23)>>2)])|0);
 $235=(($234+((($233)*(12))&-1)+8)|0);
 HEAPF32[(($235)>>2)]=$wA_1;
 $236=((HEAP32[(($32)>>2)])|0);
 $237=((HEAP32[(($23)>>2)])|0);
 $238=(($237+((($236)*(12))&-1))|0);
 $239=$238;
 $ld$12$0=(($vB)|0);
 $240$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vB+4)|0);
 $240$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($239)|0);
 HEAP32[(($st$14$0)>>2)]=$240$0;
 $st$15$1=(($239+4)|0);
 HEAP32[(($st$15$1)>>2)]=$240$1;
 $241=((HEAP32[(($32)>>2)])|0);
 $242=((HEAP32[(($23)>>2)])|0);
 $243=(($242+((($241)*(12))&-1)+8)|0);
 HEAPF32[(($243)>>2)]=$wB_1;
 STACKTOP=sp;return;
}


function __ZNK6b2Vec3ngEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,$7=0,$8=.0,$9=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=((-.0))-($2);
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=((-.0))-($5);
 $7=(($this+8)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=((-.0))-($8);
 __ZN6b2Vec33SetEfff($agg_result,$3,$6,$9);
 return;
}


function __ZN6b2Vec3pLERKS_($this,$v){
 $this=($this)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=0,$12=.0,$13=0,$14=.0,$15=.0,label=0;

 $1=(($v)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)+($4);
 HEAPF32[(($3)>>2)]=$5;
 $6=(($v+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($this+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)+($9);
 HEAPF32[(($8)>>2)]=$10;
 $11=(($v+8)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=(($this+8)|0);
 $14=(+(HEAPF32[(($13)>>2)]));
 $15=($12)+($14);
 HEAPF32[(($13)>>2)]=$15;
 return;
}


function __ZmiRK6b2Vec3S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=0,$12=.0,$13=0,$14=.0,$15=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)-($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)-($9);
 $11=(($a+8)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=(($b+8)|0);
 $14=(+(HEAPF32[(($13)>>2)]));
 $15=($12)-($14);
 __ZN6b2Vec3C1Efff($agg_result,$5,$10,$15);
 return;
}


function __Z7b2Mul22RK7b2Mat33RK6b2Vec2($agg_result,$A,$v){
 $agg_result=($agg_result)|0;
 $A=($A)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=.0,label=0;

 $1=(($A)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($v)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($A+12)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($v+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)+($10);
 $12=(($A+4)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=($4)*($13);
 $15=(($A+16)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=($9)*($16);
 $18=($14)+($17);
 __ZN6b2Vec2C1Eff($agg_result,$11,$18);
 return;
}


function __ZN16b2PrismaticJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast67=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$d=0,$3=0,$4=0,$axis=0,$5=0,$perp=0,$6=0,$C1=0,$K=0,$C=0;
 var $7=0,$8=0,$K4=0,$impulse1=0,$9=0,$P=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$ld$0$0=0,$20$0=0,$ld$1$1=0,$20$1=0;
 var $st$2$0=0,$st$3$1=0,$21=0,$22=0,$23=0,$24=.0,$25=0,$26=0,$27=0,$28=0,$ld$4$0=0,$29$0=0,$ld$5$1=0,$29$1=0,$st$6$0=0,$st$7$1=0,$30=0,$31=0,$32=0,$33=.0;
 var $34=0,$35=.0,$36=0,$37=.0,$38=0,$39=.0,$40=0,$41=.0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=.0,$48=.0,$49=0,$50=.0,$51=.0,$52=.0,$53=0;
 var $54=.0,$55=0,$56=.0,$57=.0,$58=0,$59=.0,$60=.0,$61=.0,$62=0,$63=0,$64=0,$66=.0,$67=0,$68=.0,$69=0,$70=.0,$71=.0,$72=.0,$73=0,$75=.0;
 var $76=.0,$77=.0,$79=0,$81=.0,$82=.0,$83=.0,$84=.0,$85=.0,$87=0,$89=.0,$90=.0,$91=.0,$92=.0,$C2_0=.0,$active_0_off0=0,$linearError_0=.0,$94=.0,$95=.0,$96=.0,$97=.0;
 var $98=.0,$99=.0,$100=.0,$101=.0,$103=.0,$104=.0,$105=.0,$106=.0,$107=0,$k22_0=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0,$115=0,$116=0,$117=0;
 var $118=.0,$119=0,$120=.0,$121=0,$122=0,$impulse_sroa_0_0__idx=0,$impulse_sroa_0_0_copyload=.0,$impulse_sroa_1_4__idx69=0,$impulse_sroa_1_4_copyload=.0,$impulse_sroa_2_8__idx71=0,$impulse_sroa_2_8_copyload=.0,$124=.0,$125=0,$k223_0=.0,$126=0,$127=0,$128=0,$129=.0,$130=0,$131=.0;
 var $impulse_sroa_2_8_copyload74=.0,$impulse_sroa_1_4_copyload73=.0,$impulse_sroa_0_0_copyload72=.0,$133=.0,$134=.0,$135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=.0,$143=.0,$144=.0,$145=0,$146=0,$147=0,$148=0,$ld$8$0=0;
 var $149$0=0,$ld$9$1=0,$149$1=0,$st$10$0=0,$st$11$1=0,$150=0,$151=0,$152=0,$153=0,$154=0,$155=0,$156=0,$ld$12$0=0,$157$0=0,$ld$13$1=0,$157$1=0,$st$14$0=0,$st$15$1=0,$158=0,$159=0;
 var $160=0,$161=0,$163=0,$165=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast67=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $axis=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $perp=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $C1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 36)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $C=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $7=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $8=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $K4=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $impulse1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=(($this+144)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=(($data+24)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=(($17+((($15)*(12))&-1))|0);
 $19=$18;
 $ld$0$0=(($19)|0);
 $20$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($19+4)|0);
 $20$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$20$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$20$1;
 $21=((HEAP32[(($14)>>2)])|0);
 $22=((HEAP32[(($16)>>2)])|0);
 $23=(($22+((($21)*(12))&-1)+8)|0);
 $24=(+(HEAPF32[(($23)>>2)]));
 $25=(($this+148)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=(($22+((($26)*(12))&-1))|0);
 $28=$27;
 $ld$4$0=(($28)|0);
 $29$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($28+4)|0);
 $29$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$29$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$29$1;
 $30=((HEAP32[(($25)>>2)])|0);
 $31=((HEAP32[(($16)>>2)])|0);
 $32=(($31+((($30)*(12))&-1)+8)|0);
 $33=(+(HEAPF32[(($32)>>2)]));
 __ZN5b2RotC1Ef($qA,$24);
 __ZN5b2RotC1Ef($qB,$33);
 $34=(($this+168)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+172)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=(($this+176)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=(($this+180)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=(($this+68)|0);
 $43=(($this+152)|0);
 __ZmiRK6b2Vec2S1_($1,$42,$43);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $44=(($this+76)|0);
 $45=(($this+160)|0);
 __ZmiRK6b2Vec2S1_($2,$44,$45);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZplRK6b2Vec2S1_($4,$tmpcast67,$rB);
 __ZmiRK6b2Vec2S1_($3,$4,$tmpcast);
 __ZmiRK6b2Vec2S1_($d,$3,$rA);
 $46=(($this+84)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($axis,$qA,$46);
 __ZplRK6b2Vec2S1_($5,$d,$rA);
 $47=(+(__Z7b2CrossRK6b2Vec2S1_($5,$axis)));
 $48=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$axis)));
 $49=(($this+92)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($perp,$qA,$49);
 __ZplRK6b2Vec2S1_($6,$d,$rA);
 $50=(+(__Z7b2CrossRK6b2Vec2S1_($6,$perp)));
 $51=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$perp)));
 $52=(+(__Z5b2DotRK6b2Vec2S1_($perp,$d)));
 $53=(($C1)|0);
 HEAPF32[(($53)>>2)]=$52;
 $54=($33)-($24);
 $55=(($this+100)|0);
 $56=(+(HEAPF32[(($55)>>2)]));
 $57=($54)-($56);
 $58=(($C1+4)|0);
 HEAPF32[(($58)>>2)]=$57;
 $59=(+(HEAPF32[(($53)>>2)]));
 $60=(+(__Z5b2AbsIfET_S0_($59)));
 $61=(+(__Z5b2AbsIfET_S0_($57)));
 $62=(($this+136)|0);
 $63=((HEAP8[($62)])|0);
 $64=(($63<<24)>>24)==0;
 do {
  if ($64) {
   $linearError_0=$60;$active_0_off0=0;$C2_0=0.0;
  } else {
   $66=(+(__Z5b2DotRK6b2Vec2S1_($axis,$d)));
   $67=(($this+124)|0);
   $68=(+(HEAPF32[(($67)>>2)]));
   $69=(($this+120)|0);
   $70=(+(HEAPF32[(($69)>>2)]));
   $71=($68)-($70);
   $72=(+(__Z5b2AbsIfET_S0_($71)));
   $73=$72<(0.009999999776482582);
   if ($73) {
    $75=(+(__Z7b2ClampIfET_S0_S0_S0_($66,-0.20000000298023224,0.20000000298023224)));
    $76=(+(__Z5b2AbsIfET_S0_($66)));
    $77=(+(__Z5b2MaxIfET_S0_S0_($60,$76)));
    $linearError_0=$77;$active_0_off0=1;$C2_0=$75;
    break;
   }
   $79=$66>$70;
   if (!($79)) {
    $81=($66)-($70);
    $82=($81)+((0.004999999888241291));
    $83=(+(__Z7b2ClampIfET_S0_S0_S0_($82,-0.20000000298023224,0.0)));
    $84=($70)-($66);
    $85=(+(__Z5b2MaxIfET_S0_S0_($60,$84)));
    $linearError_0=$85;$active_0_off0=1;$C2_0=$83;
    break;
   }
   $87=$66<$68;
   if ($87) {
    $linearError_0=$60;$active_0_off0=0;$C2_0=0.0;
    break;
   }
   $89=($66)-($68);
   $90=($89)+((-0.004999999888241291));
   $91=(+(__Z7b2ClampIfET_S0_S0_S0_($90,0.0,0.20000000298023224)));
   $92=(+(__Z5b2MaxIfET_S0_S0_($60,$89)));
   $linearError_0=$92;$active_0_off0=1;$C2_0=$91;
  }
 } while(0);



 $94=($35)+($37);
 $95=($39)*($50);
 $96=($50)*($95);
 $97=($94)+($96);
 $98=($41)*($51);
 $99=($51)*($98);
 $100=($97)+($99);
 $101=($95)+($98);
 if ($active_0_off0) {
  $103=($47)*($95);
  $104=($48)*($98);
  $105=($103)+($104);
  $106=($39)+($41);
  $107=$106==(0.0);
  $k22_0=($107?(1.0):$106);
  $108=($39)*($47);
  $109=($41)*($48);
  $110=($108)+($109);
  $111=($47)*($108);
  $112=($94)+($111);
  $113=($48)*($109);
  $114=($112)+($113);
  $115=(($K)|0);
  __ZN6b2Vec33SetEfff($115,$100,$101,$105);
  $116=(($K+12)|0);
  __ZN6b2Vec33SetEfff($116,$101,$k22_0,$110);
  $117=(($K+24)|0);
  __ZN6b2Vec33SetEfff($117,$105,$110,$114);
  $118=(+(HEAPF32[(($53)>>2)]));
  $119=(($C)|0);
  HEAPF32[(($119)>>2)]=$118;
  $120=(+(HEAPF32[(($58)>>2)]));
  $121=(($C+4)|0);
  HEAPF32[(($121)>>2)]=$120;
  $122=(($C+8)|0);
  HEAPF32[(($122)>>2)]=$C2_0;
  __ZNK6b2Vec3ngEv($8,$C);
  __ZNK7b2Mat337Solve33ERK6b2Vec3($7,$K,$8);
  $impulse_sroa_0_0__idx=(($7)|0);
  $impulse_sroa_0_0_copyload=(+(HEAPF32[(($impulse_sroa_0_0__idx)>>2)]));
  $impulse_sroa_1_4__idx69=(($7+4)|0);
  $impulse_sroa_1_4_copyload=(+(HEAPF32[(($impulse_sroa_1_4__idx69)>>2)]));
  $impulse_sroa_2_8__idx71=(($7+8)|0);
  $impulse_sroa_2_8_copyload=(+(HEAPF32[(($impulse_sroa_2_8__idx71)>>2)]));
  $impulse_sroa_0_0_copyload72=$impulse_sroa_0_0_copyload;$impulse_sroa_1_4_copyload73=$impulse_sroa_1_4_copyload;$impulse_sroa_2_8_copyload74=$impulse_sroa_2_8_copyload;
 } else {
  $124=($39)+($41);
  $125=$124==(0.0);
  $k223_0=($125?(1.0):$124);
  $126=(($K4)|0);
  __ZN6b2Vec23SetEff($126,$100,$101);
  $127=(($K4+8)|0);
  __ZN6b2Vec23SetEff($127,$101,$k223_0);
  __ZNK6b2Vec2ngEv($9,$C1);
  __ZNK7b2Mat225SolveERK6b2Vec2($impulse1,$K4,$9);
  $128=(($impulse1)|0);
  $129=(+(HEAPF32[(($128)>>2)]));
  $130=(($impulse1+4)|0);
  $131=(+(HEAPF32[(($130)>>2)]));
  $impulse_sroa_0_0_copyload72=$129;$impulse_sroa_1_4_copyload73=$131;$impulse_sroa_2_8_copyload74=0.0;
 }



 __ZmlfRK6b2Vec2($10,$impulse_sroa_0_0_copyload72,$perp);
 __ZmlfRK6b2Vec2($11,$impulse_sroa_2_8_copyload74,$axis);
 __ZplRK6b2Vec2S1_($P,$10,$11);
 $133=($50)*($impulse_sroa_0_0_copyload72);
 $134=($impulse_sroa_1_4_copyload73)+($133);
 $135=($47)*($impulse_sroa_2_8_copyload74);
 $136=($135)+($134);
 $137=($51)*($impulse_sroa_0_0_copyload72);
 $138=($impulse_sroa_1_4_copyload73)+($137);
 $139=($48)*($impulse_sroa_2_8_copyload74);
 $140=($139)+($138);
 __ZmlfRK6b2Vec2($12,$35,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$12);
 $141=($39)*($136);
 $142=($24)-($141);
 __ZmlfRK6b2Vec2($13,$37,$P);
 __ZN6b2Vec2pLERKS_($tmpcast67,$13);
 $143=($41)*($140);
 $144=($33)+($143);
 $145=((HEAP32[(($14)>>2)])|0);
 $146=((HEAP32[(($16)>>2)])|0);
 $147=(($146+((($145)*(12))&-1))|0);
 $148=$147;
 $ld$8$0=(($cA)|0);
 $149$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $149$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($148)|0);
 HEAP32[(($st$10$0)>>2)]=$149$0;
 $st$11$1=(($148+4)|0);
 HEAP32[(($st$11$1)>>2)]=$149$1;
 $150=((HEAP32[(($14)>>2)])|0);
 $151=((HEAP32[(($16)>>2)])|0);
 $152=(($151+((($150)*(12))&-1)+8)|0);
 HEAPF32[(($152)>>2)]=$142;
 $153=((HEAP32[(($25)>>2)])|0);
 $154=((HEAP32[(($16)>>2)])|0);
 $155=(($154+((($153)*(12))&-1))|0);
 $156=$155;
 $ld$12$0=(($cB)|0);
 $157$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $157$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($156)|0);
 HEAP32[(($st$14$0)>>2)]=$157$0;
 $st$15$1=(($156+4)|0);
 HEAP32[(($st$15$1)>>2)]=$157$1;
 $158=((HEAP32[(($25)>>2)])|0);
 $159=((HEAP32[(($16)>>2)])|0);
 $160=(($159+((($158)*(12))&-1)+8)|0);
 HEAPF32[(($160)>>2)]=$144;
 $161=$linearError_0>(0.004999999888241291);
 if ($161) {
  $165=0;

  STACKTOP=sp;return (($165)|0);
 }
 $163=$61<=(0.03490658849477768);
 $165=$163;

 STACKTOP=sp;return (($165)|0);
}


function __ZNK7b2Mat225SolveERK6b2Vec2($agg_result,$this,$b){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,$10=.0,$11=.0,$12=0,$14=.0,$det_0=.0,$16=0,$17=.0,$18=.0,$19=0,$20=.0,$21=.0;
 var $22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=.0,$28=.0,$29=.0,$30=.0,$31=0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+8)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+4)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($this+12)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($2)*($8);
 $10=($4)*($6);
 $11=($9)-($10);
 $12=$11!=(0.0);
 if ($12) {
  $14=((1.0))/($11);
  $det_0=$14;
 } else {
  $det_0=$11;
 }

 $16=(($b)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=($8)*($17);
 $19=(($b+4)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=($4)*($20);
 $22=($18)-($21);
 $23=($det_0)*($22);
 $24=(($agg_result)|0);
 HEAPF32[(($24)>>2)]=$23;
 $25=(+(HEAPF32[(($19)>>2)]));
 $26=($2)*($25);
 $27=(+(HEAPF32[(($16)>>2)]));
 $28=($6)*($27);
 $29=($26)-($28);
 $30=($det_0)*($29);
 $31=(($agg_result+4)|0);
 HEAPF32[(($31)>>2)]=$30;
 return;
}


function __ZNK16b2PrismaticJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+68)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK16b2PrismaticJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+76)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK16b2PrismaticJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=0,$8=.0,$9=0,$10=.0,$11=.0,$12=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(((sp)+(16))|0);
 $4=(($this+104)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(($this+192)|0);
 __ZmlfRK6b2Vec2($2,$5,$6);
 $7=(($this+116)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($this+112)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=($8)+($10);
 $12=(($this+184)|0);
 __ZmlfRK6b2Vec2($3,$11,$12);
 __ZplRK6b2Vec2S1_($1,$2,$3);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$1);
 STACKTOP=sp;return;
}


function __ZNK16b2PrismaticJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+108)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZNK16b2PrismaticJoint19GetJointTranslationEv($this){
 $this=($this)|0;
 var $pA=0,$pB=0,$d=0,$axis=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $pA=((sp)|0);
 $pB=(((sp)+(8))|0);
 $d=(((sp)+(16))|0);
 $axis=(((sp)+(24))|0);
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+68)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($pA,$2,$3);
 $4=(($this+52)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($this+76)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($pB,$5,$6);
 __ZmiRK6b2Vec2S1_($d,$pB,$pA);
 $7=((HEAP32[(($1)>>2)])|0);
 $8=(($this+84)|0);
 __ZNK6b2Body14GetWorldVectorERK6b2Vec2($axis,$7,$8);
 $9=(+(__Z5b2DotRK6b2Vec2S1_($d,$axis)));
 STACKTOP=sp;return (+($9));
}


function __ZNK6b2Body14GetWorldVectorERK6b2Vec2($agg_result,$this,$localVector){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $localVector=($localVector)|0;
 var $1=0,label=0;

 $1=(($this+20)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($agg_result,$1,$localVector);
 return;
}


function __ZNK16b2PrismaticJoint13GetJointSpeedEv($this){
 $this=($this)|0;
 var $rA=0,$1=0,$rB=0,$2=0,$p1=0,$p2=0,$d=0,$axis=0,$vA=0,$tmpcast=0,$vB=0,$tmpcast11=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0;
 var $11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$ld$0$0=0,$24$0=0,$ld$1$1=0,$24$1=0,$st$2$0=0,$st$3$1=0,$25=0;
 var $26=0,$ld$4$0=0,$27$0=0,$ld$5$1=0,$27$1=0,$st$6$0=0,$st$7$1=0,$28=0,$29=.0,$30=0,$31=.0,$32=.0,$33=.0,$34=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+72)|0;
 $rA=((sp)|0);
 $1=(((sp)+(8))|0);
 $rB=(((sp)+(16))|0);
 $2=(((sp)+(24))|0);
 $p1=(((sp)+(32))|0);
 $p2=(((sp)+(40))|0);
 $d=(((sp)+(48))|0);
 $axis=(((sp)+(56))|0);
 $vA=(((sp)+(64))|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast11=$vB;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=(($this+48)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($this+52)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=(($10+20)|0);
 $14=(($this+68)|0);
 $15=(($10+28)|0);
 __ZmiRK6b2Vec2S1_($1,$14,$15);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$13,$1);
 $16=(($12+20)|0);
 $17=(($this+76)|0);
 $18=(($12+28)|0);
 __ZmiRK6b2Vec2S1_($2,$17,$18);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$16,$2);
 $19=(($10+44)|0);
 __ZplRK6b2Vec2S1_($p1,$19,$rA);
 $20=(($12+44)|0);
 __ZplRK6b2Vec2S1_($p2,$20,$rB);
 __ZmiRK6b2Vec2S1_($d,$p2,$p1);
 $21=(($this+84)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($axis,$13,$21);
 $22=(($10+64)|0);
 $23=$22;
 $ld$0$0=(($23)|0);
 $24$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($23+4)|0);
 $24$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$24$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$24$1;
 $25=(($12+64)|0);
 $26=$25;
 $ld$4$0=(($26)|0);
 $27$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($26+4)|0);
 $27$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$27$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$27$1;
 $28=(($10+72)|0);
 $29=(+(HEAPF32[(($28)>>2)]));
 $30=(($12+72)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 __Z7b2CrossfRK6b2Vec2($3,$29,$axis);
 $32=(+(__Z5b2DotRK6b2Vec2S1_($d,$3)));
 __Z7b2CrossfRK6b2Vec2($7,$31,$rB);
 __ZplRK6b2Vec2S1_($6,$tmpcast11,$7);
 __ZmiRK6b2Vec2S1_($5,$6,$tmpcast);
 __Z7b2CrossfRK6b2Vec2($8,$29,$rA);
 __ZmiRK6b2Vec2S1_($4,$5,$8);
 $33=(+(__Z5b2DotRK6b2Vec2S1_($axis,$4)));
 $34=($32)+($33);
 STACKTOP=sp;return (+($34));
}


function __ZNK16b2PrismaticJoint14IsLimitEnabledEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+136)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function __ZN16b2PrismaticJoint11EnableLimitEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=($flag&1);
 $2=(($this+136)|0);
 $3=((HEAP8[($2)])|0);
 $4=($3&255);
 $5=($1|0)==($4|0);
 if ($5) {
  return;
 }
 $7=(($this+48)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($8,1);
 $9=(($this+52)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($10,1);
 $11=($flag&1);
 HEAP8[($2)]=$11;
 $12=(($this+112)|0);
 HEAPF32[(($12)>>2)]=0.0;
 return;
}


function __ZNK16b2PrismaticJoint13GetLowerLimitEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+120)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZNK16b2PrismaticJoint13GetUpperLimitEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+124)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZN16b2PrismaticJoint9SetLimitsEff($this,$lower,$upper){
 $this=($this)|0;
 $lower=+($lower);
 $upper=+($upper);
 var $1=0,$4=0,$5=.0,$6=0,$8=0,$9=.0,$10=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,label=0;

 $1=$lower>$upper;
 if ($1) {
  ___assert_fail(((3880)|0),((9368)|0),((575)|0),((12720)|0));

 }
 $4=(($this+120)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=$5!=$lower;
 do {
  if (!($6)) {
   $8=(($this+124)|0);
   $9=(+(HEAPF32[(($8)>>2)]));
   $10=$9!=$upper;
   if ($10) {
    break;
   }
   return;
  }
 } while(0);
 $12=(($this+48)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($13,1);
 $14=(($this+52)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($15,1);
 HEAPF32[(($4)>>2)]=$lower;
 $16=(($this+124)|0);
 HEAPF32[(($16)>>2)]=$upper;
 $17=(($this+112)|0);
 HEAPF32[(($17)>>2)]=0.0;
 return;
}


function __ZNK16b2PrismaticJoint14IsMotorEnabledEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+137)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function __ZN16b2PrismaticJoint11EnableMotorEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($2,1);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($4,1);
 $5=(($this+137)|0);
 $6=($flag&1);
 HEAP8[($5)]=$6;
 return;
}


function __ZN16b2PrismaticJoint13SetMotorSpeedEf($this,$speed){
 $this=($this)|0;
 $speed=+($speed);
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($2,1);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($4,1);
 $5=(($this+132)|0);
 HEAPF32[(($5)>>2)]=$speed;
 return;
}


function __ZN16b2PrismaticJoint16SetMaxMotorForceEf($this,$force){
 $this=($this)|0;
 $force=+($force);
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($2,1);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($4,1);
 $5=(($this+128)|0);
 HEAPF32[(($5)>>2)]=$force;
 return;
}


function __ZNK16b2PrismaticJoint13GetMotorForceEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+116)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZN16b2PrismaticJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=0,$35=0,$36=0,$37=.0,$38=.0,$39=0,$40=.0;
 var $41=.0,$42=0,$43=0,$44=0,$45=0,$46=.0,$47=.0,$48=0,$49=.0,$50=.0,$51=0,$52=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(6264,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(4136,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3096,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(2408,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+68)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+72)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(1704,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+76)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+80)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(1144,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+84)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 $27=(($this+88)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(640,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$26,HEAPF64[(((tempVarArgs)+(8))>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+100)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=$31;
 __Z5b2LogPKcz(184,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$32,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $33=(($this+136)|0);
 $34=((HEAP8[($33)])|0);
 $35=($34&255);
 __Z5b2LogPKcz(11560,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$35,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $36=(($this+120)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=$37;
 __Z5b2LogPKcz(11104,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$38,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $39=(($this+124)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=$40;
 __Z5b2LogPKcz(10424,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$41,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $42=(($this+137)|0);
 $43=((HEAP8[($42)])|0);
 $44=($43&255);
 __Z5b2LogPKcz(9536,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$44,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $45=(($this+132)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=$46;
 __Z5b2LogPKcz(8904,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$47,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $48=(($this+128)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=$49;
 __Z5b2LogPKcz(8656,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$50,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $51=(($this+56)|0);
 $52=((HEAP32[(($51)>>2)])|0);
 __Z5b2LogPKcz(8416,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$52,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN16b2PrismaticJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN16b2PrismaticJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f($this,$bA,$bB,$groundA,$groundB,$anchorA,$anchorB,$r){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 $groundA=($groundA)|0;
 $groundB=($groundB)|0;
 $anchorA=($anchorA)|0;
 $anchorB=($anchorB)|0;
 $r=+($r);
 var $1=0,$tmpcast=0,$2=0,$tmpcast12=0,$dA=0,$dB=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0;
 var $ld$4$0=0,$12$0=0,$ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,$13=0,$14=0,$15=0,$ld$8$0=0,$16$0=0,$ld$9$1=0,$16$1=0,$st$10$0=0,$st$11$1=0,$17=0,$18=0,$19=0,$ld$12$0=0,$20$0=0;
 var $ld$13$1=0,$20$1=0,$st$14$0=0,$st$15$1=0,$21=.0,$22=0,$23=.0,$24=0,$25=0,$26=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast12=$2;
 $dA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $dB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=$bA;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$bB;
 $5=(($this+20)|0);
 $6=$groundA;
 $7=$5;
 $ld$0$0=(($6)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($6+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($this+28)|0);
 $10=$groundB;
 $11=$9;
 $ld$4$0=(($10)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($10+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 $13=(($this+36)|0);
 $14=((HEAP32[(($3)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$14,$anchorA);
 $15=$13;
 $ld$8$0=(($1)|0);
 $16$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($1+4)|0);
 $16$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($15)|0);
 HEAP32[(($st$10$0)>>2)]=$16$0;
 $st$11$1=(($15+4)|0);
 HEAP32[(($st$11$1)>>2)]=$16$1;
 $17=(($this+44)|0);
 $18=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast12,$18,$anchorB);
 $19=$17;
 $ld$12$0=(($2)|0);
 $20$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($2+4)|0);
 $20$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($19)|0);
 HEAP32[(($st$14$0)>>2)]=$20$0;
 $st$15$1=(($19+4)|0);
 HEAP32[(($st$15$1)>>2)]=$20$1;
 __ZmiRK6b2Vec2S1_($dA,$anchorA,$groundA);
 $21=(+(__ZNK6b2Vec26LengthEv($dA)));
 $22=(($this+52)|0);
 HEAPF32[(($22)>>2)]=$21;
 __ZmiRK6b2Vec2S1_($dB,$anchorB,$groundB);
 $23=(+(__ZNK6b2Vec26LengthEv($dB)));
 $24=(($this+56)|0);
 HEAPF32[(($24)>>2)]=$23;
 $25=(($this+60)|0);
 HEAPF32[(($25)>>2)]=$r;
 $26=$r>(1.1920928955078125e-7);
 if ($26) {
  STACKTOP=sp;return;
 } else {
  ___assert_fail(((3808)|0),((9264)|0),((51)|0),((12704)|0));

 }
}


function __ZN13b2PulleyJointC2EPK16b2PulleyJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$ld$0$0=0,$11$0=0,$ld$1$1=0,$11$1=0,$st$2$0=0,$st$3$1=0,$12=0,$13=0,$14=0,$ld$4$0=0;
 var $15$0=0,$ld$5$1=0,$15$1=0,$st$6$0=0,$st$7$1=0,$16=0,$17=0,$18=0,$ld$8$0=0,$19$0=0,$ld$9$1=0,$19$1=0,$st$10$0=0,$st$11$1=0,$20=0,$21=0,$22=0,$ld$12$0=0,$23$0=0,$ld$13$1=0;
 var $23$1=0,$st$14$0=0,$st$15$1=0,$24=0,$25=.0,$26=0,$27=0,$28=.0,$29=0,$30=0,$31=.0,$32=0,$35=0,$36=.0,$37=.0,$38=.0,$39=.0,$40=0,$41=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=14192;
 $4=(($this+68)|0);
 $5=(($this+76)|0);
 $6=(($this+92)|0);
 $7=(($this+100)|0);
 $8=(($def+20)|0);
 $9=$8;
 $10=$4;
 $ld$0$0=(($9)|0);
 $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($9+4)|0);
 $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($10)|0);
 HEAP32[(($st$2$0)>>2)]=$11$0;
 $st$3$1=(($10+4)|0);
 HEAP32[(($st$3$1)>>2)]=$11$1;
 $12=(($def+28)|0);
 $13=$12;
 $14=$5;
 $ld$4$0=(($13)|0);
 $15$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($13+4)|0);
 $15$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($14)|0);
 HEAP32[(($st$6$0)>>2)]=$15$0;
 $st$7$1=(($14+4)|0);
 HEAP32[(($st$7$1)>>2)]=$15$1;
 $16=(($def+36)|0);
 $17=$16;
 $18=$6;
 $ld$8$0=(($17)|0);
 $19$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($17+4)|0);
 $19$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($18)|0);
 HEAP32[(($st$10$0)>>2)]=$19$0;
 $st$11$1=(($18+4)|0);
 HEAP32[(($st$11$1)>>2)]=$19$1;
 $20=(($def+44)|0);
 $21=$20;
 $22=$7;
 $ld$12$0=(($21)|0);
 $23$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($21+4)|0);
 $23$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($22)|0);
 HEAP32[(($st$14$0)>>2)]=$23$0;
 $st$15$1=(($22+4)|0);
 HEAP32[(($st$15$1)>>2)]=$23$1;
 $24=(($def+52)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=(($this+84)|0);
 HEAPF32[(($26)>>2)]=$25;
 $27=(($def+56)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=(($this+88)|0);
 HEAPF32[(($29)>>2)]=$28;
 $30=(($def+60)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=$31!=(0.0);
 if ($32) {
  $35=(($this+112)|0);
  HEAPF32[(($35)>>2)]=$31;
  $36=(+(HEAPF32[(($24)>>2)]));
  $37=(+(HEAPF32[(($27)>>2)]));
  $38=($31)*($37);
  $39=($36)+($38);
  $40=(($this+108)|0);
  HEAPF32[(($40)>>2)]=$39;
  $41=(($this+116)|0);
  HEAPF32[(($41)>>2)]=0.0;
  return;
 } else {
  ___assert_fail(((6232)|0),((9264)|0),((65)|0),((12976)|0));

 }
}


function __ZN13b2PulleyJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$vA=0,$tmpcast21=0,$cB=0,$tmpcast22=0,$vB=0,$tmpcast23=0,$qA=0,$qB=0,$1=0,$tmpcast24=0,$2=0,$3=0,$tmpcast25=0,$4=0,$5=0,$tmpcast26=0,$6=0,$7=0;
 var $tmpcast27=0,$8=0,$PA=0,$PB=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0;
 var $25=0,$ld$0$0=0,$26$0=0,$ld$1$1=0,$26$1=0,$st$2$0=0,$st$3$1=0,$27=0,$28=0,$29=0,$30=0,$31=0,$ld$4$0=0,$32$0=0,$ld$5$1=0,$32$1=0,$st$6$0=0,$st$7$1=0,$33=0,$34=0;
 var $35=.0,$36=0,$37=0,$38=0,$39=.0,$40=0,$41=0,$42=0,$43=.0,$44=0,$45=0,$46=0,$47=.0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$ld$8$0=0;
 var $54$0=0,$ld$9$1=0,$54$1=0,$st$10$0=0,$st$11$1=0,$55=0,$56=0,$57=0,$58=.0,$59=0,$60=0,$61=0,$62=0,$ld$12$0=0,$63$0=0,$ld$13$1=0,$63$1=0,$st$14$0=0,$st$15$1=0,$64=0;
 var $65=0,$66=0,$67=.0,$68=0,$69=0,$70=0,$71=0,$ld$16$0=0,$72$0=0,$ld$17$1=0,$72$1=0,$st$18$0=0,$st$19$1=0,$73=0,$74=0,$75=0,$76=.0,$77=0,$78=0,$79=0;
 var $ld$20$0=0,$80$0=0,$ld$21$1=0,$80$1=0,$st$22$0=0,$st$23$1=0,$81=0,$82=0,$83=0,$84=.0,$85=0,$86=0,$87=0,$ld$24$0=0,$88$0=0,$ld$25$1=0,$88$1=0,$st$26$0=0,$st$27$1=0,$89=0;
 var $90=0,$91=0,$ld$28$0=0,$92$0=0,$ld$29$1=0,$92$1=0,$st$30$0=0,$st$31$1=0,$93=0,$94=0,$95=0,$ld$32$0=0,$96$0=0,$ld$33$1=0,$96$1=0,$st$34$0=0,$st$35$1=0,$97=0,$98=0,$99=0;
 var $ld$36$0=0,$100$0=0,$ld$37$1=0,$100$1=0,$st$38$0=0,$st$39$1=0,$101=.0,$102=.0,$103=0,$105=.0,$108=0,$110=.0,$113=.0,$114=.0,$115=.0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0;
 var $121=.0,$122=.0,$123=.0,$124=.0,$125=0,$126=.0,$127=.0,$128=.0,$129=.0,$130=0,$131=0,$133=.0,$storemerge=.0,$135=0,$136=0,$137=0,$139=0,$140=.0,$141=0,$142=.0;
 var $143=.0,$144=.0,$145=.0,$146=.0,$147=.0,$148=.0,$149=.0,$150=.0,$151=.0,$152=.0,$153=.0,$154=.0,$155=.0,$156=.0,$157=.0,$158=.0,$160=0,$wB_0=.0,$wA_0=.0,$162=0;
 var $163=0,$164=0,$165=0,$ld$40$0=0,$166$0=0,$ld$41$1=0,$166$1=0,$st$42$0=0,$st$43$1=0,$167=0,$168=0,$169=0,$170=0,$171=0,$172=0,$173=0,$ld$44$0=0,$174$0=0,$ld$45$1=0,$174$1=0;
 var $st$46$0=0,$st$47$1=0,$175=0,$176=0,$177=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast21=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast22=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast23=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast24=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast25=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast26=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast27=$7;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $PA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $PB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=(($this+48)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=(($12+8)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($this+120)|0);
 HEAP32[(($15)>>2)]=$14;
 $16=(($this+52)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=(($17+8)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($this+124)|0);
 HEAP32[(($20)>>2)]=$19;
 $21=(($this+160)|0);
 $22=((HEAP32[(($11)>>2)])|0);
 $23=(($22+28)|0);
 $24=$23;
 $25=$21;
 $ld$0$0=(($24)|0);
 $26$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($24+4)|0);
 $26$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($25)|0);
 HEAP32[(($st$2$0)>>2)]=$26$0;
 $st$3$1=(($25+4)|0);
 HEAP32[(($st$3$1)>>2)]=$26$1;
 $27=(($this+168)|0);
 $28=((HEAP32[(($16)>>2)])|0);
 $29=(($28+28)|0);
 $30=$29;
 $31=$27;
 $ld$4$0=(($30)|0);
 $32$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($30+4)|0);
 $32$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($31)|0);
 HEAP32[(($st$6$0)>>2)]=$32$0;
 $st$7$1=(($31+4)|0);
 HEAP32[(($st$7$1)>>2)]=$32$1;
 $33=((HEAP32[(($11)>>2)])|0);
 $34=(($33+120)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+176)|0);
 HEAPF32[(($36)>>2)]=$35;
 $37=((HEAP32[(($16)>>2)])|0);
 $38=(($37+120)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=(($this+180)|0);
 HEAPF32[(($40)>>2)]=$39;
 $41=((HEAP32[(($11)>>2)])|0);
 $42=(($41+128)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=(($this+184)|0);
 HEAPF32[(($44)>>2)]=$43;
 $45=((HEAP32[(($16)>>2)])|0);
 $46=(($45+128)|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=(($this+188)|0);
 HEAPF32[(($48)>>2)]=$47;
 $49=((HEAP32[(($15)>>2)])|0);
 $50=(($data+24)|0);
 $51=((HEAP32[(($50)>>2)])|0);
 $52=(($51+((($49)*(12))&-1))|0);
 $53=$52;
 $ld$8$0=(($53)|0);
 $54$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($53+4)|0);
 $54$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cA)|0);
 HEAP32[(($st$10$0)>>2)]=$54$0;
 $st$11$1=(($cA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$54$1;
 $55=((HEAP32[(($15)>>2)])|0);
 $56=((HEAP32[(($50)>>2)])|0);
 $57=(($56+((($55)*(12))&-1)+8)|0);
 $58=(+(HEAPF32[(($57)>>2)]));
 $59=(($data+28)|0);
 $60=((HEAP32[(($59)>>2)])|0);
 $61=(($60+((($55)*(12))&-1))|0);
 $62=$61;
 $ld$12$0=(($62)|0);
 $63$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($62+4)|0);
 $63$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vA)|0);
 HEAP32[(($st$14$0)>>2)]=$63$0;
 $st$15$1=(($vA+4)|0);
 HEAP32[(($st$15$1)>>2)]=$63$1;
 $64=((HEAP32[(($15)>>2)])|0);
 $65=((HEAP32[(($59)>>2)])|0);
 $66=(($65+((($64)*(12))&-1)+8)|0);
 $67=(+(HEAPF32[(($66)>>2)]));
 $68=((HEAP32[(($20)>>2)])|0);
 $69=((HEAP32[(($50)>>2)])|0);
 $70=(($69+((($68)*(12))&-1))|0);
 $71=$70;
 $ld$16$0=(($71)|0);
 $72$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($71+4)|0);
 $72$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($cB)|0);
 HEAP32[(($st$18$0)>>2)]=$72$0;
 $st$19$1=(($cB+4)|0);
 HEAP32[(($st$19$1)>>2)]=$72$1;
 $73=((HEAP32[(($20)>>2)])|0);
 $74=((HEAP32[(($50)>>2)])|0);
 $75=(($74+((($73)*(12))&-1)+8)|0);
 $76=(+(HEAPF32[(($75)>>2)]));
 $77=((HEAP32[(($59)>>2)])|0);
 $78=(($77+((($73)*(12))&-1))|0);
 $79=$78;
 $ld$20$0=(($79)|0);
 $80$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($79+4)|0);
 $80$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$80$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$80$1;
 $81=((HEAP32[(($20)>>2)])|0);
 $82=((HEAP32[(($59)>>2)])|0);
 $83=(($82+((($81)*(12))&-1)+8)|0);
 $84=(+(HEAPF32[(($83)>>2)]));
 __ZN5b2RotC1Ef($qA,$58);
 __ZN5b2RotC1Ef($qB,$76);
 $85=(($this+144)|0);
 $86=(($this+92)|0);
 __ZmiRK6b2Vec2S1_($2,$86,$21);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast24,$qA,$2);
 $87=$85;
 $ld$24$0=(($1)|0);
 $88$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($1+4)|0);
 $88$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($87)|0);
 HEAP32[(($st$26$0)>>2)]=$88$0;
 $st$27$1=(($87+4)|0);
 HEAP32[(($st$27$1)>>2)]=$88$1;
 $89=(($this+152)|0);
 $90=(($this+100)|0);
 __ZmiRK6b2Vec2S1_($4,$90,$27);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast25,$qB,$4);
 $91=$89;
 $ld$28$0=(($3)|0);
 $92$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($3+4)|0);
 $92$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($91)|0);
 HEAP32[(($st$30$0)>>2)]=$92$0;
 $st$31$1=(($91+4)|0);
 HEAP32[(($st$31$1)>>2)]=$92$1;
 $93=(($this+128)|0);
 __ZplRK6b2Vec2S1_($6,$tmpcast,$85);
 $94=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($tmpcast26,$6,$94);
 $95=$93;
 $ld$32$0=(($5)|0);
 $96$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($5+4)|0);
 $96$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($95)|0);
 HEAP32[(($st$34$0)>>2)]=$96$0;
 $st$35$1=(($95+4)|0);
 HEAP32[(($st$35$1)>>2)]=$96$1;
 $97=(($this+136)|0);
 __ZplRK6b2Vec2S1_($8,$tmpcast22,$89);
 $98=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($tmpcast27,$8,$98);
 $99=$97;
 $ld$36$0=(($7)|0);
 $100$0=((HEAP32[(($ld$36$0)>>2)])|0);
 $ld$37$1=(($7+4)|0);
 $100$1=((HEAP32[(($ld$37$1)>>2)])|0);
 $st$38$0=(($99)|0);
 HEAP32[(($st$38$0)>>2)]=$100$0;
 $st$39$1=(($99+4)|0);
 HEAP32[(($st$39$1)>>2)]=$100$1;
 $101=(+(__ZNK6b2Vec26LengthEv($93)));
 $102=(+(__ZNK6b2Vec26LengthEv($97)));
 $103=$101>(0.04999999701976776);
 if ($103) {
  $105=((1.0))/($101);
  __ZN6b2Vec2mLEf($93,$105);
 } else {
  __ZN6b2Vec27SetZeroEv($93);
 }
 $108=$102>(0.04999999701976776);
 if ($108) {
  $110=((1.0))/($102);
  __ZN6b2Vec2mLEf($97,$110);
 } else {
  __ZN6b2Vec27SetZeroEv($97);
 }
 $113=(+(__Z7b2CrossRK6b2Vec2S1_($85,$93)));
 $114=(+(__Z7b2CrossRK6b2Vec2S1_($89,$97)));
 $115=(+(HEAPF32[(($36)>>2)]));
 $116=(+(HEAPF32[(($44)>>2)]));
 $117=($113)*($116);
 $118=($113)*($117);
 $119=($115)+($118);
 $120=(+(HEAPF32[(($40)>>2)]));
 $121=(+(HEAPF32[(($48)>>2)]));
 $122=($114)*($121);
 $123=($114)*($122);
 $124=($120)+($123);
 $125=(($this+112)|0);
 $126=(+(HEAPF32[(($125)>>2)]));
 $127=($126)*($126);
 $128=($127)*($124);
 $129=($119)+($128);
 $130=(($this+192)|0);
 $131=$129>(0.0);
 if ($131) {
  $133=((1.0))/($129);
  $storemerge=$133;
 } else {
  $storemerge=$129;
 }

 HEAPF32[(($130)>>2)]=$storemerge;
 $135=(($data+20)|0);
 $136=((HEAP8[($135)])|0);
 $137=(($136<<24)>>24)==0;
 if ($137) {
  $160=(($this+116)|0);
  HEAPF32[(($160)>>2)]=0.0;
  $wA_0=$67;$wB_0=$84;


  $162=((HEAP32[(($15)>>2)])|0);
  $163=((HEAP32[(($59)>>2)])|0);
  $164=(($163+((($162)*(12))&-1))|0);
  $165=$164;
  $ld$40$0=(($vA)|0);
  $166$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vA+4)|0);
  $166$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($165)|0);
  HEAP32[(($st$42$0)>>2)]=$166$0;
  $st$43$1=(($165+4)|0);
  HEAP32[(($st$43$1)>>2)]=$166$1;
  $167=((HEAP32[(($15)>>2)])|0);
  $168=((HEAP32[(($59)>>2)])|0);
  $169=(($168+((($167)*(12))&-1)+8)|0);
  HEAPF32[(($169)>>2)]=$wA_0;
  $170=((HEAP32[(($20)>>2)])|0);
  $171=((HEAP32[(($59)>>2)])|0);
  $172=(($171+((($170)*(12))&-1))|0);
  $173=$172;
  $ld$44$0=(($vB)|0);
  $174$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($vB+4)|0);
  $174$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($173)|0);
  HEAP32[(($st$46$0)>>2)]=$174$0;
  $st$47$1=(($173+4)|0);
  HEAP32[(($st$47$1)>>2)]=$174$1;
  $175=((HEAP32[(($20)>>2)])|0);
  $176=((HEAP32[(($59)>>2)])|0);
  $177=(($176+((($175)*(12))&-1)+8)|0);
  HEAPF32[(($177)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $139=(($data+8)|0);
  $140=(+(HEAPF32[(($139)>>2)]));
  $141=(($this+116)|0);
  $142=(+(HEAPF32[(($141)>>2)]));
  $143=($140)*($142);
  HEAPF32[(($141)>>2)]=$143;
  $144=((-.0))-($143);
  __ZmlfRK6b2Vec2($PA,$144,$93);
  $145=(+(HEAPF32[(($125)>>2)]));
  $146=((-.0))-($145);
  $147=(+(HEAPF32[(($141)>>2)]));
  $148=($147)*($146);
  __ZmlfRK6b2Vec2($PB,$148,$97);
  $149=(+(HEAPF32[(($36)>>2)]));
  __ZmlfRK6b2Vec2($9,$149,$PA);
  __ZN6b2Vec2pLERKS_($tmpcast21,$9);
  $150=(+(HEAPF32[(($44)>>2)]));
  $151=(+(__Z7b2CrossRK6b2Vec2S1_($85,$PA)));
  $152=($150)*($151);
  $153=($67)+($152);
  $154=(+(HEAPF32[(($40)>>2)]));
  __ZmlfRK6b2Vec2($10,$154,$PB);
  __ZN6b2Vec2pLERKS_($tmpcast23,$10);
  $155=(+(HEAPF32[(($48)>>2)]));
  $156=(+(__Z7b2CrossRK6b2Vec2S1_($89,$PB)));
  $157=($155)*($156);
  $158=($84)+($157);
  $wA_0=$153;$wB_0=$158;


  $162=((HEAP32[(($15)>>2)])|0);
  $163=((HEAP32[(($59)>>2)])|0);
  $164=(($163+((($162)*(12))&-1))|0);
  $165=$164;
  $ld$40$0=(($vA)|0);
  $166$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vA+4)|0);
  $166$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($165)|0);
  HEAP32[(($st$42$0)>>2)]=$166$0;
  $st$43$1=(($165+4)|0);
  HEAP32[(($st$43$1)>>2)]=$166$1;
  $167=((HEAP32[(($15)>>2)])|0);
  $168=((HEAP32[(($59)>>2)])|0);
  $169=(($168+((($167)*(12))&-1)+8)|0);
  HEAPF32[(($169)>>2)]=$wA_0;
  $170=((HEAP32[(($20)>>2)])|0);
  $171=((HEAP32[(($59)>>2)])|0);
  $172=(($171+((($170)*(12))&-1))|0);
  $173=$172;
  $ld$44$0=(($vB)|0);
  $174$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($vB+4)|0);
  $174$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($173)|0);
  HEAP32[(($st$46$0)>>2)]=$174$0;
  $st$47$1=(($173+4)|0);
  HEAP32[(($st$47$1)>>2)]=$174$1;
  $175=((HEAP32[(($20)>>2)])|0);
  $176=((HEAP32[(($59)>>2)])|0);
  $177=(($176+((($175)*(12))&-1)+8)|0);
  HEAPF32[(($177)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN13b2PulleyJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast15=0,$vpA=0,$1=0,$vpB=0,$2=0,$PA=0,$PB=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$ld$0$0=0,$11$0=0;
 var $ld$1$1=0,$11$1=0,$st$2$0=0,$st$3$1=0,$12=0,$13=0,$14=0,$15=.0,$16=0,$17=0,$18=0,$19=0,$ld$4$0=0,$20$0=0,$ld$5$1=0,$20$1=0,$st$6$0=0,$st$7$1=0,$21=0,$22=0;
 var $23=0,$24=.0,$25=0,$26=0,$27=0,$28=.0,$29=.0,$30=0,$31=.0,$32=0,$33=.0,$34=.0,$35=.0,$36=0,$37=.0,$38=.0,$39=.0,$40=0,$41=.0,$42=.0;
 var $43=.0,$44=.0,$45=.0,$46=.0,$47=0,$48=.0,$49=0,$50=.0,$51=.0,$52=.0,$53=.0,$54=0,$55=.0,$56=0,$57=.0,$58=.0,$59=.0,$60=.0,$61=0,$62=0;
 var $63=0,$64=0,$ld$8$0=0,$65$0=0,$ld$9$1=0,$65$1=0,$st$10$0=0,$st$11$1=0,$66=0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=0,$ld$12$0=0,$73$0=0,$ld$13$1=0,$73$1=0,$st$14$0=0;
 var $st$15$1=0,$74=0,$75=0,$76=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast15=$vB;
 $vpA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $vpB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $PA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $PB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=(($this+120)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($data+28)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($8+((($6)*(12))&-1))|0);
 $10=$9;
 $ld$0$0=(($10)|0);
 $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($10+4)|0);
 $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$11$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$11$1;
 $12=((HEAP32[(($5)>>2)])|0);
 $13=((HEAP32[(($7)>>2)])|0);
 $14=(($13+((($12)*(12))&-1)+8)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=(($this+124)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=(($13+((($17)*(12))&-1))|0);
 $19=$18;
 $ld$4$0=(($19)|0);
 $20$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($19+4)|0);
 $20$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$20$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$20$1;
 $21=((HEAP32[(($16)>>2)])|0);
 $22=((HEAP32[(($7)>>2)])|0);
 $23=(($22+((($21)*(12))&-1)+8)|0);
 $24=(+(HEAPF32[(($23)>>2)]));
 $25=(($this+144)|0);
 __Z7b2CrossfRK6b2Vec2($1,$15,$25);
 __ZplRK6b2Vec2S1_($vpA,$tmpcast,$1);
 $26=(($this+152)|0);
 __Z7b2CrossfRK6b2Vec2($2,$24,$26);
 __ZplRK6b2Vec2S1_($vpB,$tmpcast15,$2);
 $27=(($this+128)|0);
 $28=(+(__Z5b2DotRK6b2Vec2S1_($27,$vpA)));
 $29=((-.0))-($28);
 $30=(($this+112)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+136)|0);
 $33=(+(__Z5b2DotRK6b2Vec2S1_($32,$vpB)));
 $34=($31)*($33);
 $35=($29)-($34);
 $36=(($this+192)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=((-.0))-($37);
 $39=($35)*($38);
 $40=(($this+116)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=($41)+($39);
 HEAPF32[(($40)>>2)]=$42;
 $43=((-.0))-($39);
 __ZmlfRK6b2Vec2($PA,$43,$27);
 $44=(+(HEAPF32[(($30)>>2)]));
 $45=((-.0))-($44);
 $46=($39)*($45);
 __ZmlfRK6b2Vec2($PB,$46,$32);
 $47=(($this+176)|0);
 $48=(+(HEAPF32[(($47)>>2)]));
 __ZmlfRK6b2Vec2($3,$48,$PA);
 __ZN6b2Vec2pLERKS_($tmpcast,$3);
 $49=(($this+184)|0);
 $50=(+(HEAPF32[(($49)>>2)]));
 $51=(+(__Z7b2CrossRK6b2Vec2S1_($25,$PA)));
 $52=($50)*($51);
 $53=($15)+($52);
 $54=(($this+180)|0);
 $55=(+(HEAPF32[(($54)>>2)]));
 __ZmlfRK6b2Vec2($4,$55,$PB);
 __ZN6b2Vec2pLERKS_($tmpcast15,$4);
 $56=(($this+188)|0);
 $57=(+(HEAPF32[(($56)>>2)]));
 $58=(+(__Z7b2CrossRK6b2Vec2S1_($26,$PB)));
 $59=($57)*($58);
 $60=($24)+($59);
 $61=((HEAP32[(($5)>>2)])|0);
 $62=((HEAP32[(($7)>>2)])|0);
 $63=(($62+((($61)*(12))&-1))|0);
 $64=$63;
 $ld$8$0=(($vA)|0);
 $65$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vA+4)|0);
 $65$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($64)|0);
 HEAP32[(($st$10$0)>>2)]=$65$0;
 $st$11$1=(($64+4)|0);
 HEAP32[(($st$11$1)>>2)]=$65$1;
 $66=((HEAP32[(($5)>>2)])|0);
 $67=((HEAP32[(($7)>>2)])|0);
 $68=(($67+((($66)*(12))&-1)+8)|0);
 HEAPF32[(($68)>>2)]=$53;
 $69=((HEAP32[(($16)>>2)])|0);
 $70=((HEAP32[(($7)>>2)])|0);
 $71=(($70+((($69)*(12))&-1))|0);
 $72=$71;
 $ld$12$0=(($vB)|0);
 $73$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vB+4)|0);
 $73$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($72)|0);
 HEAP32[(($st$14$0)>>2)]=$73$0;
 $st$15$1=(($72+4)|0);
 HEAP32[(($st$15$1)>>2)]=$73$1;
 $74=((HEAP32[(($16)>>2)])|0);
 $75=((HEAP32[(($7)>>2)])|0);
 $76=(($75+((($74)*(12))&-1)+8)|0);
 HEAPF32[(($76)>>2)]=$60;
 STACKTOP=sp;return;
}


function __ZN13b2PulleyJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast23=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$uA=0,$3=0,$uB=0,$4=0,$PA=0,$PB=0,$5=0,$6=0,$7=0,$8=0;
 var $9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$st$2$0=0,$st$3$1=0,$14=0,$15=0,$16=0,$17=.0,$18=0,$19=0,$20=0,$21=0,$ld$4$0=0,$22$0=0;
 var $ld$5$1=0,$22$1=0,$st$6$0=0,$st$7$1=0,$23=0,$24=0,$25=0,$26=.0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=.0,$34=.0,$35=0,$37=.0,$40=0,$42=.0;
 var $45=.0,$46=.0,$47=0,$48=.0,$49=0,$50=.0,$51=.0,$52=.0,$53=.0,$54=0,$55=.0,$56=0,$57=.0,$58=.0,$59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=.0;
 var $65=.0,$66=0,$68=.0,$mass_0=.0,$70=0,$71=.0,$72=.0,$73=.0,$74=.0,$75=.0,$76=.0,$77=.0,$78=.0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0,$84=.0,$85=.0;
 var $86=.0,$87=.0,$88=.0,$89=.0,$90=.0,$91=.0,$92=.0,$93=0,$94=0,$95=0,$96=0,$ld$8$0=0,$97$0=0,$ld$9$1=0,$97$1=0,$st$10$0=0,$st$11$1=0,$98=0,$99=0,$100=0;
 var $101=0,$102=0,$103=0,$104=0,$ld$12$0=0,$105$0=0,$ld$13$1=0,$105$1=0,$st$14$0=0,$st$15$1=0,$106=0,$107=0,$108=0,$109=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast23=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $uA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $uB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $PA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $PB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+120)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($data+24)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+((($8)*(12))&-1))|0);
 $12=$11;
 $ld$0$0=(($12)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($12+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$13$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$13$1;
 $14=((HEAP32[(($7)>>2)])|0);
 $15=((HEAP32[(($9)>>2)])|0);
 $16=(($15+((($14)*(12))&-1)+8)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+124)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($15+((($19)*(12))&-1))|0);
 $21=$20;
 $ld$4$0=(($21)|0);
 $22$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($21+4)|0);
 $22$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$22$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$22$1;
 $23=((HEAP32[(($18)>>2)])|0);
 $24=((HEAP32[(($9)>>2)])|0);
 $25=(($24+((($23)*(12))&-1)+8)|0);
 $26=(+(HEAPF32[(($25)>>2)]));
 __ZN5b2RotC1Ef($qA,$17);
 __ZN5b2RotC1Ef($qB,$26);
 $27=(($this+92)|0);
 $28=(($this+160)|0);
 __ZmiRK6b2Vec2S1_($1,$27,$28);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $29=(($this+100)|0);
 $30=(($this+168)|0);
 __ZmiRK6b2Vec2S1_($2,$29,$30);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZplRK6b2Vec2S1_($3,$tmpcast,$rA);
 $31=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($uA,$3,$31);
 __ZplRK6b2Vec2S1_($4,$tmpcast23,$rB);
 $32=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($uB,$4,$32);
 $33=(+(__ZNK6b2Vec26LengthEv($uA)));
 $34=(+(__ZNK6b2Vec26LengthEv($uB)));
 $35=$33>(0.04999999701976776);
 if ($35) {
  $37=((1.0))/($33);
  __ZN6b2Vec2mLEf($uA,$37);
 } else {
  __ZN6b2Vec27SetZeroEv($uA);
 }
 $40=$34>(0.04999999701976776);
 if ($40) {
  $42=((1.0))/($34);
  __ZN6b2Vec2mLEf($uB,$42);
 } else {
  __ZN6b2Vec27SetZeroEv($uB);
 }
 $45=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$uA)));
 $46=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$uB)));
 $47=(($this+176)|0);
 $48=(+(HEAPF32[(($47)>>2)]));
 $49=(($this+184)|0);
 $50=(+(HEAPF32[(($49)>>2)]));
 $51=($45)*($50);
 $52=($45)*($51);
 $53=($48)+($52);
 $54=(($this+180)|0);
 $55=(+(HEAPF32[(($54)>>2)]));
 $56=(($this+188)|0);
 $57=(+(HEAPF32[(($56)>>2)]));
 $58=($46)*($57);
 $59=($46)*($58);
 $60=($55)+($59);
 $61=(($this+112)|0);
 $62=(+(HEAPF32[(($61)>>2)]));
 $63=($62)*($62);
 $64=($63)*($60);
 $65=($53)+($64);
 $66=$65>(0.0);
 if ($66) {
  $68=((1.0))/($65);
  $mass_0=$68;
 } else {
  $mass_0=$65;
 }

 $70=(($this+108)|0);
 $71=(+(HEAPF32[(($70)>>2)]));
 $72=($71)-($33);
 $73=(+(HEAPF32[(($61)>>2)]));
 $74=($34)*($73);
 $75=($72)-($74);
 $76=(+(__Z5b2AbsIfET_S0_($75)));
 $77=((-.0))-($mass_0);
 $78=($75)*($77);
 $79=((-.0))-($78);
 __ZmlfRK6b2Vec2($PA,$79,$uA);
 $80=(+(HEAPF32[(($61)>>2)]));
 $81=((-.0))-($80);
 $82=($78)*($81);
 __ZmlfRK6b2Vec2($PB,$82,$uB);
 $83=(+(HEAPF32[(($47)>>2)]));
 __ZmlfRK6b2Vec2($5,$83,$PA);
 __ZN6b2Vec2pLERKS_($tmpcast,$5);
 $84=(+(HEAPF32[(($49)>>2)]));
 $85=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$PA)));
 $86=($84)*($85);
 $87=($17)+($86);
 $88=(+(HEAPF32[(($54)>>2)]));
 __ZmlfRK6b2Vec2($6,$88,$PB);
 __ZN6b2Vec2pLERKS_($tmpcast23,$6);
 $89=(+(HEAPF32[(($56)>>2)]));
 $90=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$PB)));
 $91=($89)*($90);
 $92=($26)+($91);
 $93=((HEAP32[(($7)>>2)])|0);
 $94=((HEAP32[(($9)>>2)])|0);
 $95=(($94+((($93)*(12))&-1))|0);
 $96=$95;
 $ld$8$0=(($cA)|0);
 $97$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $97$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($96)|0);
 HEAP32[(($st$10$0)>>2)]=$97$0;
 $st$11$1=(($96+4)|0);
 HEAP32[(($st$11$1)>>2)]=$97$1;
 $98=((HEAP32[(($7)>>2)])|0);
 $99=((HEAP32[(($9)>>2)])|0);
 $100=(($99+((($98)*(12))&-1)+8)|0);
 HEAPF32[(($100)>>2)]=$87;
 $101=((HEAP32[(($18)>>2)])|0);
 $102=((HEAP32[(($9)>>2)])|0);
 $103=(($102+((($101)*(12))&-1))|0);
 $104=$103;
 $ld$12$0=(($cB)|0);
 $105$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $105$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($104)|0);
 HEAP32[(($st$14$0)>>2)]=$105$0;
 $st$15$1=(($104+4)|0);
 HEAP32[(($st$15$1)>>2)]=$105$1;
 $106=((HEAP32[(($18)>>2)])|0);
 $107=((HEAP32[(($9)>>2)])|0);
 $108=(($107+((($106)*(12))&-1)+8)|0);
 HEAPF32[(($108)>>2)]=$92;
 $109=$76<(0.004999999888241291);
 STACKTOP=sp;return (($109)|0);
}


function __ZNK13b2PulleyJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+92)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK13b2PulleyJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+100)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK13b2PulleyJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $P=0,$1=0,$2=.0,$3=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $P=((sp)|0);
 $1=(($this+116)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+136)|0);
 __ZmlfRK6b2Vec2($P,$2,$3);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$P);
 STACKTOP=sp;return;
}


function __ZNK13b2PulleyJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var label=0;

 return 0.0;
}


function __ZNK13b2PulleyJoint16GetGroundAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this+68)|0);
 $2=$1;
 $3=$agg_result;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function __ZNK13b2PulleyJoint16GetGroundAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this+76)|0);
 $2=$1;
 $3=$agg_result;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function __ZNK13b2PulleyJoint10GetLengthAEv($this){
 $this=($this)|0;
 var $p=0,$s=0,$tmpcast=0,$d=0,$1=0,$2=0,$3=0,$4=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$st$2$0=0,$st$3$1=0,$7=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $p=((sp)|0);
 $s=(((sp)+(8))|0);
 $tmpcast=$s;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+92)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($p,$2,$3);
 $4=(($this+68)|0);
 $5=$4;
 $ld$0$0=(($5)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($5+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($s)|0);
 HEAP32[(($st$2$0)>>2)]=$6$0;
 $st$3$1=(($s+4)|0);
 HEAP32[(($st$3$1)>>2)]=$6$1;
 __ZmiRK6b2Vec2S1_($d,$p,$tmpcast);
 $7=(+(__ZNK6b2Vec26LengthEv($d)));
 STACKTOP=sp;return (+($7));
}


function __ZNK13b2PulleyJoint10GetLengthBEv($this){
 $this=($this)|0;
 var $p=0,$s=0,$tmpcast=0,$d=0,$1=0,$2=0,$3=0,$4=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$st$2$0=0,$st$3$1=0,$7=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $p=((sp)|0);
 $s=(((sp)+(8))|0);
 $tmpcast=$s;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+100)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($p,$2,$3);
 $4=(($this+76)|0);
 $5=$4;
 $ld$0$0=(($5)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($5+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($s)|0);
 HEAP32[(($st$2$0)>>2)]=$6$0;
 $st$3$1=(($s+4)|0);
 HEAP32[(($st$3$1)>>2)]=$6$1;
 __ZmiRK6b2Vec2S1_($d,$p,$tmpcast);
 $7=(+(__ZNK6b2Vec26LengthEv($d)));
 STACKTOP=sp;return (+($7));
}


function __ZNK13b2PulleyJoint8GetRatioEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+112)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZN13b2PulleyJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=.0,$35=.0,$36=0,$37=.0,$38=.0,$39=0,$40=.0;
 var $41=.0,$42=0,$43=.0,$44=.0,$45=0,$46=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(4112,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3064,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2376,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(1664,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+68)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+72)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(1096,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+76)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+80)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(592,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+92)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 $27=(($this+96)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(136,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$26,HEAPF64[(((tempVarArgs)+(8))>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+100)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=$31;
 $33=(($this+104)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=$34;
 __Z5b2LogPKcz(11512,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$32,HEAPF64[(((tempVarArgs)+(8))>>3)]=$35,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $36=(($this+84)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=$37;
 __Z5b2LogPKcz(11072,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$38,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $39=(($this+88)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=$40;
 __Z5b2LogPKcz(10392,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$41,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $42=(($this+112)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=$43;
 __Z5b2LogPKcz(9512,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$44,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $45=(($this+56)|0);
 $46=((HEAP32[(($45)>>2)])|0);
 __Z5b2LogPKcz(8856,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$46,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN13b2PulleyJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN13b2PulleyJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN18b2RevoluteJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($this,$bA,$bB,$anchor){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 $anchor=($anchor)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0,$ld$4$0=0,$12$0=0;
 var $ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,$13=0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=$bA;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$bB;
 $5=(($this+20)|0);
 $6=((HEAP32[(($3)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$6,$anchor);
 $7=$5;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($this+28)|0);
 $10=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast5,$10,$anchor);
 $11=$9;
 $ld$4$0=(($2)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 $13=((HEAP32[(($4)>>2)])|0);
 $14=(+(__ZNK6b2Body8GetAngleEv($13)));
 $15=((HEAP32[(($3)>>2)])|0);
 $16=(+(__ZNK6b2Body8GetAngleEv($15)));
 $17=($14)-($16);
 $18=(($this+36)|0);
 HEAPF32[(($18)>>2)]=$17;
 STACKTOP=sp;return;
}


function __ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$11=0,$12=0,$13=0,$ld$4$0=0,$14$0=0;
 var $ld$5$1=0,$14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=.0,$17=0,$18=0,$19=0,$20=.0,$21=0,$22=0,$23=.0,$24=0,$25=0,$26=.0,$27=0,$28=0,$29=.0,$30=0;
 var $31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=13880;
 $4=(($this+68)|0);
 $5=(($this+76)|0);
 $6=(($this+84)|0);
 $7=(($def+20)|0);
 $8=$7;
 $9=$4;
 $ld$0$0=(($8)|0);
 $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($8+4)|0);
 $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($9)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 $st$3$1=(($9+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 $11=(($def+28)|0);
 $12=$11;
 $13=$5;
 $ld$4$0=(($12)|0);
 $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($12+4)|0);
 $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($13)|0);
 HEAP32[(($st$6$0)>>2)]=$14$0;
 $st$7$1=(($13+4)|0);
 HEAP32[(($st$7$1)>>2)]=$14$1;
 $15=(($def+36)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=(($this+116)|0);
 HEAPF32[(($17)>>2)]=$16;
 __ZN6b2Vec37SetZeroEv($6);
 $18=(($this+96)|0);
 HEAPF32[(($18)>>2)]=0.0;
 $19=(($def+44)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=(($this+120)|0);
 HEAPF32[(($21)>>2)]=$20;
 $22=(($def+48)|0);
 $23=(+(HEAPF32[(($22)>>2)]));
 $24=(($this+124)|0);
 HEAPF32[(($24)>>2)]=$23;
 $25=(($def+60)|0);
 $26=(+(HEAPF32[(($25)>>2)]));
 $27=(($this+104)|0);
 HEAPF32[(($27)>>2)]=$26;
 $28=(($def+56)|0);
 $29=(+(HEAPF32[(($28)>>2)]));
 $30=(($this+108)|0);
 HEAPF32[(($30)>>2)]=$29;
 $31=(($def+40)|0);
 $32=((HEAP8[($31)])|0);
 $33=(($this+112)|0);
 HEAP8[($33)]=$32;
 $34=(($def+52)|0);
 $35=((HEAP8[($34)])|0);
 $36=(($this+100)|0);
 HEAP8[($36)]=$35;
 $37=(($this+224)|0);
 HEAP32[(($37)>>2)]=0;
 return;
}


function __ZN15b2RevoluteJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast42=0,$qA=0,$qB=0,$1=0,$tmpcast43=0,$2=0,$3=0,$tmpcast44=0,$4=0,$P=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0;
 var $12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$ld$0$0=0,$22$0=0,$ld$1$1=0,$22$1=0,$st$2$0=0,$st$3$1=0,$23=0,$24=0,$25=0,$26=0;
 var $27=0,$ld$4$0=0,$28$0=0,$ld$5$1=0,$28$1=0,$st$6$0=0,$st$7$1=0,$29=0,$30=0,$31=.0,$32=0,$33=0,$34=0,$35=.0,$36=0,$37=0,$38=0,$39=.0,$40=0,$41=0;
 var $42=0,$43=.0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=.0,$50=0,$51=0,$52=0,$53=0,$ld$8$0=0,$54$0=0,$ld$9$1=0,$54$1=0,$st$10$0=0,$st$11$1=0,$55=0,$56=0;
 var $57=0,$58=.0,$59=0,$60=0,$61=0,$62=.0,$63=0,$64=0,$ld$12$0=0,$65$0=0,$ld$13$1=0,$65$1=0,$st$14$0=0,$st$15$1=0,$66=0,$67=0,$68=0,$69=.0,$70=0,$71=0;
 var $72=0,$ld$16$0=0,$73$0=0,$ld$17$1=0,$73$1=0,$st$18$0=0,$st$19$1=0,$74=0,$75=0,$76=0,$ld$20$0=0,$77$0=0,$ld$21$1=0,$77$1=0,$st$22$0=0,$st$23$1=0,$78=.0,$79=.0,$80=.0,$81=.0;
 var $82=.0,$83=0,$84=.0,$85=0,$86=.0,$87=.0,$88=.0,$89=.0,$90=0,$91=.0,$92=.0,$93=.0,$94=.0,$95=0,$96=.0,$97=.0,$98=0,$99=.0,$100=.0,$101=.0;
 var $102=.0,$103=0,$104=.0,$105=.0,$106=.0,$107=.0,$108=0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0,$115=0,$116=.0,$117=0,$118=.0,$119=.0,$120=.0,$121=.0;
 var $122=.0,$123=.0,$124=.0,$125=.0,$126=0,$127=.0,$128=.0,$129=.0,$130=.0,$131=.0,$132=0,$133=.0,$134=0,$135=.0,$136=0,$137=0,$138=0,$139=0,$141=.0,$storemerge=.0;
 var $143=0,$144=0,$145=0,$brmerge=0,$147=0,$149=0,$150=0,$151=0,$brmerge45=0,$153=.0,$154=0,$155=.0,$156=.0,$157=0,$158=.0,$159=0,$160=.0,$161=.0,$162=.0,$163=0;
 var $165=0,$167=0,$169=0,$170=0,$171=0,$173=0,$176=0,$177=0,$179=0,$180=0,$182=0,$185=0,$187=0,$189=0,$190=0,$191=0,$192=0,$194=0,$195=.0,$196=.0;
 var $197=0,$198=.0,$199=.0,$200=0,$201=.0,$202=0,$203=.0,$204=.0,$205=.0,$206=.0,$207=0,$208=.0,$209=.0,$210=.0,$211=.0,$212=.0,$213=.0,$214=.0,$215=.0,$216=.0;
 var $217=.0,$218=.0,$220=0,$wB_0=.0,$wA_0=.0,$222=0,$223=0,$224=0,$225=0,$ld$24$0=0,$226$0=0,$ld$25$1=0,$226$1=0,$st$26$0=0,$st$27$1=0,$227=0,$228=0,$229=0,$230=0,$231=0;
 var $232=0,$233=0,$ld$28$0=0,$234$0=0,$ld$29$1=0,$234$1=0,$st$30$0=0,$st$31$1=0,$235=0,$236=0,$237=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast42=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast43=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast44=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+48)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($8+8)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($this+128)|0);
 HEAP32[(($11)>>2)]=$10;
 $12=(($this+52)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($13+8)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=(($this+132)|0);
 HEAP32[(($16)>>2)]=$15;
 $17=(($this+152)|0);
 $18=((HEAP32[(($7)>>2)])|0);
 $19=(($18+28)|0);
 $20=$19;
 $21=$17;
 $ld$0$0=(($20)|0);
 $22$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($20+4)|0);
 $22$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($21)|0);
 HEAP32[(($st$2$0)>>2)]=$22$0;
 $st$3$1=(($21+4)|0);
 HEAP32[(($st$3$1)>>2)]=$22$1;
 $23=(($this+160)|0);
 $24=((HEAP32[(($12)>>2)])|0);
 $25=(($24+28)|0);
 $26=$25;
 $27=$23;
 $ld$4$0=(($26)|0);
 $28$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($26+4)|0);
 $28$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($27)|0);
 HEAP32[(($st$6$0)>>2)]=$28$0;
 $st$7$1=(($27+4)|0);
 HEAP32[(($st$7$1)>>2)]=$28$1;
 $29=((HEAP32[(($7)>>2)])|0);
 $30=(($29+120)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+168)|0);
 HEAPF32[(($32)>>2)]=$31;
 $33=((HEAP32[(($12)>>2)])|0);
 $34=(($33+120)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+172)|0);
 HEAPF32[(($36)>>2)]=$35;
 $37=((HEAP32[(($7)>>2)])|0);
 $38=(($37+128)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=(($this+176)|0);
 HEAPF32[(($40)>>2)]=$39;
 $41=((HEAP32[(($12)>>2)])|0);
 $42=(($41+128)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=(($this+180)|0);
 HEAPF32[(($44)>>2)]=$43;
 $45=((HEAP32[(($11)>>2)])|0);
 $46=(($data+24)|0);
 $47=((HEAP32[(($46)>>2)])|0);
 $48=(($47+((($45)*(12))&-1)+8)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=(($data+28)|0);
 $51=((HEAP32[(($50)>>2)])|0);
 $52=(($51+((($45)*(12))&-1))|0);
 $53=$52;
 $ld$8$0=(($53)|0);
 $54$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($53+4)|0);
 $54$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($vA)|0);
 HEAP32[(($st$10$0)>>2)]=$54$0;
 $st$11$1=(($vA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$54$1;
 $55=((HEAP32[(($11)>>2)])|0);
 $56=((HEAP32[(($50)>>2)])|0);
 $57=(($56+((($55)*(12))&-1)+8)|0);
 $58=(+(HEAPF32[(($57)>>2)]));
 $59=((HEAP32[(($16)>>2)])|0);
 $60=((HEAP32[(($46)>>2)])|0);
 $61=(($60+((($59)*(12))&-1)+8)|0);
 $62=(+(HEAPF32[(($61)>>2)]));
 $63=(($56+((($59)*(12))&-1))|0);
 $64=$63;
 $ld$12$0=(($64)|0);
 $65$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($64+4)|0);
 $65$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vB)|0);
 HEAP32[(($st$14$0)>>2)]=$65$0;
 $st$15$1=(($vB+4)|0);
 HEAP32[(($st$15$1)>>2)]=$65$1;
 $66=((HEAP32[(($16)>>2)])|0);
 $67=((HEAP32[(($50)>>2)])|0);
 $68=(($67+((($66)*(12))&-1)+8)|0);
 $69=(+(HEAPF32[(($68)>>2)]));
 __ZN5b2RotC1Ef($qA,$49);
 __ZN5b2RotC1Ef($qB,$62);
 $70=(($this+136)|0);
 $71=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($2,$71,$17);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast43,$qA,$2);
 $72=$70;
 $ld$16$0=(($1)|0);
 $73$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($1+4)|0);
 $73$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($72)|0);
 HEAP32[(($st$18$0)>>2)]=$73$0;
 $st$19$1=(($72+4)|0);
 HEAP32[(($st$19$1)>>2)]=$73$1;
 $74=(($this+144)|0);
 $75=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($4,$75,$23);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast44,$qB,$4);
 $76=$74;
 $ld$20$0=(($3)|0);
 $77$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($3+4)|0);
 $77$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($76)|0);
 HEAP32[(($st$22$0)>>2)]=$77$0;
 $st$23$1=(($76+4)|0);
 HEAP32[(($st$23$1)>>2)]=$77$1;
 $78=(+(HEAPF32[(($32)>>2)]));
 $79=(+(HEAPF32[(($36)>>2)]));
 $80=(+(HEAPF32[(($40)>>2)]));
 $81=(+(HEAPF32[(($44)>>2)]));
 $82=($80)+($81);
 $83=$82==(0.0);
 $84=($78)+($79);
 $85=(($this+140)|0);
 $86=(+(HEAPF32[(($85)>>2)]));
 $87=($86)*($86);
 $88=($80)*($87);
 $89=($84)+($88);
 $90=(($this+148)|0);
 $91=(+(HEAPF32[(($90)>>2)]));
 $92=($91)*($91);
 $93=($81)*($92);
 $94=($89)+($93);
 $95=(($this+184)|0);
 HEAPF32[(($95)>>2)]=$94;
 $96=(+(HEAPF32[(($85)>>2)]));
 $97=((-.0))-($96);
 $98=(($70)|0);
 $99=(+(HEAPF32[(($98)>>2)]));
 $100=($99)*($97);
 $101=($80)*($100);
 $102=(+(HEAPF32[(($90)>>2)]));
 $103=(($74)|0);
 $104=(+(HEAPF32[(($103)>>2)]));
 $105=($102)*($104);
 $106=($81)*($105);
 $107=($101)-($106);
 $108=(($this+196)|0);
 HEAPF32[(($108)>>2)]=$107;
 $109=(+(HEAPF32[(($85)>>2)]));
 $110=((-.0))-($109);
 $111=($80)*($110);
 $112=(+(HEAPF32[(($90)>>2)]));
 $113=($81)*($112);
 $114=($111)-($113);
 $115=(($this+208)|0);
 HEAPF32[(($115)>>2)]=$114;
 $116=(+(HEAPF32[(($108)>>2)]));
 $117=(($this+188)|0);
 HEAPF32[(($117)>>2)]=$116;
 $118=(+(HEAPF32[(($98)>>2)]));
 $119=($118)*($118);
 $120=($80)*($119);
 $121=($84)+($120);
 $122=(+(HEAPF32[(($103)>>2)]));
 $123=($122)*($122);
 $124=($81)*($123);
 $125=($121)+($124);
 $126=(($this+200)|0);
 HEAPF32[(($126)>>2)]=$125;
 $127=(+(HEAPF32[(($98)>>2)]));
 $128=($80)*($127);
 $129=(+(HEAPF32[(($103)>>2)]));
 $130=($81)*($129);
 $131=($128)+($130);
 $132=(($this+212)|0);
 HEAPF32[(($132)>>2)]=$131;
 $133=(+(HEAPF32[(($115)>>2)]));
 $134=(($this+192)|0);
 HEAPF32[(($134)>>2)]=$133;
 $135=(+(HEAPF32[(($132)>>2)]));
 $136=(($this+204)|0);
 HEAPF32[(($136)>>2)]=$135;
 $137=(($this+216)|0);
 HEAPF32[(($137)>>2)]=$82;
 $138=(($this+220)|0);
 $139=$82>(0.0);
 if ($139) {
  $141=((1.0))/($82);
  $storemerge=$141;
 } else {
  $storemerge=$82;
 }

 HEAPF32[(($138)>>2)]=$storemerge;
 $143=(($this+100)|0);
 $144=((HEAP8[($143)])|0);
 $145=(($144<<24)>>24)==0;
 $brmerge=$145|$83;
 if ($brmerge) {
  $147=(($this+96)|0);
  HEAPF32[(($147)>>2)]=0.0;
 }
 $149=(($this+112)|0);
 $150=((HEAP8[($149)])|0);
 $151=(($150<<24)>>24)==0;
 $brmerge45=$151|$83;
 do {
  if ($brmerge45) {
   $187=(($this+224)|0);
   HEAP32[(($187)>>2)]=0;
  } else {
   $153=($62)-($49);
   $154=(($this+116)|0);
   $155=(+(HEAPF32[(($154)>>2)]));
   $156=($153)-($155);
   $157=(($this+124)|0);
   $158=(+(HEAPF32[(($157)>>2)]));
   $159=(($this+120)|0);
   $160=(+(HEAPF32[(($159)>>2)]));
   $161=($158)-($160);
   $162=(+(__Z5b2AbsIfET_S0_($161)));
   $163=$162<(0.06981317698955536);
   if ($163) {
    $165=(($this+224)|0);
    HEAP32[(($165)>>2)]=3;
    break;
   }
   $167=$156>$160;
   if (!($167)) {
    $169=(($this+224)|0);
    $170=((HEAP32[(($169)>>2)])|0);
    $171=($170|0)==1;
    if (!($171)) {
     $173=(($this+92)|0);
     HEAPF32[(($173)>>2)]=0.0;
    }
    HEAP32[(($169)>>2)]=1;
    break;
   }
   $176=$156<$158;
   $177=(($this+224)|0);
   if ($176) {
    HEAP32[(($177)>>2)]=0;
    $185=(($this+92)|0);
    HEAPF32[(($185)>>2)]=0.0;
    break;
   }
   $179=((HEAP32[(($177)>>2)])|0);
   $180=($179|0)==2;
   if (!($180)) {
    $182=(($this+92)|0);
    HEAPF32[(($182)>>2)]=0.0;
   }
   HEAP32[(($177)>>2)]=2;
  }
 } while(0);
 $189=(($data+20)|0);
 $190=((HEAP8[($189)])|0);
 $191=(($190<<24)>>24)==0;
 $192=(($this+84)|0);
 if ($191) {
  __ZN6b2Vec37SetZeroEv($192);
  $220=(($this+96)|0);
  HEAPF32[(($220)>>2)]=0.0;
  $wA_0=$58;$wB_0=$69;


  $222=((HEAP32[(($11)>>2)])|0);
  $223=((HEAP32[(($50)>>2)])|0);
  $224=(($223+((($222)*(12))&-1))|0);
  $225=$224;
  $ld$24$0=(($vA)|0);
  $226$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($vA+4)|0);
  $226$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($225)|0);
  HEAP32[(($st$26$0)>>2)]=$226$0;
  $st$27$1=(($225+4)|0);
  HEAP32[(($st$27$1)>>2)]=$226$1;
  $227=((HEAP32[(($11)>>2)])|0);
  $228=((HEAP32[(($50)>>2)])|0);
  $229=(($228+((($227)*(12))&-1)+8)|0);
  HEAPF32[(($229)>>2)]=$wA_0;
  $230=((HEAP32[(($16)>>2)])|0);
  $231=((HEAP32[(($50)>>2)])|0);
  $232=(($231+((($230)*(12))&-1))|0);
  $233=$232;
  $ld$28$0=(($vB)|0);
  $234$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($vB+4)|0);
  $234$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($233)|0);
  HEAP32[(($st$30$0)>>2)]=$234$0;
  $st$31$1=(($233+4)|0);
  HEAP32[(($st$31$1)>>2)]=$234$1;
  $235=((HEAP32[(($16)>>2)])|0);
  $236=((HEAP32[(($50)>>2)])|0);
  $237=(($236+((($235)*(12))&-1)+8)|0);
  HEAPF32[(($237)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $194=(($data+8)|0);
  $195=(+(HEAPF32[(($194)>>2)]));
  __ZN6b2Vec3mLEf($192,$195);
  $196=(+(HEAPF32[(($194)>>2)]));
  $197=(($this+96)|0);
  $198=(+(HEAPF32[(($197)>>2)]));
  $199=($196)*($198);
  HEAPF32[(($197)>>2)]=$199;
  $200=(($192)|0);
  $201=(+(HEAPF32[(($200)>>2)]));
  $202=(($this+88)|0);
  $203=(+(HEAPF32[(($202)>>2)]));
  __ZN6b2Vec2C1Eff($P,$201,$203);
  __ZmlfRK6b2Vec2($5,$78,$P);
  __ZN6b2Vec2mIERKS_($tmpcast,$5);
  $204=(+(__Z7b2CrossRK6b2Vec2S1_($70,$P)));
  $205=(+(HEAPF32[(($197)>>2)]));
  $206=($204)+($205);
  $207=(($this+92)|0);
  $208=(+(HEAPF32[(($207)>>2)]));
  $209=($206)+($208);
  $210=($80)*($209);
  $211=($58)-($210);
  __ZmlfRK6b2Vec2($6,$79,$P);
  __ZN6b2Vec2pLERKS_($tmpcast42,$6);
  $212=(+(__Z7b2CrossRK6b2Vec2S1_($74,$P)));
  $213=(+(HEAPF32[(($197)>>2)]));
  $214=($212)+($213);
  $215=(+(HEAPF32[(($207)>>2)]));
  $216=($214)+($215);
  $217=($81)*($216);
  $218=($69)+($217);
  $wA_0=$211;$wB_0=$218;


  $222=((HEAP32[(($11)>>2)])|0);
  $223=((HEAP32[(($50)>>2)])|0);
  $224=(($223+((($222)*(12))&-1))|0);
  $225=$224;
  $ld$24$0=(($vA)|0);
  $226$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($vA+4)|0);
  $226$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($225)|0);
  HEAP32[(($st$26$0)>>2)]=$226$0;
  $st$27$1=(($225+4)|0);
  HEAP32[(($st$27$1)>>2)]=$226$1;
  $227=((HEAP32[(($11)>>2)])|0);
  $228=((HEAP32[(($50)>>2)])|0);
  $229=(($228+((($227)*(12))&-1)+8)|0);
  HEAPF32[(($229)>>2)]=$wA_0;
  $230=((HEAP32[(($16)>>2)])|0);
  $231=((HEAP32[(($50)>>2)])|0);
  $232=(($231+((($230)*(12))&-1))|0);
  $233=$232;
  $ld$28$0=(($vB)|0);
  $234$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($vB+4)|0);
  $234$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($233)|0);
  HEAP32[(($st$30$0)>>2)]=$234$0;
  $st$31$1=(($233+4)|0);
  HEAP32[(($st$31$1)>>2)]=$234$1;
  $235=((HEAP32[(($16)>>2)])|0);
  $236=((HEAP32[(($50)>>2)])|0);
  $237=(($236+((($235)*(12))&-1)+8)|0);
  HEAPF32[(($237)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN15b2RevoluteJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast36=0,$Cdot1=0,$1=0,$2=0,$3=0,$4=0,$Cdot3=0,$impulse4=0,$5=0,$rhs=0,$6=0,$7=0,$8=0,$reduced=0,$rhs6=0,$9=0,$10=0;
 var $11=0,$reduced7=0,$P=0,$12=0,$13=0,$Cdot8=0,$14=0,$15=0,$16=0,$17=0,$impulse9=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0;
 var $ld$0$0=0,$27$0=0,$ld$1$1=0,$27$1=0,$st$2$0=0,$st$3$1=0,$28=0,$29=0,$30=0,$31=.0,$32=0,$33=0,$34=0,$35=0,$ld$4$0=0,$36$0=0,$ld$5$1=0,$36$1=0,$st$6$0=0,$st$7$1=0;
 var $37=0,$38=0,$39=0,$40=.0,$41=0,$42=.0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=0,$51=0,$52=0,$53=0,$55=0,$56=0,$57=0;
 var $brmerge=0,$59=.0,$60=0,$61=.0,$62=.0,$63=0,$64=.0,$65=.0,$66=.0,$67=0,$68=.0,$69=0,$70=.0,$71=0,$72=.0,$73=.0,$74=.0,$75=.0,$76=.0,$77=.0;
 var $78=.0,$79=.0,$80=.0,$81=.0,$wB_0=.0,$wA_0=.0,$83=0,$84=0,$85=0,$87=0,$88=0,$89=0,$brmerge40=0,$91=0,$92=0,$93=.0,$94=0,$95=.0,$96=0,$97=.0;
 var $98=0,$99=0,$101=0,$103=0,$104=0,$105=.0,$106=0,$107=.0,$108=.0,$109=0,$111=.0,$112=0,$113=.0,$114=0,$115=.0,$116=0,$117=.0,$118=0,$119=0,$120=.0;
 var $121=0,$122=.0,$123=.0,$124=.0,$125=0,$126=.0,$127=.0,$128=.0,$129=0,$130=.0,$131=.0,$134=0,$135=0,$136=.0,$137=0,$138=.0,$139=.0,$140=0,$142=.0,$143=0;
 var $144=.0,$145=0,$146=.0,$147=0,$148=.0,$149=0,$150=0,$151=.0,$152=0,$153=.0,$154=.0,$155=.0,$156=0,$157=.0,$158=.0,$159=.0,$160=0,$161=.0,$162=.0,$165=0;
 var $166=.0,$167=0,$168=.0,$169=.0,$170=0,$171=.0,$172=.0,$173=.0,$174=.0,$175=.0,$177=0,$178=0,$179=0,$180=0,$181=.0,$182=0,$183=.0,$184=.0,$185=0,$186=.0;
 var $187=0,$188=.0,$189=.0,$190=.0,$191=.0,$_pn38=.0,$_pn39=.0,$_pn37=.0,$_pn=.0,$wA_1=.0,$wB_1=.0,$193=0,$194=0,$195=0,$196=0,$ld$8$0=0,$197$0=0,$ld$9$1=0,$197$1=0,$st$10$0=0;
 var $st$11$1=0,$198=0,$199=0,$200=0,$201=0,$202=0,$203=0,$204=0,$ld$12$0=0,$205$0=0,$ld$13$1=0,$205$1=0,$st$14$0=0,$st$15$1=0,$206=0,$207=0,$208=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$vB;
 $Cdot1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $Cdot3=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $impulse4=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $5=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $rhs=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $reduced=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rhs6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $reduced7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $Cdot8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $16=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $17=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $impulse9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $19=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $20=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $21=(($this+128)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=(($data+28)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=(($24+((($22)*(12))&-1))|0);
 $26=$25;
 $ld$0$0=(($26)|0);
 $27$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($26+4)|0);
 $27$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$27$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$27$1;
 $28=((HEAP32[(($21)>>2)])|0);
 $29=((HEAP32[(($23)>>2)])|0);
 $30=(($29+((($28)*(12))&-1)+8)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+132)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=(($29+((($33)*(12))&-1))|0);
 $35=$34;
 $ld$4$0=(($35)|0);
 $36$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($35+4)|0);
 $36$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$36$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$36$1;
 $37=((HEAP32[(($32)>>2)])|0);
 $38=((HEAP32[(($23)>>2)])|0);
 $39=(($38+((($37)*(12))&-1)+8)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=(($this+168)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+172)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=(($this+176)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=(($this+180)|0);
 $48=(+(HEAPF32[(($47)>>2)]));
 $49=($46)+($48);
 $50=$49==(0.0);
 $51=(($this+100)|0);
 $52=((HEAP8[($51)])|0);
 $53=(($52<<24)>>24)==0;
 do {
  if ($53) {
   $wA_0=$31;$wB_0=$40;
  } else {
   $55=(($this+224)|0);
   $56=((HEAP32[(($55)>>2)])|0);
   $57=($56|0)==3;
   $brmerge=$57|$50;
   if ($brmerge) {
    $wA_0=$31;$wB_0=$40;
    break;
   }
   $59=($40)-($31);
   $60=(($this+108)|0);
   $61=(+(HEAPF32[(($60)>>2)]));
   $62=($59)-($61);
   $63=(($this+220)|0);
   $64=(+(HEAPF32[(($63)>>2)]));
   $65=((-.0))-($64);
   $66=($62)*($65);
   $67=(($this+96)|0);
   $68=(+(HEAPF32[(($67)>>2)]));
   $69=(($data)|0);
   $70=(+(HEAPF32[(($69)>>2)]));
   $71=(($this+104)|0);
   $72=(+(HEAPF32[(($71)>>2)]));
   $73=($70)*($72);
   $74=($68)+($66);
   $75=((-.0))-($73);
   $76=(+(__Z7b2ClampIfET_S0_S0_S0_($74,$75,$73)));
   HEAPF32[(($67)>>2)]=$76;
   $77=($76)-($68);
   $78=($46)*($77);
   $79=($31)-($78);
   $80=($48)*($77);
   $81=($40)+($80);
   $wA_0=$79;$wB_0=$81;
  }
 } while(0);


 $83=(($this+112)|0);
 $84=((HEAP8[($83)])|0);
 $85=(($84<<24)>>24)==0;
 do {
  if (!($85)) {
   $87=(($this+224)|0);
   $88=((HEAP32[(($87)>>2)])|0);
   $89=($88|0)==0;
   $brmerge40=$89|$50;
   if ($brmerge40) {
    break;
   }
   $91=(($this+144)|0);
   __Z7b2CrossfRK6b2Vec2($3,$wB_0,$91);
   __ZplRK6b2Vec2S1_($2,$tmpcast36,$3);
   __ZmiRK6b2Vec2S1_($1,$2,$tmpcast);
   $92=(($this+136)|0);
   __Z7b2CrossfRK6b2Vec2($4,$wA_0,$92);
   __ZmiRK6b2Vec2S1_($Cdot1,$1,$4);
   $93=($wB_0)-($wA_0);
   $94=(($Cdot1)|0);
   $95=(+(HEAPF32[(($94)>>2)]));
   $96=(($Cdot1+4)|0);
   $97=(+(HEAPF32[(($96)>>2)]));
   __ZN6b2Vec3C1Efff($Cdot3,$95,$97,$93);
   $98=(($this+184)|0);
   __ZNK7b2Mat337Solve33ERK6b2Vec3($5,$98,$Cdot3);
   __ZNK6b2Vec3ngEv($impulse4,$5);
   $99=((HEAP32[(($87)>>2)])|0);
   do {
    if (((($99|0))|0)==((3)|0)) {
     $101=(($this+84)|0);
     __ZN6b2Vec3pLERKS_($101,$impulse4);
    } else if (((($99|0))|0)==((1)|0)) {
     $103=(($this+84)|0);
     $104=(($this+92)|0);
     $105=(+(HEAPF32[(($104)>>2)]));
     $106=(($impulse4+8)|0);
     $107=(+(HEAPF32[(($106)>>2)]));
     $108=($105)+($107);
     $109=$108<(0.0);
     if ($109) {
      __ZNK6b2Vec2ngEv($6,$Cdot1);
      $111=(+(HEAPF32[(($104)>>2)]));
      $112=(($this+208)|0);
      $113=(+(HEAPF32[(($112)>>2)]));
      $114=(($this+212)|0);
      $115=(+(HEAPF32[(($114)>>2)]));
      __ZN6b2Vec2C1Eff($8,$113,$115);
      __ZmlfRK6b2Vec2($7,$111,$8);
      __ZplRK6b2Vec2S1_($rhs,$6,$7);
      __ZNK7b2Mat337Solve22ERK6b2Vec2($reduced,$98,$rhs);
      $116=(($reduced)|0);
      $117=(+(HEAPF32[(($116)>>2)]));
      $118=(($impulse4)|0);
      HEAPF32[(($118)>>2)]=$117;
      $119=(($reduced+4)|0);
      $120=(+(HEAPF32[(($119)>>2)]));
      $121=(($impulse4+4)|0);
      HEAPF32[(($121)>>2)]=$120;
      $122=(+(HEAPF32[(($104)>>2)]));
      $123=((-.0))-($122);
      HEAPF32[(($106)>>2)]=$123;
      $124=(+(HEAPF32[(($116)>>2)]));
      $125=(($103)|0);
      $126=(+(HEAPF32[(($125)>>2)]));
      $127=($124)+($126);
      HEAPF32[(($125)>>2)]=$127;
      $128=(+(HEAPF32[(($119)>>2)]));
      $129=(($this+88)|0);
      $130=(+(HEAPF32[(($129)>>2)]));
      $131=($128)+($130);
      HEAPF32[(($129)>>2)]=$131;
      HEAPF32[(($104)>>2)]=0.0;
      break;
     } else {
      __ZN6b2Vec3pLERKS_($103,$impulse4);
      break;
     }
    } else if (((($99|0))|0)==((2)|0)) {
     $134=(($this+84)|0);
     $135=(($this+92)|0);
     $136=(+(HEAPF32[(($135)>>2)]));
     $137=(($impulse4+8)|0);
     $138=(+(HEAPF32[(($137)>>2)]));
     $139=($136)+($138);
     $140=$139>(0.0);
     if ($140) {
      __ZNK6b2Vec2ngEv($9,$Cdot1);
      $142=(+(HEAPF32[(($135)>>2)]));
      $143=(($this+208)|0);
      $144=(+(HEAPF32[(($143)>>2)]));
      $145=(($this+212)|0);
      $146=(+(HEAPF32[(($145)>>2)]));
      __ZN6b2Vec2C1Eff($11,$144,$146);
      __ZmlfRK6b2Vec2($10,$142,$11);
      __ZplRK6b2Vec2S1_($rhs6,$9,$10);
      __ZNK7b2Mat337Solve22ERK6b2Vec2($reduced7,$98,$rhs6);
      $147=(($reduced7)|0);
      $148=(+(HEAPF32[(($147)>>2)]));
      $149=(($impulse4)|0);
      HEAPF32[(($149)>>2)]=$148;
      $150=(($reduced7+4)|0);
      $151=(+(HEAPF32[(($150)>>2)]));
      $152=(($impulse4+4)|0);
      HEAPF32[(($152)>>2)]=$151;
      $153=(+(HEAPF32[(($135)>>2)]));
      $154=((-.0))-($153);
      HEAPF32[(($137)>>2)]=$154;
      $155=(+(HEAPF32[(($147)>>2)]));
      $156=(($134)|0);
      $157=(+(HEAPF32[(($156)>>2)]));
      $158=($155)+($157);
      HEAPF32[(($156)>>2)]=$158;
      $159=(+(HEAPF32[(($150)>>2)]));
      $160=(($this+88)|0);
      $161=(+(HEAPF32[(($160)>>2)]));
      $162=($159)+($161);
      HEAPF32[(($160)>>2)]=$162;
      HEAPF32[(($135)>>2)]=0.0;
      break;
     } else {
      __ZN6b2Vec3pLERKS_($134,$impulse4);
      break;
     }
    }
   } while(0);
   $165=(($impulse4)|0);
   $166=(+(HEAPF32[(($165)>>2)]));
   $167=(($impulse4+4)|0);
   $168=(+(HEAPF32[(($167)>>2)]));
   __ZN6b2Vec2C1Eff($P,$166,$168);
   __ZmlfRK6b2Vec2($12,$42,$P);
   __ZN6b2Vec2mIERKS_($tmpcast,$12);
   $169=(+(__Z7b2CrossRK6b2Vec2S1_($92,$P)));
   $170=(($impulse4+8)|0);
   $171=(+(HEAPF32[(($170)>>2)]));
   $172=($169)+($171);
   __ZmlfRK6b2Vec2($13,$44,$P);
   __ZN6b2Vec2pLERKS_($tmpcast36,$13);
   $173=(+(__Z7b2CrossRK6b2Vec2S1_($91,$P)));
   $174=(+(HEAPF32[(($170)>>2)]));
   $175=($173)+($174);
   $_pn39=$172;$_pn38=$175;


   $_pn37=($46)*($_pn39);
   $_pn=($48)*($_pn38);
   $wA_1=($wA_0)-($_pn37);
   $wB_1=($wB_0)+($_pn);
   $193=((HEAP32[(($21)>>2)])|0);
   $194=((HEAP32[(($23)>>2)])|0);
   $195=(($194+((($193)*(12))&-1))|0);
   $196=$195;
   $ld$8$0=(($vA)|0);
   $197$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($vA+4)|0);
   $197$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($196)|0);
   HEAP32[(($st$10$0)>>2)]=$197$0;
   $st$11$1=(($196+4)|0);
   HEAP32[(($st$11$1)>>2)]=$197$1;
   $198=((HEAP32[(($21)>>2)])|0);
   $199=((HEAP32[(($23)>>2)])|0);
   $200=(($199+((($198)*(12))&-1)+8)|0);
   HEAPF32[(($200)>>2)]=$wA_1;
   $201=((HEAP32[(($32)>>2)])|0);
   $202=((HEAP32[(($23)>>2)])|0);
   $203=(($202+((($201)*(12))&-1))|0);
   $204=$203;
   $ld$12$0=(($vB)|0);
   $205$0=((HEAP32[(($ld$12$0)>>2)])|0);
   $ld$13$1=(($vB+4)|0);
   $205$1=((HEAP32[(($ld$13$1)>>2)])|0);
   $st$14$0=(($204)|0);
   HEAP32[(($st$14$0)>>2)]=$205$0;
   $st$15$1=(($204+4)|0);
   HEAP32[(($st$15$1)>>2)]=$205$1;
   $206=((HEAP32[(($32)>>2)])|0);
   $207=((HEAP32[(($23)>>2)])|0);
   $208=(($207+((($206)*(12))&-1)+8)|0);
   HEAPF32[(($208)>>2)]=$wB_1;
   STACKTOP=sp;return;
  }
 } while(0);
 $177=(($this+144)|0);
 __Z7b2CrossfRK6b2Vec2($16,$wB_0,$177);
 __ZplRK6b2Vec2S1_($15,$tmpcast36,$16);
 __ZmiRK6b2Vec2S1_($14,$15,$tmpcast);
 $178=(($this+136)|0);
 __Z7b2CrossfRK6b2Vec2($17,$wA_0,$178);
 __ZmiRK6b2Vec2S1_($Cdot8,$14,$17);
 $179=(($this+184)|0);
 __ZNK6b2Vec2ngEv($18,$Cdot8);
 __ZNK7b2Mat337Solve22ERK6b2Vec2($impulse9,$179,$18);
 $180=(($impulse9)|0);
 $181=(+(HEAPF32[(($180)>>2)]));
 $182=(($this+84)|0);
 $183=(+(HEAPF32[(($182)>>2)]));
 $184=($181)+($183);
 HEAPF32[(($182)>>2)]=$184;
 $185=(($impulse9+4)|0);
 $186=(+(HEAPF32[(($185)>>2)]));
 $187=(($this+88)|0);
 $188=(+(HEAPF32[(($187)>>2)]));
 $189=($186)+($188);
 HEAPF32[(($187)>>2)]=$189;
 __ZmlfRK6b2Vec2($19,$42,$impulse9);
 __ZN6b2Vec2mIERKS_($tmpcast,$19);
 $190=(+(__Z7b2CrossRK6b2Vec2S1_($178,$impulse9)));
 __ZmlfRK6b2Vec2($20,$44,$impulse9);
 __ZN6b2Vec2pLERKS_($tmpcast36,$20);
 $191=(+(__Z7b2CrossRK6b2Vec2S1_($177,$impulse9)));
 $_pn39=$190;$_pn38=$191;


 $_pn37=($46)*($_pn39);
 $_pn=($48)*($_pn38);
 $wA_1=($wA_0)-($_pn37);
 $wB_1=($wB_0)+($_pn);
 $193=((HEAP32[(($21)>>2)])|0);
 $194=((HEAP32[(($23)>>2)])|0);
 $195=(($194+((($193)*(12))&-1))|0);
 $196=$195;
 $ld$8$0=(($vA)|0);
 $197$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vA+4)|0);
 $197$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($196)|0);
 HEAP32[(($st$10$0)>>2)]=$197$0;
 $st$11$1=(($196+4)|0);
 HEAP32[(($st$11$1)>>2)]=$197$1;
 $198=((HEAP32[(($21)>>2)])|0);
 $199=((HEAP32[(($23)>>2)])|0);
 $200=(($199+((($198)*(12))&-1)+8)|0);
 HEAPF32[(($200)>>2)]=$wA_1;
 $201=((HEAP32[(($32)>>2)])|0);
 $202=((HEAP32[(($23)>>2)])|0);
 $203=(($202+((($201)*(12))&-1))|0);
 $204=$203;
 $ld$12$0=(($vB)|0);
 $205$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vB+4)|0);
 $205$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($204)|0);
 HEAP32[(($st$14$0)>>2)]=$205$0;
 $st$15$1=(($204+4)|0);
 HEAP32[(($st$15$1)>>2)]=$205$1;
 $206=((HEAP32[(($32)>>2)])|0);
 $207=((HEAP32[(($23)>>2)])|0);
 $208=(($207+((($206)*(12))&-1)+8)|0);
 HEAPF32[(($208)>>2)]=$wB_1;
 STACKTOP=sp;return;
}


function __ZN15b2RevoluteJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast37=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$C3=0,$3=0,$4=0,$K=0,$impulse=0,$5=0,$6=0,$7=0,$8=0,$9=0;
 var $10=0,$11=0,$12=0,$13=0,$ld$0$0=0,$14$0=0,$ld$1$1=0,$14$1=0,$st$2$0=0,$st$3$1=0,$15=0,$16=0,$17=0,$18=.0,$19=0,$20=0,$21=0,$22=0,$ld$4$0=0,$23$0=0;
 var $ld$5$1=0,$23$1=0,$st$6$0=0,$st$7$1=0,$24=0,$25=0,$26=0,$27=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$34=.0,$35=.0,$36=.0,$37=0,$38=0,$39=0,$40=0;
 var $brmerge=0,$42=.0,$43=0,$44=.0,$45=.0,$47=0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=.0,$54=.0,$55=.0,$57=0,$58=.0,$59=.0,$60=.0,$61=.0,$62=.0;
 var $63=0,$64=.0,$65=.0,$66=.0,$68=0,$69=.0,$70=.0,$71=.0,$72=.0,$73=0,$74=.0,$75=.0,$76=.0,$limitImpulse_0=.0,$angularError_0=.0,$78=.0,$79=.0,$80=.0,$81=.0,$82=.0;
 var $83=.0,$angularError_1=.0,$aB_0=.0,$aA_0=.0,$85=0,$86=0,$87=0,$88=0,$89=.0,$90=0,$91=.0,$92=0,$93=.0,$94=.0,$95=.0,$96=.0,$97=0,$98=.0,$99=.0,$100=.0;
 var $101=.0,$102=0,$103=.0,$104=.0,$105=.0,$106=.0,$107=0,$108=.0,$109=0,$110=.0,$111=.0,$112=.0,$113=.0,$114=0,$115=.0,$116=.0,$117=.0,$118=.0,$119=.0,$120=0;
 var $121=0,$122=.0,$123=.0,$124=.0,$125=.0,$126=.0,$127=.0,$128=.0,$129=.0,$130=0,$131=.0,$132=.0,$133=.0,$134=.0,$135=.0,$136=.0,$137=0,$138=0,$139=0,$140=0;
 var $ld$8$0=0,$141$0=0,$ld$9$1=0,$141$1=0,$st$10$0=0,$st$11$1=0,$142=0,$143=0,$144=0,$145=0,$146=0,$147=0,$148=0,$ld$12$0=0,$149$0=0,$ld$13$1=0,$149$1=0,$st$14$0=0,$st$15$1=0,$150=0;
 var $151=0,$152=0,$153=0,$155=0,$157=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast37=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $C3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $impulse=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=(($this+128)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($data+24)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+((($9)*(12))&-1))|0);
 $13=$12;
 $ld$0$0=(($13)|0);
 $14$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$14$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$14$1;
 $15=((HEAP32[(($8)>>2)])|0);
 $16=((HEAP32[(($10)>>2)])|0);
 $17=(($16+((($15)*(12))&-1)+8)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=(($this+132)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=(($16+((($20)*(12))&-1))|0);
 $22=$21;
 $ld$4$0=(($22)|0);
 $23$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($22+4)|0);
 $23$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$23$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$23$1;
 $24=((HEAP32[(($19)>>2)])|0);
 $25=((HEAP32[(($10)>>2)])|0);
 $26=(($25+((($24)*(12))&-1)+8)|0);
 $27=(+(HEAPF32[(($26)>>2)]));
 __ZN5b2RotC1Ef($qA,$18);
 __ZN5b2RotC1Ef($qB,$27);
 $28=(($this+176)|0);
 $29=(($this+180)|0);
 $30=(($this+112)|0);
 $31=((HEAP8[($30)])|0);
 $32=(($31<<24)>>24)==0;
 do {
  if ($32) {
   $aA_0=$18;$aB_0=$27;$angularError_1=0.0;
  } else {
   $34=(+(HEAPF32[(($29)>>2)]));
   $35=(+(HEAPF32[(($28)>>2)]));
   $36=($34)+($35);
   $37=$36==(0.0);
   $38=(($this+224)|0);
   $39=((HEAP32[(($38)>>2)])|0);
   $40=($39|0)==0;
   $brmerge=$40|$37;
   if ($brmerge) {
    $aA_0=$18;$aB_0=$27;$angularError_1=0.0;
    break;
   }
   $42=($27)-($18);
   $43=(($this+116)|0);
   $44=(+(HEAPF32[(($43)>>2)]));
   $45=($42)-($44);
   if (((($39|0))|0)==((3)|0)) {
    $47=(($this+120)|0);
    $48=(+(HEAPF32[(($47)>>2)]));
    $49=($45)-($48);
    $50=(+(__Z7b2ClampIfET_S0_S0_S0_($49,-0.13962635397911072,0.13962635397911072)));
    $51=(($this+220)|0);
    $52=(+(HEAPF32[(($51)>>2)]));
    $53=((-.0))-($52);
    $54=($50)*($53);
    $55=(+(__Z5b2AbsIfET_S0_($50)));
    $angularError_0=$55;$limitImpulse_0=$54;
   } else if (((($39|0))|0)==((1)|0)) {
    $57=(($this+120)|0);
    $58=(+(HEAPF32[(($57)>>2)]));
    $59=($45)-($58);
    $60=((-.0))-($59);
    $61=($59)+((0.03490658849477768));
    $62=(+(__Z7b2ClampIfET_S0_S0_S0_($61,-0.13962635397911072,0.0)));
    $63=(($this+220)|0);
    $64=(+(HEAPF32[(($63)>>2)]));
    $65=((-.0))-($64);
    $66=($62)*($65);
    $angularError_0=$60;$limitImpulse_0=$66;
   } else if (((($39|0))|0)==((2)|0)) {
    $68=(($this+124)|0);
    $69=(+(HEAPF32[(($68)>>2)]));
    $70=($45)-($69);
    $71=($70)+((-0.03490658849477768));
    $72=(+(__Z7b2ClampIfET_S0_S0_S0_($71,0.0,0.13962635397911072)));
    $73=(($this+220)|0);
    $74=(+(HEAPF32[(($73)>>2)]));
    $75=((-.0))-($74);
    $76=($72)*($75);
    $angularError_0=$70;$limitImpulse_0=$76;
   } else {
    $angularError_0=0.0;$limitImpulse_0=0.0;
   }


   $78=(+(HEAPF32[(($28)>>2)]));
   $79=($limitImpulse_0)*($78);
   $80=($18)-($79);
   $81=(+(HEAPF32[(($29)>>2)]));
   $82=($limitImpulse_0)*($81);
   $83=($27)+($82);
   $aA_0=$80;$aB_0=$83;$angularError_1=$angularError_0;
  }
 } while(0);



 __ZN5b2Rot3SetEf($qA,$aA_0);
 __ZN5b2Rot3SetEf($qB,$aB_0);
 $85=(($this+68)|0);
 $86=(($this+152)|0);
 __ZmiRK6b2Vec2S1_($1,$85,$86);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $87=(($this+76)|0);
 $88=(($this+160)|0);
 __ZmiRK6b2Vec2S1_($2,$87,$88);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZplRK6b2Vec2S1_($4,$tmpcast37,$rB);
 __ZmiRK6b2Vec2S1_($3,$4,$tmpcast);
 __ZmiRK6b2Vec2S1_($C3,$3,$rA);
 $89=(+(__ZNK6b2Vec26LengthEv($C3)));
 $90=(($this+168)|0);
 $91=(+(HEAPF32[(($90)>>2)]));
 $92=(($this+172)|0);
 $93=(+(HEAPF32[(($92)>>2)]));
 $94=(+(HEAPF32[(($28)>>2)]));
 $95=(+(HEAPF32[(($29)>>2)]));
 $96=($91)+($93);
 $97=(($rA+4)|0);
 $98=(+(HEAPF32[(($97)>>2)]));
 $99=($94)*($98);
 $100=($98)*($99);
 $101=($96)+($100);
 $102=(($rB+4)|0);
 $103=(+(HEAPF32[(($102)>>2)]));
 $104=($95)*($103);
 $105=($103)*($104);
 $106=($101)+($105);
 $107=(($K)|0);
 HEAPF32[(($107)>>2)]=$106;
 $108=((-.0))-($94);
 $109=(($rA)|0);
 $110=(+(HEAPF32[(($109)>>2)]));
 $111=($110)*($108);
 $112=(+(HEAPF32[(($97)>>2)]));
 $113=($111)*($112);
 $114=(($rB)|0);
 $115=(+(HEAPF32[(($114)>>2)]));
 $116=($95)*($115);
 $117=(+(HEAPF32[(($102)>>2)]));
 $118=($116)*($117);
 $119=($113)-($118);
 $120=(($K+4)|0);
 HEAPF32[(($120)>>2)]=$119;
 $121=(($K+8)|0);
 HEAPF32[(($121)>>2)]=$119;
 $122=(+(HEAPF32[(($109)>>2)]));
 $123=($94)*($122);
 $124=($122)*($123);
 $125=($96)+($124);
 $126=(+(HEAPF32[(($114)>>2)]));
 $127=($95)*($126);
 $128=($126)*($127);
 $129=($125)+($128);
 $130=(($K+12)|0);
 HEAPF32[(($130)>>2)]=$129;
 __ZNK7b2Mat225SolveERK6b2Vec2($5,$K,$C3);
 __ZNK6b2Vec2ngEv($impulse,$5);
 __ZmlfRK6b2Vec2($6,$91,$impulse);
 __ZN6b2Vec2mIERKS_($tmpcast,$6);
 $131=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$impulse)));
 $132=($94)*($131);
 $133=($aA_0)-($132);
 __ZmlfRK6b2Vec2($7,$93,$impulse);
 __ZN6b2Vec2pLERKS_($tmpcast37,$7);
 $134=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$impulse)));
 $135=($95)*($134);
 $136=($aB_0)+($135);
 $137=((HEAP32[(($8)>>2)])|0);
 $138=((HEAP32[(($10)>>2)])|0);
 $139=(($138+((($137)*(12))&-1))|0);
 $140=$139;
 $ld$8$0=(($cA)|0);
 $141$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $141$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($140)|0);
 HEAP32[(($st$10$0)>>2)]=$141$0;
 $st$11$1=(($140+4)|0);
 HEAP32[(($st$11$1)>>2)]=$141$1;
 $142=((HEAP32[(($8)>>2)])|0);
 $143=((HEAP32[(($10)>>2)])|0);
 $144=(($143+((($142)*(12))&-1)+8)|0);
 HEAPF32[(($144)>>2)]=$133;
 $145=((HEAP32[(($19)>>2)])|0);
 $146=((HEAP32[(($10)>>2)])|0);
 $147=(($146+((($145)*(12))&-1))|0);
 $148=$147;
 $ld$12$0=(($cB)|0);
 $149$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $149$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($148)|0);
 HEAP32[(($st$14$0)>>2)]=$149$0;
 $st$15$1=(($148+4)|0);
 HEAP32[(($st$15$1)>>2)]=$149$1;
 $150=((HEAP32[(($19)>>2)])|0);
 $151=((HEAP32[(($10)>>2)])|0);
 $152=(($151+((($150)*(12))&-1)+8)|0);
 HEAPF32[(($152)>>2)]=$136;
 $153=$89>(0.004999999888241291);
 if ($153) {
  $157=0;

  STACKTOP=sp;return (($157)|0);
 }
 $155=$angularError_1<=(0.03490658849477768);
 $157=$155;

 STACKTOP=sp;return (($157)|0);
}


function __ZNK15b2RevoluteJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+68)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK15b2RevoluteJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+76)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK15b2RevoluteJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $P=0,$1=0,$2=.0,$3=0,$4=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $P=((sp)|0);
 $1=(($this+84)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+88)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 __ZN6b2Vec2C1Eff($P,$2,$4);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$P);
 STACKTOP=sp;return;
}


function __ZNK15b2RevoluteJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+92)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZNK15b2RevoluteJoint13GetJointAngleEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,$10=0,$11=.0,$12=.0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+56)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($2+56)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($6)-($8);
 $10=(($this+116)|0);
 $11=(+(HEAPF32[(($10)>>2)]));
 $12=($9)-($11);
 return (+($12));
}


function __ZNK15b2RevoluteJoint13GetJointSpeedEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+72)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($2+72)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($6)-($8);
 return (+($9));
}


function __ZNK15b2RevoluteJoint14IsMotorEnabledEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+100)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function __ZN15b2RevoluteJoint11EnableMotorEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($2,1);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($4,1);
 $5=(($this+100)|0);
 $6=($flag&1);
 HEAP8[($5)]=$6;
 return;
}


function __ZNK15b2RevoluteJoint14GetMotorTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+96)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZN15b2RevoluteJoint13SetMotorSpeedEf($this,$speed){
 $this=($this)|0;
 $speed=+($speed);
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($2,1);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($4,1);
 $5=(($this+108)|0);
 HEAPF32[(($5)>>2)]=$speed;
 return;
}


function __ZN15b2RevoluteJoint17SetMaxMotorTorqueEf($this,$torque){
 $this=($this)|0;
 $torque=+($torque);
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($2,1);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($4,1);
 $5=(($this+104)|0);
 HEAPF32[(($5)>>2)]=$torque;
 return;
}


function __ZNK15b2RevoluteJoint14IsLimitEnabledEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+112)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function __ZN15b2RevoluteJoint11EnableLimitEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=($flag&1);
 $2=(($this+112)|0);
 $3=((HEAP8[($2)])|0);
 $4=($3&255);
 $5=($1|0)==($4|0);
 if ($5) {
  return;
 }
 $7=(($this+48)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($8,1);
 $9=(($this+52)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($10,1);
 $11=($flag&1);
 HEAP8[($2)]=$11;
 $12=(($this+92)|0);
 HEAPF32[(($12)>>2)]=0.0;
 return;
}


function __ZNK15b2RevoluteJoint13GetLowerLimitEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+120)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZNK15b2RevoluteJoint13GetUpperLimitEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+124)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZN15b2RevoluteJoint9SetLimitsEff($this,$lower,$upper){
 $this=($this)|0;
 $lower=+($lower);
 $upper=+($upper);
 var $1=0,$4=0,$5=.0,$6=0,$8=0,$9=.0,$10=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,label=0;

 $1=$lower>$upper;
 if ($1) {
  ___assert_fail(((3712)|0),((9208)|0),((473)|0),((12808)|0));

 }
 $4=(($this+120)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=$5!=$lower;
 do {
  if (!($6)) {
   $8=(($this+124)|0);
   $9=(+(HEAPF32[(($8)>>2)]));
   $10=$9!=$upper;
   if ($10) {
    break;
   }
   return;
  }
 } while(0);
 $12=(($this+48)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($13,1);
 $14=(($this+52)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($15,1);
 $16=(($this+92)|0);
 HEAPF32[(($16)>>2)]=0.0;
 HEAPF32[(($4)>>2)]=$lower;
 $17=(($this+124)|0);
 HEAPF32[(($17)>>2)]=$upper;
 return;
}


function __ZN15b2RevoluteJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=0,$29=0,$30=0,$31=.0,$32=.0,$33=0,$34=.0,$35=.0,$36=0,$37=0,$38=0,$39=0,$40=.0;
 var $41=.0,$42=0,$43=.0,$44=.0,$45=0,$46=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(6200,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(4080,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3032,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(2336,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+68)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+72)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(1616,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+76)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+80)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(1048,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+116)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 __Z5b2LogPKcz(560,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$26,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $27=(($this+112)|0);
 $28=((HEAP8[($27)])|0);
 $29=($28&255);
 __Z5b2LogPKcz(104,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+120)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=$31;
 __Z5b2LogPKcz(11480,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$32,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $33=(($this+124)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=$34;
 __Z5b2LogPKcz(11040,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$35,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $36=(($this+100)|0);
 $37=((HEAP8[($36)])|0);
 $38=($37&255);
 __Z5b2LogPKcz(10312,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$38,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $39=(($this+108)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=$40;
 __Z5b2LogPKcz(9480,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$41,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $42=(($this+104)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=$43;
 __Z5b2LogPKcz(8824,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$44,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $45=(($this+56)|0);
 $46=((HEAP32[(($45)>>2)])|0);
 __Z5b2LogPKcz(8608,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$46,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN15b2RevoluteJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN15b2RevoluteJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN11b2RopeJointC2EPK14b2RopeJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0,$ld$4$0=0,$13$0=0,$ld$5$1=0;
 var $13$1=0,$st$6$0=0,$st$7$1=0,$14=0,$15=.0,$16=0,$17=0,$18=0,$19=0,$20=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=14512;
 $4=(($this+68)|0);
 $5=(($this+76)|0);
 $6=(($def+20)|0);
 $7=$6;
 $8=$4;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($def+28)|0);
 $11=$10;
 $12=$5;
 $ld$4$0=(($11)|0);
 $13$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($11+4)|0);
 $13$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($12)|0);
 HEAP32[(($st$6$0)>>2)]=$13$0;
 $st$7$1=(($12+4)|0);
 HEAP32[(($st$7$1)>>2)]=$13$1;
 $14=(($def+36)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=(($this+84)|0);
 HEAPF32[(($16)>>2)]=$15;
 $17=(($this+160)|0);
 HEAPF32[(($17)>>2)]=0.0;
 $18=(($this+92)|0);
 HEAPF32[(($18)>>2)]=0.0;
 $19=(($this+164)|0);
 HEAP32[(($19)>>2)]=0;
 $20=(($this+88)|0);
 HEAPF32[(($20)>>2)]=0.0;
 return;
}


function __ZN11b2RopeJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$vA=0,$tmpcast20=0,$cB=0,$tmpcast21=0,$vB=0,$tmpcast22=0,$qA=0,$qB=0,$1=0,$tmpcast23=0,$2=0,$3=0,$tmpcast24=0,$4=0,$5=0,$tmpcast25=0,$6=0,$7=0;
 var $P=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$ld$0$0=0,$25$0=0;
 var $ld$1$1=0,$25$1=0,$st$2$0=0,$st$3$1=0,$26=0,$27=0,$28=0,$29=0,$30=0,$ld$4$0=0,$31$0=0,$ld$5$1=0,$31$1=0,$st$6$0=0,$st$7$1=0,$32=0,$33=0,$34=.0,$35=0,$36=0;
 var $37=0,$38=.0,$39=0,$40=0,$41=0,$42=.0,$43=0,$44=0,$45=0,$46=.0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$ld$8$0=0,$53$0=0,$ld$9$1=0,$53$1=0;
 var $st$10$0=0,$st$11$1=0,$54=0,$55=0,$56=0,$57=.0,$58=0,$59=0,$60=0,$61=0,$ld$12$0=0,$62$0=0,$ld$13$1=0,$62$1=0,$st$14$0=0,$st$15$1=0,$63=0,$64=0,$65=0,$66=.0;
 var $67=0,$68=0,$69=0,$70=0,$ld$16$0=0,$71$0=0,$ld$17$1=0,$71$1=0,$st$18$0=0,$st$19$1=0,$72=0,$73=0,$74=0,$75=.0,$76=0,$77=0,$78=0,$ld$20$0=0,$79$0=0,$ld$21$1=0;
 var $79$1=0,$st$22$0=0,$st$23$1=0,$80=0,$81=0,$82=0,$83=.0,$84=0,$85=0,$86=0,$ld$24$0=0,$87$0=0,$ld$25$1=0,$87$1=0,$st$26$0=0,$st$27$1=0,$88=0,$89=0,$90=0,$ld$28$0=0;
 var $91$0=0,$ld$29$1=0,$91$1=0,$st$30$0=0,$st$31$1=0,$92=0,$93=0,$ld$32$0=0,$94$0=0,$ld$33$1=0,$94$1=0,$st$34$0=0,$st$35$1=0,$95=.0,$96=0,$97=0,$98=.0,$99=.0,$100=0,$101=0;
 var $_=0,$102=.0,$103=0,$105=.0,$106=.0,$107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0,$115=.0,$116=.0,$117=.0,$118=.0,$119=0,$121=0,$122=0;
 var $124=.0,$126=.0,$127=0,$128=0,$129=0,$130=0,$132=0,$133=.0,$134=0,$135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=.0,$143=.0,$144=.0,$145=.0;
 var $146=.0,$148=0,$wB_0=.0,$wA_0=.0,$150=0,$151=0,$152=0,$153=0,$ld$36$0=0,$154$0=0,$ld$37$1=0,$154$1=0,$st$38$0=0,$st$39$1=0,$155=0,$156=0,$157=0,$158=0,$159=0,$160=0;
 var $161=0,$ld$40$0=0,$162$0=0,$ld$41$1=0,$162$1=0,$st$42$0=0,$st$43$1=0,$163=0,$164=0,$165=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast20=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast21=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast22=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast23=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast24=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast25=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=(($this+48)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+8)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($this+96)|0);
 HEAP32[(($14)>>2)]=$13;
 $15=(($this+52)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($16+8)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($this+100)|0);
 HEAP32[(($19)>>2)]=$18;
 $20=(($this+128)|0);
 $21=((HEAP32[(($10)>>2)])|0);
 $22=(($21+28)|0);
 $23=$22;
 $24=$20;
 $ld$0$0=(($23)|0);
 $25$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($23+4)|0);
 $25$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($24)|0);
 HEAP32[(($st$2$0)>>2)]=$25$0;
 $st$3$1=(($24+4)|0);
 HEAP32[(($st$3$1)>>2)]=$25$1;
 $26=(($this+136)|0);
 $27=((HEAP32[(($15)>>2)])|0);
 $28=(($27+28)|0);
 $29=$28;
 $30=$26;
 $ld$4$0=(($29)|0);
 $31$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($29+4)|0);
 $31$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($30)|0);
 HEAP32[(($st$6$0)>>2)]=$31$0;
 $st$7$1=(($30+4)|0);
 HEAP32[(($st$7$1)>>2)]=$31$1;
 $32=((HEAP32[(($10)>>2)])|0);
 $33=(($32+120)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=(($this+144)|0);
 HEAPF32[(($35)>>2)]=$34;
 $36=((HEAP32[(($15)>>2)])|0);
 $37=(($36+120)|0);
 $38=(+(HEAPF32[(($37)>>2)]));
 $39=(($this+148)|0);
 HEAPF32[(($39)>>2)]=$38;
 $40=((HEAP32[(($10)>>2)])|0);
 $41=(($40+128)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+152)|0);
 HEAPF32[(($43)>>2)]=$42;
 $44=((HEAP32[(($15)>>2)])|0);
 $45=(($44+128)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=(($this+156)|0);
 HEAPF32[(($47)>>2)]=$46;
 $48=((HEAP32[(($14)>>2)])|0);
 $49=(($data+24)|0);
 $50=((HEAP32[(($49)>>2)])|0);
 $51=(($50+((($48)*(12))&-1))|0);
 $52=$51;
 $ld$8$0=(($52)|0);
 $53$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($52+4)|0);
 $53$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cA)|0);
 HEAP32[(($st$10$0)>>2)]=$53$0;
 $st$11$1=(($cA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$53$1;
 $54=((HEAP32[(($14)>>2)])|0);
 $55=((HEAP32[(($49)>>2)])|0);
 $56=(($55+((($54)*(12))&-1)+8)|0);
 $57=(+(HEAPF32[(($56)>>2)]));
 $58=(($data+28)|0);
 $59=((HEAP32[(($58)>>2)])|0);
 $60=(($59+((($54)*(12))&-1))|0);
 $61=$60;
 $ld$12$0=(($61)|0);
 $62$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($61+4)|0);
 $62$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vA)|0);
 HEAP32[(($st$14$0)>>2)]=$62$0;
 $st$15$1=(($vA+4)|0);
 HEAP32[(($st$15$1)>>2)]=$62$1;
 $63=((HEAP32[(($14)>>2)])|0);
 $64=((HEAP32[(($58)>>2)])|0);
 $65=(($64+((($63)*(12))&-1)+8)|0);
 $66=(+(HEAPF32[(($65)>>2)]));
 $67=((HEAP32[(($19)>>2)])|0);
 $68=((HEAP32[(($49)>>2)])|0);
 $69=(($68+((($67)*(12))&-1))|0);
 $70=$69;
 $ld$16$0=(($70)|0);
 $71$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($70+4)|0);
 $71$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($cB)|0);
 HEAP32[(($st$18$0)>>2)]=$71$0;
 $st$19$1=(($cB+4)|0);
 HEAP32[(($st$19$1)>>2)]=$71$1;
 $72=((HEAP32[(($19)>>2)])|0);
 $73=((HEAP32[(($49)>>2)])|0);
 $74=(($73+((($72)*(12))&-1)+8)|0);
 $75=(+(HEAPF32[(($74)>>2)]));
 $76=((HEAP32[(($58)>>2)])|0);
 $77=(($76+((($72)*(12))&-1))|0);
 $78=$77;
 $ld$20$0=(($78)|0);
 $79$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($78+4)|0);
 $79$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$79$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$79$1;
 $80=((HEAP32[(($19)>>2)])|0);
 $81=((HEAP32[(($58)>>2)])|0);
 $82=(($81+((($80)*(12))&-1)+8)|0);
 $83=(+(HEAPF32[(($82)>>2)]));
 __ZN5b2RotC1Ef($qA,$57);
 __ZN5b2RotC1Ef($qB,$75);
 $84=(($this+112)|0);
 $85=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($2,$85,$20);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast23,$qA,$2);
 $86=$84;
 $ld$24$0=(($1)|0);
 $87$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($1+4)|0);
 $87$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($86)|0);
 HEAP32[(($st$26$0)>>2)]=$87$0;
 $st$27$1=(($86+4)|0);
 HEAP32[(($st$27$1)>>2)]=$87$1;
 $88=(($this+120)|0);
 $89=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($4,$89,$26);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast24,$qB,$4);
 $90=$88;
 $ld$28$0=(($3)|0);
 $91$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($3+4)|0);
 $91$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($90)|0);
 HEAP32[(($st$30$0)>>2)]=$91$0;
 $st$31$1=(($90+4)|0);
 HEAP32[(($st$31$1)>>2)]=$91$1;
 $92=(($this+104)|0);
 __ZplRK6b2Vec2S1_($7,$tmpcast21,$88);
 __ZmiRK6b2Vec2S1_($6,$7,$tmpcast);
 __ZmiRK6b2Vec2S1_($tmpcast25,$6,$84);
 $93=$92;
 $ld$32$0=(($5)|0);
 $94$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($5+4)|0);
 $94$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($93)|0);
 HEAP32[(($st$34$0)>>2)]=$94$0;
 $st$35$1=(($93+4)|0);
 HEAP32[(($st$35$1)>>2)]=$94$1;
 $95=(+(__ZNK6b2Vec26LengthEv($92)));
 $96=(($this+88)|0);
 HEAPF32[(($96)>>2)]=$95;
 $97=(($this+84)|0);
 $98=(+(HEAPF32[(($97)>>2)]));
 $99=($95)-($98);
 $100=$99>(0.0);
 $101=(($this+164)|0);
 $_=($100?2:0);
 HEAP32[(($101)>>2)]=$_;
 $102=(+(HEAPF32[(($96)>>2)]));
 $103=$102>(0.004999999888241291);
 if (!($103)) {
  __ZN6b2Vec27SetZeroEv($92);
  $121=(($this+160)|0);
  HEAPF32[(($121)>>2)]=0.0;
  $122=(($this+92)|0);
  HEAPF32[(($122)>>2)]=0.0;
  STACKTOP=sp;return;
 }
 $105=((1.0))/($102);
 __ZN6b2Vec2mLEf($92,$105);
 $106=(+(__Z7b2CrossRK6b2Vec2S1_($84,$92)));
 $107=(+(__Z7b2CrossRK6b2Vec2S1_($88,$92)));
 $108=(+(HEAPF32[(($35)>>2)]));
 $109=(+(HEAPF32[(($43)>>2)]));
 $110=($106)*($109);
 $111=($106)*($110);
 $112=($108)+($111);
 $113=(+(HEAPF32[(($39)>>2)]));
 $114=($113)+($112);
 $115=(+(HEAPF32[(($47)>>2)]));
 $116=($107)*($115);
 $117=($107)*($116);
 $118=($114)+($117);
 $119=$118!=(0.0);
 if ($119) {
  $124=((1.0))/($118);
  $126=$124;
 } else {
  $126=0.0;
 }

 $127=(($this+160)|0);
 HEAPF32[(($127)>>2)]=$126;
 $128=(($data+20)|0);
 $129=((HEAP8[($128)])|0);
 $130=(($129<<24)>>24)==0;
 if ($130) {
  $148=(($this+92)|0);
  HEAPF32[(($148)>>2)]=0.0;
  $wA_0=$66;$wB_0=$83;
 } else {
  $132=(($data+8)|0);
  $133=(+(HEAPF32[(($132)>>2)]));
  $134=(($this+92)|0);
  $135=(+(HEAPF32[(($134)>>2)]));
  $136=($133)*($135);
  HEAPF32[(($134)>>2)]=$136;
  __ZmlfRK6b2Vec2($P,$136,$92);
  $137=(+(HEAPF32[(($35)>>2)]));
  __ZmlfRK6b2Vec2($8,$137,$P);
  __ZN6b2Vec2mIERKS_($tmpcast20,$8);
  $138=(+(HEAPF32[(($43)>>2)]));
  $139=(+(__Z7b2CrossRK6b2Vec2S1_($84,$P)));
  $140=($138)*($139);
  $141=($66)-($140);
  $142=(+(HEAPF32[(($39)>>2)]));
  __ZmlfRK6b2Vec2($9,$142,$P);
  __ZN6b2Vec2pLERKS_($tmpcast22,$9);
  $143=(+(HEAPF32[(($47)>>2)]));
  $144=(+(__Z7b2CrossRK6b2Vec2S1_($88,$P)));
  $145=($143)*($144);
  $146=($83)+($145);
  $wA_0=$141;$wB_0=$146;
 }


 $150=((HEAP32[(($14)>>2)])|0);
 $151=((HEAP32[(($58)>>2)])|0);
 $152=(($151+((($150)*(12))&-1))|0);
 $153=$152;
 $ld$36$0=(($vA)|0);
 $154$0=((HEAP32[(($ld$36$0)>>2)])|0);
 $ld$37$1=(($vA+4)|0);
 $154$1=((HEAP32[(($ld$37$1)>>2)])|0);
 $st$38$0=(($153)|0);
 HEAP32[(($st$38$0)>>2)]=$154$0;
 $st$39$1=(($153+4)|0);
 HEAP32[(($st$39$1)>>2)]=$154$1;
 $155=((HEAP32[(($14)>>2)])|0);
 $156=((HEAP32[(($58)>>2)])|0);
 $157=(($156+((($155)*(12))&-1)+8)|0);
 HEAPF32[(($157)>>2)]=$wA_0;
 $158=((HEAP32[(($19)>>2)])|0);
 $159=((HEAP32[(($58)>>2)])|0);
 $160=(($159+((($158)*(12))&-1))|0);
 $161=$160;
 $ld$40$0=(($vB)|0);
 $162$0=((HEAP32[(($ld$40$0)>>2)])|0);
 $ld$41$1=(($vB+4)|0);
 $162$1=((HEAP32[(($ld$41$1)>>2)])|0);
 $st$42$0=(($161)|0);
 HEAP32[(($st$42$0)>>2)]=$162$0;
 $st$43$1=(($161+4)|0);
 HEAP32[(($st$43$1)>>2)]=$162$1;
 $163=((HEAP32[(($19)>>2)])|0);
 $164=((HEAP32[(($58)>>2)])|0);
 $165=(($164+((($163)*(12))&-1)+8)|0);
 HEAPF32[(($165)>>2)]=$wB_0;
 STACKTOP=sp;return;
}


function __ZN11b2RopeJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast17=0,$vpA=0,$1=0,$vpB=0,$2=0,$3=0,$P=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0;
 var $ld$1$1=0,$12$1=0,$st$2$0=0,$st$3$1=0,$13=0,$14=0,$15=0,$16=.0,$17=0,$18=0,$19=0,$20=0,$ld$4$0=0,$21$0=0,$ld$5$1=0,$21$1=0,$st$6$0=0,$st$7$1=0,$22=0,$23=0;
 var $24=0,$25=.0,$26=0,$27=0,$28=0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=.0,$35=0,$37=0,$38=.0,$39=.0,$40=.0,$Cdot_0=.0,$42=0,$43=.0,$44=.0;
 var $45=.0,$46=0,$47=.0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=0,$54=.0,$55=.0,$56=.0,$57=.0,$58=0,$59=.0,$60=0,$61=.0,$62=.0,$63=.0,$64=.0;
 var $65=0,$66=0,$67=0,$68=0,$ld$8$0=0,$69$0=0,$ld$9$1=0,$69$1=0,$st$10$0=0,$st$11$1=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$ld$12$0=0,$77$0=0,$ld$13$1=0;
 var $77$1=0,$st$14$0=0,$st$15$1=0,$78=0,$79=0,$80=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast17=$vB;
 $vpA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $vpB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=(($this+96)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($data+28)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+((($7)*(12))&-1))|0);
 $11=$10;
 $ld$0$0=(($11)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($11+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$12$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$12$1;
 $13=((HEAP32[(($6)>>2)])|0);
 $14=((HEAP32[(($8)>>2)])|0);
 $15=(($14+((($13)*(12))&-1)+8)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=(($this+100)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($14+((($18)*(12))&-1))|0);
 $20=$19;
 $ld$4$0=(($20)|0);
 $21$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$21$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$21$1;
 $22=((HEAP32[(($17)>>2)])|0);
 $23=((HEAP32[(($8)>>2)])|0);
 $24=(($23+((($22)*(12))&-1)+8)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=(($this+112)|0);
 __Z7b2CrossfRK6b2Vec2($1,$16,$26);
 __ZplRK6b2Vec2S1_($vpA,$tmpcast,$1);
 $27=(($this+120)|0);
 __Z7b2CrossfRK6b2Vec2($2,$25,$27);
 __ZplRK6b2Vec2S1_($vpB,$tmpcast17,$2);
 $28=(($this+88)|0);
 $29=(+(HEAPF32[(($28)>>2)]));
 $30=(($this+84)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=($29)-($31);
 $33=(($this+104)|0);
 __ZmiRK6b2Vec2S1_($3,$vpB,$vpA);
 $34=(+(__Z5b2DotRK6b2Vec2S1_($33,$3)));
 $35=$32<(0.0);
 if ($35) {
  $37=(($data+4)|0);
  $38=(+(HEAPF32[(($37)>>2)]));
  $39=($32)*($38);
  $40=($34)+($39);
  $Cdot_0=$40;
 } else {
  $Cdot_0=$34;
 }

 $42=(($this+160)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=((-.0))-($43);
 $45=($Cdot_0)*($44);
 $46=(($this+92)|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=($47)+($45);
 $49=(+(__Z5b2MinIfET_S0_S0_(0.0,$48)));
 HEAPF32[(($46)>>2)]=$49;
 $50=($49)-($47);
 __ZmlfRK6b2Vec2($P,$50,$33);
 $51=(($this+144)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 __ZmlfRK6b2Vec2($4,$52,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$4);
 $53=(($this+152)|0);
 $54=(+(HEAPF32[(($53)>>2)]));
 $55=(+(__Z7b2CrossRK6b2Vec2S1_($26,$P)));
 $56=($54)*($55);
 $57=($16)-($56);
 $58=(($this+148)|0);
 $59=(+(HEAPF32[(($58)>>2)]));
 __ZmlfRK6b2Vec2($5,$59,$P);
 __ZN6b2Vec2pLERKS_($tmpcast17,$5);
 $60=(($this+156)|0);
 $61=(+(HEAPF32[(($60)>>2)]));
 $62=(+(__Z7b2CrossRK6b2Vec2S1_($27,$P)));
 $63=($61)*($62);
 $64=($25)+($63);
 $65=((HEAP32[(($6)>>2)])|0);
 $66=((HEAP32[(($8)>>2)])|0);
 $67=(($66+((($65)*(12))&-1))|0);
 $68=$67;
 $ld$8$0=(($vA)|0);
 $69$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vA+4)|0);
 $69$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($68)|0);
 HEAP32[(($st$10$0)>>2)]=$69$0;
 $st$11$1=(($68+4)|0);
 HEAP32[(($st$11$1)>>2)]=$69$1;
 $70=((HEAP32[(($6)>>2)])|0);
 $71=((HEAP32[(($8)>>2)])|0);
 $72=(($71+((($70)*(12))&-1)+8)|0);
 HEAPF32[(($72)>>2)]=$57;
 $73=((HEAP32[(($17)>>2)])|0);
 $74=((HEAP32[(($8)>>2)])|0);
 $75=(($74+((($73)*(12))&-1))|0);
 $76=$75;
 $ld$12$0=(($vB)|0);
 $77$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vB+4)|0);
 $77$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($76)|0);
 HEAP32[(($st$14$0)>>2)]=$77$0;
 $st$15$1=(($76+4)|0);
 HEAP32[(($st$15$1)>>2)]=$77$1;
 $78=((HEAP32[(($17)>>2)])|0);
 $79=((HEAP32[(($8)>>2)])|0);
 $80=(($79+((($78)*(12))&-1)+8)|0);
 HEAPF32[(($80)>>2)]=$64;
 STACKTOP=sp;return;
}


function __ZN11b2RopeJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast15=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$u=0,$3=0,$4=0,$P=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0;
 var $11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$st$2$0=0,$st$3$1=0,$14=0,$15=0,$16=0,$17=.0,$18=0,$19=0,$20=0,$21=0,$ld$4$0=0,$22$0=0,$ld$5$1=0,$22$1=0;
 var $st$6$0=0,$st$7$1=0,$23=0,$24=0,$25=0,$26=.0,$27=0,$28=0,$29=0,$30=0,$31=.0,$32=0,$33=.0,$34=.0,$35=.0,$36=0,$37=.0,$38=.0,$39=.0,$40=0;
 var $41=.0,$42=0,$43=.0,$44=.0,$45=.0,$46=.0,$47=0,$48=.0,$49=0,$50=.0,$51=.0,$52=.0,$53=.0,$54=0,$55=0,$56=0,$57=0,$ld$8$0=0,$58$0=0,$ld$9$1=0;
 var $58$1=0,$st$10$0=0,$st$11$1=0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$65=0,$ld$12$0=0,$66$0=0,$ld$13$1=0,$66$1=0,$st$14$0=0,$st$15$1=0,$67=0,$68=0,$69=0,$70=.0;
 var $71=.0,$72=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast15=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $u=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+96)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($data+24)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+((($8)*(12))&-1))|0);
 $12=$11;
 $ld$0$0=(($12)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($12+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$13$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$13$1;
 $14=((HEAP32[(($7)>>2)])|0);
 $15=((HEAP32[(($9)>>2)])|0);
 $16=(($15+((($14)*(12))&-1)+8)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+100)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($15+((($19)*(12))&-1))|0);
 $21=$20;
 $ld$4$0=(($21)|0);
 $22$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($21+4)|0);
 $22$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$22$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$22$1;
 $23=((HEAP32[(($18)>>2)])|0);
 $24=((HEAP32[(($9)>>2)])|0);
 $25=(($24+((($23)*(12))&-1)+8)|0);
 $26=(+(HEAPF32[(($25)>>2)]));
 __ZN5b2RotC1Ef($qA,$17);
 __ZN5b2RotC1Ef($qB,$26);
 $27=(($this+68)|0);
 $28=(($this+128)|0);
 __ZmiRK6b2Vec2S1_($1,$27,$28);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $29=(($this+76)|0);
 $30=(($this+136)|0);
 __ZmiRK6b2Vec2S1_($2,$29,$30);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZplRK6b2Vec2S1_($4,$tmpcast15,$rB);
 __ZmiRK6b2Vec2S1_($3,$4,$tmpcast);
 __ZmiRK6b2Vec2S1_($u,$3,$rA);
 $31=(+(__ZN6b2Vec29NormalizeEv($u)));
 $32=(($this+84)|0);
 $33=(+(HEAPF32[(($32)>>2)]));
 $34=($31)-($33);
 $35=(+(__Z7b2ClampIfET_S0_S0_S0_($34,0.0,0.20000000298023224)));
 $36=(($this+160)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=((-.0))-($37);
 $39=($35)*($38);
 __ZmlfRK6b2Vec2($P,$39,$u);
 $40=(($this+144)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 __ZmlfRK6b2Vec2($5,$41,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$5);
 $42=(($this+152)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$P)));
 $45=($43)*($44);
 $46=($17)-($45);
 $47=(($this+148)|0);
 $48=(+(HEAPF32[(($47)>>2)]));
 __ZmlfRK6b2Vec2($6,$48,$P);
 __ZN6b2Vec2pLERKS_($tmpcast15,$6);
 $49=(($this+156)|0);
 $50=(+(HEAPF32[(($49)>>2)]));
 $51=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$P)));
 $52=($50)*($51);
 $53=($26)+($52);
 $54=((HEAP32[(($7)>>2)])|0);
 $55=((HEAP32[(($9)>>2)])|0);
 $56=(($55+((($54)*(12))&-1))|0);
 $57=$56;
 $ld$8$0=(($cA)|0);
 $58$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $58$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($57)|0);
 HEAP32[(($st$10$0)>>2)]=$58$0;
 $st$11$1=(($57+4)|0);
 HEAP32[(($st$11$1)>>2)]=$58$1;
 $59=((HEAP32[(($7)>>2)])|0);
 $60=((HEAP32[(($9)>>2)])|0);
 $61=(($60+((($59)*(12))&-1)+8)|0);
 HEAPF32[(($61)>>2)]=$46;
 $62=((HEAP32[(($18)>>2)])|0);
 $63=((HEAP32[(($9)>>2)])|0);
 $64=(($63+((($62)*(12))&-1))|0);
 $65=$64;
 $ld$12$0=(($cB)|0);
 $66$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $66$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($65)|0);
 HEAP32[(($st$14$0)>>2)]=$66$0;
 $st$15$1=(($65+4)|0);
 HEAP32[(($st$15$1)>>2)]=$66$1;
 $67=((HEAP32[(($18)>>2)])|0);
 $68=((HEAP32[(($9)>>2)])|0);
 $69=(($68+((($67)*(12))&-1)+8)|0);
 HEAPF32[(($69)>>2)]=$53;
 $70=(+(HEAPF32[(($32)>>2)]));
 $71=($31)-($70);
 $72=$71<(0.004999999888241291);
 STACKTOP=sp;return (($72)|0);
}


function __ZNK11b2RopeJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+68)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK11b2RopeJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+76)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK11b2RopeJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,$4=0,label=0;

 $1=(($this+92)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 $4=(($this+104)|0);
 __ZmlfRK6b2Vec2($agg_result,$3,$4);
 return;
}


function __ZNK11b2RopeJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var label=0;

 return 0.0;
}


function __ZNK11b2RopeJoint12GetMaxLengthEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+84)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZNK11b2RopeJoint13GetLimitStateEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+164)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN11b2RopeJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(3616,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(9144,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(6136,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(4016,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+68)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+72)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(2984,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+76)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+80)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(2264,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+84)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 __Z5b2LogPKcz(1584,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$26,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $27=(($this+56)|0);
 $28=((HEAP32[(($27)>>2)])|0);
 __Z5b2LogPKcz(1000,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$28,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN11b2RopeJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN11b2RopeJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN14b2WeldJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($this,$bA,$bB,$anchor){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 $anchor=($anchor)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0,$ld$4$0=0,$12$0=0;
 var $ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,$13=0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=$bA;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$bB;
 $5=(($this+20)|0);
 $6=((HEAP32[(($3)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$6,$anchor);
 $7=$5;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($this+28)|0);
 $10=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast5,$10,$anchor);
 $11=$9;
 $ld$4$0=(($2)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 $13=((HEAP32[(($4)>>2)])|0);
 $14=(+(__ZNK6b2Body8GetAngleEv($13)));
 $15=((HEAP32[(($3)>>2)])|0);
 $16=(+(__ZNK6b2Body8GetAngleEv($15)));
 $17=($14)-($16);
 $18=(($this+36)|0);
 HEAPF32[(($18)>>2)]=$17;
 STACKTOP=sp;return;
}


function __ZN11b2WeldJointC2EPK14b2WeldJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$11=0,$12=0,$13=0,$ld$4$0=0,$14$0=0;
 var $ld$5$1=0,$14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=.0,$17=0,$18=0,$19=.0,$20=0,$21=0,$22=.0,$23=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=14456;
 $4=(($this+80)|0);
 $5=(($this+88)|0);
 $6=(($this+104)|0);
 $7=(($def+20)|0);
 $8=$7;
 $9=$4;
 $ld$0$0=(($8)|0);
 $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($8+4)|0);
 $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($9)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 $st$3$1=(($9+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 $11=(($def+28)|0);
 $12=$11;
 $13=$5;
 $ld$4$0=(($12)|0);
 $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($12+4)|0);
 $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($13)|0);
 HEAP32[(($st$6$0)>>2)]=$14$0;
 $st$7$1=(($13+4)|0);
 HEAP32[(($st$7$1)>>2)]=$14$1;
 $15=(($def+36)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=(($this+96)|0);
 HEAPF32[(($17)>>2)]=$16;
 $18=(($def+40)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=(($this+68)|0);
 HEAPF32[(($20)>>2)]=$19;
 $21=(($def+44)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=(($this+72)|0);
 HEAPF32[(($23)>>2)]=$22;
 __ZN6b2Vec37SetZeroEv($6);
 return;
}


function __ZN11b2WeldJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast48=0,$qA=0,$qB=0,$1=0,$tmpcast49=0,$2=0,$3=0,$tmpcast50=0,$4=0,$K=0,$P=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0;
 var $11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$ld$0$0=0,$22$0=0,$ld$1$1=0,$22$1=0,$st$2$0=0,$st$3$1=0,$23=0,$24=0,$25=0;
 var $26=0,$27=0,$ld$4$0=0,$28$0=0,$ld$5$1=0,$28$1=0,$st$6$0=0,$st$7$1=0,$29=0,$30=0,$31=.0,$32=0,$33=0,$34=0,$35=.0,$36=0,$37=0,$38=0,$39=.0,$40=0;
 var $41=0,$42=0,$43=.0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=.0,$50=0,$51=0,$52=0,$53=0,$ld$8$0=0,$54$0=0,$ld$9$1=0,$54$1=0,$st$10$0=0,$st$11$1=0,$55=0;
 var $56=0,$57=0,$58=.0,$59=0,$60=0,$61=0,$62=.0,$63=0,$64=0,$ld$12$0=0,$65$0=0,$ld$13$1=0,$65$1=0,$st$14$0=0,$st$15$1=0,$66=0,$67=0,$68=0,$69=.0,$70=0;
 var $71=0,$72=0,$ld$16$0=0,$73$0=0,$ld$17$1=0,$73$1=0,$st$18$0=0,$st$19$1=0,$74=0,$75=0,$76=0,$ld$20$0=0,$77$0=0,$ld$21$1=0,$77$1=0,$st$22$0=0,$st$23$1=0,$78=.0,$79=.0,$80=.0;
 var $81=.0,$82=.0,$83=0,$84=.0,$85=.0,$86=.0,$87=.0,$88=0,$89=.0,$90=.0,$91=.0,$92=.0,$93=0,$94=.0,$95=.0,$96=0,$97=.0,$98=.0,$99=.0,$100=.0;
 var $101=0,$102=.0,$103=.0,$104=.0,$105=.0,$106=0,$107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=0,$114=.0,$115=0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0;
 var $121=.0,$122=.0,$123=.0,$124=0,$125=.0,$126=.0,$127=.0,$128=.0,$129=.0,$130=0,$131=.0,$132=0,$133=.0,$134=0,$135=.0,$136=0,$137=0,$138=.0,$139=0,$140=0;
 var $142=0,$144=.0,$146=.0,$147=.0,$148=0,$149=.0,$150=.0,$151=.0,$152=.0,$153=.0,$154=0,$155=.0,$156=.0,$157=.0,$158=.0,$159=.0,$160=0,$161=.0,$162=.0,$163=.0;
 var $164=.0,$165=0,$166=0,$168=.0,$170=.0,$171=.0,$172=.0,$173=.0,$174=0,$175=.0,$176=.0,$177=0,$179=.0,$181=.0,$182=0,$184=0,$185=0,$187=0,$188=0,$189=0;
 var $190=0,$192=0,$193=.0,$194=0,$195=.0,$196=0,$197=.0,$198=.0,$199=0,$200=.0,$201=.0,$202=.0,$203=.0,$204=.0,$205=.0,$206=.0,$207=.0,$208=.0,$wB_0=.0,$wA_0=.0;
 var $211=0,$212=0,$213=0,$214=0,$ld$24$0=0,$215$0=0,$ld$25$1=0,$215$1=0,$st$26$0=0,$st$27$1=0,$216=0,$217=0,$218=0,$219=0,$220=0,$221=0,$222=0,$ld$28$0=0,$223$0=0,$ld$29$1=0;
 var $223$1=0,$st$30$0=0,$st$31$1=0,$224=0,$225=0,$226=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast48=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast49=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast50=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 36)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+48)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($8+8)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($this+116)|0);
 HEAP32[(($11)>>2)]=$10;
 $12=(($this+52)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($13+8)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=(($this+120)|0);
 HEAP32[(($16)>>2)]=$15;
 $17=(($this+140)|0);
 $18=((HEAP32[(($7)>>2)])|0);
 $19=(($18+28)|0);
 $20=$19;
 $21=$17;
 $ld$0$0=(($20)|0);
 $22$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($20+4)|0);
 $22$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($21)|0);
 HEAP32[(($st$2$0)>>2)]=$22$0;
 $st$3$1=(($21+4)|0);
 HEAP32[(($st$3$1)>>2)]=$22$1;
 $23=(($this+148)|0);
 $24=((HEAP32[(($12)>>2)])|0);
 $25=(($24+28)|0);
 $26=$25;
 $27=$23;
 $ld$4$0=(($26)|0);
 $28$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($26+4)|0);
 $28$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($27)|0);
 HEAP32[(($st$6$0)>>2)]=$28$0;
 $st$7$1=(($27+4)|0);
 HEAP32[(($st$7$1)>>2)]=$28$1;
 $29=((HEAP32[(($7)>>2)])|0);
 $30=(($29+120)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+156)|0);
 HEAPF32[(($32)>>2)]=$31;
 $33=((HEAP32[(($12)>>2)])|0);
 $34=(($33+120)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+160)|0);
 HEAPF32[(($36)>>2)]=$35;
 $37=((HEAP32[(($7)>>2)])|0);
 $38=(($37+128)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=(($this+164)|0);
 HEAPF32[(($40)>>2)]=$39;
 $41=((HEAP32[(($12)>>2)])|0);
 $42=(($41+128)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=(($this+168)|0);
 HEAPF32[(($44)>>2)]=$43;
 $45=((HEAP32[(($11)>>2)])|0);
 $46=(($data+24)|0);
 $47=((HEAP32[(($46)>>2)])|0);
 $48=(($47+((($45)*(12))&-1)+8)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=(($data+28)|0);
 $51=((HEAP32[(($50)>>2)])|0);
 $52=(($51+((($45)*(12))&-1))|0);
 $53=$52;
 $ld$8$0=(($53)|0);
 $54$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($53+4)|0);
 $54$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($vA)|0);
 HEAP32[(($st$10$0)>>2)]=$54$0;
 $st$11$1=(($vA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$54$1;
 $55=((HEAP32[(($11)>>2)])|0);
 $56=((HEAP32[(($50)>>2)])|0);
 $57=(($56+((($55)*(12))&-1)+8)|0);
 $58=(+(HEAPF32[(($57)>>2)]));
 $59=((HEAP32[(($16)>>2)])|0);
 $60=((HEAP32[(($46)>>2)])|0);
 $61=(($60+((($59)*(12))&-1)+8)|0);
 $62=(+(HEAPF32[(($61)>>2)]));
 $63=(($56+((($59)*(12))&-1))|0);
 $64=$63;
 $ld$12$0=(($64)|0);
 $65$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($64+4)|0);
 $65$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vB)|0);
 HEAP32[(($st$14$0)>>2)]=$65$0;
 $st$15$1=(($vB+4)|0);
 HEAP32[(($st$15$1)>>2)]=$65$1;
 $66=((HEAP32[(($16)>>2)])|0);
 $67=((HEAP32[(($50)>>2)])|0);
 $68=(($67+((($66)*(12))&-1)+8)|0);
 $69=(+(HEAPF32[(($68)>>2)]));
 __ZN5b2RotC1Ef($qA,$49);
 __ZN5b2RotC1Ef($qB,$62);
 $70=(($this+124)|0);
 $71=(($this+80)|0);
 __ZmiRK6b2Vec2S1_($2,$71,$17);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast49,$qA,$2);
 $72=$70;
 $ld$16$0=(($1)|0);
 $73$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($1+4)|0);
 $73$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($72)|0);
 HEAP32[(($st$18$0)>>2)]=$73$0;
 $st$19$1=(($72+4)|0);
 HEAP32[(($st$19$1)>>2)]=$73$1;
 $74=(($this+132)|0);
 $75=(($this+88)|0);
 __ZmiRK6b2Vec2S1_($4,$75,$23);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast50,$qB,$4);
 $76=$74;
 $ld$20$0=(($3)|0);
 $77$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($3+4)|0);
 $77$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($76)|0);
 HEAP32[(($st$22$0)>>2)]=$77$0;
 $st$23$1=(($76+4)|0);
 HEAP32[(($st$23$1)>>2)]=$77$1;
 $78=(+(HEAPF32[(($32)>>2)]));
 $79=(+(HEAPF32[(($36)>>2)]));
 $80=(+(HEAPF32[(($40)>>2)]));
 $81=(+(HEAPF32[(($44)>>2)]));
 $82=($78)+($79);
 $83=(($this+128)|0);
 $84=(+(HEAPF32[(($83)>>2)]));
 $85=($84)*($84);
 $86=($80)*($85);
 $87=($82)+($86);
 $88=(($this+136)|0);
 $89=(+(HEAPF32[(($88)>>2)]));
 $90=($89)*($89);
 $91=($81)*($90);
 $92=($87)+($91);
 $93=(($K)|0);
 HEAPF32[(($93)>>2)]=$92;
 $94=(+(HEAPF32[(($83)>>2)]));
 $95=((-.0))-($94);
 $96=(($70)|0);
 $97=(+(HEAPF32[(($96)>>2)]));
 $98=($97)*($95);
 $99=($80)*($98);
 $100=(+(HEAPF32[(($88)>>2)]));
 $101=(($74)|0);
 $102=(+(HEAPF32[(($101)>>2)]));
 $103=($100)*($102);
 $104=($81)*($103);
 $105=($99)-($104);
 $106=(($K+12)|0);
 HEAPF32[(($106)>>2)]=$105;
 $107=(+(HEAPF32[(($83)>>2)]));
 $108=((-.0))-($107);
 $109=($80)*($108);
 $110=(+(HEAPF32[(($88)>>2)]));
 $111=($81)*($110);
 $112=($109)-($111);
 $113=(($K+24)|0);
 HEAPF32[(($113)>>2)]=$112;
 $114=(+(HEAPF32[(($106)>>2)]));
 $115=(($K+4)|0);
 HEAPF32[(($115)>>2)]=$114;
 $116=(+(HEAPF32[(($96)>>2)]));
 $117=($116)*($116);
 $118=($80)*($117);
 $119=($82)+($118);
 $120=(+(HEAPF32[(($101)>>2)]));
 $121=($120)*($120);
 $122=($81)*($121);
 $123=($119)+($122);
 $124=(($K+16)|0);
 HEAPF32[(($124)>>2)]=$123;
 $125=(+(HEAPF32[(($96)>>2)]));
 $126=($80)*($125);
 $127=(+(HEAPF32[(($101)>>2)]));
 $128=($81)*($127);
 $129=($126)+($128);
 $130=(($K+28)|0);
 HEAPF32[(($130)>>2)]=$129;
 $131=(+(HEAPF32[(($113)>>2)]));
 $132=(($K+8)|0);
 HEAPF32[(($132)>>2)]=$131;
 $133=(+(HEAPF32[(($130)>>2)]));
 $134=(($K+20)|0);
 HEAPF32[(($134)>>2)]=$133;
 $135=($80)+($81);
 $136=(($K+32)|0);
 HEAPF32[(($136)>>2)]=$135;
 $137=(($this+68)|0);
 $138=(+(HEAPF32[(($137)>>2)]));
 $139=$138>(0.0);
 $140=(($this+172)|0);
 if ($139) {
  __ZNK7b2Mat3312GetInverse22EPS_($K,$140);
  $142=$135>(0.0);
  if ($142) {
   $144=((1.0))/($135);
   $146=$144;
  } else {
   $146=0.0;
  }

  $147=($62)-($49);
  $148=(($this+96)|0);
  $149=(+(HEAPF32[(($148)>>2)]));
  $150=($147)-($149);
  $151=(+(HEAPF32[(($137)>>2)]));
  $152=($151)*((6.2831854820251465));
  $153=($146)*((2.0));
  $154=(($this+72)|0);
  $155=(+(HEAPF32[(($154)>>2)]));
  $156=($153)*($155);
  $157=($152)*($156);
  $158=($146)*($152);
  $159=($152)*($158);
  $160=(($data)|0);
  $161=(+(HEAPF32[(($160)>>2)]));
  $162=($161)*($159);
  $163=($157)+($162);
  $164=($161)*($163);
  $165=(($this+100)|0);
  HEAPF32[(($165)>>2)]=$164;
  $166=$164!=(0.0);
  if ($166) {
   $168=((1.0))/($164);
   $170=$168;
  } else {
   $170=0.0;
  }

  HEAPF32[(($165)>>2)]=$170;
  $171=($150)*($161);
  $172=($171)*($159);
  $173=($172)*($170);
  $174=(($this+76)|0);
  HEAPF32[(($174)>>2)]=$173;
  $175=(+(HEAPF32[(($165)>>2)]));
  $176=($135)+($175);
  $177=$176!=(0.0);
  if ($177) {
   $179=((1.0))/($176);
   $181=$179;
  } else {
   $181=0.0;
  }

  $182=(($this+204)|0);
  HEAPF32[(($182)>>2)]=$181;
 } else {
  __ZNK7b2Mat3315GetSymInverse33EPS_($K,$140);
  $184=(($this+100)|0);
  HEAPF32[(($184)>>2)]=0.0;
  $185=(($this+76)|0);
  HEAPF32[(($185)>>2)]=0.0;
 }
 $187=(($data+20)|0);
 $188=((HEAP8[($187)])|0);
 $189=(($188<<24)>>24)==0;
 $190=(($this+104)|0);
 if ($189) {
  __ZN6b2Vec37SetZeroEv($190);
  $wA_0=$58;$wB_0=$69;


  $211=((HEAP32[(($11)>>2)])|0);
  $212=((HEAP32[(($50)>>2)])|0);
  $213=(($212+((($211)*(12))&-1))|0);
  $214=$213;
  $ld$24$0=(($vA)|0);
  $215$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($vA+4)|0);
  $215$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($214)|0);
  HEAP32[(($st$26$0)>>2)]=$215$0;
  $st$27$1=(($214+4)|0);
  HEAP32[(($st$27$1)>>2)]=$215$1;
  $216=((HEAP32[(($11)>>2)])|0);
  $217=((HEAP32[(($50)>>2)])|0);
  $218=(($217+((($216)*(12))&-1)+8)|0);
  HEAPF32[(($218)>>2)]=$wA_0;
  $219=((HEAP32[(($16)>>2)])|0);
  $220=((HEAP32[(($50)>>2)])|0);
  $221=(($220+((($219)*(12))&-1))|0);
  $222=$221;
  $ld$28$0=(($vB)|0);
  $223$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($vB+4)|0);
  $223$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($222)|0);
  HEAP32[(($st$30$0)>>2)]=$223$0;
  $st$31$1=(($222+4)|0);
  HEAP32[(($st$31$1)>>2)]=$223$1;
  $224=((HEAP32[(($16)>>2)])|0);
  $225=((HEAP32[(($50)>>2)])|0);
  $226=(($225+((($224)*(12))&-1)+8)|0);
  HEAPF32[(($226)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $192=(($data+8)|0);
  $193=(+(HEAPF32[(($192)>>2)]));
  __ZN6b2Vec3mLEf($190,$193);
  $194=(($190)|0);
  $195=(+(HEAPF32[(($194)>>2)]));
  $196=(($this+108)|0);
  $197=(+(HEAPF32[(($196)>>2)]));
  __ZN6b2Vec2C1Eff($P,$195,$197);
  __ZmlfRK6b2Vec2($5,$78,$P);
  __ZN6b2Vec2mIERKS_($tmpcast,$5);
  $198=(+(__Z7b2CrossRK6b2Vec2S1_($70,$P)));
  $199=(($this+112)|0);
  $200=(+(HEAPF32[(($199)>>2)]));
  $201=($198)+($200);
  $202=($80)*($201);
  $203=($58)-($202);
  __ZmlfRK6b2Vec2($6,$79,$P);
  __ZN6b2Vec2pLERKS_($tmpcast48,$6);
  $204=(+(__Z7b2CrossRK6b2Vec2S1_($74,$P)));
  $205=(+(HEAPF32[(($199)>>2)]));
  $206=($204)+($205);
  $207=($81)*($206);
  $208=($69)+($207);
  $wA_0=$203;$wB_0=$208;


  $211=((HEAP32[(($11)>>2)])|0);
  $212=((HEAP32[(($50)>>2)])|0);
  $213=(($212+((($211)*(12))&-1))|0);
  $214=$213;
  $ld$24$0=(($vA)|0);
  $215$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($vA+4)|0);
  $215$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($214)|0);
  HEAP32[(($st$26$0)>>2)]=$215$0;
  $st$27$1=(($214+4)|0);
  HEAP32[(($st$27$1)>>2)]=$215$1;
  $216=((HEAP32[(($11)>>2)])|0);
  $217=((HEAP32[(($50)>>2)])|0);
  $218=(($217+((($216)*(12))&-1)+8)|0);
  HEAPF32[(($218)>>2)]=$wA_0;
  $219=((HEAP32[(($16)>>2)])|0);
  $220=((HEAP32[(($50)>>2)])|0);
  $221=(($220+((($219)*(12))&-1))|0);
  $222=$221;
  $ld$28$0=(($vB)|0);
  $223$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($vB+4)|0);
  $223$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($222)|0);
  HEAP32[(($st$30$0)>>2)]=$223$0;
  $st$31$1=(($222+4)|0);
  HEAP32[(($st$31$1)>>2)]=$223$1;
  $224=((HEAP32[(($16)>>2)])|0);
  $225=((HEAP32[(($50)>>2)])|0);
  $226=(($225+((($224)*(12))&-1)+8)|0);
  HEAPF32[(($226)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN11b2WeldJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast30=0,$Cdot1=0,$1=0,$2=0,$3=0,$4=0,$impulse1=0,$tmpcast32=0,$5=0,$P=0,$tmpcast31=0,$6=0,$7=0,$Cdot11=0,$8=0,$9=0,$10=0;
 var $11=0,$Cdot=0,$impulse=0,$12=0,$P3=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$ld$0$0=0,$21$0=0,$ld$1$1=0,$21$1=0,$st$2$0=0,$st$3$1=0,$22=0;
 var $23=0,$24=0,$25=.0,$26=0,$27=0,$28=0,$29=0,$ld$4$0=0,$30$0=0,$ld$5$1=0,$30$1=0,$st$6$0=0,$st$7$1=0,$31=0,$32=0,$33=0,$34=.0,$35=0,$36=.0,$37=0;
 var $38=.0,$39=0,$40=.0,$41=0,$42=.0,$43=0,$44=.0,$45=0,$47=.0,$48=0,$49=0,$50=.0,$51=.0,$52=0,$53=.0,$54=.0,$55=0,$56=.0,$57=0,$58=.0;
 var $59=.0,$60=.0,$61=.0,$62=.0,$63=.0,$64=.0,$65=.0,$66=.0,$67=0,$68=0,$69=0,$70=.0,$71=0,$72=.0,$73=.0,$74=0,$75=.0,$76=0,$77=.0,$78=.0;
 var $ld$8$0=0,$79$0=0,$ld$9$1=0,$79$1=0,$st$10$0=0,$st$11$1=0,$80=.0,$81=.0,$82=.0,$83=.0,$84=.0,$85=.0,$87=0,$88=0,$89=.0,$90=0,$91=.0,$92=0,$93=.0,$94=0;
 var $95=0,$96=0,$97=.0,$98=0,$99=.0,$100=.0,$101=0,$102=.0,$103=.0,$104=.0,$105=.0,$106=.0,$107=.0,$108=.0,$109=.0,$110=.0,$wB_0=.0,$wA_0=.0,$112=0,$113=0;
 var $114=0,$115=0,$ld$12$0=0,$116$0=0,$ld$13$1=0,$116$1=0,$st$14$0=0,$st$15$1=0,$117=0,$118=0,$119=0,$120=0,$121=0,$122=0,$123=0,$ld$16$0=0,$124$0=0,$ld$17$1=0,$124$1=0,$st$18$0=0;
 var $st$19$1=0,$125=0,$126=0,$127=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast30=$vB;
 $Cdot1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $impulse1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast32=$impulse1;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast31=$P;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $Cdot11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $Cdot=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $impulse=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $12=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $P3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=(($this+116)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($data+28)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($18+((($16)*(12))&-1))|0);
 $20=$19;
 $ld$0$0=(($20)|0);
 $21$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$21$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$21$1;
 $22=((HEAP32[(($15)>>2)])|0);
 $23=((HEAP32[(($17)>>2)])|0);
 $24=(($23+((($22)*(12))&-1)+8)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=(($this+120)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=(($23+((($27)*(12))&-1))|0);
 $29=$28;
 $ld$4$0=(($29)|0);
 $30$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($29+4)|0);
 $30$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$30$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$30$1;
 $31=((HEAP32[(($26)>>2)])|0);
 $32=((HEAP32[(($17)>>2)])|0);
 $33=(($32+((($31)*(12))&-1)+8)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=(($this+156)|0);
 $36=(+(HEAPF32[(($35)>>2)]));
 $37=(($this+160)|0);
 $38=(+(HEAPF32[(($37)>>2)]));
 $39=(($this+164)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=(($this+168)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+68)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=$44>(0.0);
 if ($45) {
  $47=($34)-($25);
  $48=(($this+172)|0);
  $49=(($this+204)|0);
  $50=(+(HEAPF32[(($49)>>2)]));
  $51=((-.0))-($50);
  $52=(($this+76)|0);
  $53=(+(HEAPF32[(($52)>>2)]));
  $54=($47)+($53);
  $55=(($this+100)|0);
  $56=(+(HEAPF32[(($55)>>2)]));
  $57=(($this+112)|0);
  $58=(+(HEAPF32[(($57)>>2)]));
  $59=($56)*($58);
  $60=($54)+($59);
  $61=($60)*($51);
  $62=($58)+($61);
  HEAPF32[(($57)>>2)]=$62;
  $63=($40)*($61);
  $64=($25)-($63);
  $65=($42)*($61);
  $66=($34)+($65);
  $67=(($this+132)|0);
  __Z7b2CrossfRK6b2Vec2($3,$66,$67);
  __ZplRK6b2Vec2S1_($2,$tmpcast30,$3);
  __ZmiRK6b2Vec2S1_($1,$2,$tmpcast);
  $68=(($this+124)|0);
  __Z7b2CrossfRK6b2Vec2($4,$64,$68);
  __ZmiRK6b2Vec2S1_($Cdot1,$1,$4);
  __Z7b2Mul22RK7b2Mat33RK6b2Vec2($5,$48,$Cdot1);
  __ZNK6b2Vec2ngEv($tmpcast32,$5);
  $69=$impulse1;
  $70=(+(HEAPF32[(($69)>>2)]));
  $71=(($this+104)|0);
  $72=(+(HEAPF32[(($71)>>2)]));
  $73=($70)+($72);
  HEAPF32[(($71)>>2)]=$73;
  $74=(($tmpcast32+4)|0);
  $75=(+(HEAPF32[(($74)>>2)]));
  $76=(($this+108)|0);
  $77=(+(HEAPF32[(($76)>>2)]));
  $78=($75)+($77);
  HEAPF32[(($76)>>2)]=$78;
  $ld$8$0=(($impulse1)|0);
  $79$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($impulse1+4)|0);
  $79$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($P)|0);
  HEAP32[(($st$10$0)>>2)]=$79$0;
  $st$11$1=(($P+4)|0);
  HEAP32[(($st$11$1)>>2)]=$79$1;
  __ZmlfRK6b2Vec2($6,$36,$tmpcast31);
  __ZN6b2Vec2mIERKS_($tmpcast,$6);
  $80=(+(__Z7b2CrossRK6b2Vec2S1_($68,$tmpcast31)));
  $81=($40)*($80);
  $82=($64)-($81);
  __ZmlfRK6b2Vec2($7,$38,$tmpcast31);
  __ZN6b2Vec2pLERKS_($tmpcast30,$7);
  $83=(+(__Z7b2CrossRK6b2Vec2S1_($67,$tmpcast31)));
  $84=($42)*($83);
  $85=($66)+($84);
  $wA_0=$82;$wB_0=$85;


  $112=((HEAP32[(($15)>>2)])|0);
  $113=((HEAP32[(($17)>>2)])|0);
  $114=(($113+((($112)*(12))&-1))|0);
  $115=$114;
  $ld$12$0=(($vA)|0);
  $116$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($vA+4)|0);
  $116$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($115)|0);
  HEAP32[(($st$14$0)>>2)]=$116$0;
  $st$15$1=(($115+4)|0);
  HEAP32[(($st$15$1)>>2)]=$116$1;
  $117=((HEAP32[(($15)>>2)])|0);
  $118=((HEAP32[(($17)>>2)])|0);
  $119=(($118+((($117)*(12))&-1)+8)|0);
  HEAPF32[(($119)>>2)]=$wA_0;
  $120=((HEAP32[(($26)>>2)])|0);
  $121=((HEAP32[(($17)>>2)])|0);
  $122=(($121+((($120)*(12))&-1))|0);
  $123=$122;
  $ld$16$0=(($vB)|0);
  $124$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($vB+4)|0);
  $124$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($123)|0);
  HEAP32[(($st$18$0)>>2)]=$124$0;
  $st$19$1=(($123+4)|0);
  HEAP32[(($st$19$1)>>2)]=$124$1;
  $125=((HEAP32[(($26)>>2)])|0);
  $126=((HEAP32[(($17)>>2)])|0);
  $127=(($126+((($125)*(12))&-1)+8)|0);
  HEAPF32[(($127)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $87=(($this+132)|0);
  __Z7b2CrossfRK6b2Vec2($10,$34,$87);
  __ZplRK6b2Vec2S1_($9,$tmpcast30,$10);
  __ZmiRK6b2Vec2S1_($8,$9,$tmpcast);
  $88=(($this+124)|0);
  __Z7b2CrossfRK6b2Vec2($11,$25,$88);
  __ZmiRK6b2Vec2S1_($Cdot11,$8,$11);
  $89=($34)-($25);
  $90=(($Cdot11)|0);
  $91=(+(HEAPF32[(($90)>>2)]));
  $92=(($Cdot11+4)|0);
  $93=(+(HEAPF32[(($92)>>2)]));
  __ZN6b2Vec3C1Efff($Cdot,$91,$93,$89);
  $94=(($this+172)|0);
  __Z5b2MulRK7b2Mat33RK6b2Vec3($12,$94,$Cdot);
  __ZNK6b2Vec3ngEv($impulse,$12);
  $95=(($this+104)|0);
  __ZN6b2Vec3pLERKS_($95,$impulse);
  $96=(($impulse)|0);
  $97=(+(HEAPF32[(($96)>>2)]));
  $98=(($impulse+4)|0);
  $99=(+(HEAPF32[(($98)>>2)]));
  __ZN6b2Vec2C1Eff($P3,$97,$99);
  __ZmlfRK6b2Vec2($13,$36,$P3);
  __ZN6b2Vec2mIERKS_($tmpcast,$13);
  $100=(+(__Z7b2CrossRK6b2Vec2S1_($88,$P3)));
  $101=(($impulse+8)|0);
  $102=(+(HEAPF32[(($101)>>2)]));
  $103=($100)+($102);
  $104=($40)*($103);
  $105=($25)-($104);
  __ZmlfRK6b2Vec2($14,$38,$P3);
  __ZN6b2Vec2pLERKS_($tmpcast30,$14);
  $106=(+(__Z7b2CrossRK6b2Vec2S1_($87,$P3)));
  $107=(+(HEAPF32[(($101)>>2)]));
  $108=($106)+($107);
  $109=($42)*($108);
  $110=($34)+($109);
  $wA_0=$105;$wB_0=$110;


  $112=((HEAP32[(($15)>>2)])|0);
  $113=((HEAP32[(($17)>>2)])|0);
  $114=(($113+((($112)*(12))&-1))|0);
  $115=$114;
  $ld$12$0=(($vA)|0);
  $116$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($vA+4)|0);
  $116$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($115)|0);
  HEAP32[(($st$14$0)>>2)]=$116$0;
  $st$15$1=(($115+4)|0);
  HEAP32[(($st$15$1)>>2)]=$116$1;
  $117=((HEAP32[(($15)>>2)])|0);
  $118=((HEAP32[(($17)>>2)])|0);
  $119=(($118+((($117)*(12))&-1)+8)|0);
  HEAPF32[(($119)>>2)]=$wA_0;
  $120=((HEAP32[(($26)>>2)])|0);
  $121=((HEAP32[(($17)>>2)])|0);
  $122=(($121+((($120)*(12))&-1))|0);
  $123=$122;
  $ld$16$0=(($vB)|0);
  $124$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($vB+4)|0);
  $124$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($123)|0);
  HEAP32[(($st$18$0)>>2)]=$124$0;
  $st$19$1=(($123+4)|0);
  HEAP32[(($st$19$1)>>2)]=$124$1;
  $125=((HEAP32[(($26)>>2)])|0);
  $126=((HEAP32[(($17)>>2)])|0);
  $127=(($126+((($125)*(12))&-1)+8)|0);
  HEAPF32[(($127)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __Z5b2MulRK7b2Mat33RK6b2Vec3($agg_result,$A,$v){
 $agg_result=($agg_result)|0;
 $A=($A)|0;
 $v=($v)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$8=0,$9=.0,$10=0,$11=0,$12=.0,$13=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $1=((sp)|0);
 $2=(((sp)+(16))|0);
 $3=(((sp)+(32))|0);
 $4=(((sp)+(48))|0);
 $5=(($v)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($A)|0);
 __ZmlfRK6b2Vec3($2,$6,$7);
 $8=(($v+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=(($A+12)|0);
 __ZmlfRK6b2Vec3($3,$9,$10);
 __ZplRK6b2Vec3S1_($1,$2,$3);
 $11=(($v+8)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=(($A+24)|0);
 __ZmlfRK6b2Vec3($4,$12,$13);
 __ZplRK6b2Vec3S1_($agg_result,$1,$4);
 STACKTOP=sp;return;
}


function __ZN11b2WeldJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast38=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$K=0,$C1=0,$3=0,$4=0,$P=0,$5=0,$6=0,$7=0,$C11=0,$8=0;
 var $9=0,$C=0,$impulse=0,$10=0,$P2=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$ld$0$0=0,$19$0=0,$ld$1$1=0,$19$1=0,$st$2$0=0,$st$3$1=0,$20=0;
 var $21=0,$22=0,$23=.0,$24=0,$25=0,$26=0,$27=0,$ld$4$0=0,$28$0=0,$ld$5$1=0,$28$1=0,$st$6$0=0,$st$7$1=0,$29=0,$30=0,$31=0,$32=.0,$33=0,$34=.0,$35=0;
 var $36=.0,$37=0,$38=.0,$39=0,$40=.0,$41=0,$42=0,$43=0,$44=0,$45=.0,$46=0,$47=.0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=.0,$54=.0,$55=.0;
 var $56=0,$57=.0,$58=.0,$59=0,$60=.0,$61=.0,$62=.0,$63=.0,$64=0,$65=.0,$66=.0,$67=.0,$68=.0,$69=0,$70=.0,$71=.0,$72=.0,$73=.0,$74=.0,$75=.0;
 var $76=0,$77=.0,$78=0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0,$84=.0,$85=.0,$86=.0,$87=0,$88=.0,$89=.0,$90=.0,$91=.0,$92=.0,$93=0,$94=.0,$95=0;
 var $96=.0,$97=0,$98=.0,$99=0,$100=0,$101=.0,$102=0,$104=.0,$105=.0,$106=.0,$108=.0,$109=0,$110=.0,$111=.0,$112=.0,$113=.0,$114=0,$115=.0,$116=0,$117=.0;
 var $118=0,$119=.0,$120=0,$121=.0,$122=.0,$123=0,$124=.0,$125=.0,$126=.0,$127=.0,$128=.0,$_pn40=.0,$positionError_0=.0,$angularError_0=.0,$_pn41=.0,$_pn39=.0,$_pn=.0,$aA_0=.0,$aB_0=.0,$130=0;
 var $131=0,$132=0,$133=0,$ld$8$0=0,$134$0=0,$ld$9$1=0,$134$1=0,$st$10$0=0,$st$11$1=0,$135=0,$136=0,$137=0,$138=0,$139=0,$140=0,$141=0,$ld$12$0=0,$142$0=0,$ld$13$1=0,$142$1=0;
 var $st$14$0=0,$st$15$1=0,$143=0,$144=0,$145=0,$146=0,$148=0,$150=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast38=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 36)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $C1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $C11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $C=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $impulse=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $10=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $P2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=(($this+116)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($data+24)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($16+((($14)*(12))&-1))|0);
 $18=$17;
 $ld$0$0=(($18)|0);
 $19$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($18+4)|0);
 $19$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$19$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$19$1;
 $20=((HEAP32[(($13)>>2)])|0);
 $21=((HEAP32[(($15)>>2)])|0);
 $22=(($21+((($20)*(12))&-1)+8)|0);
 $23=(+(HEAPF32[(($22)>>2)]));
 $24=(($this+120)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=(($21+((($25)*(12))&-1))|0);
 $27=$26;
 $ld$4$0=(($27)|0);
 $28$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($27+4)|0);
 $28$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$28$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$28$1;
 $29=((HEAP32[(($24)>>2)])|0);
 $30=((HEAP32[(($15)>>2)])|0);
 $31=(($30+((($29)*(12))&-1)+8)|0);
 $32=(+(HEAPF32[(($31)>>2)]));
 __ZN5b2RotC1Ef($qA,$23);
 __ZN5b2RotC1Ef($qB,$32);
 $33=(($this+156)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=(($this+160)|0);
 $36=(+(HEAPF32[(($35)>>2)]));
 $37=(($this+164)|0);
 $38=(+(HEAPF32[(($37)>>2)]));
 $39=(($this+168)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=(($this+80)|0);
 $42=(($this+140)|0);
 __ZmiRK6b2Vec2S1_($1,$41,$42);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $43=(($this+88)|0);
 $44=(($this+148)|0);
 __ZmiRK6b2Vec2S1_($2,$43,$44);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 $45=($34)+($36);
 $46=(($rA+4)|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=($47)*($47);
 $49=($38)*($48);
 $50=($45)+($49);
 $51=(($rB+4)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 $53=($52)*($52);
 $54=($40)*($53);
 $55=($50)+($54);
 $56=(($K)|0);
 HEAPF32[(($56)>>2)]=$55;
 $57=(+(HEAPF32[(($46)>>2)]));
 $58=((-.0))-($57);
 $59=(($rA)|0);
 $60=(+(HEAPF32[(($59)>>2)]));
 $61=($60)*($58);
 $62=($38)*($61);
 $63=(+(HEAPF32[(($51)>>2)]));
 $64=(($rB)|0);
 $65=(+(HEAPF32[(($64)>>2)]));
 $66=($63)*($65);
 $67=($40)*($66);
 $68=($62)-($67);
 $69=(($K+12)|0);
 HEAPF32[(($69)>>2)]=$68;
 $70=(+(HEAPF32[(($46)>>2)]));
 $71=((-.0))-($70);
 $72=($38)*($71);
 $73=(+(HEAPF32[(($51)>>2)]));
 $74=($40)*($73);
 $75=($72)-($74);
 $76=(($K+24)|0);
 HEAPF32[(($76)>>2)]=$75;
 $77=(+(HEAPF32[(($69)>>2)]));
 $78=(($K+4)|0);
 HEAPF32[(($78)>>2)]=$77;
 $79=(+(HEAPF32[(($59)>>2)]));
 $80=($79)*($79);
 $81=($38)*($80);
 $82=($45)+($81);
 $83=(+(HEAPF32[(($64)>>2)]));
 $84=($83)*($83);
 $85=($40)*($84);
 $86=($82)+($85);
 $87=(($K+16)|0);
 HEAPF32[(($87)>>2)]=$86;
 $88=(+(HEAPF32[(($59)>>2)]));
 $89=($38)*($88);
 $90=(+(HEAPF32[(($64)>>2)]));
 $91=($40)*($90);
 $92=($89)+($91);
 $93=(($K+28)|0);
 HEAPF32[(($93)>>2)]=$92;
 $94=(+(HEAPF32[(($76)>>2)]));
 $95=(($K+8)|0);
 HEAPF32[(($95)>>2)]=$94;
 $96=(+(HEAPF32[(($93)>>2)]));
 $97=(($K+20)|0);
 HEAPF32[(($97)>>2)]=$96;
 $98=($38)+($40);
 $99=(($K+32)|0);
 HEAPF32[(($99)>>2)]=$98;
 $100=(($this+68)|0);
 $101=(+(HEAPF32[(($100)>>2)]));
 $102=$101>(0.0);
 if ($102) {
  __ZplRK6b2Vec2S1_($4,$tmpcast38,$rB);
  __ZmiRK6b2Vec2S1_($3,$4,$tmpcast);
  __ZmiRK6b2Vec2S1_($C1,$3,$rA);
  $104=(+(__ZNK6b2Vec26LengthEv($C1)));
  __ZNK7b2Mat337Solve22ERK6b2Vec2($5,$K,$C1);
  __ZNK6b2Vec2ngEv($P,$5);
  __ZmlfRK6b2Vec2($6,$34,$P);
  __ZN6b2Vec2mIERKS_($tmpcast,$6);
  $105=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$P)));
  __ZmlfRK6b2Vec2($7,$36,$P);
  __ZN6b2Vec2pLERKS_($tmpcast38,$7);
  $106=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$P)));
  $_pn41=$105;$angularError_0=0.0;$positionError_0=$104;$_pn40=$106;
 } else {
  __ZplRK6b2Vec2S1_($9,$tmpcast38,$rB);
  __ZmiRK6b2Vec2S1_($8,$9,$tmpcast);
  __ZmiRK6b2Vec2S1_($C11,$8,$rA);
  $108=($32)-($23);
  $109=(($this+96)|0);
  $110=(+(HEAPF32[(($109)>>2)]));
  $111=($108)-($110);
  $112=(+(__ZNK6b2Vec26LengthEv($C11)));
  $113=(+(__Z5b2AbsIfET_S0_($111)));
  $114=(($C11)|0);
  $115=(+(HEAPF32[(($114)>>2)]));
  $116=(($C11+4)|0);
  $117=(+(HEAPF32[(($116)>>2)]));
  __ZN6b2Vec3C1Efff($C,$115,$117,$111);
  __ZNK7b2Mat337Solve33ERK6b2Vec3($10,$K,$C);
  __ZNK6b2Vec3ngEv($impulse,$10);
  $118=(($impulse)|0);
  $119=(+(HEAPF32[(($118)>>2)]));
  $120=(($impulse+4)|0);
  $121=(+(HEAPF32[(($120)>>2)]));
  __ZN6b2Vec2C1Eff($P2,$119,$121);
  __ZmlfRK6b2Vec2($11,$34,$P2);
  __ZN6b2Vec2mIERKS_($tmpcast,$11);
  $122=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$P2)));
  $123=(($impulse+8)|0);
  $124=(+(HEAPF32[(($123)>>2)]));
  $125=($122)+($124);
  __ZmlfRK6b2Vec2($12,$36,$P2);
  __ZN6b2Vec2pLERKS_($tmpcast38,$12);
  $126=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$P2)));
  $127=(+(HEAPF32[(($123)>>2)]));
  $128=($126)+($127);
  $_pn41=$125;$angularError_0=$113;$positionError_0=$112;$_pn40=$128;
 }




 $_pn39=($38)*($_pn41);
 $_pn=($40)*($_pn40);
 $aA_0=($23)-($_pn39);
 $aB_0=($32)+($_pn);
 $130=((HEAP32[(($13)>>2)])|0);
 $131=((HEAP32[(($15)>>2)])|0);
 $132=(($131+((($130)*(12))&-1))|0);
 $133=$132;
 $ld$8$0=(($cA)|0);
 $134$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $134$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($133)|0);
 HEAP32[(($st$10$0)>>2)]=$134$0;
 $st$11$1=(($133+4)|0);
 HEAP32[(($st$11$1)>>2)]=$134$1;
 $135=((HEAP32[(($13)>>2)])|0);
 $136=((HEAP32[(($15)>>2)])|0);
 $137=(($136+((($135)*(12))&-1)+8)|0);
 HEAPF32[(($137)>>2)]=$aA_0;
 $138=((HEAP32[(($24)>>2)])|0);
 $139=((HEAP32[(($15)>>2)])|0);
 $140=(($139+((($138)*(12))&-1))|0);
 $141=$140;
 $ld$12$0=(($cB)|0);
 $142$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $142$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($141)|0);
 HEAP32[(($st$14$0)>>2)]=$142$0;
 $st$15$1=(($141+4)|0);
 HEAP32[(($st$15$1)>>2)]=$142$1;
 $143=((HEAP32[(($24)>>2)])|0);
 $144=((HEAP32[(($15)>>2)])|0);
 $145=(($144+((($143)*(12))&-1)+8)|0);
 HEAPF32[(($145)>>2)]=$aB_0;
 $146=$positionError_0>(0.004999999888241291);
 if ($146) {
  $150=0;

  STACKTOP=sp;return (($150)|0);
 }
 $148=$angularError_0<=(0.03490658849477768);
 $150=$148;

 STACKTOP=sp;return (($150)|0);
}


function __ZNK11b2WeldJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+80)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK11b2WeldJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+88)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK11b2WeldJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $P=0,$1=0,$2=.0,$3=0,$4=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $P=((sp)|0);
 $1=(($this+104)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+108)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 __ZN6b2Vec2C1Eff($P,$2,$4);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$P);
 STACKTOP=sp;return;
}


function __ZNK11b2WeldJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+112)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZN11b2WeldJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(3440,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(9056,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(6048,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(3976,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+80)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+84)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(2936,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+88)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+92)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(2216,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+96)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 __Z5b2LogPKcz(1552,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$26,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $27=(($this+68)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(968,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+72)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=$31;
 __Z5b2LogPKcz(528,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$32,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $33=(($this+56)|0);
 $34=((HEAP32[(($33)>>2)])|0);
 __Z5b2LogPKcz(56,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$34,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN11b2WeldJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN11b2WeldJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZplRK6b2Vec3S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=0,$12=.0,$13=0,$14=.0,$15=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)+($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)+($9);
 $11=(($a+8)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=(($b+8)|0);
 $14=(+(HEAPF32[(($13)>>2)]));
 $15=($12)+($14);
 __ZN6b2Vec3C1Efff($agg_result,$5,$10,$15);
 return;
}


function __ZmlfRK6b2Vec3($agg_result,$s,$a){
 $agg_result=($agg_result)|0;
 $s=+($s);
 $a=($a)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,$7=0,$8=.0,$9=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($s);
 $4=(($a+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($s);
 $7=(($a+8)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($8)*($s);
 __ZN6b2Vec3C1Efff($agg_result,$3,$6,$9);
 return;
}


function __ZN15b2WheelJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($this,$bA,$bB,$anchor,$axis){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 $anchor=($anchor)|0;
 $axis=($axis)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast6=0,$3=0,$tmpcast7=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0;
 var $ld$4$0=0,$13$0=0,$ld$5$1=0,$13$1=0,$st$6$0=0,$st$7$1=0,$14=0,$15=0,$16=0,$ld$8$0=0,$17$0=0,$ld$9$1=0,$17$1=0,$st$10$0=0,$st$11$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast6=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast7=$3;
 $4=(($this+8)|0);
 HEAP32[(($4)>>2)]=$bA;
 $5=(($this+12)|0);
 HEAP32[(($5)>>2)]=$bB;
 $6=(($this+20)|0);
 $7=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$7,$anchor);
 $8=$6;
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($this+28)|0);
 $11=((HEAP32[(($5)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast6,$11,$anchor);
 $12=$10;
 $ld$4$0=(($2)|0);
 $13$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $13$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($12)|0);
 HEAP32[(($st$6$0)>>2)]=$13$0;
 $st$7$1=(($12+4)|0);
 HEAP32[(($st$7$1)>>2)]=$13$1;
 $14=(($this+36)|0);
 $15=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body14GetLocalVectorERK6b2Vec2($tmpcast7,$15,$axis);
 $16=$14;
 $ld$8$0=(($3)|0);
 $17$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($3+4)|0);
 $17$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($16)|0);
 HEAP32[(($st$10$0)>>2)]=$17$0;
 $st$11$1=(($16+4)|0);
 HEAP32[(($st$11$1)>>2)]=$17$1;
 STACKTOP=sp;return;
}


function __ZN12b2WheelJointC2EPK15b2WheelJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$ld$0$0=0,$14$0=0,$ld$1$1=0,$14$1=0,$st$2$0=0,$st$3$1=0;
 var $15=0,$16=0,$17=0,$ld$4$0=0,$18$0=0,$ld$5$1=0,$18$1=0,$st$6$0=0,$st$7$1=0,$19=0,$20=0,$21=0,$ld$8$0=0,$22$0=0,$ld$9$1=0,$22$1=0,$st$10$0=0,$st$11$1=0,$23=0,$ld$12$0=0;
 var $24$0=0,$ld$13$1=0,$24$1=0,$st$14$0=0,$st$15$1=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=.0,$33=0,$34=0,$35=.0,$36=0,$37=0,$38=0,$39=0;
 var $40=0,$41=.0,$42=0,$43=0,$44=.0,$45=0,$46=0,$47=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=(($this)|0);
 $3=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($2,$3);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=14296;
 $5=(($this+76)|0);
 $6=(($this+84)|0);
 $7=(($this+92)|0);
 $8=(($this+100)|0);
 $9=(($this+172)|0);
 $10=(($this+180)|0);
 $11=(($def+20)|0);
 $12=$11;
 $13=$5;
 $ld$0$0=(($12)|0);
 $14$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($12+4)|0);
 $14$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($13)|0);
 HEAP32[(($st$2$0)>>2)]=$14$0;
 $st$3$1=(($13+4)|0);
 HEAP32[(($st$3$1)>>2)]=$14$1;
 $15=(($def+28)|0);
 $16=$15;
 $17=$6;
 $ld$4$0=(($16)|0);
 $18$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($16+4)|0);
 $18$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($17)|0);
 HEAP32[(($st$6$0)>>2)]=$18$0;
 $st$7$1=(($17+4)|0);
 HEAP32[(($st$7$1)>>2)]=$18$1;
 $19=(($def+36)|0);
 $20=$19;
 $21=$7;
 $ld$8$0=(($20)|0);
 $22$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($20+4)|0);
 $22$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($21)|0);
 HEAP32[(($st$10$0)>>2)]=$22$0;
 $st$11$1=(($21+4)|0);
 HEAP32[(($st$11$1)>>2)]=$22$1;
 __Z7b2CrossfRK6b2Vec2($tmpcast,1.0,$7);
 $23=$8;
 $ld$12$0=(($1)|0);
 $24$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($1+4)|0);
 $24$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($23)|0);
 HEAP32[(($st$14$0)>>2)]=$24$0;
 $st$15$1=(($23+4)|0);
 HEAP32[(($st$15$1)>>2)]=$24$1;
 $25=(($this+204)|0);
 HEAPF32[(($25)>>2)]=0.0;
 $26=(($this+108)|0);
 HEAPF32[(($26)>>2)]=0.0;
 $27=(($this+208)|0);
 HEAPF32[(($27)>>2)]=0.0;
 $28=(($this+112)|0);
 HEAPF32[(($28)>>2)]=0.0;
 $29=(($this+212)|0);
 HEAPF32[(($29)>>2)]=0.0;
 $30=(($this+116)|0);
 HEAPF32[(($30)>>2)]=0.0;
 $31=(($def+48)|0);
 $32=(+(HEAPF32[(($31)>>2)]));
 $33=(($this+120)|0);
 HEAPF32[(($33)>>2)]=$32;
 $34=(($def+52)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+124)|0);
 HEAPF32[(($36)>>2)]=$35;
 $37=(($def+44)|0);
 $38=((HEAP8[($37)])|0);
 $39=(($this+128)|0);
 HEAP8[($39)]=$38;
 $40=(($def+56)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=(($this+68)|0);
 HEAPF32[(($42)>>2)]=$41;
 $43=(($def+60)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=(($this+72)|0);
 HEAPF32[(($45)>>2)]=$44;
 $46=(($this+216)|0);
 HEAPF32[(($46)>>2)]=0.0;
 $47=(($this+220)|0);
 HEAPF32[(($47)>>2)]=0.0;
 __ZN6b2Vec27SetZeroEv($9);
 __ZN6b2Vec27SetZeroEv($10);
 STACKTOP=sp;return;
}


function __ZN12b2WheelJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$vA=0,$tmpcast33=0,$cB=0,$tmpcast34=0,$vB=0,$tmpcast35=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$d=0,$3=0,$4=0,$5=0,$tmpcast36=0,$6=0;
 var $7=0,$tmpcast37=0,$8=0,$P=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0;
 var $25=0,$26=0,$27=0,$ld$0$0=0,$28$0=0,$ld$1$1=0,$28$1=0,$st$2$0=0,$st$3$1=0,$29=0,$30=0,$31=0,$32=0,$33=0,$ld$4$0=0,$34$0=0,$ld$5$1=0,$34$1=0,$st$6$0=0,$st$7$1=0;
 var $35=0,$36=0,$37=.0,$38=0,$39=0,$40=0,$41=.0,$42=0,$43=0,$44=0,$45=.0,$46=0,$47=0,$48=0,$49=.0,$50=0,$51=.0,$52=.0,$53=.0,$54=0;
 var $55=0,$56=0,$57=0,$58=0,$ld$8$0=0,$59$0=0,$ld$9$1=0,$59$1=0,$st$10$0=0,$st$11$1=0,$60=0,$61=0,$62=0,$63=.0,$64=0,$65=0,$66=0,$67=0,$ld$12$0=0,$68$0=0;
 var $ld$13$1=0,$68$1=0,$st$14$0=0,$st$15$1=0,$69=0,$70=0,$71=0,$72=.0,$73=0,$74=0,$75=0,$76=0,$ld$16$0=0,$77$0=0,$ld$17$1=0,$77$1=0,$st$18$0=0,$st$19$1=0,$78=0,$79=0;
 var $80=0,$81=.0,$82=0,$83=0,$84=0,$ld$20$0=0,$85$0=0,$ld$21$1=0,$85$1=0,$st$22$0=0,$st$23$1=0,$86=0,$87=0,$88=0,$89=.0,$90=0,$91=0,$92=0,$93=0,$94=0;
 var $ld$24$0=0,$95$0=0,$ld$25$1=0,$95$1=0,$st$26$0=0,$st$27$1=0,$96=.0,$97=0,$98=.0,$99=0,$100=.0,$101=.0,$102=.0,$103=.0,$104=.0,$105=.0,$106=.0,$107=.0,$108=0,$109=0;
 var $111=.0,$storemerge38=.0,$113=0,$114=0,$115=0,$116=0,$117=.0,$118=0,$120=0,$121=0,$122=0,$ld$28$0=0,$123$0=0,$ld$29$1=0,$123$1=0,$st$30$0=0,$st$31$1=0,$124=.0,$125=0,$126=.0;
 var $127=0,$128=.0,$129=.0,$130=.0,$131=.0,$132=.0,$133=.0,$134=.0,$135=0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=0,$143=.0,$144=.0,$145=.0,$146=.0,$147=.0;
 var $148=0,$149=.0,$150=.0,$151=.0,$152=.0,$153=0,$155=.0,$storemerge=.0,$157=.0,$158=.0,$159=.0,$160=.0,$161=.0,$162=0,$164=.0,$166=0,$168=0,$169=0,$170=0,$172=.0;
 var $173=0,$174=0,$176=.0,$178=0,$179=0,$181=0,$182=0,$183=0,$185=0,$186=.0,$187=0,$188=.0,$189=.0,$190=.0,$191=0,$192=.0,$193=.0,$194=.0,$195=0,$196=.0;
 var $197=.0,$198=.0,$199=.0,$200=0,$201=.0,$202=.0,$203=.0,$204=.0,$205=0,$206=.0,$207=.0,$208=.0,$209=.0,$210=.0,$211=.0,$212=.0,$213=0,$214=.0,$215=.0,$216=.0;
 var $217=.0,$218=.0,$219=.0,$220=.0,$221=.0,$222=.0,$223=.0,$224=.0,$225=.0,$227=0,$228=0,$229=0,$wB_0=.0,$wA_0=.0,$231=0,$232=0,$233=0,$234=0,$ld$32$0=0,$235$0=0;
 var $ld$33$1=0,$235$1=0,$st$34$0=0,$st$35$1=0,$236=0,$237=0,$238=0,$239=0,$240=0,$241=0,$242=0,$ld$36$0=0,$243$0=0,$ld$37$1=0,$243$1=0,$st$38$0=0,$st$39$1=0,$244=0,$245=0,$246=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast37=$7;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=(($this+48)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($14+8)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($this+132)|0);
 HEAP32[(($17)>>2)]=$16;
 $18=(($this+52)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($19+8)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=(($this+136)|0);
 HEAP32[(($22)>>2)]=$21;
 $23=(($this+140)|0);
 $24=((HEAP32[(($13)>>2)])|0);
 $25=(($24+28)|0);
 $26=$25;
 $27=$23;
 $ld$0$0=(($26)|0);
 $28$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($26+4)|0);
 $28$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($27)|0);
 HEAP32[(($st$2$0)>>2)]=$28$0;
 $st$3$1=(($27+4)|0);
 HEAP32[(($st$3$1)>>2)]=$28$1;
 $29=(($this+148)|0);
 $30=((HEAP32[(($18)>>2)])|0);
 $31=(($30+28)|0);
 $32=$31;
 $33=$29;
 $ld$4$0=(($32)|0);
 $34$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($32+4)|0);
 $34$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($33)|0);
 HEAP32[(($st$6$0)>>2)]=$34$0;
 $st$7$1=(($33+4)|0);
 HEAP32[(($st$7$1)>>2)]=$34$1;
 $35=((HEAP32[(($13)>>2)])|0);
 $36=(($35+120)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=(($this+156)|0);
 HEAPF32[(($38)>>2)]=$37;
 $39=((HEAP32[(($18)>>2)])|0);
 $40=(($39+120)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=(($this+160)|0);
 HEAPF32[(($42)>>2)]=$41;
 $43=((HEAP32[(($13)>>2)])|0);
 $44=(($43+128)|0);
 $45=(+(HEAPF32[(($44)>>2)]));
 $46=(($this+164)|0);
 HEAPF32[(($46)>>2)]=$45;
 $47=((HEAP32[(($18)>>2)])|0);
 $48=(($47+128)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=(($this+168)|0);
 HEAPF32[(($50)>>2)]=$49;
 $51=(+(HEAPF32[(($38)>>2)]));
 $52=(+(HEAPF32[(($42)>>2)]));
 $53=(+(HEAPF32[(($46)>>2)]));
 $54=((HEAP32[(($17)>>2)])|0);
 $55=(($data+24)|0);
 $56=((HEAP32[(($55)>>2)])|0);
 $57=(($56+((($54)*(12))&-1))|0);
 $58=$57;
 $ld$8$0=(($58)|0);
 $59$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($58+4)|0);
 $59$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cA)|0);
 HEAP32[(($st$10$0)>>2)]=$59$0;
 $st$11$1=(($cA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$59$1;
 $60=((HEAP32[(($17)>>2)])|0);
 $61=((HEAP32[(($55)>>2)])|0);
 $62=(($61+((($60)*(12))&-1)+8)|0);
 $63=(+(HEAPF32[(($62)>>2)]));
 $64=(($data+28)|0);
 $65=((HEAP32[(($64)>>2)])|0);
 $66=(($65+((($60)*(12))&-1))|0);
 $67=$66;
 $ld$12$0=(($67)|0);
 $68$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($67+4)|0);
 $68$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vA)|0);
 HEAP32[(($st$14$0)>>2)]=$68$0;
 $st$15$1=(($vA+4)|0);
 HEAP32[(($st$15$1)>>2)]=$68$1;
 $69=((HEAP32[(($17)>>2)])|0);
 $70=((HEAP32[(($64)>>2)])|0);
 $71=(($70+((($69)*(12))&-1)+8)|0);
 $72=(+(HEAPF32[(($71)>>2)]));
 $73=((HEAP32[(($22)>>2)])|0);
 $74=((HEAP32[(($55)>>2)])|0);
 $75=(($74+((($73)*(12))&-1))|0);
 $76=$75;
 $ld$16$0=(($76)|0);
 $77$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($76+4)|0);
 $77$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($cB)|0);
 HEAP32[(($st$18$0)>>2)]=$77$0;
 $st$19$1=(($cB+4)|0);
 HEAP32[(($st$19$1)>>2)]=$77$1;
 $78=((HEAP32[(($22)>>2)])|0);
 $79=((HEAP32[(($55)>>2)])|0);
 $80=(($79+((($78)*(12))&-1)+8)|0);
 $81=(+(HEAPF32[(($80)>>2)]));
 $82=((HEAP32[(($64)>>2)])|0);
 $83=(($82+((($78)*(12))&-1))|0);
 $84=$83;
 $ld$20$0=(($84)|0);
 $85$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($84+4)|0);
 $85$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$85$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$85$1;
 $86=((HEAP32[(($22)>>2)])|0);
 $87=((HEAP32[(($64)>>2)])|0);
 $88=(($87+((($86)*(12))&-1)+8)|0);
 $89=(+(HEAPF32[(($88)>>2)]));
 __ZN5b2RotC1Ef($qA,$63);
 __ZN5b2RotC1Ef($qB,$81);
 $90=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($1,$90,$23);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $91=(($this+84)|0);
 __ZmiRK6b2Vec2S1_($2,$91,$29);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZplRK6b2Vec2S1_($4,$tmpcast34,$rB);
 __ZmiRK6b2Vec2S1_($3,$4,$tmpcast);
 __ZmiRK6b2Vec2S1_($d,$3,$rA);
 $92=(($this+180)|0);
 $93=(($this+100)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast36,$qA,$93);
 $94=$92;
 $ld$24$0=(($5)|0);
 $95$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($5+4)|0);
 $95$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($94)|0);
 HEAP32[(($st$26$0)>>2)]=$95$0;
 $st$27$1=(($94+4)|0);
 HEAP32[(($st$27$1)>>2)]=$95$1;
 __ZplRK6b2Vec2S1_($6,$d,$rA);
 $96=(+(__Z7b2CrossRK6b2Vec2S1_($6,$92)));
 $97=(($this+196)|0);
 HEAPF32[(($97)>>2)]=$96;
 $98=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$92)));
 $99=(($this+200)|0);
 HEAPF32[(($99)>>2)]=$98;
 $100=($51)+($52);
 $101=(+(HEAPF32[(($97)>>2)]));
 $102=($53)*($101);
 $103=($101)*($102);
 $104=($100)+($103);
 $105=($49)*($98);
 $106=($98)*($105);
 $107=($106)+($104);
 $108=(($this+204)|0);
 $109=$107>(0.0);
 if ($109) {
  $111=((1.0))/($107);
  $storemerge38=$111;
 } else {
  $storemerge38=$107;
 }

 HEAPF32[(($108)>>2)]=$storemerge38;
 $113=(($this+212)|0);
 HEAPF32[(($113)>>2)]=0.0;
 $114=(($this+216)|0);
 HEAPF32[(($114)>>2)]=0.0;
 $115=(($this+220)|0);
 HEAPF32[(($115)>>2)]=0.0;
 $116=(($this+68)|0);
 $117=(+(HEAPF32[(($116)>>2)]));
 $118=$117>(0.0);
 do {
  if ($118) {
   $120=(($this+172)|0);
   $121=(($this+92)|0);
   __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast37,$qA,$121);
   $122=$120;
   $ld$28$0=(($7)|0);
   $123$0=((HEAP32[(($ld$28$0)>>2)])|0);
   $ld$29$1=(($7+4)|0);
   $123$1=((HEAP32[(($ld$29$1)>>2)])|0);
   $st$30$0=(($122)|0);
   HEAP32[(($st$30$0)>>2)]=$123$0;
   $st$31$1=(($122+4)|0);
   HEAP32[(($st$31$1)>>2)]=$123$1;
   __ZplRK6b2Vec2S1_($8,$d,$rA);
   $124=(+(__Z7b2CrossRK6b2Vec2S1_($8,$120)));
   $125=(($this+188)|0);
   HEAPF32[(($125)>>2)]=$124;
   $126=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$120)));
   $127=(($this+192)|0);
   HEAPF32[(($127)>>2)]=$126;
   $128=(+(HEAPF32[(($125)>>2)]));
   $129=($53)*($128);
   $130=($128)*($129);
   $131=($100)+($130);
   $132=($49)*($126);
   $133=($126)*($132);
   $134=($133)+($131);
   $135=$134>(0.0);
   if (!($135)) {
    break;
   }
   $137=((1.0))/($134);
   HEAPF32[(($113)>>2)]=$137;
   $138=(+(__Z5b2DotRK6b2Vec2S1_($d,$120)));
   $139=(+(HEAPF32[(($116)>>2)]));
   $140=($139)*((6.2831854820251465));
   $141=($137)*((2.0));
   $142=(($this+72)|0);
   $143=(+(HEAPF32[(($142)>>2)]));
   $144=($141)*($143);
   $145=($140)*($144);
   $146=($137)*($140);
   $147=($140)*($146);
   $148=(($data)|0);
   $149=(+(HEAPF32[(($148)>>2)]));
   $150=($149)*($147);
   $151=($145)+($150);
   $152=($149)*($151);
   $153=$152>(0.0);
   if ($153) {
    $155=((1.0))/($152);
    $storemerge=$155;
   } else {
    $storemerge=$152;
   }

   HEAPF32[(($115)>>2)]=$storemerge;
   $157=($138)*($149);
   $158=($157)*($147);
   $159=($158)*($storemerge);
   HEAPF32[(($114)>>2)]=$159;
   $160=(+(HEAPF32[(($115)>>2)]));
   $161=($134)+($160);
   HEAPF32[(($113)>>2)]=$161;
   $162=$161>(0.0);
   if (!($162)) {
    break;
   }
   $164=((1.0))/($161);
   HEAPF32[(($113)>>2)]=$164;
  } else {
   $166=(($this+116)|0);
   HEAPF32[(($166)>>2)]=0.0;
  }
 } while(0);
 $168=(($this+128)|0);
 $169=((HEAP8[($168)])|0);
 $170=(($169<<24)>>24)==0;
 do {
  if ($170) {
   $178=(($this+208)|0);
   HEAPF32[(($178)>>2)]=0.0;
   $179=(($this+112)|0);
   HEAPF32[(($179)>>2)]=0.0;
  } else {
   $172=($49)+($53);
   $173=(($this+208)|0);
   HEAPF32[(($173)>>2)]=$172;
   $174=$172>(0.0);
   if (!($174)) {
    break;
   }
   $176=((1.0))/($172);
   HEAPF32[(($173)>>2)]=$176;
  }
 } while(0);
 $181=(($data+20)|0);
 $182=((HEAP8[($181)])|0);
 $183=(($182<<24)>>24)==0;
 if ($183) {
  $227=(($this+108)|0);
  HEAPF32[(($227)>>2)]=0.0;
  $228=(($this+116)|0);
  HEAPF32[(($228)>>2)]=0.0;
  $229=(($this+112)|0);
  HEAPF32[(($229)>>2)]=0.0;
  $wA_0=$72;$wB_0=$89;


  $231=((HEAP32[(($17)>>2)])|0);
  $232=((HEAP32[(($64)>>2)])|0);
  $233=(($232+((($231)*(12))&-1))|0);
  $234=$233;
  $ld$32$0=(($vA)|0);
  $235$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($vA+4)|0);
  $235$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($234)|0);
  HEAP32[(($st$34$0)>>2)]=$235$0;
  $st$35$1=(($234+4)|0);
  HEAP32[(($st$35$1)>>2)]=$235$1;
  $236=((HEAP32[(($17)>>2)])|0);
  $237=((HEAP32[(($64)>>2)])|0);
  $238=(($237+((($236)*(12))&-1)+8)|0);
  HEAPF32[(($238)>>2)]=$wA_0;
  $239=((HEAP32[(($22)>>2)])|0);
  $240=((HEAP32[(($64)>>2)])|0);
  $241=(($240+((($239)*(12))&-1))|0);
  $242=$241;
  $ld$36$0=(($vB)|0);
  $243$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vB+4)|0);
  $243$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($242)|0);
  HEAP32[(($st$38$0)>>2)]=$243$0;
  $st$39$1=(($242+4)|0);
  HEAP32[(($st$39$1)>>2)]=$243$1;
  $244=((HEAP32[(($22)>>2)])|0);
  $245=((HEAP32[(($64)>>2)])|0);
  $246=(($245+((($244)*(12))&-1)+8)|0);
  HEAPF32[(($246)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $185=(($data+8)|0);
  $186=(+(HEAPF32[(($185)>>2)]));
  $187=(($this+108)|0);
  $188=(+(HEAPF32[(($187)>>2)]));
  $189=($186)*($188);
  HEAPF32[(($187)>>2)]=$189;
  $190=(+(HEAPF32[(($185)>>2)]));
  $191=(($this+116)|0);
  $192=(+(HEAPF32[(($191)>>2)]));
  $193=($190)*($192);
  HEAPF32[(($191)>>2)]=$193;
  $194=(+(HEAPF32[(($185)>>2)]));
  $195=(($this+112)|0);
  $196=(+(HEAPF32[(($195)>>2)]));
  $197=($194)*($196);
  HEAPF32[(($195)>>2)]=$197;
  $198=(+(HEAPF32[(($187)>>2)]));
  __ZmlfRK6b2Vec2($9,$198,$92);
  $199=(+(HEAPF32[(($191)>>2)]));
  $200=(($this+172)|0);
  __ZmlfRK6b2Vec2($10,$199,$200);
  __ZplRK6b2Vec2S1_($P,$9,$10);
  $201=(+(HEAPF32[(($187)>>2)]));
  $202=(+(HEAPF32[(($97)>>2)]));
  $203=($201)*($202);
  $204=(+(HEAPF32[(($191)>>2)]));
  $205=(($this+188)|0);
  $206=(+(HEAPF32[(($205)>>2)]));
  $207=($204)*($206);
  $208=($203)+($207);
  $209=(+(HEAPF32[(($195)>>2)]));
  $210=($209)+($208);
  $211=(+(HEAPF32[(($99)>>2)]));
  $212=($201)*($211);
  $213=(($this+192)|0);
  $214=(+(HEAPF32[(($213)>>2)]));
  $215=($204)*($214);
  $216=($212)+($215);
  $217=($209)+($216);
  $218=(+(HEAPF32[(($38)>>2)]));
  __ZmlfRK6b2Vec2($11,$218,$P);
  __ZN6b2Vec2mIERKS_($tmpcast33,$11);
  $219=(+(HEAPF32[(($46)>>2)]));
  $220=($210)*($219);
  $221=($72)-($220);
  $222=(+(HEAPF32[(($42)>>2)]));
  __ZmlfRK6b2Vec2($12,$222,$P);
  __ZN6b2Vec2pLERKS_($tmpcast35,$12);
  $223=(+(HEAPF32[(($50)>>2)]));
  $224=($217)*($223);
  $225=($89)+($224);
  $wA_0=$221;$wB_0=$225;


  $231=((HEAP32[(($17)>>2)])|0);
  $232=((HEAP32[(($64)>>2)])|0);
  $233=(($232+((($231)*(12))&-1))|0);
  $234=$233;
  $ld$32$0=(($vA)|0);
  $235$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($vA+4)|0);
  $235$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($234)|0);
  HEAP32[(($st$34$0)>>2)]=$235$0;
  $st$35$1=(($234+4)|0);
  HEAP32[(($st$35$1)>>2)]=$235$1;
  $236=((HEAP32[(($17)>>2)])|0);
  $237=((HEAP32[(($64)>>2)])|0);
  $238=(($237+((($236)*(12))&-1)+8)|0);
  HEAPF32[(($238)>>2)]=$wA_0;
  $239=((HEAP32[(($22)>>2)])|0);
  $240=((HEAP32[(($64)>>2)])|0);
  $241=(($240+((($239)*(12))&-1))|0);
  $242=$241;
  $ld$36$0=(($vB)|0);
  $243$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vB+4)|0);
  $243$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($242)|0);
  HEAP32[(($st$38$0)>>2)]=$243$0;
  $st$39$1=(($242+4)|0);
  HEAP32[(($st$39$1)>>2)]=$243$1;
  $244=((HEAP32[(($22)>>2)])|0);
  $245=((HEAP32[(($64)>>2)])|0);
  $246=(($245+((($244)*(12))&-1)+8)|0);
  HEAPF32[(($246)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN12b2WheelJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast37=0,$1=0,$P=0,$2=0,$3=0,$4=0,$P5=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$10=.0,$11=0,$12=.0,$13=0,$14=.0;
 var $15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$ld$0$0=0,$21$0=0,$ld$1$1=0,$21$1=0,$st$2$0=0,$st$3$1=0,$22=0,$23=0,$24=0,$25=.0,$26=0,$27=0,$28=0,$29=0;
 var $ld$4$0=0,$30$0=0,$ld$5$1=0,$30$1=0,$st$6$0=0,$st$7$1=0,$31=0,$32=0,$33=0,$34=.0,$35=0,$36=.0,$37=0,$38=.0,$39=.0,$40=.0,$41=0,$42=.0,$43=.0,$44=.0;
 var $45=0,$46=.0,$47=.0,$48=0,$49=.0,$50=.0,$51=0,$52=.0,$53=0,$54=.0,$55=.0,$56=.0,$57=.0,$58=.0,$59=.0,$60=.0,$61=.0,$62=.0,$63=.0,$64=.0;
 var $65=.0,$66=.0,$67=.0,$68=0,$69=.0,$70=.0,$71=0,$72=.0,$73=.0,$74=.0,$75=0,$76=.0,$77=0,$78=.0,$79=0,$80=.0,$81=.0,$82=.0,$83=.0,$84=.0;
 var $85=.0,$86=.0,$87=.0,$88=.0,$89=.0,$90=0,$91=.0,$92=0,$93=.0,$94=.0,$95=.0,$96=0,$97=.0,$98=.0,$99=.0,$100=0,$101=.0,$102=.0,$103=.0,$104=0;
 var $105=.0,$106=.0,$107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0,$115=0,$116=0,$117=0,$118=0,$ld$8$0=0,$119$0=0,$ld$9$1=0,$119$1=0,$st$10$0=0,$st$11$1=0;
 var $120=0,$121=0,$122=0,$123=0,$124=0,$125=0,$126=0,$ld$12$0=0,$127$0=0,$ld$13$1=0,$127$1=0,$st$14$0=0,$st$15$1=0,$128=0,$129=0,$130=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast37=$vB;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+156)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($this+160)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=(($this+164)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=(($this+168)|0);
 $14=(+(HEAPF32[(($13)>>2)]));
 $15=(($this+132)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($data+28)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($18+((($16)*(12))&-1))|0);
 $20=$19;
 $ld$0$0=(($20)|0);
 $21$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$21$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$21$1;
 $22=((HEAP32[(($15)>>2)])|0);
 $23=((HEAP32[(($17)>>2)])|0);
 $24=(($23+((($22)*(12))&-1)+8)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=(($this+136)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=(($23+((($27)*(12))&-1))|0);
 $29=$28;
 $ld$4$0=(($29)|0);
 $30$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($29+4)|0);
 $30$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$30$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$30$1;
 $31=((HEAP32[(($26)>>2)])|0);
 $32=((HEAP32[(($17)>>2)])|0);
 $33=(($32+((($31)*(12))&-1)+8)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=(($this+172)|0);
 __ZmiRK6b2Vec2S1_($1,$tmpcast37,$tmpcast);
 $36=(+(__Z5b2DotRK6b2Vec2S1_($35,$1)));
 $37=(($this+192)|0);
 $38=(+(HEAPF32[(($37)>>2)]));
 $39=($34)*($38);
 $40=($36)+($39);
 $41=(($this+188)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=($25)*($42);
 $44=($40)-($43);
 $45=(($this+212)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=((-.0))-($46);
 $48=(($this+216)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=($44)+($49);
 $51=(($this+220)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 $53=(($this+116)|0);
 $54=(+(HEAPF32[(($53)>>2)]));
 $55=($52)*($54);
 $56=($50)+($55);
 $57=($56)*($47);
 $58=($54)+($57);
 HEAPF32[(($53)>>2)]=$58;
 __ZmlfRK6b2Vec2($P,$57,$35);
 $59=(+(HEAPF32[(($41)>>2)]));
 $60=($59)*($57);
 $61=(+(HEAPF32[(($37)>>2)]));
 $62=($57)*($61);
 __ZmlfRK6b2Vec2($2,$8,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$2);
 $63=($12)*($60);
 $64=($25)-($63);
 __ZmlfRK6b2Vec2($3,$10,$P);
 __ZN6b2Vec2pLERKS_($tmpcast37,$3);
 $65=($14)*($62);
 $66=($34)+($65);
 $67=($66)-($64);
 $68=(($this+124)|0);
 $69=(+(HEAPF32[(($68)>>2)]));
 $70=($67)-($69);
 $71=(($this+208)|0);
 $72=(+(HEAPF32[(($71)>>2)]));
 $73=((-.0))-($72);
 $74=($70)*($73);
 $75=(($this+112)|0);
 $76=(+(HEAPF32[(($75)>>2)]));
 $77=(($data)|0);
 $78=(+(HEAPF32[(($77)>>2)]));
 $79=(($this+120)|0);
 $80=(+(HEAPF32[(($79)>>2)]));
 $81=($78)*($80);
 $82=($76)+($74);
 $83=((-.0))-($81);
 $84=(+(__Z7b2ClampIfET_S0_S0_S0_($82,$83,$81)));
 HEAPF32[(($75)>>2)]=$84;
 $85=($84)-($76);
 $86=($12)*($85);
 $87=($64)-($86);
 $88=($14)*($85);
 $89=($66)+($88);
 $90=(($this+180)|0);
 __ZmiRK6b2Vec2S1_($4,$tmpcast37,$tmpcast);
 $91=(+(__Z5b2DotRK6b2Vec2S1_($90,$4)));
 $92=(($this+200)|0);
 $93=(+(HEAPF32[(($92)>>2)]));
 $94=($93)*($89);
 $95=($91)+($94);
 $96=(($this+196)|0);
 $97=(+(HEAPF32[(($96)>>2)]));
 $98=($87)*($97);
 $99=($95)-($98);
 $100=(($this+204)|0);
 $101=(+(HEAPF32[(($100)>>2)]));
 $102=((-.0))-($101);
 $103=($99)*($102);
 $104=(($this+108)|0);
 $105=(+(HEAPF32[(($104)>>2)]));
 $106=($105)+($103);
 HEAPF32[(($104)>>2)]=$106;
 __ZmlfRK6b2Vec2($P5,$103,$90);
 $107=(+(HEAPF32[(($96)>>2)]));
 $108=($103)*($107);
 $109=(+(HEAPF32[(($92)>>2)]));
 $110=($103)*($109);
 __ZmlfRK6b2Vec2($5,$8,$P5);
 __ZN6b2Vec2mIERKS_($tmpcast,$5);
 $111=($12)*($108);
 $112=($87)-($111);
 __ZmlfRK6b2Vec2($6,$10,$P5);
 __ZN6b2Vec2pLERKS_($tmpcast37,$6);
 $113=($14)*($110);
 $114=($89)+($113);
 $115=((HEAP32[(($15)>>2)])|0);
 $116=((HEAP32[(($17)>>2)])|0);
 $117=(($116+((($115)*(12))&-1))|0);
 $118=$117;
 $ld$8$0=(($vA)|0);
 $119$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vA+4)|0);
 $119$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($118)|0);
 HEAP32[(($st$10$0)>>2)]=$119$0;
 $st$11$1=(($118+4)|0);
 HEAP32[(($st$11$1)>>2)]=$119$1;
 $120=((HEAP32[(($15)>>2)])|0);
 $121=((HEAP32[(($17)>>2)])|0);
 $122=(($121+((($120)*(12))&-1)+8)|0);
 HEAPF32[(($122)>>2)]=$112;
 $123=((HEAP32[(($26)>>2)])|0);
 $124=((HEAP32[(($17)>>2)])|0);
 $125=(($124+((($123)*(12))&-1))|0);
 $126=$125;
 $ld$12$0=(($vB)|0);
 $127$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vB+4)|0);
 $127$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($126)|0);
 HEAP32[(($st$14$0)>>2)]=$127$0;
 $st$15$1=(($126+4)|0);
 HEAP32[(($st$15$1)>>2)]=$127$1;
 $128=((HEAP32[(($26)>>2)])|0);
 $129=((HEAP32[(($17)>>2)])|0);
 $130=(($129+((($128)*(12))&-1)+8)|0);
 HEAPF32[(($130)>>2)]=$114;
 STACKTOP=sp;return;
}


function __ZN12b2WheelJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast17=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$d=0,$3=0,$4=0,$ay=0,$5=0,$P=0,$6=0,$7=0,$8=0,$9=0;
 var $10=0,$11=0,$12=0,$13=0,$ld$0$0=0,$14$0=0,$ld$1$1=0,$14$1=0,$st$2$0=0,$st$3$1=0,$15=0,$16=0,$17=0,$18=.0,$19=0,$20=0,$21=0,$22=0,$ld$4$0=0,$23$0=0;
 var $ld$5$1=0,$23$1=0,$st$6$0=0,$st$7$1=0,$24=0,$25=0,$26=0,$27=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=.0,$34=.0,$35=.0,$36=0,$37=.0,$38=0,$39=.0;
 var $40=.0,$41=0,$42=.0,$43=0,$44=.0,$45=.0,$46=.0,$47=.0,$48=0,$49=.0,$50=0,$51=.0,$52=.0,$53=.0,$54=.0,$55=0,$57=.0,$58=.0,$impulse_0=.0,$60=.0;
 var $61=.0,$62=.0,$63=.0,$64=.0,$65=.0,$66=.0,$67=.0,$68=.0,$69=.0,$70=0,$71=0,$72=0,$73=0,$ld$8$0=0,$74$0=0,$ld$9$1=0,$74$1=0,$st$10$0=0,$st$11$1=0,$75=0;
 var $76=0,$77=0,$78=0,$79=0,$80=0,$81=0,$ld$12$0=0,$82$0=0,$ld$13$1=0,$82$1=0,$st$14$0=0,$st$15$1=0,$83=0,$84=0,$85=0,$86=.0,$87=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast17=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $ay=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=(($this+132)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($data+24)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+((($9)*(12))&-1))|0);
 $13=$12;
 $ld$0$0=(($13)|0);
 $14$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$14$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$14$1;
 $15=((HEAP32[(($8)>>2)])|0);
 $16=((HEAP32[(($10)>>2)])|0);
 $17=(($16+((($15)*(12))&-1)+8)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=(($this+136)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=(($16+((($20)*(12))&-1))|0);
 $22=$21;
 $ld$4$0=(($22)|0);
 $23$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($22+4)|0);
 $23$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$23$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$23$1;
 $24=((HEAP32[(($19)>>2)])|0);
 $25=((HEAP32[(($10)>>2)])|0);
 $26=(($25+((($24)*(12))&-1)+8)|0);
 $27=(+(HEAPF32[(($26)>>2)]));
 __ZN5b2RotC1Ef($qA,$18);
 __ZN5b2RotC1Ef($qB,$27);
 $28=(($this+76)|0);
 $29=(($this+140)|0);
 __ZmiRK6b2Vec2S1_($1,$28,$29);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $30=(($this+84)|0);
 $31=(($this+148)|0);
 __ZmiRK6b2Vec2S1_($2,$30,$31);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZmiRK6b2Vec2S1_($4,$tmpcast17,$tmpcast);
 __ZplRK6b2Vec2S1_($3,$4,$rB);
 __ZmiRK6b2Vec2S1_($d,$3,$rA);
 $32=(($this+100)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($ay,$qA,$32);
 __ZplRK6b2Vec2S1_($5,$d,$rA);
 $33=(+(__Z7b2CrossRK6b2Vec2S1_($5,$ay)));
 $34=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$ay)));
 $35=(+(__Z5b2DotRK6b2Vec2S1_($d,$ay)));
 $36=(($this+156)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=(($this+160)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=($37)+($39);
 $41=(($this+164)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+196)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=($42)*($44);
 $46=($44)*($45);
 $47=($40)+($46);
 $48=(($this+168)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=(($this+200)|0);
 $51=(+(HEAPF32[(($50)>>2)]));
 $52=($49)*($51);
 $53=($51)*($52);
 $54=($47)+($53);
 $55=$54!=(0.0);
 if ($55) {
  $57=((-.0))-($35);
  $58=($57)/($54);
  $impulse_0=$58;
 } else {
  $impulse_0=0.0;
 }

 __ZmlfRK6b2Vec2($P,$impulse_0,$ay);
 $60=($33)*($impulse_0);
 $61=($34)*($impulse_0);
 $62=(+(HEAPF32[(($36)>>2)]));
 __ZmlfRK6b2Vec2($6,$62,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$6);
 $63=(+(HEAPF32[(($41)>>2)]));
 $64=($60)*($63);
 $65=($18)-($64);
 $66=(+(HEAPF32[(($38)>>2)]));
 __ZmlfRK6b2Vec2($7,$66,$P);
 __ZN6b2Vec2pLERKS_($tmpcast17,$7);
 $67=(+(HEAPF32[(($48)>>2)]));
 $68=($61)*($67);
 $69=($27)+($68);
 $70=((HEAP32[(($8)>>2)])|0);
 $71=((HEAP32[(($10)>>2)])|0);
 $72=(($71+((($70)*(12))&-1))|0);
 $73=$72;
 $ld$8$0=(($cA)|0);
 $74$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $74$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($73)|0);
 HEAP32[(($st$10$0)>>2)]=$74$0;
 $st$11$1=(($73+4)|0);
 HEAP32[(($st$11$1)>>2)]=$74$1;
 $75=((HEAP32[(($8)>>2)])|0);
 $76=((HEAP32[(($10)>>2)])|0);
 $77=(($76+((($75)*(12))&-1)+8)|0);
 HEAPF32[(($77)>>2)]=$65;
 $78=((HEAP32[(($19)>>2)])|0);
 $79=((HEAP32[(($10)>>2)])|0);
 $80=(($79+((($78)*(12))&-1))|0);
 $81=$80;
 $ld$12$0=(($cB)|0);
 $82$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $82$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($81)|0);
 HEAP32[(($st$14$0)>>2)]=$82$0;
 $st$15$1=(($81+4)|0);
 HEAP32[(($st$15$1)>>2)]=$82$1;
 $83=((HEAP32[(($19)>>2)])|0);
 $84=((HEAP32[(($10)>>2)])|0);
 $85=(($84+((($83)*(12))&-1)+8)|0);
 HEAPF32[(($85)>>2)]=$69;
 $86=(+(__Z5b2AbsIfET_S0_($35)));
 $87=$86<=(0.004999999888241291);
 STACKTOP=sp;return (($87)|0);
}


function __ZNK12b2WheelJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+76)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK12b2WheelJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+84)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK12b2WheelJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=0,$8=.0,$9=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(((sp)+(16))|0);
 $4=(($this+108)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(($this+180)|0);
 __ZmlfRK6b2Vec2($2,$5,$6);
 $7=(($this+116)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($this+172)|0);
 __ZmlfRK6b2Vec2($3,$8,$9);
 __ZplRK6b2Vec2S1_($1,$2,$3);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$1);
 STACKTOP=sp;return;
}


function __ZNK12b2WheelJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+112)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZNK12b2WheelJoint19GetJointTranslationEv($this){
 $this=($this)|0;
 var $pA=0,$pB=0,$d=0,$axis=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $pA=((sp)|0);
 $pB=(((sp)+(8))|0);
 $d=(((sp)+(16))|0);
 $axis=(((sp)+(24))|0);
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+76)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($pA,$2,$5);
 $6=(($this+84)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($pB,$4,$6);
 __ZmiRK6b2Vec2S1_($d,$pB,$pA);
 $7=(($this+92)|0);
 __ZNK6b2Body14GetWorldVectorERK6b2Vec2($axis,$2,$7);
 $8=(+(__Z5b2DotRK6b2Vec2S1_($d,$axis)));
 STACKTOP=sp;return (+($8));
}


function __ZNK12b2WheelJoint13GetJointSpeedEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=.0,$5=0,$6=0,$7=0,$8=.0,$9=.0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+72)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+72)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($8)-($4);
 return (+($9));
}


function __ZNK12b2WheelJoint14IsMotorEnabledEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+128)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function __ZN12b2WheelJoint11EnableMotorEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($2,1);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($4,1);
 $5=(($this+128)|0);
 $6=($flag&1);
 HEAP8[($5)]=$6;
 return;
}


function __ZN12b2WheelJoint13SetMotorSpeedEf($this,$speed){
 $this=($this)|0;
 $speed=+($speed);
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($2,1);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($4,1);
 $5=(($this+124)|0);
 HEAPF32[(($5)>>2)]=$speed;
 return;
}


function __ZN12b2WheelJoint17SetMaxMotorTorqueEf($this,$torque){
 $this=($this)|0;
 $torque=+($torque);
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($2,1);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($4,1);
 $5=(($this+120)|0);
 HEAPF32[(($5)>>2)]=$torque;
 return;
}


function __ZNK12b2WheelJoint14GetMotorTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+112)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZN12b2WheelJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=0,$32=0,$33=0,$34=.0,$35=.0,$36=0,$37=.0,$38=.0,$39=0,$40=.0;
 var $41=.0,$42=0,$43=.0,$44=.0,$45=0,$46=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(3248,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(8936,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(5976,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(3936,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+76)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+80)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(2888,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+84)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+88)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(2168,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+92)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 $27=(($this+96)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(1512,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$26,HEAPF64[(((tempVarArgs)+(8))>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+128)|0);
 $31=((HEAP8[($30)])|0);
 $32=($31&255);
 __Z5b2LogPKcz(936,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$32,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $33=(($this+124)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=$34;
 __Z5b2LogPKcz(496,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$35,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $36=(($this+120)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=$37;
 __Z5b2LogPKcz(24,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$38,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $39=(($this+68)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=$40;
 __Z5b2LogPKcz(11448,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$41,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $42=(($this+72)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=$43;
 __Z5b2LogPKcz(11008,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$44,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $45=(($this+56)|0);
 $46=((HEAP32[(($45)>>2)])|0);
 __Z5b2LogPKcz(10264,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$46,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN12b2WheelJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN12b2WheelJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZNK6b2Vec24SkewEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,label=0;

 $1=(($this+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=((-.0))-($2);
 $4=(($this)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 __ZN6b2Vec2C1Eff($agg_result,$3,$5);
 return;
}


function _emscripten_bind_b2ContactManager__get_m_contactFilter_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+68)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2ContactManager__get_m_contactCount_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+64)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2ContactManager__set_m_contactFilter_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+68)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2ContactManager__b2ContactManager_p0(){
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(80))|0);
 $2=$1;
 __ZN16b2ContactManagerC2Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2ContactManager__AddPair_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var label=0;

 __ZN16b2ContactManager7AddPairEPvS0_($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2ContactManager__set_m_allocator_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+76)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2ContactManager__set_m_contactCount_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+64)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2ContactManager__Collide_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN16b2ContactManager7CollideEv($self);
 return;
}


function _emscripten_bind_b2ContactManager__set_m_contactList_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+60)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2ContactManager__FindNewContacts_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN16b2ContactManager15FindNewContactsEv($self);
 return;
}


function _emscripten_bind_b2ContactManager__get_m_contactListener_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+72)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2ContactManager____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$4=0,$8=0,$7$0=0,$7$1=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 __ZN16b2ContactManagerD1Ev($self);
 $4=$self;
 __ZdlPv($4);
 return;
}


function _emscripten_bind_b2ContactManager__set_m_contactListener_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+72)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2ContactManager__get_m_broadPhase_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 return (($1)|0);
}


function _emscripten_bind_b2ContactManager__Destroy_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN16b2ContactManager7DestroyEP9b2Contact($self,$arg0);
 return;
}


function _emscripten_bind_b2ContactManager__set_m_broadPhase_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=$self;
 $2=$arg0;
 (_memcpy((($1)|0), (($2)|0), 60)|0);
 return;
}


function _emscripten_bind_b2ContactManager__get_m_contactList_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+60)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2ContactManager__get_m_allocator_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+76)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceJoint__GetBodyA_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyAEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceJoint__GetBodyB_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyBEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceJoint__SetFrequency_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN15b2DistanceJoint12SetFrequencyEf($self,$arg0);
 return;
}


function __ZN15b2DistanceJoint12SetFrequencyEf($this,$hz){
 $this=($this)|0;
 $hz=+($hz);
 var $1=0,label=0;

 $1=(($this+68)|0);
 HEAPF32[(($1)>>2)]=$hz;
 return;
}


function _emscripten_bind_b2DistanceJoint__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint11GetUserDataEv($1))|0);
 return (($2)|0);
}


function __ZNK7b2Joint11GetUserDataEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+64)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceJoint__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 __ZN7b2Joint11SetUserDataEPv($1,$arg0);
 return;
}


function __ZN7b2Joint11SetUserDataEPv($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $1=0,label=0;

 $1=(($this+64)|0);
 HEAP32[(($1)>>2)]=$data;
 return;
}


function _emscripten_bind_b2DistanceJoint__GetAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21704)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21704)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_vii[($12)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16424;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16424)|0);
}


function _emscripten_bind_b2DistanceJoint__GetAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21712)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21712)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((HEAP32[(($10)>>2)])|0);
 FUNCTION_TABLE_vii[($11)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16416;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$12$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$12$1;
 STACKTOP=sp;return ((16416)|0);
}


function _emscripten_bind_b2DistanceJoint__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint7GetNextEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceJoint__GetLocalAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK15b2DistanceJoint15GetLocalAnchorAEv($self))|0);
 return (($1)|0);
}


function __ZNK15b2DistanceJoint15GetLocalAnchorAEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+80)|0);
 return (($1)|0);
}


function _emscripten_bind_b2DistanceJoint__GetLocalAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK15b2DistanceJoint15GetLocalAnchorBEv($self))|0);
 return (($1)|0);
}


function __ZNK15b2DistanceJoint15GetLocalAnchorBEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+88)|0);
 return (($1)|0);
}


function _emscripten_bind_b2DistanceJoint__GetFrequency_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK15b2DistanceJoint12GetFrequencyEv($self)));
 return (+($1));
}


function __ZNK15b2DistanceJoint12GetFrequencyEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+68)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2DistanceJoint__GetReactionForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21584)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21584)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_viif[($12)&127]($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16328;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16328)|0);
}


function _emscripten_bind_b2DistanceJoint__GetLength_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK15b2DistanceJoint9GetLengthEv($self)));
 return (+($1));
}


function __ZNK15b2DistanceJoint9GetLengthEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+104)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2DistanceJoint__GetDampingRatio_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK15b2DistanceJoint15GetDampingRatioEv($self)));
 return (+($1));
}


function __ZNK15b2DistanceJoint15GetDampingRatioEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+72)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2DistanceJoint__GetCollideConnected_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint19GetCollideConnectedEv($1))|0);
 return (($2)|0);
}


function __ZNK7b2Joint19GetCollideConnectedEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+61)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2DistanceJoint____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+24)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2DistanceJoint__Dump_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($self);
 return;
}


function _emscripten_bind_b2DistanceJoint__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceJoint__b2DistanceJoint_p1($arg0){
 $arg0=($arg0)|0;
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(176))|0);
 $2=$1;
 __ZN15b2DistanceJointC2EPK18b2DistanceJointDef($2,$arg0);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceJoint__SetDampingRatio_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN15b2DistanceJoint15SetDampingRatioEf($self,$arg0);
 return;
}


function __ZN15b2DistanceJoint15SetDampingRatioEf($this,$ratio){
 $this=($this)|0;
 $ratio=+($ratio);
 var $1=0,label=0;

 $1=(($this+72)|0);
 HEAPF32[(($1)>>2)]=$ratio;
 return;
}


function _emscripten_bind_b2DistanceJoint__GetReactionTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(+(FUNCTION_TABLE_fif[($4)&63]($self,$arg0)));
 return (+($5));
}


function _emscripten_bind_b2DistanceJoint__SetLength_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN15b2DistanceJoint9SetLengthEf($self,$arg0);
 return;
}


function __ZN15b2DistanceJoint9SetLengthEf($this,$length){
 $this=($this)|0;
 $length=+($length);
 var $1=0,label=0;

 $1=(($this+104)|0);
 HEAPF32[(($1)>>2)]=$length;
 return;
}


function _emscripten_bind_b2DistanceJoint__IsActive_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint8IsActiveEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2Fixture__GetRestitution_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK9b2Fixture14GetRestitutionEv($self)));
 return (+($1));
}


function __ZNK9b2Fixture14GetRestitutionEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+20)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Fixture__SetFilterData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN9b2Fixture13SetFilterDataERK8b2Filter($self,$arg0);
 return;
}


function _emscripten_bind_b2Fixture__SetFriction_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN9b2Fixture11SetFrictionEf($self,$arg0);
 return;
}


function __ZN9b2Fixture11SetFrictionEf($this,$friction){
 $this=($this)|0;
 $friction=+($friction);
 var $1=0,label=0;

 $1=(($this+16)|0);
 HEAPF32[(($1)>>2)]=$friction;
 return;
}


function _emscripten_bind_b2Fixture__b2Fixture_p0(){
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(44))|0);
 $2=$1;
 __ZN9b2FixtureC2Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2Fixture__GetShape_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN9b2Fixture8GetShapeEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Fixture__SetRestitution_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN9b2Fixture14SetRestitutionEf($self,$arg0);
 return;
}


function __ZN9b2Fixture14SetRestitutionEf($this,$restitution){
 $this=($this)|0;
 $restitution=+($restitution);
 var $1=0,label=0;

 $1=(($this+20)|0);
 HEAPF32[(($1)>>2)]=$restitution;
 return;
}


function _emscripten_bind_b2Fixture__GetBody_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN9b2Fixture7GetBodyEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Fixture__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN9b2Fixture7GetNextEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Fixture__GetFriction_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK9b2Fixture11GetFrictionEv($self)));
 return (+($1));
}


function __ZNK9b2Fixture11GetFrictionEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+16)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Fixture__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK9b2Fixture11GetUserDataEv($self))|0);
 return (($1)|0);
}


function __ZNK9b2Fixture11GetUserDataEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+40)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2Fixture__SetDensity_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN9b2Fixture10SetDensityEf($self,$arg0);
 return;
}


function __ZN9b2Fixture10SetDensityEf($this,$density){
 $this=($this)|0;
 $density=+($density);
 var $1=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=$density;
 return;
}


function _emscripten_bind_b2Fixture__GetMassData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZNK9b2Fixture11GetMassDataEP10b2MassData($self,$arg0);
 return;
}


function _emscripten_bind_b2Fixture__SetSensor_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN9b2Fixture9SetSensorEb($self,$arg0);
 return;
}


function _emscripten_bind_b2Fixture__GetAABB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK9b2Fixture7GetAABBEi($self,$arg0))|0);
 return (($1)|0);
}


function __ZNK9b2Fixture7GetAABBEi($this,$childIndex){
 $this=($this)|0;
 $childIndex=($childIndex)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+24)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+((($childIndex)*(28))&-1))|0);
 return (($3)|0);
}


function _emscripten_bind_b2Fixture__TestPoint_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK9b2Fixture9TestPointERK6b2Vec2($self,$arg0))|0);
 return (($1)|0);
}


function __ZNK9b2Fixture9TestPointERK6b2Vec2($this,$p){
 $this=($this)|0;
 $p=($p)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+16)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($this+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=((__ZNK6b2Body12GetTransformEv($8))|0);
 $10=((FUNCTION_TABLE_iiii[($6)&63]($2,$9,$p))|0);
 return (($10)|0);
}


function _emscripten_bind_b2Fixture__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN9b2Fixture11SetUserDataEPv($self,$arg0);
 return;
}


function __ZN9b2Fixture11SetUserDataEPv($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $1=0,label=0;

 $1=(($this+40)|0);
 HEAP32[(($1)>>2)]=$data;
 return;
}


function _emscripten_bind_b2Fixture____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2Fixture__RayCast_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var $1=0,label=0;

 $1=((__ZNK9b2Fixture7RayCastEP15b2RayCastOutputRK14b2RayCastInputi($self,$arg0,$arg1,$arg2))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Fixture__Refilter_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN9b2Fixture8RefilterEv($self);
 return;
}


function _emscripten_bind_b2Fixture__Dump_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN9b2Fixture4DumpEi($self,$arg0);
 return;
}


function _emscripten_bind_b2Fixture__GetFilterData_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK9b2Fixture13GetFilterDataEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Fixture__IsSensor_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK9b2Fixture8IsSensorEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Fixture__GetType_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK9b2Fixture7GetTypeEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Fixture__GetDensity_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK9b2Fixture10GetDensityEv($self)));
 return (+($1));
}


function __ZNK9b2Fixture10GetDensityEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2MouseJoint__GetBodyA_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyAEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2MouseJoint__GetBodyB_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyBEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2MouseJoint__SetFrequency_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN12b2MouseJoint12SetFrequencyEf($self,$arg0);
 return;
}


function _emscripten_bind_b2MouseJoint__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint11GetUserDataEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2MouseJoint__SetMaxForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN12b2MouseJoint11SetMaxForceEf($self,$arg0);
 return;
}


function _emscripten_bind_b2MouseJoint__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 __ZN7b2Joint11SetUserDataEPv($1,$arg0);
 return;
}


function _emscripten_bind_b2MouseJoint__GetAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21768)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21768)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_vii[($12)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16240;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16240)|0);
}


function _emscripten_bind_b2MouseJoint__GetAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21776)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21776)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((HEAP32[(($10)>>2)])|0);
 FUNCTION_TABLE_vii[($11)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16152;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$12$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$12$1;
 STACKTOP=sp;return ((16152)|0);
}


function _emscripten_bind_b2MouseJoint__b2MouseJoint_p1($arg0){
 $arg0=($arg0)|0;
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(168))|0);
 $2=$1;
 __ZN12b2MouseJointC2EPK15b2MouseJointDef($2,$arg0);
 return (($2)|0);
}


function _emscripten_bind_b2MouseJoint__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint7GetNextEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2MouseJoint__GetMaxForce_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK12b2MouseJoint11GetMaxForceEv($self)));
 return (+($1));
}


function _emscripten_bind_b2MouseJoint__GetTarget_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK12b2MouseJoint9GetTargetEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2MouseJoint__GetFrequency_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK12b2MouseJoint12GetFrequencyEv($self)));
 return (+($1));
}


function _emscripten_bind_b2MouseJoint__GetReactionForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21624)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21624)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_viif[($12)&127]($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16056;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16056)|0);
}


function _emscripten_bind_b2MouseJoint__GetDampingRatio_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK12b2MouseJoint15GetDampingRatioEv($self)));
 return (+($1));
}


function _emscripten_bind_b2MouseJoint__GetCollideConnected_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint19GetCollideConnectedEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2MouseJoint____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+24)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2MouseJoint__Dump_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($self);
 return;
}


function _emscripten_bind_b2MouseJoint__SetTarget_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN12b2MouseJoint9SetTargetERK6b2Vec2($self,$arg0);
 return;
}


function _emscripten_bind_b2MouseJoint__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2MouseJoint__SetDampingRatio_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN12b2MouseJoint15SetDampingRatioEf($self,$arg0);
 return;
}


function _emscripten_bind_b2MouseJoint__GetReactionTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(+(FUNCTION_TABLE_fif[($4)&63]($self,$arg0)));
 return (+($5));
}


function _emscripten_bind_b2MouseJoint__IsActive_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint8IsActiveEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PulleyJoint__GetBodyA_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyAEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PulleyJoint____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+24)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2PulleyJoint__GetAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21728)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21728)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((HEAP32[(($10)>>2)])|0);
 FUNCTION_TABLE_vii[($11)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16048;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$12$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$12$1;
 STACKTOP=sp;return ((16048)|0);
}


function _emscripten_bind_b2PulleyJoint__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PulleyJoint__GetGroundAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21600)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21600)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK13b2PulleyJoint16GetGroundAnchorBEv($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16040;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16040)|0);
}


function _emscripten_bind_b2PulleyJoint__GetReactionTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(+(FUNCTION_TABLE_fif[($4)&63]($self,$arg0)));
 return (+($5));
}


function _emscripten_bind_b2PulleyJoint__Dump_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($self);
 return;
}


function _emscripten_bind_b2PulleyJoint__GetGroundAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21608)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21608)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK13b2PulleyJoint16GetGroundAnchorAEv($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16032;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16032)|0);
}


function _emscripten_bind_b2PulleyJoint__GetLengthB_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK13b2PulleyJoint10GetLengthBEv($self)));
 return (+($1));
}


function _emscripten_bind_b2PulleyJoint__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint11GetUserDataEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PulleyJoint__GetLengthA_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK13b2PulleyJoint10GetLengthAEv($self)));
 return (+($1));
}


function _emscripten_bind_b2PulleyJoint__GetBodyB_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyBEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PulleyJoint__GetCollideConnected_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint19GetCollideConnectedEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PulleyJoint__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 __ZN7b2Joint11SetUserDataEPv($1,$arg0);
 return;
}


function _emscripten_bind_b2PulleyJoint__GetAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21720)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21720)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_vii[($12)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16024;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16024)|0);
}


function _emscripten_bind_b2PulleyJoint__GetReactionForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21592)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21592)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_viif[($12)&127]($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16408;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16408)|0);
}


function _emscripten_bind_b2PulleyJoint__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint7GetNextEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PulleyJoint__b2PulleyJoint_p1($arg0){
 $arg0=($arg0)|0;
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(196))|0);
 $2=$1;
 __ZN13b2PulleyJointC2EPK16b2PulleyJointDef($2,$arg0);
 return (($2)|0);
}


function _emscripten_bind_b2PulleyJoint__IsActive_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint8IsActiveEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PulleyJoint__GetRatio_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK13b2PulleyJoint8GetRatioEv($self)));
 return (+($1));
}


function _emscripten_bind_b2BroadPhase__GetTreeQuality_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK12b2BroadPhase14GetTreeQualityEv($self)));
 return (+($1));
}


function _emscripten_bind_b2BroadPhase__GetFatAABB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK12b2BroadPhase10GetFatAABBEi($self,$arg0))|0);
 return (($1)|0);
}


function _emscripten_bind_b2BroadPhase__GetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK12b2BroadPhase11GetUserDataEi($self,$arg0))|0);
 return (($1)|0);
}


function _emscripten_bind_b2BroadPhase____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$4=0,$8=0,$7$0=0,$7$1=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 __ZN12b2BroadPhaseD2Ev($self);
 $4=$self;
 __ZdlPv($4);
 return;
}


function _emscripten_bind_b2BroadPhase__GetTreeHeight_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK12b2BroadPhase13GetTreeHeightEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2BroadPhase__b2BroadPhase_p0(){
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(60))|0);
 $2=$1;
 __ZN12b2BroadPhaseC2Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2BroadPhase__GetProxyCount_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK12b2BroadPhase13GetProxyCountEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2BroadPhase__GetTreeBalance_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK12b2BroadPhase14GetTreeBalanceEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2BroadPhase__TestOverlap_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var $1=0,label=0;

 $1=((__ZNK12b2BroadPhase11TestOverlapEii($self,$arg0,$arg1))|0);
 return (($1)|0);
}


function _emscripten_bind_b2BroadPhase__TouchProxy_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN12b2BroadPhase10TouchProxyEi($self,$arg0);
 return;
}


function _emscripten_bind_b2BroadPhase__CreateProxy_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var $1=0,label=0;

 $1=((__ZN12b2BroadPhase11CreateProxyERK6b2AABBPv($self,$arg0,$arg1))|0);
 return (($1)|0);
}


function _emscripten_bind_b2BroadPhase__MoveProxy_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var label=0;

 __ZN12b2BroadPhase9MoveProxyEiRK6b2AABBRK6b2Vec2($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2BroadPhase__DestroyProxy_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN12b2BroadPhase12DestroyProxyEi($self,$arg0);
 return;
}


function _emscripten_bind_b2World__QueryAABB_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var label=0;

 __ZNK7b2World9QueryAABBEP15b2QueryCallbackRK6b2AABB($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2World__SetSubStepping_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2World14SetSubSteppingEb($self,$arg0);
 return;
}


function __ZN7b2World14SetSubSteppingEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102994)|0);
 $2=($flag&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2World__GetTreeQuality_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK7b2World14GetTreeQualityEv($self)));
 return (+($1));
}


function _emscripten_bind_b2World__GetTreeHeight_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World13GetTreeHeightEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2World__GetProfile_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World10GetProfileEv($self))|0);
 return (($1)|0);
}


function __ZNK7b2World10GetProfileEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+102996)|0);
 return (($1)|0);
}


function _emscripten_bind_b2World__GetTreeBalance_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World14GetTreeBalanceEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2World__GetSubStepping_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World14GetSubSteppingEv($self))|0);
 return (($1)|0);
}


function __ZNK7b2World14GetSubSteppingEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+102994)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2World__GetContactManager_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World17GetContactManagerEv($self))|0);
 return (($1)|0);
}


function __ZNK7b2World17GetContactManagerEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+102872)|0);
 return (($1)|0);
}


function _emscripten_bind_b2World__SetContactListener_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2World18SetContactListenerEP17b2ContactListener($self,$arg0);
 return;
}


function _emscripten_bind_b2World__DrawDebugData_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN7b2World13DrawDebugDataEv($self);
 return;
}


function _emscripten_bind_b2World__SetContinuousPhysics_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2World20SetContinuousPhysicsEb($self,$arg0);
 return;
}


function __ZN7b2World20SetContinuousPhysicsEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102993)|0);
 $2=($flag&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2World__SetGravity_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2World10SetGravityERK6b2Vec2($self,$arg0);
 return;
}


function __ZN7b2World10SetGravityERK6b2Vec2($this,$gravity){
 $this=($this)|0;
 $gravity=($gravity)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this+102968)|0);
 $2=$gravity;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2World__GetBodyCount_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World12GetBodyCountEv($self))|0);
 return (($1)|0);
}


function __ZNK7b2World12GetBodyCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102960)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2World__GetAutoClearForces_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World18GetAutoClearForcesEv($self))|0);
 return (($1)|0);
}


function __ZNK7b2World18GetAutoClearForcesEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+102868)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&4;
 $4=($3|0)!=0;
 return (($4)|0);
}


function _emscripten_bind_b2World__GetContinuousPhysics_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World20GetContinuousPhysicsEv($self))|0);
 return (($1)|0);
}


function __ZNK7b2World20GetContinuousPhysicsEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+102993)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2World__GetJointList_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN7b2World12GetJointListEv($self))|0);
 return (($1)|0);
}


function __ZN7b2World12GetJointListEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102956)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2World__CreateBody_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN7b2World10CreateBodyEPK9b2BodyDef($self,$arg0))|0);
 return (($1)|0);
}


function _emscripten_bind_b2World__GetBodyList_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN7b2World11GetBodyListEv($self))|0);
 return (($1)|0);
}


function __ZN7b2World11GetBodyListEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102952)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2World__SetDestructionListener_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2World22SetDestructionListenerEP21b2DestructionListener($self,$arg0);
 return;
}


function _emscripten_bind_b2World__DestroyJoint_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2World12DestroyJointEP7b2Joint($self,$arg0);
 return;
}


function _emscripten_bind_b2World__b2World_p1($arg0){
 $arg0=($arg0)|0;
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(103028))|0);
 $2=$1;
 __ZN7b2WorldC2ERK6b2Vec2($2,$arg0);
 return (($2)|0);
}


function _emscripten_bind_b2World__GetJointCount_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World13GetJointCountEv($self))|0);
 return (($1)|0);
}


function __ZNK7b2World13GetJointCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102964)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2World__Step_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=+($arg0);
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var label=0;

 __ZN7b2World4StepEfii($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2World__ClearForces_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN7b2World11ClearForcesEv($self);
 return;
}


function _emscripten_bind_b2World__GetWarmStarting_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World15GetWarmStartingEv($self))|0);
 return (($1)|0);
}


function __ZNK7b2World15GetWarmStartingEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+102992)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2World__SetAllowSleeping_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2World16SetAllowSleepingEb($self,$arg0);
 return;
}


function _emscripten_bind_b2World__DestroyBody_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2World11DestroyBodyEP6b2Body($self,$arg0);
 return;
}


function _emscripten_bind_b2World__GetAllowSleeping_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World16GetAllowSleepingEv($self))|0);
 return (($1)|0);
}


function __ZNK7b2World16GetAllowSleepingEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+102976)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2World__CreateJoint_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN7b2World11CreateJointEPK10b2JointDef($self,$arg0))|0);
 return (($1)|0);
}


function _emscripten_bind_b2World__GetProxyCount_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World13GetProxyCountEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2World__RayCast_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var label=0;

 __ZNK7b2World7RayCastEP17b2RayCastCallbackRK6b2Vec2S4_($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2World__IsLocked_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World8IsLockedEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2World__GetContactList_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN7b2World14GetContactListEv($self))|0);
 return (($1)|0);
}


function __ZN7b2World14GetContactListEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102932)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2World__SetDebugDraw_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2World12SetDebugDrawEP6b2Draw($self,$arg0);
 return;
}


function _emscripten_bind_b2World____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$4=0,$8=0,$7$0=0,$7$1=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 __ZN7b2WorldD2Ev($self);
 $4=$self;
 __ZdlPv($4);
 return;
}


function _emscripten_bind_b2World__Dump_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN7b2World4DumpEv($self);
 return;
}


function _emscripten_bind_b2World__SetAutoClearForces_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2World18SetAutoClearForcesEb($self,$arg0);
 return;
}


function __ZN7b2World18SetAutoClearForcesEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$3=0,$4=0,$storemerge=0,label=0;

 $1=(($this+102868)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&-5;
 $4=$2|4;
 $storemerge=($flag?$4:$3);
 HEAP32[(($1)>>2)]=$storemerge;
 return;
}


function _emscripten_bind_b2World__GetGravity_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21864)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21864)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK7b2World10GetGravityEv($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16400;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16400)|0);
}


function __ZNK7b2World10GetGravityEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this+102968)|0);
 $2=$1;
 $3=$agg_result;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2World__GetContactCount_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2World15GetContactCountEv($self))|0);
 return (($1)|0);
}


function __ZNK7b2World15GetContactCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102936)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2World__SetWarmStarting_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2World15SetWarmStartingEb($self,$arg0);
 return;
}


function __ZN7b2World15SetWarmStartingEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+102992)|0);
 $2=($flag&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2World__SetContactFilter_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2World16SetContactFilterEP15b2ContactFilter($self,$arg0);
 return;
}


function _emscripten_bind_b2PrismaticJoint__GetBodyA_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyAEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PrismaticJoint__GetBodyB_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyBEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PrismaticJoint__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint11GetUserDataEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PrismaticJoint__GetLocalAxisA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK16b2PrismaticJoint13GetLocalAxisAEv($self))|0);
 return (($1)|0);
}


function __ZNK16b2PrismaticJoint13GetLocalAxisAEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+84)|0);
 return (($1)|0);
}


function _emscripten_bind_b2PrismaticJoint__GetLowerLimit_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK16b2PrismaticJoint13GetLowerLimitEv($self)));
 return (+($1));
}


function _emscripten_bind_b2PrismaticJoint__GetAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21664)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21664)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((HEAP32[(($10)>>2)])|0);
 FUNCTION_TABLE_vii[($11)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16392;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$12$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$12$1;
 STACKTOP=sp;return ((16392)|0);
}


function _emscripten_bind_b2PrismaticJoint__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint7GetNextEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PrismaticJoint__b2PrismaticJoint_p1($arg0){
 $arg0=($arg0)|0;
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(256))|0);
 $2=$1;
 __ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef($2,$arg0);
 return (($2)|0);
}


function _emscripten_bind_b2PrismaticJoint__GetLocalAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK16b2PrismaticJoint15GetLocalAnchorAEv($self))|0);
 return (($1)|0);
}


function __ZNK16b2PrismaticJoint15GetLocalAnchorAEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+68)|0);
 return (($1)|0);
}


function _emscripten_bind_b2PrismaticJoint__SetMotorSpeed_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN16b2PrismaticJoint13SetMotorSpeedEf($self,$arg0);
 return;
}


function _emscripten_bind_b2PrismaticJoint__GetLocalAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK16b2PrismaticJoint15GetLocalAnchorBEv($self))|0);
 return (($1)|0);
}


function __ZNK16b2PrismaticJoint15GetLocalAnchorBEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+76)|0);
 return (($1)|0);
}


function _emscripten_bind_b2PrismaticJoint__GetMotorSpeed_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK16b2PrismaticJoint13GetMotorSpeedEv($self)));
 return (+($1));
}


function __ZNK16b2PrismaticJoint13GetMotorSpeedEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+132)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2PrismaticJoint__SetMaxMotorForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN16b2PrismaticJoint16SetMaxMotorForceEf($self,$arg0);
 return;
}


function _emscripten_bind_b2PrismaticJoint__EnableLimit_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN16b2PrismaticJoint11EnableLimitEb($self,$arg0);
 return;
}


function _emscripten_bind_b2PrismaticJoint__IsMotorEnabled_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK16b2PrismaticJoint14IsMotorEnabledEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2PrismaticJoint__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 __ZN7b2Joint11SetUserDataEPv($1,$arg0);
 return;
}


function _emscripten_bind_b2PrismaticJoint__GetReactionForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21560)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21560)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_viif[($12)&127]($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16384;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16384)|0);
}


function _emscripten_bind_b2PrismaticJoint__GetMaxMotorForce_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK16b2PrismaticJoint16GetMaxMotorForceEv($self)));
 return (+($1));
}


function __ZNK16b2PrismaticJoint16GetMaxMotorForceEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+128)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2PrismaticJoint__GetCollideConnected_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint19GetCollideConnectedEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PrismaticJoint__GetJointSpeed_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK16b2PrismaticJoint13GetJointSpeedEv($self)));
 return (+($1));
}


function _emscripten_bind_b2PrismaticJoint__EnableMotor_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN16b2PrismaticJoint11EnableMotorEb($self,$arg0);
 return;
}


function _emscripten_bind_b2PrismaticJoint____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+24)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2PrismaticJoint__GetReferenceAngle_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK16b2PrismaticJoint17GetReferenceAngleEv($self)));
 return (+($1));
}


function __ZNK16b2PrismaticJoint17GetReferenceAngleEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+100)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2PrismaticJoint__Dump_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($self);
 return;
}


function _emscripten_bind_b2PrismaticJoint__GetMotorForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=.0,label=0;

 $1=(+(__ZNK16b2PrismaticJoint13GetMotorForceEf($self,$arg0)));
 return (+($1));
}


function _emscripten_bind_b2PrismaticJoint__GetJointTranslation_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK16b2PrismaticJoint19GetJointTranslationEv($self)));
 return (+($1));
}


function _emscripten_bind_b2PrismaticJoint__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PrismaticJoint__IsLimitEnabled_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK16b2PrismaticJoint14IsLimitEnabledEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2PrismaticJoint__GetReactionTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(+(FUNCTION_TABLE_fif[($4)&63]($self,$arg0)));
 return (+($5));
}


function _emscripten_bind_b2PrismaticJoint__SetLimits_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=+($arg0);
 $arg1=+($arg1);
 var label=0;

 __ZN16b2PrismaticJoint9SetLimitsEff($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2PrismaticJoint__GetUpperLimit_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK16b2PrismaticJoint13GetUpperLimitEv($self)));
 return (+($1));
}


function _emscripten_bind_b2PrismaticJoint__IsActive_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint8IsActiveEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PrismaticJoint__GetAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21656)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21656)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_vii[($12)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16376;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16376)|0);
}


function _emscripten_bind_b2CircleShape____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2CircleShape__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Shape7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2CircleShape__ComputeMass_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=+($arg1);
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+28)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viif[($4)&127]($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2CircleShape__set_m_radius_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+8)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2CircleShape__get_m_radius_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+8)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2CircleShape__GetVertex_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK13b2CircleShape9GetVertexEi($self,0))|0);
 return (($1)|0);
}


function __ZNK13b2CircleShape9GetVertexEi($this,$index){
 $this=($this)|0;
 $index=($index)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 return (($1)|0);
}


function _emscripten_bind_b2CircleShape__Clone_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iii[($4)&127]($self,$arg0))|0);
 return (($5)|0);
}


function _emscripten_bind_b2CircleShape__GetSupportVertex_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK13b2CircleShape16GetSupportVertexERK6b2Vec2($self,0))|0);
 return (($1)|0);
}


function __ZNK13b2CircleShape16GetSupportVertexERK6b2Vec2($this,$d){
 $this=($this)|0;
 $d=($d)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 return (($1)|0);
}


function _emscripten_bind_b2CircleShape__RayCast_p4($self,$arg0,$arg1,$arg2,$arg3){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 $arg3=($arg3)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+20)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iiiiii[($4)&63]($self,$arg0,$arg1,$arg2,$arg3))|0);
 return (($5)|0);
}


function _emscripten_bind_b2CircleShape__ComputeAABB_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+24)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viiii[($4)&127]($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2CircleShape__GetVertexCount_p0($self){
 $self=($self)|0;
 var label=0;

 return ((1)|0);
}


function _emscripten_bind_b2CircleShape__GetChildCount_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_ii[($4)&63]($self))|0);
 return (($5)|0);
}


function _emscripten_bind_b2CircleShape__TestPoint_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iiii[($4)&63]($self,$arg0,$arg1))|0);
 return (($5)|0);
}


function _emscripten_bind_b2CircleShape__b2CircleShape_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(20))|0);
 $2=$1;
 __ZN13b2CircleShapeC1Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2CircleShape__GetSupport_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 return ((0)|0);
}


function _emscripten_bind_b2CircleShape__set_m_p_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+12)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2CircleShape__get_m_p_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+12)|0);
 return (($1)|0);
}


function _emscripten_bind_b2WheelJoint__GetBodyA_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyAEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2WheelJoint__GetBodyB_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyBEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2WheelJoint__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint11GetUserDataEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2WheelJoint__GetDefinition_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZNK12b2WheelJoint13GetDefinitionEP15b2WheelJointDef((($self)|0),(($arg0)|0));
 return;
}


function _emscripten_bind_b2WheelJoint__GetLocalAxisA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK12b2WheelJoint13GetLocalAxisAEv($self))|0);
 return (($1)|0);
}


function __ZNK12b2WheelJoint13GetLocalAxisAEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+92)|0);
 return (($1)|0);
}


function _emscripten_bind_b2WheelJoint__SetSpringDampingRatio_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN12b2WheelJoint21SetSpringDampingRatioEf($self,$arg0);
 return;
}


function __ZN12b2WheelJoint21SetSpringDampingRatioEf($this,$ratio){
 $this=($this)|0;
 $ratio=+($ratio);
 var $1=0,label=0;

 $1=(($this+72)|0);
 HEAPF32[(($1)>>2)]=$ratio;
 return;
}


function _emscripten_bind_b2WheelJoint__GetAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21752)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21752)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_vii[($12)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16368;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16368)|0);
}


function _emscripten_bind_b2WheelJoint__GetAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21760)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21760)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((HEAP32[(($10)>>2)])|0);
 FUNCTION_TABLE_vii[($11)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16360;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$12$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$12$1;
 STACKTOP=sp;return ((16360)|0);
}


function _emscripten_bind_b2WheelJoint__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint7GetNextEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2WheelJoint__GetSpringFrequencyHz_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK12b2WheelJoint20GetSpringFrequencyHzEv($self)));
 return (+($1));
}


function __ZNK12b2WheelJoint20GetSpringFrequencyHzEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+68)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WheelJoint__GetLocalAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK12b2WheelJoint15GetLocalAnchorAEv($self))|0);
 return (($1)|0);
}


function __ZNK12b2WheelJoint15GetLocalAnchorAEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+76)|0);
 return (($1)|0);
}


function _emscripten_bind_b2WheelJoint__SetMotorSpeed_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN12b2WheelJoint13SetMotorSpeedEf($self,$arg0);
 return;
}


function _emscripten_bind_b2WheelJoint__GetLocalAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK12b2WheelJoint15GetLocalAnchorBEv($self))|0);
 return (($1)|0);
}


function __ZNK12b2WheelJoint15GetLocalAnchorBEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+84)|0);
 return (($1)|0);
}


function _emscripten_bind_b2WheelJoint__GetMotorSpeed_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK12b2WheelJoint13GetMotorSpeedEv($self)));
 return (+($1));
}


function __ZNK12b2WheelJoint13GetMotorSpeedEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+124)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WheelJoint__GetMotorTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=.0,label=0;

 $1=(+(__ZNK12b2WheelJoint14GetMotorTorqueEf($self,$arg0)));
 return (+($1));
}


function _emscripten_bind_b2WheelJoint__b2WheelJoint_p1($arg0){
 $arg0=($arg0)|0;
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(224))|0);
 $2=$1;
 __ZN12b2WheelJointC2EPK15b2WheelJointDef($2,$arg0);
 return (($2)|0);
}


function _emscripten_bind_b2WheelJoint__IsMotorEnabled_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK12b2WheelJoint14IsMotorEnabledEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2WheelJoint__GetJointTranslation_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK12b2WheelJoint19GetJointTranslationEv($self)));
 return (+($1));
}


function _emscripten_bind_b2WheelJoint__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 __ZN7b2Joint11SetUserDataEPv($1,$arg0);
 return;
}


function _emscripten_bind_b2WheelJoint__GetReactionForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21616)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21616)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_viif[($12)&127]($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16352;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16352)|0);
}


function _emscripten_bind_b2WheelJoint__GetSpringDampingRatio_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK12b2WheelJoint21GetSpringDampingRatioEv($self)));
 return (+($1));
}


function __ZNK12b2WheelJoint21GetSpringDampingRatioEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+72)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WheelJoint__SetMaxMotorTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN12b2WheelJoint17SetMaxMotorTorqueEf($self,$arg0);
 return;
}


function _emscripten_bind_b2WheelJoint__GetCollideConnected_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint19GetCollideConnectedEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2WheelJoint__GetJointSpeed_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK12b2WheelJoint13GetJointSpeedEv($self)));
 return (+($1));
}


function _emscripten_bind_b2WheelJoint__EnableMotor_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN12b2WheelJoint11EnableMotorEb($self,$arg0);
 return;
}


function _emscripten_bind_b2WheelJoint____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+24)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2WheelJoint__Dump_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($self);
 return;
}


function _emscripten_bind_b2WheelJoint__GetMaxMotorTorque_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK12b2WheelJoint17GetMaxMotorTorqueEv($self)));
 return (+($1));
}


function __ZNK12b2WheelJoint17GetMaxMotorTorqueEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+120)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WheelJoint__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2WheelJoint__GetReactionTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(+(FUNCTION_TABLE_fif[($4)&63]($self,$arg0)));
 return (+($5));
}


function _emscripten_bind_b2WheelJoint__SetSpringFrequencyHz_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN12b2WheelJoint20SetSpringFrequencyHzEf($self,$arg0);
 return;
}


function __ZN12b2WheelJoint20SetSpringFrequencyHzEf($this,$hz){
 $this=($this)|0;
 $hz=+($hz);
 var $1=0,label=0;

 $1=(($this+68)|0);
 HEAPF32[(($1)>>2)]=$hz;
 return;
}


function _emscripten_bind_b2WheelJoint__IsActive_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint8IsActiveEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2Draw____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2Draw__AppendFlags_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Draw11AppendFlagsEj($self,$arg0);
 return;
}


function _emscripten_bind_b2Draw__DrawTransform_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+28)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vii[($4)&255]($self,$arg0);
 return;
}


function _emscripten_bind_b2Draw__ClearFlags_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Draw10ClearFlagsEj($self,$arg0);
 return;
}


function _emscripten_bind_b2Draw__DrawPolygon_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viiii[($4)&127]($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2Draw__DrawSolidCircle_p4($self,$arg0,$arg1,$arg2,$arg3){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=+($arg1);
 $arg2=($arg2)|0;
 $arg3=($arg3)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+20)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viifii[($4)&63]($self,$arg0,$arg1,$arg2,$arg3);
 return;
}


function _emscripten_bind_b2Draw__DrawSolidPolygon_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viiii[($4)&127]($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2Draw__DrawCircle_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=+($arg1);
 $arg2=($arg2)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viifi[($4)&63]($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2Draw__SetFlags_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Draw8SetFlagsEj($self,$arg0);
 return;
}


function _emscripten_bind_b2Draw__DrawSegment_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+24)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viiii[($4)&127]($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2Draw__b2Draw_p0(){
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(8))|0);
 $2=$1;
 __ZN6b2DrawC2Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2Draw__GetFlags_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Draw8GetFlagsEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Joint__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN7b2Joint7GetNextEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Joint__GetBodyA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN7b2Joint8GetBodyAEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Joint__GetBodyB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN7b2Joint8GetBodyBEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Joint__GetReactionTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(+(FUNCTION_TABLE_fif[($4)&63]($self,$arg0)));
 return (+($5));
}


function _emscripten_bind_b2Joint__GetAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21880)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21880)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((HEAP32[(($10)>>2)])|0);
 FUNCTION_TABLE_vii[($11)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16344;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$12$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$12$1;
 STACKTOP=sp;return ((16344)|0);
}


function _emscripten_bind_b2Joint__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2Joint11GetUserDataEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Joint__GetType_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2Joint7GetTypeEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Joint__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN7b2Joint11SetUserDataEPv($self,$arg0);
 return;
}


function _emscripten_bind_b2Joint__GetCollideConnected_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2Joint19GetCollideConnectedEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Joint__Dump_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($self);
 return;
}


function _emscripten_bind_b2Joint__GetAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21872)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21872)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_vii[($12)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16336;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16336)|0);
}


function _emscripten_bind_b2Joint__GetReactionForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21736)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21736)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_viif[($12)&127]($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16320;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16320)|0);
}


function _emscripten_bind_b2Joint__IsActive_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2Joint8IsActiveEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2GearJoint__GetJoint1_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN11b2GearJoint9GetJoint1Ev($self))|0);
 return (($1)|0);
}


function __ZN11b2GearJoint9GetJoint1Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+68)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJoint__b2GearJoint_p1($arg0){
 $arg0=($arg0)|0;
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(276))|0);
 $2=$1;
 __ZN11b2GearJointC2EPK14b2GearJointDef($2,$arg0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJoint__GetAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21824)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21824)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((HEAP32[(($10)>>2)])|0);
 FUNCTION_TABLE_vii[($11)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16312;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$12$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$12$1;
 STACKTOP=sp;return ((16312)|0);
}


function _emscripten_bind_b2GearJoint__GetJoint2_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN11b2GearJoint9GetJoint2Ev($self))|0);
 return (($1)|0);
}


function __ZN11b2GearJoint9GetJoint2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+72)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJoint__GetReactionTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(+(FUNCTION_TABLE_fif[($4)&63]($self,$arg0)));
 return (+($5));
}


function _emscripten_bind_b2GearJoint__Dump_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($self);
 return;
}


function _emscripten_bind_b2GearJoint____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+24)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2GearJoint__SetRatio_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN11b2GearJoint8SetRatioEf($self,$arg0);
 return;
}


function _emscripten_bind_b2GearJoint__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJoint__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint11GetUserDataEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJoint__GetBodyB_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyBEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJoint__GetCollideConnected_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint19GetCollideConnectedEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJoint__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 __ZN7b2Joint11SetUserDataEPv($1,$arg0);
 return;
}


function _emscripten_bind_b2GearJoint__GetAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21816)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21816)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_vii[($12)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16304;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16304)|0);
}


function _emscripten_bind_b2GearJoint__GetReactionForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21648)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21648)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_viif[($12)&127]($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16296;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16296)|0);
}


function _emscripten_bind_b2GearJoint__GetBodyA_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyAEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJoint__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint7GetNextEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJoint__IsActive_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint8IsActiveEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJoint__GetRatio_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK11b2GearJoint8GetRatioEv($self)));
 return (+($1));
}


function _emscripten_bind_b2RayCastCallback__ReportFixture_p4($self,$arg0,$arg1,$arg2,$arg3){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 $arg3=+($arg3);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(+(FUNCTION_TABLE_fiiiif[($4)&63]($self,$arg0,$arg1,$arg2,$arg3)));
 return (+($5));
}


function _emscripten_bind_b2RayCastCallback__b2RayCastCallback_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(4))|0);
 $2=$1;
 __ZN17b2RayCastCallbackC1Ev($2);
 return (($2)|0);
}


function __ZN17b2RayCastCallbackC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN17b2RayCastCallbackC2Ev($this);
 return;
}


function _emscripten_bind_b2RayCastCallback____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2DynamicTree____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$4=0,$8=0,$7$0=0,$7$1=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 __ZN13b2DynamicTreeD2Ev($self);
 $4=$self;
 __ZdlPv($4);
 return;
}


function _emscripten_bind_b2DynamicTree__b2DynamicTree_p0(){
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(28))|0);
 $2=$1;
 __ZN13b2DynamicTreeC2Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2DynamicTree__GetFatAABB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK13b2DynamicTree10GetFatAABBEi($self,$arg0))|0);
 return (($1)|0);
}


function _emscripten_bind_b2DynamicTree__GetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK13b2DynamicTree11GetUserDataEi($self,$arg0))|0);
 return (($1)|0);
}


function _emscripten_bind_b2DynamicTree__GetMaxBalance_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK13b2DynamicTree13GetMaxBalanceEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2DynamicTree__GetHeight_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK13b2DynamicTree9GetHeightEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2DynamicTree__GetAreaRatio_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK13b2DynamicTree12GetAreaRatioEv($self)));
 return (+($1));
}


function _emscripten_bind_b2DynamicTree__RebuildBottomUp_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN13b2DynamicTree15RebuildBottomUpEv($self);
 return;
}


function _emscripten_bind_b2DynamicTree__CreateProxy_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var $1=0,label=0;

 $1=((__ZN13b2DynamicTree11CreateProxyERK6b2AABBPv($self,$arg0,$arg1))|0);
 return (($1)|0);
}


function _emscripten_bind_b2DynamicTree__MoveProxy_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var $1=0,label=0;

 $1=((__ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2($self,$arg0,$arg1,$arg2))|0);
 return (($1)|0);
}


function _emscripten_bind_b2DynamicTree__Validate_p0($self){
 $self=($self)|0;
 var label=0;

 __ZNK13b2DynamicTree8ValidateEv($self);
 return;
}


function _emscripten_bind_b2DynamicTree__DestroyProxy_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN13b2DynamicTree12DestroyProxyEi($self,$arg0);
 return;
}


function _emscripten_bind_b2WeldJoint__GetBodyA_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyAEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2WeldJoint__GetBodyB_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyBEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2WeldJoint__SetFrequency_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN11b2WeldJoint12SetFrequencyEf($self,$arg0);
 return;
}


function __ZN11b2WeldJoint12SetFrequencyEf($this,$hz){
 $this=($this)|0;
 $hz=+($hz);
 var $1=0,label=0;

 $1=(($this+68)|0);
 HEAPF32[(($1)>>2)]=$hz;
 return;
}


function _emscripten_bind_b2WeldJoint__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint11GetUserDataEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2WeldJoint__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 __ZN7b2Joint11SetUserDataEPv($1,$arg0);
 return;
}


function _emscripten_bind_b2WeldJoint__GetAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21784)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21784)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_vii[($12)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16288;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16288)|0);
}


function _emscripten_bind_b2WeldJoint__GetAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21792)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21792)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((HEAP32[(($10)>>2)])|0);
 FUNCTION_TABLE_vii[($11)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16280;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$12$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$12$1;
 STACKTOP=sp;return ((16280)|0);
}


function _emscripten_bind_b2WeldJoint__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint7GetNextEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2WeldJoint__GetLocalAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK11b2WeldJoint15GetLocalAnchorAEv($self))|0);
 return (($1)|0);
}


function __ZNK11b2WeldJoint15GetLocalAnchorAEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+80)|0);
 return (($1)|0);
}


function _emscripten_bind_b2WeldJoint__GetLocalAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK11b2WeldJoint15GetLocalAnchorBEv($self))|0);
 return (($1)|0);
}


function __ZNK11b2WeldJoint15GetLocalAnchorBEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+88)|0);
 return (($1)|0);
}


function _emscripten_bind_b2WeldJoint__GetFrequency_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK11b2WeldJoint12GetFrequencyEv($self)));
 return (+($1));
}


function __ZNK11b2WeldJoint12GetFrequencyEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+68)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WeldJoint__b2WeldJoint_p1($arg0){
 $arg0=($arg0)|0;
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(208))|0);
 $2=$1;
 __ZN11b2WeldJointC2EPK14b2WeldJointDef($2,$arg0);
 return (($2)|0);
}


function _emscripten_bind_b2WeldJoint__GetReactionForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21632)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21632)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_viif[($12)&127]($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16272;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16272)|0);
}


function _emscripten_bind_b2WeldJoint__GetDampingRatio_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK11b2WeldJoint15GetDampingRatioEv($self)));
 return (+($1));
}


function __ZNK11b2WeldJoint15GetDampingRatioEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+72)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WeldJoint__GetCollideConnected_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint19GetCollideConnectedEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2WeldJoint____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+24)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2WeldJoint__GetReferenceAngle_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK11b2WeldJoint17GetReferenceAngleEv($self)));
 return (+($1));
}


function __ZNK11b2WeldJoint17GetReferenceAngleEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+96)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WeldJoint__Dump_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($self);
 return;
}


function _emscripten_bind_b2WeldJoint__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2WeldJoint__SetDampingRatio_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN11b2WeldJoint15SetDampingRatioEf($self,$arg0);
 return;
}


function __ZN11b2WeldJoint15SetDampingRatioEf($this,$ratio){
 $this=($this)|0;
 $ratio=+($ratio);
 var $1=0,label=0;

 $1=(($this+72)|0);
 HEAPF32[(($1)>>2)]=$ratio;
 return;
}


function _emscripten_bind_b2WeldJoint__GetReactionTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(+(FUNCTION_TABLE_fif[($4)&63]($self,$arg0)));
 return (+($5));
}


function _emscripten_bind_b2WeldJoint__IsActive_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint8IsActiveEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RevoluteJoint__GetBodyA_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyAEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RevoluteJoint__GetBodyB_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyBEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RevoluteJoint__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint11GetUserDataEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RevoluteJoint__GetLowerLimit_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK15b2RevoluteJoint13GetLowerLimitEv($self)));
 return (+($1));
}


function _emscripten_bind_b2RevoluteJoint__GetAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21680)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21680)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((HEAP32[(($10)>>2)])|0);
 FUNCTION_TABLE_vii[($11)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16264;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$12$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$12$1;
 STACKTOP=sp;return ((16264)|0);
}


function _emscripten_bind_b2RevoluteJoint__b2RevoluteJoint_p1($arg0){
 $arg0=($arg0)|0;
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(228))|0);
 $2=$1;
 __ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef($2,$arg0);
 return (($2)|0);
}


function _emscripten_bind_b2RevoluteJoint__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint7GetNextEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RevoluteJoint__GetLocalAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK15b2RevoluteJoint15GetLocalAnchorAEv($self))|0);
 return (($1)|0);
}


function __ZNK15b2RevoluteJoint15GetLocalAnchorAEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+68)|0);
 return (($1)|0);
}


function _emscripten_bind_b2RevoluteJoint__SetMotorSpeed_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN15b2RevoluteJoint13SetMotorSpeedEf($self,$arg0);
 return;
}


function _emscripten_bind_b2RevoluteJoint__GetLocalAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK15b2RevoluteJoint15GetLocalAnchorBEv($self))|0);
 return (($1)|0);
}


function __ZNK15b2RevoluteJoint15GetLocalAnchorBEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+76)|0);
 return (($1)|0);
}


function _emscripten_bind_b2RevoluteJoint__GetJointAngle_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK15b2RevoluteJoint13GetJointAngleEv($self)));
 return (+($1));
}


function _emscripten_bind_b2RevoluteJoint__GetMotorSpeed_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK15b2RevoluteJoint13GetMotorSpeedEv($self)));
 return (+($1));
}


function __ZNK15b2RevoluteJoint13GetMotorSpeedEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+108)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2RevoluteJoint__GetMotorTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=.0,label=0;

 $1=(+(__ZNK15b2RevoluteJoint14GetMotorTorqueEf($self,$arg0)));
 return (+($1));
}


function _emscripten_bind_b2RevoluteJoint__IsLimitEnabled_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK15b2RevoluteJoint14IsLimitEnabledEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2RevoluteJoint__EnableLimit_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN15b2RevoluteJoint11EnableLimitEb($self,$arg0);
 return;
}


function _emscripten_bind_b2RevoluteJoint__IsMotorEnabled_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK15b2RevoluteJoint14IsMotorEnabledEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2RevoluteJoint__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 __ZN7b2Joint11SetUserDataEPv($1,$arg0);
 return;
}


function _emscripten_bind_b2RevoluteJoint__GetReactionForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21568)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21568)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_viif[($12)&127]($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16256;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16256)|0);
}


function _emscripten_bind_b2RevoluteJoint__SetMaxMotorTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN15b2RevoluteJoint17SetMaxMotorTorqueEf($self,$arg0);
 return;
}


function _emscripten_bind_b2RevoluteJoint__GetCollideConnected_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint19GetCollideConnectedEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RevoluteJoint__GetJointSpeed_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK15b2RevoluteJoint13GetJointSpeedEv($self)));
 return (+($1));
}


function _emscripten_bind_b2RevoluteJoint__EnableMotor_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN15b2RevoluteJoint11EnableMotorEb($self,$arg0);
 return;
}


function _emscripten_bind_b2RevoluteJoint____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+24)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2RevoluteJoint__GetReferenceAngle_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK15b2RevoluteJoint17GetReferenceAngleEv($self)));
 return (+($1));
}


function __ZNK15b2RevoluteJoint17GetReferenceAngleEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+116)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2RevoluteJoint__Dump_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($self);
 return;
}


function _emscripten_bind_b2RevoluteJoint__SetLimits_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=+($arg0);
 $arg1=+($arg1);
 var label=0;

 __ZN15b2RevoluteJoint9SetLimitsEff($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2RevoluteJoint__GetMaxMotorTorque_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK15b2RevoluteJoint17GetMaxMotorTorqueEv($self)));
 return (+($1));
}


function __ZNK15b2RevoluteJoint17GetMaxMotorTorqueEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+104)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2RevoluteJoint__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RevoluteJoint__GetReactionTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(+(FUNCTION_TABLE_fif[($4)&63]($self,$arg0)));
 return (+($5));
}


function _emscripten_bind_b2RevoluteJoint__GetUpperLimit_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK15b2RevoluteJoint13GetUpperLimitEv($self)));
 return (+($1));
}


function _emscripten_bind_b2RevoluteJoint__IsActive_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint8IsActiveEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RevoluteJoint__GetAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21672)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21672)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_vii[($12)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16248;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16248)|0);
}


function _emscripten_bind_b2Timer__b2Timer_p0(){
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(1))|0);
 $2=$1;
 __ZN7b2TimerC2Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2Timer__Reset_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN7b2Timer5ResetEv($self);
 return;
}


function _emscripten_bind_b2Timer____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=(($self)|0);
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2Timer__GetMilliseconds_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK7b2Timer15GetMillisecondsEv($self)));
 return (+($1));
}


function _emscripten_bind_b2ContactListener____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2ContactListener__b2ContactListener_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(4))|0);
 $2=$1;
 __ZN17b2ContactListenerC1Ev($2);
 return (($2)|0);
}


function __ZN17b2ContactListenerC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN17b2ContactListenerC2Ev($this);
 return;
}


function _emscripten_bind_b2ContactListener__EndContact_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vii[($4)&255]($self,$arg0);
 return;
}


function _emscripten_bind_b2ContactListener__BeginContact_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vii[($4)&255]($self,$arg0);
 return;
}


function _emscripten_bind_b2ContactListener__PreSolve_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viii[($4)&63]($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2ContactListener__PostSolve_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+20)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viii[($4)&63]($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2ChainShape____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2ChainShape__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Shape7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2ChainShape__CreateChain_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var label=0;

 __ZN12b2ChainShape11CreateChainEPK6b2Vec2i($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2ChainShape__set_m_radius_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+8)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2ChainShape__get_m_radius_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+8)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2ChainShape__get_m_vertices_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2ChainShape__ComputeMass_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=+($arg1);
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+28)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viif[($4)&127]($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2ChainShape__Clone_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iii[($4)&127]($self,$arg0))|0);
 return (($5)|0);
}


function _emscripten_bind_b2ChainShape__get_m_count_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+16)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2ChainShape__GetChildEdge_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var label=0;

 __ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2ChainShape__b2ChainShape_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(40))|0);
 $2=$1;
 __ZN12b2ChainShapeC1Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2ChainShape__ComputeAABB_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+24)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viiii[($4)&127]($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2ChainShape__RayCast_p4($self,$arg0,$arg1,$arg2,$arg3){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 $arg3=($arg3)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+20)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iiiiii[($4)&63]($self,$arg0,$arg1,$arg2,$arg3))|0);
 return (($5)|0);
}


function _emscripten_bind_b2ChainShape__GetChildCount_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_ii[($4)&63]($self))|0);
 return (($5)|0);
}


function _emscripten_bind_b2ChainShape__TestPoint_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iiii[($4)&63]($self,$arg0,$arg1))|0);
 return (($5)|0);
}


function _emscripten_bind_b2ChainShape__SetPrevVertex_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN12b2ChainShape13SetPrevVertexERK6b2Vec2($self,$arg0);
 return;
}


function _emscripten_bind_b2ChainShape__CreateLoop_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var label=0;

 __ZN12b2ChainShape10CreateLoopEPK6b2Vec2i($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2ChainShape__set_m_vertices_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+12)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2ChainShape__SetNextVertex_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN12b2ChainShape13SetNextVertexERK6b2Vec2($self,$arg0);
 return;
}


function _emscripten_bind_b2ChainShape__set_m_count_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+16)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2QueryCallback__ReportFixture_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iii[($4)&127]($self,$arg0))|0);
 return (($5)|0);
}


function _emscripten_bind_b2QueryCallback____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2QueryCallback__b2QueryCallback_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(4))|0);
 $2=$1;
 __ZN15b2QueryCallbackC1Ev($2);
 return (($2)|0);
}


function __ZN15b2QueryCallbackC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2QueryCallbackC2Ev($this);
 return;
}


function _emscripten_bind_b2BlockAllocator____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$4=0,$8=0,$7$0=0,$7$1=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 __ZN16b2BlockAllocatorD2Ev($self);
 $4=$self;
 __ZdlPv($4);
 return;
}


function _emscripten_bind_b2BlockAllocator__Clear_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN16b2BlockAllocator5ClearEv($self);
 return;
}


function _emscripten_bind_b2BlockAllocator__Free_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var label=0;

 __ZN16b2BlockAllocator4FreeEPvi($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2BlockAllocator__Allocate_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($self,$arg0))|0);
 return (($1)|0);
}


function _emscripten_bind_b2BlockAllocator__b2BlockAllocator_p0(){
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(68))|0);
 $2=$1;
 __ZN16b2BlockAllocatorC2Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2RopeJoint__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint7GetNextEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RopeJoint____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+24)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2RopeJoint__GetAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21808)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21808)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((HEAP32[(($10)>>2)])|0);
 FUNCTION_TABLE_vii[($11)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16232;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$12$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$12$1;
 STACKTOP=sp;return ((16232)|0);
}


function _emscripten_bind_b2RopeJoint__GetReactionTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(+(FUNCTION_TABLE_fif[($4)&63]($self,$arg0)));
 return (+($5));
}


function _emscripten_bind_b2RopeJoint__GetMaxLength_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK11b2RopeJoint12GetMaxLengthEv($self)));
 return (+($1));
}


function _emscripten_bind_b2RopeJoint__GetBodyA_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyAEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RopeJoint__GetCollideConnected_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint19GetCollideConnectedEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RopeJoint__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint11GetUserDataEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RopeJoint__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RopeJoint__GetBodyB_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyBEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2RopeJoint__GetLocalAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK11b2RopeJoint15GetLocalAnchorAEv($self))|0);
 return (($1)|0);
}


function __ZNK11b2RopeJoint15GetLocalAnchorAEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+68)|0);
 return (($1)|0);
}


function _emscripten_bind_b2RopeJoint__Dump_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($self);
 return;
}


function _emscripten_bind_b2RopeJoint__SetMaxLength_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN11b2RopeJoint12SetMaxLengthEf($self,$arg0);
 return;
}


function __ZN11b2RopeJoint12SetMaxLengthEf($this,$length){
 $this=($this)|0;
 $length=+($length);
 var $1=0,label=0;

 $1=(($this+84)|0);
 HEAPF32[(($1)>>2)]=$length;
 return;
}


function _emscripten_bind_b2RopeJoint__GetLocalAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK11b2RopeJoint15GetLocalAnchorBEv($self))|0);
 return (($1)|0);
}


function __ZNK11b2RopeJoint15GetLocalAnchorBEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+76)|0);
 return (($1)|0);
}


function _emscripten_bind_b2RopeJoint__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 __ZN7b2Joint11SetUserDataEPv($1,$arg0);
 return;
}


function _emscripten_bind_b2RopeJoint__GetAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21800)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21800)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_vii[($12)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16224;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16224)|0);
}


function _emscripten_bind_b2RopeJoint__GetReactionForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21640)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21640)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_viif[($12)&127]($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16216;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16216)|0);
}


function _emscripten_bind_b2RopeJoint__b2RopeJoint_p1($arg0){
 $arg0=($arg0)|0;
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(168))|0);
 $2=$1;
 __ZN11b2RopeJointC2EPK14b2RopeJointDef($2,$arg0);
 return (($2)|0);
}


function _emscripten_bind_b2RopeJoint__GetLimitState_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK11b2RopeJoint13GetLimitStateEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2RopeJoint__IsActive_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint8IsActiveEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PolygonShape____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2PolygonShape__Set_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var label=0;

 __ZN14b2PolygonShape3SetEPK6b2Vec2i($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2PolygonShape__ComputeMass_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=+($arg1);
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+28)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viif[($4)&127]($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2PolygonShape__set_m_radius_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+8)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2PolygonShape__get_m_radius_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+8)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2PolygonShape__Clone_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iii[($4)&127]($self,$arg0))|0);
 return (($5)|0);
}


function _emscripten_bind_b2PolygonShape__GetVertex_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK14b2PolygonShape9GetVertexEi($self,$arg0))|0);
 return (($1)|0);
}


function __ZNK14b2PolygonShape9GetVertexEi($this,$index){
 $this=($this)|0;
 $index=($index)|0;
 var $1=0,label=0;

 $1=(($this+20+($index<<3))|0);
 return (($1)|0);
}


function _emscripten_bind_b2PolygonShape__RayCast_p4($self,$arg0,$arg1,$arg2,$arg3){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 $arg3=($arg3)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+20)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iiiiii[($4)&63]($self,$arg0,$arg1,$arg2,$arg3))|0);
 return (($5)|0);
}


function _emscripten_bind_b2PolygonShape__SetAsBox_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=+($arg0);
 $arg1=+($arg1);
 var label=0;

 __ZN14b2PolygonShape8SetAsBoxEff($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2PolygonShape__SetAsBox_p4($self,$arg0,$arg1,$arg2,$arg3){
 $self=($self)|0;
 $arg0=+($arg0);
 $arg1=+($arg1);
 $arg2=($arg2)|0;
 $arg3=+($arg3);
 var label=0;

 __ZN14b2PolygonShape8SetAsBoxEffRK6b2Vec2f($self,$arg0,$arg1,$arg2,$arg3);
 return;
}


function _emscripten_bind_b2PolygonShape__set_m_centroid_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+12)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2PolygonShape__ComputeAABB_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+24)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viiii[($4)&127]($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2PolygonShape__set_m_vertexCount_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+148)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2PolygonShape__GetVertexCount_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK14b2PolygonShape14GetVertexCountEv($self))|0);
 return (($1)|0);
}


function __ZNK14b2PolygonShape14GetVertexCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+148)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2PolygonShape__GetChildCount_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_ii[($4)&63]($self))|0);
 return (($5)|0);
}


function _emscripten_bind_b2PolygonShape__TestPoint_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iiii[($4)&63]($self,$arg0,$arg1))|0);
 return (($5)|0);
}


function _emscripten_bind_b2PolygonShape__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Shape7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2PolygonShape__b2PolygonShape_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(152))|0);
 $2=$1;
 __ZN14b2PolygonShapeC1Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2PolygonShape__get_m_vertexCount_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+148)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2PolygonShape__get_m_centroid_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+12)|0);
 return (($1)|0);
}


function _emscripten_bind_b2EdgeShape____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2EdgeShape__Set_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var label=0;

 __ZN11b2EdgeShape3SetERK6b2Vec2S2_($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2EdgeShape__ComputeMass_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=+($arg1);
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+28)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viif[($4)&127]($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2EdgeShape__set_m_radius_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+8)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2EdgeShape__get_m_radius_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+8)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2EdgeShape__Clone_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iii[($4)&127]($self,$arg0))|0);
 return (($5)|0);
}


function _emscripten_bind_b2EdgeShape__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Shape7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2EdgeShape__RayCast_p4($self,$arg0,$arg1,$arg2,$arg3){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 $arg3=($arg3)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+20)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iiiiii[($4)&63]($self,$arg0,$arg1,$arg2,$arg3))|0);
 return (($5)|0);
}


function _emscripten_bind_b2EdgeShape__ComputeAABB_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+24)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viiii[($4)&127]($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2EdgeShape__GetChildCount_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_ii[($4)&63]($self))|0);
 return (($5)|0);
}


function _emscripten_bind_b2EdgeShape__TestPoint_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iiii[($4)&63]($self,$arg0,$arg1))|0);
 return (($5)|0);
}


function _emscripten_bind_b2EdgeShape__b2EdgeShape_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(48))|0);
 $2=$1;
 __ZN11b2EdgeShapeC1Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2Contact__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN9b2Contact7GetNextEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Contact__SetEnabled_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN9b2Contact10SetEnabledEb($self,$arg0);
 return;
}


function _emscripten_bind_b2Contact__GetWorldManifold_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZNK9b2Contact16GetWorldManifoldEP15b2WorldManifold($self,$arg0);
 return;
}


function __ZNK9b2Contact16GetWorldManifoldEP15b2WorldManifold($this,$worldManifold){
 $this=($this)|0;
 $worldManifold=($worldManifold)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=.0,$13=0,$14=0,$15=.0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture7GetBodyEv($2))|0);
 $4=(($this+52)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=((__ZN9b2Fixture7GetBodyEv($5))|0);
 $7=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $8=((__ZN9b2Fixture8GetShapeEv($5))|0);
 $9=(($this+64)|0);
 $10=((__ZNK6b2Body12GetTransformEv($3))|0);
 $11=(($7+8)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=((__ZNK6b2Body12GetTransformEv($6))|0);
 $14=(($8+8)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 __ZN15b2WorldManifold10InitializeEPK10b2ManifoldRK11b2TransformfS5_f($worldManifold,$9,$10,$12,$13,$15);
 return;
}


function _emscripten_bind_b2Contact__GetRestitution_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK9b2Contact14GetRestitutionEv($self)));
 return (+($1));
}


function __ZNK9b2Contact14GetRestitutionEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+140)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Contact__ResetFriction_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN9b2Contact13ResetFrictionEv($self);
 return;
}


function __ZN9b2Contact13ResetFrictionEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=.0,$5=0,$6=0,$7=0,$8=.0,$9=.0,$10=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+16)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(+(__Z13b2MixFrictionff($4,$8)));
 $10=(($this+136)|0);
 HEAPF32[(($10)>>2)]=$9;
 return;
}


function _emscripten_bind_b2Contact__GetFriction_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK9b2Contact11GetFrictionEv($self)));
 return (+($1));
}


function __ZNK9b2Contact11GetFrictionEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+136)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Contact__IsTouching_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK9b2Contact10IsTouchingEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Contact__IsEnabled_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK9b2Contact9IsEnabledEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Contact__GetFixtureB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN9b2Contact11GetFixtureBEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Contact__SetFriction_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN9b2Contact11SetFrictionEf($self,$arg0);
 return;
}


function __ZN9b2Contact11SetFrictionEf($this,$friction){
 $this=($this)|0;
 $friction=+($friction);
 var $1=0,label=0;

 $1=(($this+136)|0);
 HEAPF32[(($1)>>2)]=$friction;
 return;
}


function _emscripten_bind_b2Contact__GetFixtureA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN9b2Contact11GetFixtureAEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Contact__GetChildIndexA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK9b2Contact14GetChildIndexAEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Contact__GetChildIndexB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK9b2Contact14GetChildIndexBEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Contact__Evaluate_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((HEAP32[(($2)>>2)])|0);
 FUNCTION_TABLE_viiii[($3)&127]($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2Contact__SetRestitution_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN9b2Contact14SetRestitutionEf($self,$arg0);
 return;
}


function __ZN9b2Contact14SetRestitutionEf($this,$restitution){
 $this=($this)|0;
 $restitution=+($restitution);
 var $1=0,label=0;

 $1=(($this+140)|0);
 HEAPF32[(($1)>>2)]=$restitution;
 return;
}


function _emscripten_bind_b2Contact__GetManifold_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN9b2Contact11GetManifoldEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Contact__ResetRestitution_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN9b2Contact16ResetRestitutionEv($self);
 return;
}


function __ZN9b2Contact16ResetRestitutionEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=.0,$5=0,$6=0,$7=0,$8=.0,$9=.0,$10=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+20)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+20)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(+(__Z16b2MixRestitutionff($4,$8)));
 $10=(($this+140)|0);
 HEAPF32[(($10)>>2)]=$9;
 return;
}


function _emscripten_bind_b2Shape__get_m_radius_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+8)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Shape__ComputeMass_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=+($arg1);
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+28)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viif[($4)&127]($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2Shape__set_m_radius_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+8)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2Shape__Clone_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iii[($4)&127]($self,$arg0))|0);
 return (($5)|0);
}


function _emscripten_bind_b2Shape__GetType_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2Shape7GetTypeEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Shape__RayCast_p4($self,$arg0,$arg1,$arg2,$arg3){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 $arg3=($arg3)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+20)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iiiiii[($4)&63]($self,$arg0,$arg1,$arg2,$arg3))|0);
 return (($5)|0);
}


function _emscripten_bind_b2Shape__ComputeAABB_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+24)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_viiii[($4)&127]($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2Shape__GetChildCount_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_ii[($4)&63]($self))|0);
 return (($5)|0);
}


function _emscripten_bind_b2Shape__TestPoint_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((FUNCTION_TABLE_iiii[($4)&63]($self,$arg0,$arg1))|0);
 return (($5)|0);
}


function _emscripten_bind_b2Body__GetAngle_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK6b2Body8GetAngleEv($self)));
 return (+($1));
}


function _emscripten_bind_b2Body__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Body11GetUserDataEv($self))|0);
 return (($1)|0);
}


function __ZNK6b2Body11GetUserDataEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+148)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2Body__IsSleepingAllowed_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Body17IsSleepingAllowedEv($self))|0);
 return (($1)|0);
}


function __ZNK6b2Body17IsSleepingAllowedEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 $3=$2&4;
 $4=(($3<<16)>>16)!=0;
 return (($4)|0);
}


function _emscripten_bind_b2Body__SetAngularDamping_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN6b2Body17SetAngularDampingEf($self,$arg0);
 return;
}


function __ZN6b2Body17SetAngularDampingEf($this,$angularDamping){
 $this=($this)|0;
 $angularDamping=+($angularDamping);
 var $1=0,label=0;

 $1=(($this+136)|0);
 HEAPF32[(($1)>>2)]=$angularDamping;
 return;
}


function _emscripten_bind_b2Body__SetActive_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Body9SetActiveEb($self,$arg0);
 return;
}


function _emscripten_bind_b2Body__SetGravityScale_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN6b2Body15SetGravityScaleEf($self,$arg0);
 return;
}


function __ZN6b2Body15SetGravityScaleEf($this,$scale){
 $this=($this)|0;
 $scale=+($scale);
 var $1=0,label=0;

 $1=(($this+140)|0);
 HEAPF32[(($1)>>2)]=$scale;
 return;
}


function _emscripten_bind_b2Body__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Body11SetUserDataEPv($self,$arg0);
 return;
}


function __ZN6b2Body11SetUserDataEPv($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $1=0,label=0;

 $1=(($this+148)|0);
 HEAP32[(($1)>>2)]=$data;
 return;
}


function _emscripten_bind_b2Body__GetAngularVelocity_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK6b2Body18GetAngularVelocityEv($self)));
 return (+($1));
}


function __ZNK6b2Body18GetAngularVelocityEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+72)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Body__GetFixtureList_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN6b2Body14GetFixtureListEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__ApplyForce_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var label=0;

 __ZN6b2Body10ApplyForceERK6b2Vec2S2_($self,$arg0,$arg1);
 return;
}


function __ZN6b2Body10ApplyForceERK6b2Vec2S2_($this,$force,$point){
 $this=($this)|0;
 $force=($force)|0;
 $point=($point)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$9=0,$10=0,$11=.0,$12=0,$13=.0,$14=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($this)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=($3|0)==2;
 if (!($4)) {
  STACKTOP=sp;return;
 }
 $6=((__ZNK6b2Body7IsAwakeEv($this))|0);
 if (!($6)) {
  __ZN6b2Body8SetAwakeEb($this,1);
 }
 $9=(($this+76)|0);
 __ZN6b2Vec2pLERKS_($9,$force);
 $10=(($this+44)|0);
 __ZmiRK6b2Vec2S1_($1,$point,$10);
 $11=(+(__Z7b2CrossRK6b2Vec2S1_($1,$force)));
 $12=(($this+84)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=($11)+($13);
 HEAPF32[(($12)>>2)]=$14;
 STACKTOP=sp;return;
}


function _emscripten_bind_b2Body__GetLocalPoint_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21856)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21856)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16208;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16208)|0);
}


function _emscripten_bind_b2Body__SetLinearVelocity_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Body17SetLinearVelocityERK6b2Vec2($self,$arg0);
 return;
}


function __ZN6b2Body17SetLinearVelocityERK6b2Vec2($this,$v){
 $this=($this)|0;
 $v=($v)|0;
 var $1=0,$2=0,$3=0,$5=.0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  return;
 }
 $5=(+(__Z5b2DotRK6b2Vec2S1_($v,$v)));
 $6=$5>(0.0);
 if ($6) {
  __ZN6b2Body8SetAwakeEb($this,1);
 }
 $9=(($this+64)|0);
 $10=$v;
 $11=$9;
 $ld$0$0=(($10)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($10+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($11)|0);
 HEAP32[(($st$2$0)>>2)]=$12$0;
 $st$3$1=(($11+4)|0);
 HEAP32[(($st$3$1)>>2)]=$12$1;
 return;
}


function _emscripten_bind_b2Body__GetJointList_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN6b2Body12GetJointListEv($self))|0);
 return (($1)|0);
}


function __ZN6b2Body12GetJointListEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+108)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2Body__GetLinearVelocity_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21744)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21744)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK6b2Body17GetLinearVelocityEv($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16200;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16200)|0);
}


function __ZNK6b2Body17GetLinearVelocityEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this+64)|0);
 $2=$1;
 $3=$agg_result;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2Body__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN6b2Body7GetNextEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__SetSleepingAllowed_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Body18SetSleepingAllowedEb($self,$arg0);
 return;
}


function __ZN6b2Body18SetSleepingAllowedEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$4=0,$6=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 if ($flag) {
  $4=$2|4;
  HEAP16[(($1)>>1)]=$4;
  return;
 } else {
  $6=$2&-5;
  HEAP16[(($1)>>1)]=$6;
  __ZN6b2Body8SetAwakeEb($this,1);
  return;
 }
}


function _emscripten_bind_b2Body__SetTransform_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=+($arg1);
 var label=0;

 __ZN6b2Body12SetTransformERK6b2Vec2f($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2Body__GetMass_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK6b2Body7GetMassEv($self)));
 return (+($1));
}


function _emscripten_bind_b2Body__SetAngularVelocity_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN6b2Body18SetAngularVelocityEf($self,$arg0);
 return;
}


function __ZN6b2Body18SetAngularVelocityEf($this,$w){
 $this=($this)|0;
 $w=+($w);
 var $1=0,$2=0,$3=0,$5=.0,$6=0,$9=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  return;
 }
 $5=($w)*($w);
 $6=$5>(0.0);
 if ($6) {
  __ZN6b2Body8SetAwakeEb($this,1);
 }
 $9=(($this+72)|0);
 HEAPF32[(($9)>>2)]=$w;
 return;
}


function _emscripten_bind_b2Body__GetMassData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZNK6b2Body11GetMassDataEP10b2MassData($self,$arg0);
 return;
}


function __ZNK6b2Body11GetMassDataEP10b2MassData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $1=0,$2=.0,$3=0,$4=0,$5=.0,$6=.0,$7=0,$8=.0,$9=.0,$10=.0,$11=0,$12=0,$13=0,$14=0,$ld$0$0=0,$15$0=0,$ld$1$1=0,$15$1=0,$st$2$0=0,$st$3$1=0;
 var label=0;

 $1=(($this+116)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($data)|0);
 HEAPF32[(($3)>>2)]=$2;
 $4=(($this+124)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(+(HEAPF32[(($1)>>2)]));
 $7=(($this+28)|0);
 $8=(+(__Z5b2DotRK6b2Vec2S1_($7,$7)));
 $9=($6)*($8);
 $10=($5)+($9);
 $11=(($data+12)|0);
 HEAPF32[(($11)>>2)]=$10;
 $12=(($data+4)|0);
 $13=$7;
 $14=$12;
 $ld$0$0=(($13)|0);
 $15$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $15$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($14)|0);
 HEAP32[(($st$2$0)>>2)]=$15$0;
 $st$3$1=(($14+4)|0);
 HEAP32[(($st$3$1)>>2)]=$15$1;
 return;
}


function _emscripten_bind_b2Body__GetLinearVelocityFromWorldPoint_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21544)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21544)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK6b2Body31GetLinearVelocityFromWorldPointERK6b2Vec2($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16192;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16192)|0);
}


function __ZNK6b2Body31GetLinearVelocityFromWorldPointERK6b2Vec2($agg_result,$this,$worldPoint){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $worldPoint=($worldPoint)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(($this+64)|0);
 $4=(($this+72)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(($this+44)|0);
 __ZmiRK6b2Vec2S1_($2,$worldPoint,$6);
 __Z7b2CrossfRK6b2Vec2($1,$5,$2);
 __ZplRK6b2Vec2S1_($agg_result,$3,$1);
 STACKTOP=sp;return;
}


function _emscripten_bind_b2Body__ResetMassData_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN6b2Body13ResetMassDataEv($self);
 return;
}


function _emscripten_bind_b2Body__ApplyForceToCenter_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Body18ApplyForceToCenterERK6b2Vec2($self,$arg0);
 return;
}


function __ZN6b2Body18ApplyForceToCenterERK6b2Vec2($this,$force){
 $this=($this)|0;
 $force=($force)|0;
 var $1=0,$2=0,$3=0,$5=0,$8=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==2;
 if (!($3)) {
  return;
 }
 $5=((__ZNK6b2Body7IsAwakeEv($this))|0);
 if (!($5)) {
  __ZN6b2Body8SetAwakeEb($this,1);
 }
 $8=(($this+76)|0);
 __ZN6b2Vec2pLERKS_($8,$force);
 return;
}


function _emscripten_bind_b2Body__ApplyTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN6b2Body11ApplyTorqueEf($self,$arg0);
 return;
}


function __ZN6b2Body11ApplyTorqueEf($this,$torque){
 $this=($this)|0;
 $torque=+($torque);
 var $1=0,$2=0,$3=0,$5=0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==2;
 if (!($3)) {
  return;
 }
 $5=((__ZNK6b2Body7IsAwakeEv($this))|0);
 if (!($5)) {
  __ZN6b2Body8SetAwakeEb($this,1);
 }
 $8=(($this+84)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($9)+($torque);
 HEAPF32[(($8)>>2)]=$10;
 return;
}


function _emscripten_bind_b2Body__IsAwake_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Body7IsAwakeEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__SetType_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Body7SetTypeE10b2BodyType($self,$arg0);
 return;
}


function _emscripten_bind_b2Body__CreateFixture_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN6b2Body13CreateFixtureEPK12b2FixtureDef($self,$arg0))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__CreateFixture_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=+($arg1);
 var $1=0,label=0;

 $1=((__ZN6b2Body13CreateFixtureEPK7b2Shapef($self,$arg0,$arg1))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__SetMassData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Body11SetMassDataEPK10b2MassData($self,$arg0);
 return;
}


function _emscripten_bind_b2Body__GetTransform_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Body12GetTransformEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__GetWorldCenter_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Body14GetWorldCenterEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__GetAngularDamping_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK6b2Body17GetAngularDampingEv($self)));
 return (+($1));
}


function __ZNK6b2Body17GetAngularDampingEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+136)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Body__ApplyLinearImpulse_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var label=0;

 __ZN6b2Body18ApplyLinearImpulseERK6b2Vec2S2_($self,$arg0,$arg1);
 return;
}


function __ZN6b2Body18ApplyLinearImpulseERK6b2Vec2S2_($this,$impulse,$point){
 $this=($this)|0;
 $impulse=($impulse)|0;
 $point=($point)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$10=0,$11=0,$12=.0,$13=0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(($this)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)==2;
 if (!($5)) {
  STACKTOP=sp;return;
 }
 $7=((__ZNK6b2Body7IsAwakeEv($this))|0);
 if (!($7)) {
  __ZN6b2Body8SetAwakeEb($this,1);
 }
 $10=(($this+64)|0);
 $11=(($this+120)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 __ZmlfRK6b2Vec2($1,$12,$impulse);
 __ZN6b2Vec2pLERKS_($10,$1);
 $13=(($this+128)|0);
 $14=(+(HEAPF32[(($13)>>2)]));
 $15=(($this+44)|0);
 __ZmiRK6b2Vec2S1_($2,$point,$15);
 $16=(+(__Z7b2CrossRK6b2Vec2S1_($2,$impulse)));
 $17=($14)*($16);
 $18=(($this+72)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=($19)+($17);
 HEAPF32[(($18)>>2)]=$20;
 STACKTOP=sp;return;
}


function _emscripten_bind_b2Body__IsFixedRotation_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Body15IsFixedRotationEv($self))|0);
 return (($1)|0);
}


function __ZNK6b2Body15IsFixedRotationEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 $3=$2&16;
 $4=(($3<<16)>>16)!=0;
 return (($4)|0);
}


function _emscripten_bind_b2Body__GetLocalCenter_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Body14GetLocalCenterEv($self))|0);
 return (($1)|0);
}


function __ZNK6b2Body14GetLocalCenterEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+28)|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__GetWorldVector_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21832)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21832)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK6b2Body14GetWorldVectorERK6b2Vec2($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16184;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16184)|0);
}


function _emscripten_bind_b2Body__GetLinearVelocityFromLocalPoint_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21552)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21552)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK6b2Body31GetLinearVelocityFromLocalPointERK6b2Vec2($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16176;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16176)|0);
}


function __ZNK6b2Body31GetLinearVelocityFromLocalPointERK6b2Vec2($agg_result,$this,$localPoint){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $localPoint=($localPoint)|0;
 var $1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($1,$this,$localPoint);
 __ZNK6b2Body31GetLinearVelocityFromWorldPointERK6b2Vec2($agg_result,$this,$1);
 STACKTOP=sp;return;
}


function _emscripten_bind_b2Body__GetContactList_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN6b2Body14GetContactListEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__GetWorldPoint_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21848)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21848)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16168;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16168)|0);
}


function _emscripten_bind_b2Body__SetAwake_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Body8SetAwakeEb($self,$arg0);
 return;
}


function _emscripten_bind_b2Body__GetLinearDamping_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK6b2Body16GetLinearDampingEv($self)));
 return (+($1));
}


function __ZNK6b2Body16GetLinearDampingEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+132)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Body__IsBullet_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Body8IsBulletEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__GetWorld_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZN6b2Body8GetWorldEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__GetLocalVector_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21840)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21840)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK6b2Body14GetLocalVectorERK6b2Vec2($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16160;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16160)|0);
}


function _emscripten_bind_b2Body__SetLinearDamping_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN6b2Body16SetLinearDampingEf($self,$arg0);
 return;
}


function __ZN6b2Body16SetLinearDampingEf($this,$linearDamping){
 $this=($this)|0;
 $linearDamping=+($linearDamping);
 var $1=0,label=0;

 $1=(($this+132)|0);
 HEAPF32[(($1)>>2)]=$linearDamping;
 return;
}


function _emscripten_bind_b2Body__Dump_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN6b2Body4DumpEv($self);
 return;
}


function _emscripten_bind_b2Body__SetBullet_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Body9SetBulletEb($self,$arg0);
 return;
}


function __ZN6b2Body9SetBulletEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$3=0,$4=0,$storemerge=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 $3=$2&-9;
 $4=$2|8;
 $storemerge=($flag?$4:$3);
 HEAP16[(($1)>>1)]=$storemerge;
 return;
}


function _emscripten_bind_b2Body__GetType_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Body7GetTypeEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__GetGravityScale_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK6b2Body15GetGravityScaleEv($self)));
 return (+($1));
}


function __ZNK6b2Body15GetGravityScaleEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+140)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Body__DestroyFixture_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Body14DestroyFixtureEP9b2Fixture($self,$arg0);
 return;
}


function _emscripten_bind_b2Body__GetInertia_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK6b2Body10GetInertiaEv($self)));
 return (+($1));
}


function __ZNK6b2Body10GetInertiaEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$6=.0,$7=.0,$8=.0,label=0;

 $1=(($this+124)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+116)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+28)|0);
 $6=(+(__Z5b2DotRK6b2Vec2S1_($5,$5)));
 $7=($4)*($6);
 $8=($2)+($7);
 return (+($8));
}


function _emscripten_bind_b2Body__IsActive_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Body8IsActiveEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Body__SetFixedRotation_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Body16SetFixedRotationEb($self,$arg0);
 return;
}


function __ZN6b2Body16SetFixedRotationEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$3=0,$4=0,$storemerge=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 $3=$2&-17;
 $4=$2|16;
 $storemerge=($flag?$4:$3);
 HEAP16[(($1)>>1)]=$storemerge;
 __ZN6b2Body13ResetMassDataEv($this);
 return;
}


function _emscripten_bind_b2Body__ApplyAngularImpulse_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN6b2Body19ApplyAngularImpulseEf($self,$arg0);
 return;
}


function __ZN6b2Body19ApplyAngularImpulseEf($this,$impulse){
 $this=($this)|0;
 $impulse=+($impulse);
 var $1=0,$2=0,$3=0,$5=0,$8=0,$9=.0,$10=.0,$11=0,$12=.0,$13=.0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==2;
 if (!($3)) {
  return;
 }
 $5=((__ZNK6b2Body7IsAwakeEv($this))|0);
 if (!($5)) {
  __ZN6b2Body8SetAwakeEb($this,1);
 }
 $8=(($this+128)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($9)*($impulse);
 $11=(($this+72)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=($12)+($10);
 HEAPF32[(($11)>>2)]=$13;
 return;
}


function _emscripten_bind_b2Body__GetPosition_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Body11GetPositionEv($self))|0);
 return (($1)|0);
}


function __ZNK6b2Body11GetPositionEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 return (($1)|0);
}


function _emscripten_bind_b2FrictionJoint__SetMaxTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN15b2FrictionJoint12SetMaxTorqueEf($self,$arg0);
 return;
}


function _emscripten_bind_b2FrictionJoint__GetMaxForce_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK15b2FrictionJoint11GetMaxForceEv($self)));
 return (+($1));
}


function _emscripten_bind_b2FrictionJoint__GetAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21696)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21696)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((HEAP32[(($10)>>2)])|0);
 FUNCTION_TABLE_vii[($11)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16144;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$12$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$12$1;
 STACKTOP=sp;return ((16144)|0);
}


function _emscripten_bind_b2FrictionJoint__GetReactionTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(+(FUNCTION_TABLE_fif[($4)&63]($self,$arg0)));
 return (+($5));
}


function _emscripten_bind_b2FrictionJoint__Dump_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($self);
 return;
}


function _emscripten_bind_b2FrictionJoint____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+24)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2FrictionJoint__GetCollideConnected_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint19GetCollideConnectedEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2FrictionJoint__GetUserData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint11GetUserDataEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2FrictionJoint__GetType_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint7GetTypeEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2FrictionJoint__SetMaxForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN15b2FrictionJoint11SetMaxForceEf($self,$arg0);
 return;
}


function _emscripten_bind_b2FrictionJoint__GetBodyB_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyBEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2FrictionJoint__GetLocalAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK15b2FrictionJoint15GetLocalAnchorAEv($self))|0);
 return (($1)|0);
}


function __ZNK15b2FrictionJoint15GetLocalAnchorAEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+68)|0);
 return (($1)|0);
}


function _emscripten_bind_b2FrictionJoint__b2FrictionJoint_p1($arg0){
 $arg0=($arg0)|0;
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(180))|0);
 $2=$1;
 __ZN15b2FrictionJointC2EPK18b2FrictionJointDef($2,$arg0);
 return (($2)|0);
}


function _emscripten_bind_b2FrictionJoint__GetLocalAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK15b2FrictionJoint15GetLocalAnchorBEv($self))|0);
 return (($1)|0);
}


function __ZNK15b2FrictionJoint15GetLocalAnchorBEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+76)|0);
 return (($1)|0);
}


function _emscripten_bind_b2FrictionJoint__SetUserData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 __ZN7b2Joint11SetUserDataEPv($1,$arg0);
 return;
}


function _emscripten_bind_b2FrictionJoint__GetAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21688)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21688)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_vii[($12)&255]($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16136;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16136)|0);
}


function _emscripten_bind_b2FrictionJoint__GetReactionForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21576)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21576)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 $9=$self;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 FUNCTION_TABLE_viif[($12)&127]($tmpcast,$self,$arg0);
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16128;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$13$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$13$1;
 STACKTOP=sp;return ((16128)|0);
}


function _emscripten_bind_b2FrictionJoint__GetBodyA_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint8GetBodyAEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2FrictionJoint__GetNext_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZN7b2Joint7GetNextEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2FrictionJoint__GetMaxTorque_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK15b2FrictionJoint12GetMaxTorqueEv($self)));
 return (+($1));
}


function _emscripten_bind_b2FrictionJoint__IsActive_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((__ZNK7b2Joint8IsActiveEv($1))|0);
 return (($2)|0);
}


function _emscripten_bind_b2StackAllocator__GetMaxAllocation_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK16b2StackAllocator16GetMaxAllocationEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2StackAllocator____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$4=0,$8=0,$7$0=0,$7$1=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 __ZN16b2StackAllocatorD2Ev($self);
 $4=(($self)|0);
 __ZdlPv($4);
 return;
}


function _emscripten_bind_b2StackAllocator__b2StackAllocator_p0(){
 var $1=0,$2=0,$5$0=0,$5$1=0,label=0;

 $1=((__Znwj(102800))|0);
 $2=$1;
 __ZN16b2StackAllocatorC2Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2StackAllocator__Allocate_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN16b2StackAllocator8AllocateEi($self,$arg0))|0);
 return (($1)|0);
}


function _emscripten_bind_b2StackAllocator__Free_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN16b2StackAllocator4FreeEPv($self,$arg0);
 return;
}


function _emscripten_bind_b2DestructionListener____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 FUNCTION_TABLE_vi[($6)&255]($self);
 return;
}


function _emscripten_bind_b2DestructionListener__SayGoodbye_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$self;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vii[($4)&255]($self,$arg0);
 return;
}


function _emscripten_bind_b2DestructionListener__b2DestructionListener_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(4))|0);
 $2=$1;
 __ZN21b2DestructionListenerC1Ev($2);
 return (($2)|0);
}


function __ZN21b2DestructionListenerC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN21b2DestructionListenerC2Ev($this);
 return;
}


function _emscripten_bind_b2Filter____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2Filter__set_maskBits_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+2)|0);
 HEAP16[(($1)>>1)]=$arg0;
 return;
}


function _emscripten_bind_b2Filter__set_categoryBits_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 HEAP16[(($1)>>1)]=$arg0;
 return;
}


function _emscripten_bind_b2Filter__get_groupIndex_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2Filter__set_groupIndex_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+4)|0);
 HEAP16[(($1)>>1)]=$arg0;
 return;
}


function _emscripten_bind_b2Filter__get_maskBits_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+2)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2Filter__b2Filter_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(6))|0);
 $2=$1;
 __ZN8b2FilterC1Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2Filter__get_categoryBits_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2RopeJointDef__set_localAnchorA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+20)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2RopeJointDef__get_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN14b2RopeJointDef9get_bodyAEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN14b2RopeJointDef9get_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2RopeJointDef__get_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN14b2RopeJointDef9get_bodyBEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN14b2RopeJointDef9get_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2RopeJointDef__set_localAnchorB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+28)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2RopeJointDef__set_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN14b2RopeJointDef9set_bodyAEP6b2Body($self,$arg0);
 return;
}


function __ZN14b2RopeJointDef9set_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2RopeJointDef__set_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN14b2RopeJointDef9set_bodyBEP6b2Body($self,$arg0);
 return;
}


function __ZN14b2RopeJointDef9set_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2RopeJointDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2RopeJointDef__get_localAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+20)|0);
 return (($1)|0);
}


function _emscripten_bind_b2RopeJointDef__get_maxLength_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+36)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2RopeJointDef__get_localAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+28)|0);
 return (($1)|0);
}


function _emscripten_bind_b2RopeJointDef__get_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN14b2RopeJointDef20get_collideConnectedEb($self,0))|0);
 return (($1)|0);
}


function __ZN14b2RopeJointDef20get_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2RopeJointDef__set_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN14b2RopeJointDef20set_collideConnectedEb($self,$arg0);
 return;
}


function __ZN14b2RopeJointDef20set_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+16)|0);
 $2=($b&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2RopeJointDef__b2RopeJointDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(40))|0);
 $2=$1;
 __ZN14b2RopeJointDefC1Ev($2);
 return (($2)|0);
}


function __ZN14b2RopeJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN14b2RopeJointDefC2Ev($this);
 return;
}


function _emscripten_bind_b2RopeJointDef__set_maxLength_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+36)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2FrictionJointDef__set_localAnchorA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+20)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2FrictionJointDef__get_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN18b2FrictionJointDef9get_bodyAEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN18b2FrictionJointDef9get_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2FrictionJointDef__get_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN18b2FrictionJointDef9get_bodyBEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN18b2FrictionJointDef9get_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2FrictionJointDef__set_localAnchorB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+28)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2FrictionJointDef__set_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN18b2FrictionJointDef9set_bodyAEP6b2Body($self,$arg0);
 return;
}


function __ZN18b2FrictionJointDef9set_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2FrictionJointDef__set_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN18b2FrictionJointDef9set_bodyBEP6b2Body($self,$arg0);
 return;
}


function __ZN18b2FrictionJointDef9set_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2FrictionJointDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2FrictionJointDef__get_maxForce_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+36)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2FrictionJointDef__b2FrictionJointDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(44))|0);
 $2=$1;
 __ZN18b2FrictionJointDefC1Ev($2);
 return (($2)|0);
}


function __ZN18b2FrictionJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN18b2FrictionJointDefC2Ev($this);
 return;
}


function _emscripten_bind_b2FrictionJointDef__get_localAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+20)|0);
 return (($1)|0);
}


function _emscripten_bind_b2FrictionJointDef__set_maxForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+36)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2FrictionJointDef__get_localAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+28)|0);
 return (($1)|0);
}


function _emscripten_bind_b2FrictionJointDef__get_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN18b2FrictionJointDef20get_collideConnectedEb($self,0))|0);
 return (($1)|0);
}


function __ZN18b2FrictionJointDef20get_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2FrictionJointDef__set_maxTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+40)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2FrictionJointDef__set_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN18b2FrictionJointDef20set_collideConnectedEb($self,$arg0);
 return;
}


function __ZN18b2FrictionJointDef20set_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+16)|0);
 $2=($b&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2FrictionJointDef__Initialize_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var label=0;

 __ZN18b2FrictionJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2FrictionJointDef__get_maxTorque_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+40)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2BodyDef__get_linearDamping_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+28)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2BodyDef__get_awake_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+37)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2BodyDef__get_type_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2BodyDef__get_allowSleep_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+36)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2BodyDef__set_position_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+4)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2BodyDef__set_linearVelocity_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+16)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2BodyDef__b2BodyDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(52))|0);
 $2=$1;
 __ZN9b2BodyDefC1Ev($2);
 return (($2)|0);
}


function __ZN9b2BodyDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN9b2BodyDefC2Ev($this);
 return;
}


function _emscripten_bind_b2BodyDef__get_bullet_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+39)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2BodyDef__get_userData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+44)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2BodyDef__set_angularDamping_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+32)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2BodyDef__set_fixedRotation_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+38)|0);
 $2=($arg0&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2BodyDef__set_allowSleep_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+36)|0);
 $2=($arg0&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2BodyDef__get_gravityScale_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+48)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2BodyDef__set_angularVelocity_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+24)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2BodyDef__set_userData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+44)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2BodyDef__get_position_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+4)|0);
 return (($1)|0);
}


function _emscripten_bind_b2BodyDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2BodyDef__set_type_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2BodyDef__set_gravityScale_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+48)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2BodyDef__get_angularDamping_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+32)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2BodyDef__set_bullet_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+39)|0);
 $2=($arg0&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2BodyDef__set_active_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+40)|0);
 $2=($arg0&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2BodyDef__set_angle_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+12)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2BodyDef__get_angle_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+12)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2BodyDef__get_angularVelocity_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+24)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2BodyDef__get_linearVelocity_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+16)|0);
 return (($1)|0);
}


function _emscripten_bind_b2BodyDef__get_active_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+40)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2BodyDef__set_linearDamping_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+28)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2BodyDef__get_fixedRotation_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+38)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2BodyDef__set_awake_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+37)|0);
 $2=($arg0&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2Vec2__Normalize_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZN6b2Vec29NormalizeEv($self)));
 return (+($1));
}


function _emscripten_bind_b2Vec2__set_x_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2Vec2__b2Vec2_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(8))|0);
 $2=$1;
 return (($2)|0);
}


function _emscripten_bind_b2Vec2__b2Vec2_p2($arg0,$arg1){
 $arg0=+($arg0);
 $arg1=+($arg1);
 var $1=0,$2=0,label=0;

 $1=((__Znwj(8))|0);
 $2=$1;
 __ZN6b2Vec2C1Eff($2,$arg0,$arg1);
 return (($2)|0);
}


function _emscripten_bind_b2Vec2__Set_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=+($arg0);
 $arg1=+($arg1);
 var label=0;

 __ZN6b2Vec23SetEff($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2Vec2__get_x_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Vec2__get_y_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Vec2__set_y_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+4)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2Vec2__IsValid_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2Vec27IsValidEv($self))|0);
 return (($1)|0);
}


function _emscripten_bind_b2Vec2__Skew_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21936)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21936)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK6b2Vec24SkewEv($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16120;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16120)|0);
}


function _emscripten_bind_b2Vec2__LengthSquared_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK6b2Vec213LengthSquaredEv($self)));
 return (+($1));
}


function _emscripten_bind_b2Vec2__op_add_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Vec2pLERKS_($self,$arg0);
 return;
}


function _emscripten_bind_b2Vec2__SetZero_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN6b2Vec27SetZeroEv($self);
 return;
}


function _emscripten_bind_b2Vec2__Length_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK6b2Vec26LengthEv($self)));
 return (+($1));
}


function _emscripten_bind_b2Vec2____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2Vec2__op_mul_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN6b2Vec2mLEf($self,$arg0);
 return;
}


function _emscripten_bind_b2Vec2__op_sub_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21928)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21928)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK6b2Vec2ngEv($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16112;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16112)|0);
}


function _emscripten_bind_b2Vec3____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2Vec3__set_z_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+8)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2Vec3__Set_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=+($arg0);
 $arg1=+($arg1);
 $arg2=+($arg2);
 var label=0;

 __ZN6b2Vec33SetEfff($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2Vec3__get_z_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+8)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Vec3__op_add_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2Vec3pLERKS_($self,$arg0);
 return;
}


function _emscripten_bind_b2Vec3__SetZero_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN6b2Vec37SetZeroEv($self);
 return;
}


function _emscripten_bind_b2Vec3__b2Vec3_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(12))|0);
 $2=$1;
 return (($2)|0);
}


function _emscripten_bind_b2Vec3__b2Vec3_p3($arg0,$arg1,$arg2){
 $arg0=+($arg0);
 $arg1=+($arg1);
 $arg2=+($arg2);
 var $1=0,$2=0,label=0;

 $1=((__Znwj(12))|0);
 $2=$1;
 __ZN6b2Vec3C1Efff($2,$arg0,$arg1,$arg2);
 return (($2)|0);
}


function _emscripten_bind_b2Vec3__op_mul_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN6b2Vec3mLEf($self,$arg0);
 return;
}


function _emscripten_bind_b2Vec3__op_sub_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$9=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=((HEAP8[(21920)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21920)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK6b2Vec3ngEv($1,$self);
 $9=$1;
 HEAP32[((16096)>>2)]=((HEAP32[(($9)>>2)])|0);HEAP32[((16100)>>2)]=((HEAP32[((($9)+(4))>>2)])|0);HEAP32[((16104)>>2)]=((HEAP32[((($9)+(8))>>2)])|0);
 STACKTOP=sp;return ((16096)|0);
}


function _emscripten_bind_b2AABB____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2AABB__b2AABB_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(16))|0);
 $2=$1;
 return (($2)|0);
}


function _emscripten_bind_b2AABB__set_upperBound_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+8)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2AABB__IsValid_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2AABB7IsValidEv($self))|0);
 return (($1)|0);
}


function __ZNK6b2AABB7IsValidEv($this){
 $this=($this)|0;
 var $d=0,$1=0,$2=0,$3=0,$4=.0,$5=0,$7=0,$8=.0,$9=0,$11=0,$13=0,$14=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $d=((sp)|0);
 $1=(($this+8)|0);
 $2=(($this)|0);
 __ZmiRK6b2Vec2S1_($d,$1,$2);
 $3=(($d)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=$4<(0.0);
 do {
  if ($5) {
   $14=0;
  } else {
   $7=(($d+4)|0);
   $8=(+(HEAPF32[(($7)>>2)]));
   $9=$8<(0.0);
   if ($9) {
    $14=0;
    break;
   }
   $11=((__ZNK6b2Vec27IsValidEv($2))|0);
   if (!($11)) {
    $14=0;
    break;
   }
   $13=((__ZNK6b2Vec27IsValidEv($1))|0);
   $14=$13;
  }
 } while(0);

 STACKTOP=sp;return (($14)|0);
}


function _emscripten_bind_b2AABB__Contains_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2AABB8ContainsERKS_($self,$arg0))|0);
 return (($1)|0);
}


function _emscripten_bind_b2AABB__GetExtents_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21888)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21888)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK6b2AABB10GetExtentsEv($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16088;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16088)|0);
}


function _emscripten_bind_b2AABB__GetCenter_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21896)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21896)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK6b2AABB9GetCenterEv($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16080;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16080)|0);
}


function _emscripten_bind_b2AABB__get_upperBound_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+8)|0);
 return (($1)|0);
}


function _emscripten_bind_b2AABB__GetPerimeter_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK6b2AABB12GetPerimeterEv($self)));
 return (+($1));
}


function _emscripten_bind_b2AABB__Combine_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN6b2AABB7CombineERKS_($self,$arg0);
 return;
}


function __ZN6b2AABB7CombineERKS_($this,$aabb){
 $this=($this)|0;
 $aabb=($aabb)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast3=0,$3=0,$4=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$st$2$0=0,$st$3$1=0,$7=0,$8=0,$9=0,$ld$4$0=0,$10$0=0,$ld$5$1=0,$10$1=0;
 var $st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast3=$2;
 $3=(($this)|0);
 $4=(($aabb)|0);
 __Z5b2MinRK6b2Vec2S1_($tmpcast,$3,$4);
 $5=$this;
 $ld$0$0=(($1)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($5)|0);
 HEAP32[(($st$2$0)>>2)]=$6$0;
 $st$3$1=(($5+4)|0);
 HEAP32[(($st$3$1)>>2)]=$6$1;
 $7=(($this+8)|0);
 $8=(($aabb+8)|0);
 __Z5b2MaxRK6b2Vec2S1_($tmpcast3,$7,$8);
 $9=$7;
 $ld$4$0=(($2)|0);
 $10$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $10$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($9)|0);
 HEAP32[(($st$6$0)>>2)]=$10$0;
 $st$7$1=(($9+4)|0);
 HEAP32[(($st$7$1)>>2)]=$10$1;
 STACKTOP=sp;return;
}


function _emscripten_bind_b2AABB__Combine_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var label=0;

 __ZN6b2AABB7CombineERKS_S1_($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2AABB__RayCast_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var $1=0,label=0;

 $1=((__ZNK6b2AABB7RayCastEP15b2RayCastOutputRK14b2RayCastInput($self,$arg0,$arg1))|0);
 return (($1)|0);
}


function _emscripten_bind_b2AABB__set_lowerBound_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$ld$0$0=0,$3$0=0,$ld$1$1=0,$3$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=$arg0;
 $2=$self;
 $ld$0$0=(($1)|0);
 $3$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $3$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($2)|0);
 HEAP32[(($st$2$0)>>2)]=$3$0;
 $st$3$1=(($2+4)|0);
 HEAP32[(($st$3$1)>>2)]=$3$1;
 return;
}


function _emscripten_bind_b2AABB__get_lowerBound_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 return (($1)|0);
}


function _emscripten_bind_b2FixtureDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2FixtureDef__get_isSensor_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+20)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2FixtureDef__set_userData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+4)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2FixtureDef__set_shape_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2FixtureDef__get_density_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+16)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2FixtureDef__get_shape_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2FixtureDef__b2FixtureDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(28))|0);
 $2=$1;
 __ZN12b2FixtureDefC1Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2FixtureDef__set_density_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+16)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2FixtureDef__set_restitution_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+12)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2FixtureDef__get_restitution_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+12)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2FixtureDef__set_isSensor_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+20)|0);
 $2=($arg0&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2FixtureDef__get_filter_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+22)|0);
 return (($1)|0);
}


function _emscripten_bind_b2FixtureDef__get_friction_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+8)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2FixtureDef__set_friction_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+8)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2FixtureDef__get_userData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2FixtureDef__set_filter_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+22)|0);
 $2=$1;
 $3=$arg0;
 HEAP16[(($2)>>1)]=((HEAP16[(($3)>>1)])|0);HEAP16[((($2)+(2))>>1)]=((HEAP16[((($3)+(2))>>1)])|0);HEAP16[((($2)+(4))>>1)]=((HEAP16[((($3)+(4))>>1)])|0);
 return;
}


function _emscripten_bind_b2PrismaticJointDef__set_localAnchorA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+20)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2PrismaticJointDef__set_localAnchorB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+28)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2PrismaticJointDef__get_motorSpeed_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+68)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2PrismaticJointDef__get_enableMotor_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+60)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2PrismaticJointDef__get_referenceAngle_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+44)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2PrismaticJointDef__set_enableLimit_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+48)|0);
 $2=($arg0&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2PrismaticJointDef__set_motorSpeed_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+68)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2PrismaticJointDef__get_localAxisA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+36)|0);
 return (($1)|0);
}


function _emscripten_bind_b2PrismaticJointDef__set_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN19b2PrismaticJointDef9set_bodyAEP6b2Body($self,$arg0);
 return;
}


function __ZN19b2PrismaticJointDef9set_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2PrismaticJointDef__set_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN19b2PrismaticJointDef9set_bodyBEP6b2Body($self,$arg0);
 return;
}


function __ZN19b2PrismaticJointDef9set_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2PrismaticJointDef__b2PrismaticJointDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(72))|0);
 $2=$1;
 __ZN19b2PrismaticJointDefC1Ev($2);
 return (($2)|0);
}


function __ZN19b2PrismaticJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN19b2PrismaticJointDefC2Ev($this);
 return;
}


function _emscripten_bind_b2PrismaticJointDef__Initialize_p4($self,$arg0,$arg1,$arg2,$arg3){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 $arg3=($arg3)|0;
 var label=0;

 __ZN19b2PrismaticJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($self,$arg0,$arg1,$arg2,$arg3);
 return;
}


function _emscripten_bind_b2PrismaticJointDef__set_lowerTranslation_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+52)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2PrismaticJointDef__get_upperTranslation_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+56)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2PrismaticJointDef__get_enableLimit_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+48)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2PrismaticJointDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2PrismaticJointDef__set_referenceAngle_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+44)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2PrismaticJointDef__get_localAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+20)|0);
 return (($1)|0);
}


function _emscripten_bind_b2PrismaticJointDef__get_localAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+28)|0);
 return (($1)|0);
}


function _emscripten_bind_b2PrismaticJointDef__get_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN19b2PrismaticJointDef20get_collideConnectedEb($self,0))|0);
 return (($1)|0);
}


function __ZN19b2PrismaticJointDef20get_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2PrismaticJointDef__get_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN19b2PrismaticJointDef9get_bodyAEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN19b2PrismaticJointDef9get_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2PrismaticJointDef__get_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN19b2PrismaticJointDef9get_bodyBEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN19b2PrismaticJointDef9get_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2PrismaticJointDef__set_upperTranslation_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+56)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2PrismaticJointDef__get_maxMotorForce_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+64)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2PrismaticJointDef__set_maxMotorForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+64)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2PrismaticJointDef__set_enableMotor_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+60)|0);
 $2=($arg0&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2PrismaticJointDef__set_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN19b2PrismaticJointDef20set_collideConnectedEb($self,$arg0);
 return;
}


function __ZN19b2PrismaticJointDef20set_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+16)|0);
 $2=($b&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2PrismaticJointDef__get_lowerTranslation_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+52)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2PrismaticJointDef__set_localAxisA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+36)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2WheelJointDef__set_localAnchorA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+20)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2WheelJointDef__set_localAnchorB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+28)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2WheelJointDef__get_motorSpeed_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+52)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WheelJointDef__set_maxMotorTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+48)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2WheelJointDef__set_frequencyHz_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+56)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2WheelJointDef__set_motorSpeed_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+52)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2WheelJointDef__get_localAxisA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+36)|0);
 return (($1)|0);
}


function _emscripten_bind_b2WheelJointDef__set_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN15b2WheelJointDef9set_bodyAEP6b2Body($self,$arg0);
 return;
}


function __ZN15b2WheelJointDef9set_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2WheelJointDef__set_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN15b2WheelJointDef9set_bodyBEP6b2Body($self,$arg0);
 return;
}


function __ZN15b2WheelJointDef9set_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2WheelJointDef__Initialize_p4($self,$arg0,$arg1,$arg2,$arg3){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 $arg3=($arg3)|0;
 var label=0;

 __ZN15b2WheelJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($self,$arg0,$arg1,$arg2,$arg3);
 return;
}


function _emscripten_bind_b2WheelJointDef__b2WheelJointDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(64))|0);
 $2=$1;
 __ZN15b2WheelJointDefC1Ev($2);
 return (($2)|0);
}


function __ZN15b2WheelJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2WheelJointDefC2Ev($this);
 return;
}


function _emscripten_bind_b2WheelJointDef__get_frequencyHz_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+56)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WheelJointDef__set_dampingRatio_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+60)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2WheelJointDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2WheelJointDef__get_localAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+20)|0);
 return (($1)|0);
}


function _emscripten_bind_b2WheelJointDef__get_maxMotorTorque_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+48)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WheelJointDef__get_localAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+28)|0);
 return (($1)|0);
}


function _emscripten_bind_b2WheelJointDef__get_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN15b2WheelJointDef20get_collideConnectedEb($self,0))|0);
 return (($1)|0);
}


function __ZN15b2WheelJointDef20get_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2WheelJointDef__get_enableMotor_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+44)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2WheelJointDef__get_dampingRatio_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+60)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WheelJointDef__get_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN15b2WheelJointDef9get_bodyAEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN15b2WheelJointDef9get_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2WheelJointDef__get_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN15b2WheelJointDef9get_bodyBEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN15b2WheelJointDef9get_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2WheelJointDef__set_enableMotor_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+44)|0);
 $2=($arg0&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2WheelJointDef__set_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN15b2WheelJointDef20set_collideConnectedEb($self,$arg0);
 return;
}


function __ZN15b2WheelJointDef20set_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+16)|0);
 $2=($b&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2WheelJointDef__set_localAxisA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+36)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2RevoluteJointDef__set_localAnchorA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+20)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2RevoluteJointDef__get_lowerAngle_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+44)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2RevoluteJointDef__set_localAnchorB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+28)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2RevoluteJointDef__set_lowerAngle_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+44)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2RevoluteJointDef__get_enableMotor_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+52)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2RevoluteJointDef__set_upperAngle_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+48)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2RevoluteJointDef__get_referenceAngle_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+36)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2RevoluteJointDef__set_enableLimit_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+40)|0);
 $2=($arg0&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2RevoluteJointDef__get_motorSpeed_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+56)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2RevoluteJointDef__set_motorSpeed_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+56)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2RevoluteJointDef__get_maxMotorTorque_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+60)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2RevoluteJointDef__set_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN18b2RevoluteJointDef9set_bodyAEP6b2Body($self,$arg0);
 return;
}


function __ZN18b2RevoluteJointDef9set_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2RevoluteJointDef__set_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN18b2RevoluteJointDef9set_bodyBEP6b2Body($self,$arg0);
 return;
}


function __ZN18b2RevoluteJointDef9set_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2RevoluteJointDef__b2RevoluteJointDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(64))|0);
 $2=$1;
 __ZN18b2RevoluteJointDefC1Ev($2);
 return (($2)|0);
}


function __ZN18b2RevoluteJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN18b2RevoluteJointDefC2Ev($this);
 return;
}


function _emscripten_bind_b2RevoluteJointDef__Initialize_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var label=0;

 __ZN18b2RevoluteJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2RevoluteJointDef__get_enableLimit_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+40)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2RevoluteJointDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2RevoluteJointDef__get_upperAngle_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+48)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2RevoluteJointDef__set_referenceAngle_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+36)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2RevoluteJointDef__get_localAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+20)|0);
 return (($1)|0);
}


function _emscripten_bind_b2RevoluteJointDef__get_localAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+28)|0);
 return (($1)|0);
}


function _emscripten_bind_b2RevoluteJointDef__get_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN18b2RevoluteJointDef20get_collideConnectedEb($self,0))|0);
 return (($1)|0);
}


function __ZN18b2RevoluteJointDef20get_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2RevoluteJointDef__get_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN18b2RevoluteJointDef9get_bodyAEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN18b2RevoluteJointDef9get_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2RevoluteJointDef__get_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN18b2RevoluteJointDef9get_bodyBEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN18b2RevoluteJointDef9get_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2RevoluteJointDef__set_maxMotorTorque_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+60)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2RevoluteJointDef__set_enableMotor_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+52)|0);
 $2=($arg0&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2RevoluteJointDef__set_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN18b2RevoluteJointDef20set_collideConnectedEb($self,$arg0);
 return;
}


function __ZN18b2RevoluteJointDef20set_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+16)|0);
 $2=($b&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2PulleyJointDef__set_localAnchorA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+36)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2PulleyJointDef__set_localAnchorB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+44)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2PulleyJointDef__set_ratio_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+60)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2PulleyJointDef__set_groundAnchorB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+28)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2PulleyJointDef__set_groundAnchorA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+20)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2PulleyJointDef__get_groundAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+28)|0);
 return (($1)|0);
}


function _emscripten_bind_b2PulleyJointDef__get_groundAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+20)|0);
 return (($1)|0);
}


function _emscripten_bind_b2PulleyJointDef__set_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN16b2PulleyJointDef9set_bodyAEP6b2Body($self,$arg0);
 return;
}


function __ZN16b2PulleyJointDef9set_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2PulleyJointDef__set_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN16b2PulleyJointDef9set_bodyBEP6b2Body($self,$arg0);
 return;
}


function __ZN16b2PulleyJointDef9set_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2PulleyJointDef__Initialize_p7($self,$arg0,$arg1,$arg2,$arg3,$arg4,$arg5,$arg6){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 $arg3=($arg3)|0;
 $arg4=($arg4)|0;
 $arg5=($arg5)|0;
 $arg6=+($arg6);
 var label=0;

 __ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f($self,$arg0,$arg1,$arg2,$arg3,$arg4,$arg5,$arg6);
 return;
}


function _emscripten_bind_b2PulleyJointDef__get_ratio_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+60)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2PulleyJointDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2PulleyJointDef__get_localAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+36)|0);
 return (($1)|0);
}


function _emscripten_bind_b2PulleyJointDef__get_localAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+44)|0);
 return (($1)|0);
}


function _emscripten_bind_b2PulleyJointDef__get_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN16b2PulleyJointDef20get_collideConnectedEb($self,0))|0);
 return (($1)|0);
}


function __ZN16b2PulleyJointDef20get_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2PulleyJointDef__set_lengthB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+56)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2PulleyJointDef__set_lengthA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+52)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2PulleyJointDef__get_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN16b2PulleyJointDef9get_bodyAEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN16b2PulleyJointDef9get_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2PulleyJointDef__get_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN16b2PulleyJointDef9get_bodyBEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN16b2PulleyJointDef9get_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2PulleyJointDef__get_lengthB_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+56)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2PulleyJointDef__get_lengthA_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+52)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2PulleyJointDef__set_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN16b2PulleyJointDef20set_collideConnectedEb($self,$arg0);
 return;
}


function __ZN16b2PulleyJointDef20set_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+16)|0);
 $2=($b&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2PulleyJointDef__b2PulleyJointDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(64))|0);
 $2=$1;
 __ZN16b2PulleyJointDefC1Ev($2);
 return (($2)|0);
}


function __ZN16b2PulleyJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN16b2PulleyJointDefC2Ev($this);
 return;
}


function _emscripten_bind_b2JointDef__get_bodyA_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2JointDef__set_userData_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+4)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2JointDef__set_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+8)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2JointDef__set_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+12)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2JointDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2JointDef__get_bodyB_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2JointDef__set_type_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2JointDef__get_collideConnected_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($self+16)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2JointDef__get_type_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2JointDef__set_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+16)|0);
 $2=($arg0&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2JointDef__b2JointDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(20))|0);
 $2=$1;
 __ZN10b2JointDefC1Ev($2);
 return (($2)|0);
}


function __ZN10b2JointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN10b2JointDefC2Ev($this);
 return;
}


function _emscripten_bind_b2JointDef__get_userData_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2Transform____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2Transform__Set_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=+($arg1);
 var label=0;

 __ZN11b2Transform3SetERK6b2Vec2f($self,$arg0,$arg1);
 return;
}


function __ZN11b2Transform3SetERK6b2Vec2f($this,$position,$angle){
 $this=($this)|0;
 $position=($position)|0;
 $angle=+($angle);
 var $1=0,$2=0,$ld$0$0=0,$3$0=0,$ld$1$1=0,$3$1=0,$st$2$0=0,$st$3$1=0,$4=0,label=0;

 $1=$position;
 $2=$this;
 $ld$0$0=(($1)|0);
 $3$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $3$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($2)|0);
 HEAP32[(($st$2$0)>>2)]=$3$0;
 $st$3$1=(($2+4)|0);
 HEAP32[(($st$3$1)>>2)]=$3$1;
 $4=(($this+8)|0);
 __ZN5b2Rot3SetEf($4,$angle);
 return;
}


function _emscripten_bind_b2Transform__set_p_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$ld$0$0=0,$3$0=0,$ld$1$1=0,$3$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=$arg0;
 $2=$self;
 $ld$0$0=(($1)|0);
 $3$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $3$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($2)|0);
 HEAP32[(($st$2$0)>>2)]=$3$0;
 $st$3$1=(($2+4)|0);
 HEAP32[(($st$3$1)>>2)]=$3$1;
 return;
}


function _emscripten_bind_b2Transform__set_q_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+8)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2Transform__get_p_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 return (($1)|0);
}


function _emscripten_bind_b2Transform__get_q_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+8)|0);
 return (($1)|0);
}


function _emscripten_bind_b2Transform__b2Transform_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(16))|0);
 $2=$1;
 return (($2)|0);
}


function _emscripten_bind_b2Transform__b2Transform_p2($arg0,$arg1){
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var $1=0,$2=0,label=0;

 $1=((__Znwj(16))|0);
 $2=$1;
 __ZN11b2TransformC1ERK6b2Vec2RK5b2Rot($2,$arg0,$arg1);
 return (($2)|0);
}


function __ZN11b2TransformC1ERK6b2Vec2RK5b2Rot($this,$position,$rotation){
 $this=($this)|0;
 $position=($position)|0;
 $rotation=($rotation)|0;
 var label=0;

 __ZN11b2TransformC2ERK6b2Vec2RK5b2Rot($this,$position,$rotation);
 return;
}


function _emscripten_bind_b2Transform__SetIdentity_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN11b2Transform11SetIdentityEv($self);
 return;
}


function __ZN11b2Transform11SetIdentityEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN6b2Vec27SetZeroEv($1);
 $2=(($this+8)|0);
 __ZN5b2Rot11SetIdentityEv($2);
 return;
}


function _emscripten_bind_b2Color____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2Color__Set_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=+($arg0);
 $arg1=+($arg1);
 $arg2=+($arg2);
 var label=0;

 __ZN7b2Color3SetEfff($self,$arg0,$arg1,$arg2);
 return;
}


function __ZN7b2Color3SetEfff($this,$ri,$gi,$bi){
 $this=($this)|0;
 $ri=+($ri);
 $gi=+($gi);
 $bi=+($bi);
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=$ri;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=$gi;
 $3=(($this+8)|0);
 HEAPF32[(($3)>>2)]=$bi;
 return;
}


function _emscripten_bind_b2Color__set_r_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2Color__get_r_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Color__b2Color_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(12))|0);
 $2=$1;
 return (($2)|0);
}


function _emscripten_bind_b2Color__b2Color_p3($arg0,$arg1,$arg2){
 $arg0=+($arg0);
 $arg1=+($arg1);
 $arg2=+($arg2);
 var $1=0,$2=0,label=0;

 $1=((__Znwj(12))|0);
 $2=$1;
 __ZN7b2ColorC1Efff($2,$arg0,$arg1,$arg2);
 return (($2)|0);
}


function _emscripten_bind_b2Color__set_b_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+8)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2Color__get_g_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Color__get_b_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+8)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2Color__set_g_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+4)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2Rot____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2Rot__Set_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var label=0;

 __ZN5b2Rot3SetEf($self,$arg0);
 return;
}


function _emscripten_bind_b2Rot__GetAngle_p0($self){
 $self=($self)|0;
 var $1=.0,label=0;

 $1=(+(__ZNK5b2Rot8GetAngleEv($self)));
 return (+($1));
}


function __ZNK5b2Rot8GetAngleEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+4)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(+(Math_atan2((+($2)),(+($4)))));
 return (+($5));
}


function _emscripten_bind_b2Rot__GetYAxis_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21904)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21904)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK5b2Rot8GetYAxisEv($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16072;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16072)|0);
}


function __ZNK5b2Rot8GetYAxisEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=((-.0))-($2);
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 __ZN6b2Vec2C1Eff($agg_result,$3,$5);
 return;
}


function _emscripten_bind_b2Rot__GetXAxis_p0($self){
 $self=($self)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$5=0,$6=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$$etemp$2=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=((HEAP8[(21912)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=((___cxa_guard_acquire(((21912)|0)))|0);
   $6=($5|0)==0;
   if ($6) {
    break;
   }

  }
 } while(0);
 __ZNK5b2Rot8GetXAxisEv($tmpcast,$self);
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $$etemp$2=16064;
 $st$3$0=(($$etemp$2)|0);
 HEAP32[(($st$3$0)>>2)]=$9$0;
 $st$4$1=(($$etemp$2+4)|0);
 HEAP32[(($st$4$1)>>2)]=$9$1;
 STACKTOP=sp;return ((16064)|0);
}


function __ZNK5b2Rot8GetXAxisEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=.0,$3=0,$4=.0,label=0;

 $1=(($this+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 __ZN6b2Vec2C1Eff($agg_result,$2,$4);
 return;
}


function _emscripten_bind_b2Rot__set_c_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+4)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2Rot__SetIdentity_p0($self){
 $self=($self)|0;
 var label=0;

 __ZN5b2Rot11SetIdentityEv($self);
 return;
}


function __ZN5b2Rot11SetIdentityEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=0.0;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=1.0;
 return;
}


function _emscripten_bind_b2Rot__b2Rot_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(8))|0);
 $2=$1;
 return (($2)|0);
}


function _emscripten_bind_b2Rot__b2Rot_p1($arg0){
 $arg0=+($arg0);
 var $1=0,$2=0,label=0;

 $1=((__Znwj(8))|0);
 $2=$1;
 __ZN5b2RotC1Ef($2,$arg0);
 return (($2)|0);
}


function _emscripten_bind_b2Rot__get_c_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WeldJointDef__set_localAnchorA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+20)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2WeldJointDef__get_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN14b2WeldJointDef9get_bodyAEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN14b2WeldJointDef9get_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2WeldJointDef__get_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN14b2WeldJointDef9get_bodyBEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN14b2WeldJointDef9get_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2WeldJointDef__set_localAnchorB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+28)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2WeldJointDef__get_frequencyHz_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+40)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WeldJointDef__set_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN14b2WeldJointDef9set_bodyAEP6b2Body($self,$arg0);
 return;
}


function __ZN14b2WeldJointDef9set_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2WeldJointDef__set_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN14b2WeldJointDef9set_bodyBEP6b2Body($self,$arg0);
 return;
}


function __ZN14b2WeldJointDef9set_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2WeldJointDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2WeldJointDef__set_referenceAngle_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+36)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2WeldJointDef__get_localAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+20)|0);
 return (($1)|0);
}


function _emscripten_bind_b2WeldJointDef__get_referenceAngle_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+36)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WeldJointDef__get_localAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+28)|0);
 return (($1)|0);
}


function _emscripten_bind_b2WeldJointDef__get_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN14b2WeldJointDef20get_collideConnectedEb($self,0))|0);
 return (($1)|0);
}


function __ZN14b2WeldJointDef20get_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2WeldJointDef__get_dampingRatio_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+44)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2WeldJointDef__set_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN14b2WeldJointDef20set_collideConnectedEb($self,$arg0);
 return;
}


function __ZN14b2WeldJointDef20set_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+16)|0);
 $2=($b&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2WeldJointDef__set_frequencyHz_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+40)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2WeldJointDef__Initialize_p3($self,$arg0,$arg1,$arg2){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 var label=0;

 __ZN14b2WeldJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($self,$arg0,$arg1,$arg2);
 return;
}


function _emscripten_bind_b2WeldJointDef__set_dampingRatio_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+44)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2WeldJointDef__b2WeldJointDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(48))|0);
 $2=$1;
 __ZN14b2WeldJointDefC1Ev($2);
 return (($2)|0);
}


function __ZN14b2WeldJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN14b2WeldJointDefC2Ev($this);
 return;
}


function _emscripten_bind_b2MouseJointDef__get_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN15b2MouseJointDef9get_bodyAEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN15b2MouseJointDef9get_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2MouseJointDef__get_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN15b2MouseJointDef9get_bodyBEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN15b2MouseJointDef9get_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2MouseJointDef__set_dampingRatio_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+36)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2MouseJointDef__set_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN15b2MouseJointDef9set_bodyAEP6b2Body($self,$arg0);
 return;
}


function __ZN15b2MouseJointDef9set_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2MouseJointDef__set_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN15b2MouseJointDef9set_bodyBEP6b2Body($self,$arg0);
 return;
}


function __ZN15b2MouseJointDef9set_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2MouseJointDef__b2MouseJointDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(40))|0);
 $2=$1;
 __ZN15b2MouseJointDefC1Ev($2);
 return (($2)|0);
}


function __ZN15b2MouseJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2MouseJointDefC2Ev($this);
 return;
}


function _emscripten_bind_b2MouseJointDef__get_maxForce_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+28)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2MouseJointDef__set_target_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+20)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2MouseJointDef__set_maxForce_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+28)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2MouseJointDef__get_frequencyHz_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+32)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2MouseJointDef__get_target_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+20)|0);
 return (($1)|0);
}


function _emscripten_bind_b2MouseJointDef__get_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN15b2MouseJointDef20get_collideConnectedEb($self,0))|0);
 return (($1)|0);
}


function __ZN15b2MouseJointDef20get_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2MouseJointDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2MouseJointDef__set_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN15b2MouseJointDef20set_collideConnectedEb($self,$arg0);
 return;
}


function __ZN15b2MouseJointDef20set_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+16)|0);
 $2=($b&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2MouseJointDef__set_frequencyHz_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+32)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2MouseJointDef__get_dampingRatio_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+36)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2DistanceProxy__get_m_radius_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+24)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2DistanceProxy__Set_p2($self,$arg0,$arg1){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 var label=0;

 __ZN15b2DistanceProxy3SetEPK7b2Shapei($self,$arg0,$arg1);
 return;
}


function _emscripten_bind_b2DistanceProxy__b2DistanceProxy_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(28))|0);
 $2=$1;
 __ZN15b2DistanceProxyC1Ev($2);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceProxy__set_m_radius_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+24)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2DistanceProxy____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2DistanceProxy__get_m_vertices_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+16)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceProxy__GetSupportVertex_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK15b2DistanceProxy16GetSupportVertexERK6b2Vec2($self,$arg0))|0);
 return (($1)|0);
}


function __ZNK15b2DistanceProxy16GetSupportVertexERK6b2Vec2($this,$d){
 $this=($this)|0;
 $d=($d)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$8=0,$10=0,$bestIndex_09=0,$i_08=0,$bestValue_07=.0,$11=0,$12=.0,$13=0,$bestValue_1=.0,$bestIndex_1=0,$14=0,$15=0,$_lcssa=0;
 var $bestIndex_0_lcssa=0,$16=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+20)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)>1;
 if (!($5)) {
  $bestIndex_0_lcssa=0;$_lcssa=$2;


  $16=(($_lcssa+($bestIndex_0_lcssa<<3))|0);
  return (($16)|0);
 }
 $6=(+(__Z5b2DotRK6b2Vec2S1_($2,$d)));
 $7=((HEAP32[(($3)>>2)])|0);
 $8=((HEAP32[(($1)>>2)])|0);
 $bestValue_07=$6;$i_08=1;$bestIndex_09=0;$10=$2;
 while(1) {




  $11=(($10+($i_08<<3))|0);
  $12=(+(__Z5b2DotRK6b2Vec2S1_($11,$d)));
  $13=$12>$bestValue_07;
  $bestValue_1=($13?$12:$bestValue_07);
  $bestIndex_1=($13?$i_08:$bestIndex_09);
  $14=((($i_08)+(1))|0);
  $15=($14|0)<($7|0);
  if ($15) {
   $bestValue_07=$bestValue_1;$i_08=$14;$bestIndex_09=$bestIndex_1;$10=$8;
  } else {
   $bestIndex_0_lcssa=$bestIndex_1;$_lcssa=$8;
   break;
  }
 }


 $16=(($_lcssa+($bestIndex_0_lcssa<<3))|0);
 return (($16)|0);
}


function _emscripten_bind_b2DistanceProxy__get_m_count_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+20)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceProxy__GetVertexCount_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=((__ZNK15b2DistanceProxy14GetVertexCountEv($self))|0);
 return (($1)|0);
}


function __ZNK15b2DistanceProxy14GetVertexCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+20)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceProxy__GetVertex_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK15b2DistanceProxy9GetVertexEi($self,$arg0))|0);
 return (($1)|0);
}


function _emscripten_bind_b2DistanceProxy__GetSupport_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($self,$arg0))|0);
 return (($1)|0);
}


function _emscripten_bind_b2DistanceProxy__set_m_vertices_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+16)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2DistanceProxy__set_m_count_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+20)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2DistanceJointDef__set_localAnchorA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+20)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2DistanceJointDef__get_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN18b2DistanceJointDef9get_bodyAEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN18b2DistanceJointDef9get_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceJointDef__get_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN18b2DistanceJointDef9get_bodyBEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN18b2DistanceJointDef9get_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2DistanceJointDef__set_localAnchorB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($self+28)|0);
 $2=$arg0;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _emscripten_bind_b2DistanceJointDef__set_dampingRatio_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+44)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2DistanceJointDef__set_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN18b2DistanceJointDef9set_bodyAEP6b2Body($self,$arg0);
 return;
}


function __ZN18b2DistanceJointDef9set_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2DistanceJointDef__set_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN18b2DistanceJointDef9set_bodyBEP6b2Body($self,$arg0);
 return;
}


function __ZN18b2DistanceJointDef9set_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2DistanceJointDef__get_length_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+36)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2DistanceJointDef__get_localAnchorA_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+20)|0);
 return (($1)|0);
}


function _emscripten_bind_b2DistanceJointDef__get_frequencyHz_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+40)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2DistanceJointDef__get_localAnchorB_p0($self){
 $self=($self)|0;
 var $1=0,label=0;

 $1=(($self+28)|0);
 return (($1)|0);
}


function _emscripten_bind_b2DistanceJointDef__get_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN18b2DistanceJointDef20get_collideConnectedEb($self,0))|0);
 return (($1)|0);
}


function __ZN18b2DistanceJointDef20get_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2DistanceJointDef__get_dampingRatio_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+44)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2DistanceJointDef__b2DistanceJointDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(48))|0);
 $2=$1;
 __ZN18b2DistanceJointDefC1Ev($2);
 return (($2)|0);
}


function __ZN18b2DistanceJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN18b2DistanceJointDefC2Ev($this);
 return;
}


function _emscripten_bind_b2DistanceJointDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2DistanceJointDef__set_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN18b2DistanceJointDef20set_collideConnectedEb($self,$arg0);
 return;
}


function __ZN18b2DistanceJointDef20set_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+16)|0);
 $2=($b&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2DistanceJointDef__set_length_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+36)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2DistanceJointDef__set_frequencyHz_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+40)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2DistanceJointDef__Initialize_p4($self,$arg0,$arg1,$arg2,$arg3){
 $self=($self)|0;
 $arg0=($arg0)|0;
 $arg1=($arg1)|0;
 $arg2=($arg2)|0;
 $arg3=($arg3)|0;
 var label=0;

 __ZN18b2DistanceJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($self,$arg0,$arg1,$arg2,$arg3);
 return;
}


function _emscripten_bind_b2GearJointDef____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2GearJointDef__get_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN14b2GearJointDef9get_bodyAEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN14b2GearJointDef9get_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJointDef__get_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN14b2GearJointDef9get_bodyBEP6b2Body($self,0))|0);
 return (($1)|0);
}


function __ZN14b2GearJointDef9get_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJointDef__get_joint1_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+20)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJointDef__set_bodyA_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN14b2GearJointDef9set_bodyAEP6b2Body($self,$arg0);
 return;
}


function __ZN14b2GearJointDef9set_bodyAEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2GearJointDef__set_bodyB_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN14b2GearJointDef9set_bodyBEP6b2Body($self,$arg0);
 return;
}


function __ZN14b2GearJointDef9set_bodyBEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 HEAP32[(($1)>>2)]=$b;
 return;
}


function _emscripten_bind_b2GearJointDef__set_joint2_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+24)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2GearJointDef__set_ratio_p1($self,$arg0){
 $self=($self)|0;
 $arg0=+($arg0);
 var $1=0,label=0;

 $1=(($self+28)|0);
 HEAPF32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2GearJointDef__get_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=((__ZN14b2GearJointDef20get_collideConnectedEb($self,0))|0);
 return (($1)|0);
}


function __ZN14b2GearJointDef20get_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function _emscripten_bind_b2GearJointDef__get_joint2_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+24)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2GearJointDef__set_collideConnected_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var label=0;

 __ZN14b2GearJointDef20set_collideConnectedEb($self,$arg0);
 return;
}


function __ZN14b2GearJointDef20set_collideConnectedEb($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+16)|0);
 $2=($b&1);
 HEAP8[($1)]=$2;
 return;
}


function _emscripten_bind_b2GearJointDef__b2GearJointDef_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(32))|0);
 $2=$1;
 __ZN14b2GearJointDefC1Ev($2);
 return (($2)|0);
}


function __ZN14b2GearJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN14b2GearJointDefC2Ev($this);
 return;
}


function _emscripten_bind_b2GearJointDef__get_ratio_p0($self){
 $self=($self)|0;
 var $1=0,$2=.0,label=0;

 $1=(($self+28)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _emscripten_bind_b2GearJointDef__set_joint1_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+20)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2ContactEdge____destroy___p0($self){
 $self=($self)|0;
 var $1=0,$3=0,label=0;

 $1=($self|0)==0;
 if ($1) {
  return;
 }
 $3=$self;
 __ZdlPv($3);
 return;
}


function _emscripten_bind_b2ContactEdge__set_contact_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+4)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2ContactEdge__get_prev_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2ContactEdge__get_other_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2ContactEdge__set_prev_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+8)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2ContactEdge__get_next_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _emscripten_bind_b2ContactEdge__set_other_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2ContactEdge__set_next_p1($self,$arg0){
 $self=($self)|0;
 $arg0=($arg0)|0;
 var $1=0,label=0;

 $1=(($self+12)|0);
 HEAP32[(($1)>>2)]=$arg0;
 return;
}


function _emscripten_bind_b2ContactEdge__b2ContactEdge_p0(){
 var $1=0,$2=0,label=0;

 $1=((__Znwj(16))|0);
 $2=$1;
 return (($2)|0);
}


function _emscripten_bind_b2ContactEdge__get_contact_p0($self){
 $self=($self)|0;
 var $1=0,$2=0,label=0;

 $1=(($self+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN14b2GearJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=6;
 $3=(($this+20)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+24)|0);
 HEAP32[(($4)>>2)]=0;
 $5=(($this+28)|0);
 HEAPF32[(($5)>>2)]=1.0;
 return;
}


function __ZN10b2JointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 _memset((((($1)|0))|0), ((((0)|0))|0), ((((17)|0))|0))|0;
 return;
}


function __ZN18b2DistanceJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=3;
 __ZN6b2Vec23SetEff($2,0.0,0.0);
 __ZN6b2Vec23SetEff($3,0.0,0.0);
 $5=(($this+36)|0);
 HEAPF32[(($5)>>2)]=1.0;
 $6=(($this+40)|0);
 HEAPF32[(($6)>>2)]=0.0;
 $7=(($this+44)|0);
 HEAPF32[(($7)>>2)]=0.0;
 return;
}


function __ZN15b2MouseJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=5;
 __ZN6b2Vec23SetEff($2,0.0,0.0);
 $4=(($this+28)|0);
 HEAPF32[(($4)>>2)]=0.0;
 $5=(($this+32)|0);
 HEAPF32[(($5)>>2)]=5.0;
 $6=(($this+36)|0);
 HEAPF32[(($6)>>2)]=0.699999988079071;
 return;
}


function __ZN14b2WeldJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=8;
 __ZN6b2Vec23SetEff($2,0.0,0.0);
 __ZN6b2Vec23SetEff($3,0.0,0.0);
 $5=(($this+36)|0);
 HEAPF32[(($5)>>2)]=0.0;
 $6=(($this+40)|0);
 HEAPF32[(($6)>>2)]=0.0;
 $7=(($this+44)|0);
 HEAPF32[(($7)>>2)]=0.0;
 return;
}


function __ZN11b2TransformC2ERK6b2Vec2RK5b2Rot($this,$position,$rotation){
 $this=($this)|0;
 $position=($position)|0;
 $rotation=($rotation)|0;
 var $1=0,$2=0,$ld$0$0=0,$3$0=0,$ld$1$1=0,$3$1=0,$st$2$0=0,$st$3$1=0,$4=0,$5=0,$6=0,$ld$4$0=0,$7$0=0,$ld$5$1=0,$7$1=0,$st$6$0=0,$st$7$1=0,label=0;

 $1=$position;
 $2=$this;
 $ld$0$0=(($1)|0);
 $3$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $3$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($2)|0);
 HEAP32[(($st$2$0)>>2)]=$3$0;
 $st$3$1=(($2+4)|0);
 HEAP32[(($st$3$1)>>2)]=$3$1;
 $4=(($this+8)|0);
 $5=$rotation;
 $6=$4;
 $ld$4$0=(($5)|0);
 $7$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($5+4)|0);
 $7$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($6)|0);
 HEAP32[(($st$6$0)>>2)]=$7$0;
 $st$7$1=(($6+4)|0);
 HEAP32[(($st$7$1)>>2)]=$7$1;
 return;
}


function __ZN16b2PulleyJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this+36)|0);
 $5=(($this+44)|0);
 $6=(($this)|0);
 HEAP32[(($6)>>2)]=4;
 __ZN6b2Vec23SetEff($2,-1.0,1.0);
 __ZN6b2Vec23SetEff($3,1.0,1.0);
 __ZN6b2Vec23SetEff($4,-1.0,0.0);
 __ZN6b2Vec23SetEff($5,1.0,0.0);
 $7=(($this+52)|0);
 HEAPF32[(($7)>>2)]=0.0;
 $8=(($this+56)|0);
 HEAPF32[(($8)>>2)]=0.0;
 $9=(($this+60)|0);
 HEAPF32[(($9)>>2)]=1.0;
 $10=(($this+16)|0);
 HEAP8[($10)]=1;
 return;
}


function __ZN18b2RevoluteJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=1;
 __ZN6b2Vec23SetEff($2,0.0,0.0);
 __ZN6b2Vec23SetEff($3,0.0,0.0);
 $5=(($this+36)|0);
 HEAPF32[(($5)>>2)]=0.0;
 $6=(($this+44)|0);
 HEAPF32[(($6)>>2)]=0.0;
 $7=(($this+48)|0);
 HEAPF32[(($7)>>2)]=0.0;
 $8=(($this+60)|0);
 HEAPF32[(($8)>>2)]=0.0;
 $9=(($this+56)|0);
 HEAPF32[(($9)>>2)]=0.0;
 $10=(($this+40)|0);
 HEAP8[($10)]=0;
 $11=(($this+52)|0);
 HEAP8[($11)]=0;
 return;
}


function __ZN15b2WheelJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this+36)|0);
 $5=(($this)|0);
 HEAP32[(($5)>>2)]=7;
 __ZN6b2Vec27SetZeroEv($2);
 __ZN6b2Vec27SetZeroEv($3);
 __ZN6b2Vec23SetEff($4,1.0,0.0);
 $6=(($this+44)|0);
 HEAP8[($6)]=0;
 $7=(($this+48)|0);
 HEAPF32[(($7)>>2)]=0.0;
 $8=(($this+52)|0);
 HEAPF32[(($8)>>2)]=0.0;
 $9=(($this+56)|0);
 HEAPF32[(($9)>>2)]=2.0;
 $10=(($this+60)|0);
 HEAPF32[(($10)>>2)]=0.699999988079071;
 return;
}


function __ZN19b2PrismaticJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this+36)|0);
 $5=(($this)|0);
 HEAP32[(($5)>>2)]=2;
 __ZN6b2Vec27SetZeroEv($2);
 __ZN6b2Vec27SetZeroEv($3);
 __ZN6b2Vec23SetEff($4,1.0,0.0);
 $6=(($this+44)|0);
 HEAPF32[(($6)>>2)]=0.0;
 $7=(($this+48)|0);
 HEAP8[($7)]=0;
 $8=(($this+52)|0);
 HEAPF32[(($8)>>2)]=0.0;
 $9=(($this+56)|0);
 HEAPF32[(($9)>>2)]=0.0;
 $10=(($this+60)|0);
 HEAP8[($10)]=0;
 $11=(($this+64)|0);
 HEAPF32[(($11)>>2)]=0.0;
 $12=(($this+68)|0);
 HEAPF32[(($12)>>2)]=0.0;
 return;
}


function __ZN9b2BodyDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,label=0;

 $1=(($this+4)|0);
 $2=(($this+16)|0);
 $3=(($this+44)|0);
 HEAP32[(($3)>>2)]=0;
 __ZN6b2Vec23SetEff($1,0.0,0.0);
 $4=(($this+12)|0);
 HEAPF32[(($4)>>2)]=0.0;
 __ZN6b2Vec23SetEff($2,0.0,0.0);
 $5=(($this+24)|0);
 HEAPF32[(($5)>>2)]=0.0;
 $6=(($this+28)|0);
 HEAPF32[(($6)>>2)]=0.0;
 $7=(($this+32)|0);
 HEAPF32[(($7)>>2)]=0.0;
 $8=(($this+36)|0);
 HEAP8[($8)]=1;
 $9=(($this+37)|0);
 HEAP8[($9)]=1;
 $10=(($this+38)|0);
 HEAP8[($10)]=0;
 $11=(($this+39)|0);
 HEAP8[($11)]=0;
 $12=(($this)|0);
 HEAP32[(($12)>>2)]=0;
 $13=(($this+40)|0);
 HEAP8[($13)]=1;
 $14=(($this+48)|0);
 HEAPF32[(($14)>>2)]=1.0;
 return;
}


function __ZN18b2FrictionJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=9;
 __ZN6b2Vec27SetZeroEv($2);
 __ZN6b2Vec27SetZeroEv($3);
 $5=(($this+36)|0);
 HEAPF32[(($5)>>2)]=0.0;
 $6=(($this+40)|0);
 HEAPF32[(($6)>>2)]=0.0;
 return;
}


function __ZN14b2RopeJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=10;
 __ZN6b2Vec23SetEff($2,-1.0,0.0);
 __ZN6b2Vec23SetEff($3,1.0,0.0);
 $5=(($this+36)|0);
 HEAPF32[(($5)>>2)]=0.0;
 return;
}


function __ZN21b2DestructionListenerC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=13688;
 return;
}


function __ZN21b2DestructionListenerD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN21b2DestructionListenerD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN21b2DestructionListener10SayGoodbyeEP7b2Joint($this,$joint){
 $this=($this)|0;
 $joint=($joint)|0;
 var label=0;

 return;
}


function __ZN21b2DestructionListener10SayGoodbyeEP9b2Fixture($this,$fixture){
 $this=($this)|0;
 $fixture=($fixture)|0;
 var label=0;

 return;
}


function __ZN15b2QueryCallbackC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=13936;
 return;
}


function __ZN15b2QueryCallbackD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN15b2QueryCallbackD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN15b2QueryCallback13ReportFixtureEP9b2Fixture($this,$fixture){
 $this=($this)|0;
 $fixture=($fixture)|0;
 var label=0;

 return ((0)|0);
}


function __ZN17b2ContactListenerC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=13752;
 return;
}


function __ZN17b2RayCastCallbackC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=13720;
 return;
}


function __ZN17b2RayCastCallbackD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN17b2RayCastCallbackD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN17b2RayCastCallback13ReportFixtureEP9b2FixtureRK6b2Vec2S4_f($this,$fixture,$point,$normal,$fraction){
 $this=($this)|0;
 $fixture=($fixture)|0;
 $point=($point)|0;
 $normal=($normal)|0;
 $fraction=+($fraction);
 var label=0;

 return 0.0;
}


function __ZNSt9type_infoD2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN10__cxxabiv116__shim_type_infoD2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZNSt9type_infoD2Ev($1);
 return;
}


function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN10__cxxabiv117__class_type_infoD0Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZNSt9type_infoD2Ev($1);
 $2=$this;
 __ZdlPv($2);
 return;
}


function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZNSt9type_infoD2Ev($1);
 $2=$this;
 __ZdlPv($2);
 return;
}


function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr){
 $this=($this)|0;
 $thrown_type=($thrown_type)|0;
 $adjustedPtr=($adjustedPtr)|0;
 var $info=0,$1=0,$2=0,$3=0,$5=0,$7=0,$8=0,$9=0,$10=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$26=0,$27=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $info=((sp)|0);
 $1=(($this)|0);
 $2=(($thrown_type)|0);
 $3=($1|0)==($2|0);
 if ($3) {
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
 $5=($thrown_type|0)==0;
 if ($5) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $7=$thrown_type;
 $8=((___dynamic_cast($7,15544,15528,-1))|0);
 $9=$8;
 $10=($8|0)==0;
 if ($10) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=$info;
 _memset((((($12)|0))|0), ((((0)|0))|0), ((((56)|0))|0))|0;
 $13=(($info)|0);
 HEAP32[(($13)>>2)]=$9;
 $14=(($info+8)|0);
 HEAP32[(($14)>>2)]=$this;
 $15=(($info+12)|0);
 HEAP32[(($15)>>2)]=-1;
 $16=(($info+48)|0);
 HEAP32[(($16)>>2)]=1;
 $17=$8;
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($18+28)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=((HEAP32[(($adjustedPtr)>>2)])|0);
 FUNCTION_TABLE_viiii[($20)&127]($9,$info,$21,1);
 $22=(($info+24)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=($23|0)==1;
 if (!($24)) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $26=(($info+16)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 HEAP32[(($adjustedPtr)>>2)]=$27;
 $_0=1;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below){
 $this=($this)|0;
 $info=($info)|0;
 $adjustedPtr=($adjustedPtr)|0;
 $path_below=($path_below)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$10=0,$12=0,$14=0,$15=0,$16=0,$19=0,$20=0,$21=0,$22=0,$23=0,label=0;

 $1=(($info+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==($this|0);
 if (!($3)) {
  return;
 }
 $5=(($info+16)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)==0;
 if ($7) {
  HEAP32[(($5)>>2)]=$adjustedPtr;
  $9=(($info+24)|0);
  HEAP32[(($9)>>2)]=$path_below;
  $10=(($info+36)|0);
  HEAP32[(($10)>>2)]=1;
  return;
 }
 $12=($6|0)==($adjustedPtr|0);
 if (!($12)) {
  $19=(($info+36)|0);
  $20=((HEAP32[(($19)>>2)])|0);
  $21=((($20)+(1))|0);
  HEAP32[(($19)>>2)]=$21;
  $22=(($info+24)|0);
  HEAP32[(($22)>>2)]=2;
  $23=(($info+54)|0);
  HEAP8[($23)]=1;
  return;
 }
 $14=(($info+24)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=($15|0)==2;
 if (!($16)) {
  return;
 }
 HEAP32[(($14)>>2)]=$path_below;
 return;
}


function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below){
 $this=($this)|0;
 $info=($info)|0;
 $adjustedPtr=($adjustedPtr)|0;
 $path_below=($path_below)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$11=0,$12=0,$14=0,$16=0,$17=0,$18=0,$21=0,$22=0,$23=0,$24=0,$25=0,$27=0;
 var $28=0,$29=0,$30=0,$31=0,$32=0,label=0;

 $1=(($this)|0);
 $2=(($info+8)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3)|0);
 $5=($1|0)==($4|0);
 if (!($5)) {
  $27=(($this+8)|0);
  $28=((HEAP32[(($27)>>2)])|0);
  $29=$28;
  $30=((HEAP32[(($29)>>2)])|0);
  $31=(($30+28)|0);
  $32=((HEAP32[(($31)>>2)])|0);
  FUNCTION_TABLE_viiii[($32)&127]($28,$info,$adjustedPtr,$path_below);
  return;
 }
 $7=(($info+16)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($8|0)==0;
 if ($9) {
  HEAP32[(($7)>>2)]=$adjustedPtr;
  $11=(($info+24)|0);
  HEAP32[(($11)>>2)]=$path_below;
  $12=(($info+36)|0);
  HEAP32[(($12)>>2)]=1;
  return;
 }
 $14=($8|0)==($adjustedPtr|0);
 if (!($14)) {
  $21=(($info+36)|0);
  $22=((HEAP32[(($21)>>2)])|0);
  $23=((($22)+(1))|0);
  HEAP32[(($21)>>2)]=$23;
  $24=(($info+24)|0);
  HEAP32[(($24)>>2)]=2;
  $25=(($info+54)|0);
  HEAP8[($25)]=1;
  return;
 }
 $16=(($info+24)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=($17|0)==2;
 if (!($18)) {
  return;
 }
 HEAP32[(($16)>>2)]=$path_below;
 return;
}


function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset){
 $static_ptr=($static_ptr)|0;
 $static_type=($static_type)|0;
 $dst_type=($dst_type)|0;
 $src2dst_offset=($src2dst_offset)|0;
 var $info=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0;
 var $20=0,$21=0,$22=0,$23=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$_=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$40=0,$41=0;
 var $43=0,$44=0,$46=0,$47=0,$48=0,$_13=0,$50=0,$51=0,$53=0,$54=0,$56=0,$57=0,$59=0,$60=0,$62=0,$dst_ptr_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $info=((sp)|0);
 $1=$static_ptr;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)-(8))|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=$4;
 $6=(($static_ptr+$5)|0);
 $7=((($2)-(4))|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=$8;
 $10=(($info)|0);
 HEAP32[(($10)>>2)]=$dst_type;
 $11=(($info+4)|0);
 HEAP32[(($11)>>2)]=$static_ptr;
 $12=(($info+8)|0);
 HEAP32[(($12)>>2)]=$static_type;
 $13=(($info+12)|0);
 HEAP32[(($13)>>2)]=$src2dst_offset;
 $14=(($info+16)|0);
 $15=(($info+20)|0);
 $16=(($info+24)|0);
 $17=(($info+28)|0);
 $18=(($info+32)|0);
 $19=(($info+40)|0);
 $20=$8;
 $21=(($dst_type)|0);
 $22=($20|0)==($21|0);
 $23=$14;
 _memset((((($23)|0))|0), ((((0)|0))|0), ((((39)|0))|0))|0;
 if ($22) {
  $25=(($info+48)|0);
  HEAP32[(($25)>>2)]=1;
  $26=$8;
  $27=((HEAP32[(($26)>>2)])|0);
  $28=(($27+20)|0);
  $29=((HEAP32[(($28)>>2)])|0);
  FUNCTION_TABLE_viiiiii[($29)&63]($9,$info,$6,$6,1,0);
  $30=((HEAP32[(($16)>>2)])|0);
  $31=($30|0)==1;
  $_=($31?$6:0);
  STACKTOP=sp;return (($_)|0);
 }
 $33=(($info+36)|0);
 $34=$8;
 $35=((HEAP32[(($34)>>2)])|0);
 $36=(($35+24)|0);
 $37=((HEAP32[(($36)>>2)])|0);
 FUNCTION_TABLE_viiiii[($37)&63]($9,$info,$6,1,0);
 $38=((HEAP32[(($33)>>2)])|0);
 if (((($38|0))|0)==((0)|0)) {
  $40=((HEAP32[(($19)>>2)])|0);
  $41=($40|0)==1;
  if (!($41)) {
   $dst_ptr_0=0;

   STACKTOP=sp;return (($dst_ptr_0)|0);
  }
  $43=((HEAP32[(($17)>>2)])|0);
  $44=($43|0)==1;
  if (!($44)) {
   $dst_ptr_0=0;

   STACKTOP=sp;return (($dst_ptr_0)|0);
  }
  $46=((HEAP32[(($18)>>2)])|0);
  $47=($46|0)==1;
  $48=((HEAP32[(($15)>>2)])|0);
  $_13=($47?$48:0);
  $dst_ptr_0=$_13;

  STACKTOP=sp;return (($dst_ptr_0)|0);
 } else if (((($38|0))|0)==((1)|0)) {
  $50=((HEAP32[(($16)>>2)])|0);
  $51=($50|0)==1;
  do {
   if (!($51)) {
    $53=((HEAP32[(($19)>>2)])|0);
    $54=($53|0)==0;
    if (!($54)) {
     $dst_ptr_0=0;

     STACKTOP=sp;return (($dst_ptr_0)|0);
    }
    $56=((HEAP32[(($17)>>2)])|0);
    $57=($56|0)==1;
    if (!($57)) {
     $dst_ptr_0=0;

     STACKTOP=sp;return (($dst_ptr_0)|0);
    }
    $59=((HEAP32[(($18)>>2)])|0);
    $60=($59|0)==1;
    if ($60) {
     break;
    } else {
     $dst_ptr_0=0;
    }

    STACKTOP=sp;return (($dst_ptr_0)|0);
   }
  } while(0);
  $62=((HEAP32[(($14)>>2)])|0);
  $dst_ptr_0=$62;

  STACKTOP=sp;return (($dst_ptr_0)|0);
 } else {
  $dst_ptr_0=0;

  STACKTOP=sp;return (($dst_ptr_0)|0);
 }
  return 0;
}


function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp){
 $this=($this)|0;
 $info=($info)|0;
 $current_ptr=($current_ptr)|0;
 $path_below=($path_below)|0;
 $use_strcmp=($use_strcmp)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$16=0,$17=0,$18=0,$19=0,$21=0,$22=0,$23=0,$25=0,$26=0;
 var $27=0,$29=0,$31=0,$33=0,$34=0,$35=0,$36=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$49=0,$not_=0,$is_dst_type_derived_from_static_type_0_off036=0;
 var $50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$57=0,$58=0,$59=0,$61=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0,label=0;

 $1=(($this)|0);
 $2=(($info+8)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3)|0);
 $5=($1|0)==($4|0);
 if ($5) {
  $7=(($info+4)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=($8|0)==($current_ptr|0);
  if (!($9)) {
   return;
  }
  $11=(($info+28)|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=($12|0)==1;
  if ($13) {
   return;
  }
  HEAP32[(($11)>>2)]=$path_below;
  return;
 }
 $16=(($info)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=(($17)|0);
 $19=($1|0)==($18|0);
 if (!($19)) {
  $65=(($this+8)|0);
  $66=((HEAP32[(($65)>>2)])|0);
  $67=$66;
  $68=((HEAP32[(($67)>>2)])|0);
  $69=(($68+24)|0);
  $70=((HEAP32[(($69)>>2)])|0);
  FUNCTION_TABLE_viiiii[($70)&63]($66,$info,$current_ptr,$path_below,$use_strcmp);
  return;
 }
 $21=(($info+16)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=($22|0)==($current_ptr|0);
 do {
  if (!($23)) {
   $25=(($info+20)|0);
   $26=((HEAP32[(($25)>>2)])|0);
   $27=($26|0)==($current_ptr|0);
   if ($27) {
    break;
   }
   $33=(($info+32)|0);
   HEAP32[(($33)>>2)]=$path_below;
   $34=(($info+44)|0);
   $35=((HEAP32[(($34)>>2)])|0);
   $36=($35|0)==4;
   if ($36) {
    return;
   }
   $38=(($info+52)|0);
   HEAP8[($38)]=0;
   $39=(($info+53)|0);
   HEAP8[($39)]=0;
   $40=(($this+8)|0);
   $41=((HEAP32[(($40)>>2)])|0);
   $42=$41;
   $43=((HEAP32[(($42)>>2)])|0);
   $44=(($43+20)|0);
   $45=((HEAP32[(($44)>>2)])|0);
   FUNCTION_TABLE_viiiiii[($45)&63]($41,$info,$current_ptr,$current_ptr,1,$use_strcmp);
   $46=((HEAP8[($39)])|0);
   $47=(($46<<24)>>24)==0;
   if ($47) {
    $is_dst_type_derived_from_static_type_0_off036=0;
    label = 13;
   } else {
    $49=((HEAP8[($38)])|0);
    $not_=(($49<<24)>>24)==0;
    if ($not_) {
     $is_dst_type_derived_from_static_type_0_off036=1;
     label = 13;
    }
   }
   L23: do {
    if ((label|0) == 13) {

     HEAP32[(($25)>>2)]=$current_ptr;
     $50=(($info+40)|0);
     $51=((HEAP32[(($50)>>2)])|0);
     $52=((($51)+(1))|0);
     HEAP32[(($50)>>2)]=$52;
     $53=(($info+36)|0);
     $54=((HEAP32[(($53)>>2)])|0);
     $55=($54|0)==1;
     do {
      if ($55) {
       $57=(($info+24)|0);
       $58=((HEAP32[(($57)>>2)])|0);
       $59=($58|0)==2;
       if (!($59)) {
        label = 16;
        break;
       }
       $61=(($info+54)|0);
       HEAP8[($61)]=1;
       if ($is_dst_type_derived_from_static_type_0_off036) {
        break L23;
       }
      } else {
       label = 16;
      }
     } while(0);
     if ((label|0) == 16) {
      if ($is_dst_type_derived_from_static_type_0_off036) {
       break;
      }
     }
     HEAP32[(($34)>>2)]=4;
     return;
    }
   } while(0);
   HEAP32[(($34)>>2)]=3;
   return;
  }
 } while(0);
 $29=($path_below|0)==1;
 if (!($29)) {
  return;
 }
 $31=(($info+32)|0);
 HEAP32[(($31)>>2)]=1;
 return;
}


function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp){
 $this=($this)|0;
 $info=($info)|0;
 $current_ptr=($current_ptr)|0;
 $path_below=($path_below)|0;
 $use_strcmp=($use_strcmp)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$14=0,$15=0,$16=0,$18=0,$19=0,$20=0,$22=0,$23=0,$24=0,$26=0,$28=0;
 var $30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$38=0,$39=0,$40=0,$42=0,$44=0,label=0;

 $1=(($info+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==($this|0);
 if ($3) {
  $5=(($info+4)|0);
  $6=((HEAP32[(($5)>>2)])|0);
  $7=($6|0)==($current_ptr|0);
  if (!($7)) {
   return;
  }
  $9=(($info+28)|0);
  $10=((HEAP32[(($9)>>2)])|0);
  $11=($10|0)==1;
  if ($11) {
   return;
  }
  HEAP32[(($9)>>2)]=$path_below;
  return;
 }
 $14=(($info)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=($15|0)==($this|0);
 if (!($16)) {
  return;
 }
 $18=(($info+16)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=($19|0)==($current_ptr|0);
 do {
  if (!($20)) {
   $22=(($info+20)|0);
   $23=((HEAP32[(($22)>>2)])|0);
   $24=($23|0)==($current_ptr|0);
   if ($24) {
    break;
   }
   $30=(($info+32)|0);
   HEAP32[(($30)>>2)]=$path_below;
   HEAP32[(($22)>>2)]=$current_ptr;
   $31=(($info+40)|0);
   $32=((HEAP32[(($31)>>2)])|0);
   $33=((($32)+(1))|0);
   HEAP32[(($31)>>2)]=$33;
   $34=(($info+36)|0);
   $35=((HEAP32[(($34)>>2)])|0);
   $36=($35|0)==1;
   do {
    if ($36) {
     $38=(($info+24)|0);
     $39=((HEAP32[(($38)>>2)])|0);
     $40=($39|0)==2;
     if (!($40)) {
      break;
     }
     $42=(($info+54)|0);
     HEAP8[($42)]=1;
    }
   } while(0);
   $44=(($info+44)|0);
   HEAP32[(($44)>>2)]=4;
   return;
  }
 } while(0);
 $26=($path_below|0)==1;
 if (!($26)) {
  return;
 }
 $28=(($info+32)|0);
 HEAP32[(($28)>>2)]=1;
 return;
}


function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp){
 $this=($this)|0;
 $info=($info)|0;
 $dst_ptr=($dst_ptr)|0;
 $current_ptr=($current_ptr)|0;
 $path_below=($path_below)|0;
 $use_strcmp=($use_strcmp)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$or_cond_i=0;
 var $24=0,$26=0,$28=0,$29=0,$30=0,$33=0,$34=0,$35=0,$36=0,$37=0,$or_cond23_i=0,$39=0,$41=0,$42=0,$43=0,$44=0,$46=0,$47=0,$48=0,$49=0;
 var $50=0,$51=0,label=0;

 $1=(($this)|0);
 $2=(($info+8)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3)|0);
 $5=($1|0)==($4|0);
 if (!($5)) {
  $46=(($this+8)|0);
  $47=((HEAP32[(($46)>>2)])|0);
  $48=$47;
  $49=((HEAP32[(($48)>>2)])|0);
  $50=(($49+20)|0);
  $51=((HEAP32[(($50)>>2)])|0);
  FUNCTION_TABLE_viiiiii[($51)&63]($47,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  return;
 }
 $7=(($info+53)|0);
 HEAP8[($7)]=1;
 $8=(($info+4)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=($9|0)==($current_ptr|0);
 if (!($10)) {
  return;
 }
 $12=(($info+52)|0);
 HEAP8[($12)]=1;
 $13=(($info+16)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=($14|0)==0;
 if ($15) {
  HEAP32[(($13)>>2)]=$dst_ptr;
  $17=(($info+24)|0);
  HEAP32[(($17)>>2)]=$path_below;
  $18=(($info+36)|0);
  HEAP32[(($18)>>2)]=1;
  $19=(($info+48)|0);
  $20=((HEAP32[(($19)>>2)])|0);
  $21=($20|0)==1;
  $22=($path_below|0)==1;
  $or_cond_i=$21&$22;
  if (!($or_cond_i)) {
   return;
  }
  $24=(($info+54)|0);
  HEAP8[($24)]=1;
  return;
 }
 $26=($14|0)==($dst_ptr|0);
 if (!($26)) {
  $41=(($info+36)|0);
  $42=((HEAP32[(($41)>>2)])|0);
  $43=((($42)+(1))|0);
  HEAP32[(($41)>>2)]=$43;
  $44=(($info+54)|0);
  HEAP8[($44)]=1;
  return;
 }
 $28=(($info+24)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=($29|0)==2;
 if ($30) {
  HEAP32[(($28)>>2)]=$path_below;
  $33=$path_below;
 } else {
  $33=$29;
 }

 $34=(($info+48)|0);
 $35=((HEAP32[(($34)>>2)])|0);
 $36=($35|0)==1;
 $37=($33|0)==1;
 $or_cond23_i=$36&$37;
 if (!($or_cond23_i)) {
  return;
 }
 $39=(($info+54)|0);
 HEAP8[($39)]=1;
 return;
}


function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp){
 $this=($this)|0;
 $info=($info)|0;
 $dst_ptr=($dst_ptr)|0;
 $current_ptr=($current_ptr)|0;
 $path_below=($path_below)|0;
 $use_strcmp=($use_strcmp)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$10=0,$11=0,$12=0,$13=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$or_cond_i=0,$22=0,$24=0;
 var $26=0,$27=0,$28=0,$31=0,$32=0,$33=0,$34=0,$35=0,$or_cond23_i=0,$37=0,$39=0,$40=0,$41=0,$42=0,label=0;

 $1=(($info+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==($this|0);
 if (!($3)) {
  return;
 }
 $5=(($info+53)|0);
 HEAP8[($5)]=1;
 $6=(($info+4)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)==($current_ptr|0);
 if (!($8)) {
  return;
 }
 $10=(($info+52)|0);
 HEAP8[($10)]=1;
 $11=(($info+16)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=($12|0)==0;
 if ($13) {
  HEAP32[(($11)>>2)]=$dst_ptr;
  $15=(($info+24)|0);
  HEAP32[(($15)>>2)]=$path_below;
  $16=(($info+36)|0);
  HEAP32[(($16)>>2)]=1;
  $17=(($info+48)|0);
  $18=((HEAP32[(($17)>>2)])|0);
  $19=($18|0)==1;
  $20=($path_below|0)==1;
  $or_cond_i=$19&$20;
  if (!($or_cond_i)) {
   return;
  }
  $22=(($info+54)|0);
  HEAP8[($22)]=1;
  return;
 }
 $24=($12|0)==($dst_ptr|0);
 if (!($24)) {
  $39=(($info+36)|0);
  $40=((HEAP32[(($39)>>2)])|0);
  $41=((($40)+(1))|0);
  HEAP32[(($39)>>2)]=$41;
  $42=(($info+54)|0);
  HEAP8[($42)]=1;
  return;
 }
 $26=(($info+24)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=($27|0)==2;
 if ($28) {
  HEAP32[(($26)>>2)]=$path_below;
  $31=$path_below;
 } else {
  $31=$27;
 }

 $32=(($info+48)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=($33|0)==1;
 $35=($31|0)==1;
 $or_cond23_i=$34&$35;
 if (!($or_cond23_i)) {
  return;
 }
 $37=(($info+54)|0);
 HEAP8[($37)]=1;
 return;
}



function _malloc($bytes){
 $bytes=($bytes)|0;
 var $1=0,$3=0,$5=0,$6=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$_sum111=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$27=0,$28=0,$29=0,$31=0,$32=0,$33=0,$35=0,$36=0,$37=0,$40=0,$41=0,$42=0,$43=0,$_sum113114=0,$44=0,$45=0,$46=0,$47=0;
 var $48=0,$50=0,$51=0,$53=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0;
 var $71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$_sum104=0,$86=0,$87=0,$88=0,$89=0;
 var $90=0,$92=0,$93=0,$94=0,$96=0,$97=0,$98=0,$100=0,$101=0,$102=0,$105=0,$106=0,$107=0,$108=0,$109=0,$110=0,$111=0,$112=0,$_sum106107=0,$113=0;
 var $114=0,$115=0,$116=0,$117=0,$118=0,$120=0,$121=0,$122=0,$123=0,$124=0,$125=0,$126=0,$127=0,$128=0,$130=0,$_sum109_pre=0,$_pre=0,$_sum110=0,$132=0,$133=0;
 var $134=0,$135=0,$136=0,$_pre_phi=0,$F4_0=0,$139=0,$140=0,$141=0,$143=0,$145=0,$146=0,$148=0,$149=0,$150=0,$151=0,$152=0,$153=0,$154=0,$155=0,$156=0;
 var $157=0,$158=0,$159=0,$160=0,$161=0,$162=0,$163=0,$164=0,$165=0,$166=0,$167=0,$168=0,$169=0,$170=0,$171=0,$172=0,$173=0,$174=0,$175=0,$176=0;
 var $rsize_0_i=0,$v_0_i=0,$t_0_i=0,$178=0,$179=0,$180=0,$182=0,$183=0,$184=0,$185=0,$186=0,$187=0,$188=0,$189=0,$190=0,$_rsize_0_i=0,$_v_0_i=0,$192=0,$193=0,$194=0;
 var $196=0,$197=0,$198=0,$200=0,$201=0,$202=0,$203=0,$204=0,$206=0,$207=0,$208=0,$209=0,$211=0,$212=0,$213=0,$215=0,$216=0,$217=0,$220=0,$221=0;
 var $222=0,$224=0,$225=0,$226=0,$RP_0_i=0,$R_0_i=0,$227=0,$228=0,$229=0,$231=0,$232=0,$233=0,$235=0,$236=0,$R_1_i=0,$240=0,$242=0,$243=0,$244=0,$245=0;
 var $246=0,$cond_i=0,$248=0,$249=0,$250=0,$251=0,$253=0,$254=0,$255=0,$257=0,$258=0,$259=0,$262=0,$265=0,$267=0,$268=0,$269=0,$271=0,$272=0,$273=0;
 var $274=0,$276=0,$277=0,$278=0,$280=0,$281=0,$284=0,$285=0,$286=0,$288=0,$289=0,$290=0,$292=0,$293=0,$297=0,$299=0,$300=0,$301=0,$_sum4_i=0,$302=0;
 var $303=0,$304=0,$305=0,$307=0,$308=0,$309=0,$_sum_i137=0,$310=0,$311=0,$_sum1_i=0,$312=0,$313=0,$314=0,$315=0,$317=0,$318=0,$319=0,$320=0,$321=0,$322=0;
 var $323=0,$324=0,$325=0,$327=0,$_sum2_pre_i=0,$_pre_i=0,$_sum3_i=0,$329=0,$330=0,$331=0,$332=0,$333=0,$_pre_phi_i=0,$F1_0_i=0,$336=0,$337=0,$338=0,$341=0,$342=0,$343=0;
 var $345=0,$347=0,$348=0,$349=0,$350=0,$352=0,$353=0,$354=0,$356=0,$358=0,$359=0,$360=0,$361=0,$362=0,$363=0,$364=0,$365=0,$366=0,$367=0,$368=0;
 var $369=0,$370=0,$371=0,$372=0,$373=0,$374=0,$375=0,$376=0,$377=0,$378=0,$379=0,$idx_0_i=0,$381=0,$382=0,$383=0,$385=0,$387=0,$388=0,$390=0,$391=0;
 var $rst_0_i=0,$sizebits_0_i=0,$t_0_i116=0,$rsize_0_i117=0,$v_0_i118=0,$393=0,$394=0,$395=0,$396=0,$397=0,$399=0,$rsize_1_i=0,$v_1_i=0,$401=0,$402=0,$403=0,$404=0,$405=0,$406=0,$407=0;
 var $or_cond_i=0,$rst_1_i=0,$408=0,$409=0,$t_1_i=0,$rsize_2_i=0,$v_2_i=0,$410=0,$411=0,$or_cond21_i=0,$413=0,$414=0,$415=0,$416=0,$417=0,$419=0,$420=0,$421=0,$422=0,$423=0;
 var $424=0,$425=0,$426=0,$427=0,$428=0,$429=0,$430=0,$431=0,$432=0,$433=0,$434=0,$435=0,$436=0,$437=0,$438=0,$439=0,$440=0,$441=0,$442=0,$443=0;
 var $t_2_ph_i=0,$444=0,$v_330_i=0,$rsize_329_i=0,$t_228_i=0,$445=0,$446=0,$447=0,$448=0,$449=0,$_rsize_3_i=0,$t_2_v_3_i=0,$450=0,$451=0,$452=0,$453=0,$454=0,$455=0,$v_3_lcssa_i=0,$rsize_3_lcssa_i=0;
 var $456=0,$458=0,$459=0,$460=0,$462=0,$463=0,$464=0,$466=0,$467=0,$468=0,$470=0,$471=0,$472=0,$473=0,$474=0,$476=0,$477=0,$478=0,$479=0,$481=0;
 var $482=0,$483=0,$485=0,$486=0,$487=0,$490=0,$491=0,$492=0,$494=0,$495=0,$496=0,$RP_0_i119=0,$R_0_i120=0,$497=0,$498=0,$499=0,$501=0,$502=0,$503=0,$505=0;
 var $506=0,$R_1_i122=0,$510=0,$512=0,$513=0,$514=0,$515=0,$516=0,$cond_i123=0,$518=0,$519=0,$520=0,$521=0,$523=0,$524=0,$525=0,$527=0,$528=0,$529=0,$532=0;
 var $535=0,$537=0,$538=0,$539=0,$541=0,$542=0,$543=0,$544=0,$546=0,$547=0,$548=0,$550=0,$551=0,$554=0,$555=0,$556=0,$558=0,$559=0,$560=0,$562=0;
 var $563=0,$567=0,$569=0,$570=0,$571=0,$_sum19_i=0,$572=0,$573=0,$574=0,$575=0,$577=0,$578=0,$579=0,$_sum_i125136=0,$580=0,$581=0,$_sum1_i126=0,$582=0,$583=0,$584=0;
 var $585=0,$587=0,$588=0,$589=0,$590=0,$591=0,$592=0,$593=0,$595=0,$_sum15_pre_i=0,$_pre_i127=0,$_sum18_i=0,$597=0,$598=0,$599=0,$600=0,$601=0,$_pre_phi_i128=0,$F5_0_i=0,$604=0;
 var $_sum16_i=0,$605=0,$606=0,$_sum17_i=0,$607=0,$608=0,$610=0,$611=0,$612=0,$614=0,$616=0,$617=0,$618=0,$619=0,$620=0,$621=0,$622=0,$623=0,$624=0,$625=0;
 var $626=0,$627=0,$628=0,$629=0,$630=0,$631=0,$632=0,$633=0,$634=0,$635=0,$636=0,$637=0,$I7_0_i=0,$639=0,$_sum2_i=0,$640=0,$641=0,$_sum3_i129=0,$642=0,$_sum4_i130=0;
 var $643=0,$644=0,$645=0,$646=0,$647=0,$648=0,$649=0,$651=0,$652=0,$_sum5_i=0,$653=0,$654=0,$_sum6_i=0,$655=0,$656=0,$_sum7_i=0,$657=0,$658=0,$660=0,$661=0;
 var $663=0,$664=0,$666=0,$667=0,$T_0_i=0,$K12_0_i=0,$669=0,$670=0,$671=0,$672=0,$674=0,$675=0,$676=0,$677=0,$678=0,$680=0,$681=0,$682=0,$_sum12_i=0,$684=0;
 var $685=0,$_sum13_i=0,$686=0,$687=0,$_sum14_i=0,$688=0,$689=0,$692=0,$693=0,$694=0,$695=0,$696=0,$698=0,$699=0,$701=0,$_sum9_i=0,$702=0,$703=0,$_sum10_i=0,$704=0;
 var $705=0,$_sum11_i=0,$706=0,$707=0,$709=0,$710=0,$711=0,$nb_0=0,$712=0,$713=0,$715=0,$716=0,$717=0,$719=0,$720=0,$721=0,$722=0,$_sum102=0,$723=0,$724=0;
 var $725=0,$726=0,$727=0,$728=0,$730=0,$731=0,$732=0,$_sum101=0,$733=0,$734=0,$735=0,$736=0,$738=0,$739=0,$741=0,$742=0,$744=0,$745=0,$746=0,$747=0;
 var $748=0,$749=0,$_sum=0,$750=0,$751=0,$752=0,$753=0,$754=0,$755=0,$757=0,$758=0,$760=0,$761=0,$762=0,$763=0,$765=0,$766=0,$767=0,$769=0,$770=0;
 var $771=0,$772=0,$773=0,$774=0,$775=0,$777=0,$778=0,$780=0,$781=0,$782=0,$783=0,$or_cond1_i=0,$785=0,$786=0,$787=0,$789=0,$790=0,$792=0,$sp_0_i_i=0,$794=0;
 var $795=0,$796=0,$798=0,$799=0,$800=0,$801=0,$803=0,$804=0,$805=0,$806=0,$807=0,$808=0,$810=0,$811=0,$812=0,$813=0,$814=0,$816=0,$817=0,$818=0;
 var $819=0,$820=0,$ssize_0_i=0,$822=0,$823=0,$824=0,$825=0,$or_cond_i131=0,$827=0,$828=0,$830=0,$831=0,$or_cond2_i=0,$833=0,$834=0,$ssize_0__i=0,$__i=0,$836=0,$837=0,$838=0;
 var $839=0,$841=0,$842=0,$843=0,$844=0,$845=0,$_3_i=0,$_4_i=0,$ssize_1_i=0,$br_0_i=0,$tsize_0_i=0,$tbase_0_i=0,$847=0,$848=0,$850=0,$851=0,$or_cond5_i=0,$852=0,$or_cond6_i=0,$854=0;
 var $855=0,$856=0,$857=0,$858=0,$859=0,$861=0,$862=0,$864=0,$866=0,$ssize_2_i=0,$868=0,$tsize_0303639_i=0,$869=0,$870=0,$tsize_1_i=0,$872=0,$874=0,$875=0,$notlhs_i=0,$notrhs_i=0;
 var $or_cond8_not_i=0,$876=0,$or_cond9_i=0,$877=0,$878=0,$879=0,$880=0,$881=0,$_tsize_1_i=0,$_tbase_1_i=0,$882=0,$tbase_245_i=0,$tsize_244_i=0,$883=0,$884=0,$885=0,$886=0,$888=0,$889=0,$891=0;
 var $892=0,$893=0,$or_cond10_i=0,$895=0,$i_02_i_i=0,$897=0,$898=0,$899=0,$_sum_i_i=0,$900=0,$_sum1_i_i=0,$901=0,$902=0,$903=0,$904=0,$905=0,$906=0,$907=0,$908=0,$910=0;
 var $911=0,$912=0,$913=0,$914=0,$915=0,$916=0,$_sum_i14_i=0,$917=0,$918=0,$_sum2_i_i=0,$919=0,$920=0,$921=0,$sp_067_i=0,$922=0,$923=0,$924=0,$925=0,$926=0,$927=0;
 var $929=0,$930=0,$931=0,$932=0,$933=0,$934=0,$935=0,$937=0,$938=0,$939=0,$or_cond47_i=0,$941=0,$942=0,$943=0,$944=0,$945=0,$946=0,$947=0,$949=0,$950=0;
 var $951=0,$952=0,$953=0,$954=0,$955=0,$_sum_i18_i=0,$956=0,$957=0,$_sum2_i19_i=0,$958=0,$959=0,$960=0,$961=0,$962=0,$964=0,$sp_160_i=0,$966=0,$967=0,$968=0,$970=0;
 var $971=0,$972=0,$973=0,$974=0,$975=0,$976=0,$978=0,$979=0,$980=0,$981=0,$982=0,$983=0,$984=0,$986=0,$987=0,$989=0,$990=0,$_sum93_i=0,$991=0,$992=0;
 var $993=0,$994=0,$996=0,$997=0,$999=0,$_sum94_i=0,$1000=0,$1001=0,$1002=0,$1003=0,$1004=0,$_sum_i21_i=0,$1005=0,$1006=0,$1007=0,$1008=0,$_sum1_i22_i=0,$1009=0,$1010=0,$1011=0;
 var $1012=0,$1014=0,$1015=0,$1016=0,$_sum46_i_i=0,$1017=0,$1018=0,$1020=0,$1021=0,$1023=0,$1024=0,$1025=0,$_sum44_i_i=0,$1026=0,$1027=0,$_sum45_i_i=0,$1028=0,$1029=0,$_sum2_i23_i=0,$_sum95_i=0;
 var $1031=0,$1032=0,$1033=0,$1034=0,$1035=0,$1037=0,$1038=0,$1039=0,$_sum3940_i_i=0,$_sum105_i=0,$1041=0,$1042=0,$1043=0,$_sum41_i_i=0,$_sum106_i=0,$1044=0,$1045=0,$1046=0,$1047=0,$1048=0;
 var $1049=0,$1050=0,$1052=0,$1053=0,$1054=0,$1056=0,$1057=0,$1058=0,$1059=0,$1061=0,$1062=0,$1063=0,$1064=0,$1066=0,$_pre56_i_i=0,$1068=0,$1069=0,$1070=0,$1072=0,$1073=0;
 var $1074=0,$_pre_phi57_i_i=0,$1075=0,$1077=0,$_sum34_i_i=0,$_sum96_i=0,$1078=0,$1079=0,$1080=0,$_sum5_i_i=0,$_sum97_i=0,$1081=0,$1082=0,$1083=0,$1084=0,$_sum3637_i_i=0,$_sum98_i=0,$1086=0,$1087=0,$1088=0;
 var $1089=0,$1090=0,$1091=0,$1093=0,$1094=0,$1095=0,$1097=0,$1098=0,$1099=0,$_sum67_i_i=0,$_sum103_i=0,$1102=0,$1103=0,$1104=0,$1105=0,$_sum104_i=0,$1107=0,$1108=0,$1109=0,$1110=0;
 var $RP_0_i_i=0,$R_0_i_i=0,$1111=0,$1112=0,$1113=0,$1115=0,$1116=0,$1117=0,$1119=0,$1120=0,$1121=0,$R_1_i_i=0,$1125=0,$_sum31_i_i=0,$_sum99_i=0,$1127=0,$1128=0,$1129=0,$1130=0,$1131=0;
 var $1132=0,$cond_i_i=0,$1134=0,$1135=0,$1136=0,$1137=0,$1139=0,$1140=0,$1141=0,$1143=0,$1144=0,$1145=0,$1148=0,$1151=0,$1153=0,$1154=0,$1155=0,$1157=0,$_sum3233_i_i=0,$_sum100_i=0;
 var $1158=0,$1159=0,$1160=0,$1161=0,$1163=0,$1164=0,$1165=0,$1167=0,$1168=0,$_sum101_i=0,$1171=0,$1172=0,$1173=0,$1174=0,$1176=0,$1177=0,$1178=0,$1180=0,$1181=0,$_sum9_i_i=0;
 var $_sum102_i=0,$1185=0,$1186=0,$1187=0,$qsize_0_i_i=0,$oldfirst_0_i_i=0,$1189=0,$1190=0,$1191=0,$1192=0,$_sum10_i_i=0,$1193=0,$1194=0,$_sum11_i_i=0,$1195=0,$1196=0,$1197=0,$1198=0,$1200=0,$1201=0;
 var $1202=0,$1203=0,$1204=0,$1205=0,$1206=0,$1208=0,$_sum27_pre_i_i=0,$_pre_i24_i=0,$_sum30_i_i=0,$1210=0,$1211=0,$1212=0,$1213=0,$1214=0,$_pre_phi_i25_i=0,$F4_0_i_i=0,$1217=0,$_sum28_i_i=0,$1218=0,$1219=0;
 var $_sum29_i_i=0,$1220=0,$1221=0,$1223=0,$1224=0,$1225=0,$1227=0,$1229=0,$1230=0,$1231=0,$1232=0,$1233=0,$1234=0,$1235=0,$1236=0,$1237=0,$1238=0,$1239=0,$1240=0,$1241=0;
 var $1242=0,$1243=0,$1244=0,$1245=0,$1246=0,$1247=0,$1248=0,$1249=0,$1250=0,$I7_0_i_i=0,$1252=0,$_sum12_i26_i=0,$1253=0,$1254=0,$_sum13_i_i=0,$1255=0,$_sum14_i_i=0,$1256=0,$1257=0,$1258=0;
 var $1259=0,$1260=0,$1261=0,$1262=0,$1264=0,$1265=0,$_sum15_i_i=0,$1266=0,$1267=0,$_sum16_i_i=0,$1268=0,$1269=0,$_sum17_i_i=0,$1270=0,$1271=0,$1273=0,$1274=0,$1276=0,$1277=0,$1279=0;
 var $1280=0,$T_0_i27_i=0,$K8_0_i_i=0,$1282=0,$1283=0,$1284=0,$1285=0,$1287=0,$1288=0,$1289=0,$1290=0,$1291=0,$1293=0,$1294=0,$1295=0,$_sum24_i_i=0,$1297=0,$1298=0,$_sum25_i_i=0,$1299=0;
 var $1300=0,$_sum26_i_i=0,$1301=0,$1302=0,$1305=0,$1306=0,$1307=0,$1308=0,$1309=0,$1311=0,$1312=0,$1314=0,$_sum21_i_i=0,$1315=0,$1316=0,$_sum22_i_i=0,$1317=0,$1318=0,$_sum23_i_i=0,$1319=0;
 var $1320=0,$_sum1819_i_i=0,$1321=0,$1322=0,$sp_0_i_i_i=0,$1324=0,$1325=0,$1326=0,$1328=0,$1329=0,$1330=0,$1331=0,$1333=0,$1334=0,$_sum_i15_i=0,$_sum1_i16_i=0,$1335=0,$1336=0,$1337=0,$1338=0;
 var $1340=0,$1341=0,$1343=0,$_sum2_i17_i=0,$1344=0,$1345=0,$1346=0,$1347=0,$1348=0,$1349=0,$1350=0,$1351=0,$1352=0,$1353=0,$1354=0,$1355=0,$1357=0,$1358=0,$1359=0,$1360=0;
 var $1361=0,$1362=0,$1363=0,$_sum_i_i_i=0,$1364=0,$1365=0,$_sum2_i_i_i=0,$1366=0,$1367=0,$1368=0,$1369=0,$1370=0,$1371=0,$1372=0,$1373=0,$1374=0,$1375=0,$1376=0,$1377=0,$1378=0;
 var $1379=0,$1380=0,$1382=0,$1383=0,$1384=0,$1385=0,$_sum3_i_i=0,$1386=0,$1387=0,$1388=0,$1389=0,$1390=0,$1391=0,$1392=0,$1393=0,$1394=0,$1396=0,$1397=0,$1398=0,$1399=0;
 var $1400=0,$1401=0,$1402=0,$1404=0,$_sum11_pre_i_i=0,$_pre_i_i=0,$_sum12_i_i=0,$1406=0,$1407=0,$1408=0,$1409=0,$1410=0,$_pre_phi_i_i=0,$F_0_i_i=0,$1413=0,$1414=0,$1415=0,$1417=0,$1418=0,$1419=0;
 var $1421=0,$1423=0,$1424=0,$1425=0,$1426=0,$1427=0,$1428=0,$1429=0,$1430=0,$1431=0,$1432=0,$1433=0,$1434=0,$1435=0,$1436=0,$1437=0,$1438=0,$1439=0,$1440=0,$1441=0;
 var $1442=0,$1443=0,$1444=0,$I1_0_i_i=0,$1446=0,$1447=0,$I1_0_c_i_i=0,$1448=0,$1449=0,$1450=0,$1451=0,$1452=0,$1453=0,$1455=0,$1456=0,$_c_i_i=0,$1457=0,$1458=0,$1460=0,$1461=0;
 var $1463=0,$1464=0,$1466=0,$1467=0,$T_0_i_i=0,$K2_0_i_i=0,$1469=0,$1470=0,$1471=0,$1472=0,$1474=0,$1475=0,$1476=0,$1477=0,$1478=0,$1480=0,$1481=0,$1482=0,$1484=0,$T_0_c8_i_i=0;
 var $1485=0,$1486=0,$1489=0,$1490=0,$1491=0,$1492=0,$1493=0,$1495=0,$1496=0,$1498=0,$1499=0,$_c7_i_i=0,$1500=0,$T_0_c_i_i=0,$1501=0,$1502=0,$1503=0,$1505=0,$1506=0,$1507=0;
 var $1508=0,$1509=0,$1510=0,$_sum_i134=0,$1511=0,$1512=0,$1513=0,$1514=0,$1515=0,$1516=0,$1517=0,$mem_0=0,label=0;

 $1=($bytes>>>0)<((245)>>>0);
 do {
  if ($1) {
   $3=($bytes>>>0)<((11)>>>0);
   if ($3) {
    $8=16;
   } else {
    $5=((($bytes)+(11))|0);
    $6=$5&-8;
    $8=$6;
   }

   $9=$8>>>3;
   $10=((HEAP32[((20208)>>2)])|0);
   $11=$10>>>($9>>>0);
   $12=$11&3;
   $13=($12|0)==0;
   if (!($13)) {
    $15=$11&1;
    $16=$15^1;
    $17=((($16)+($9))|0);
    $18=$17<<1;
    $19=((20248+($18<<2))|0);
    $20=$19;
    $_sum111=((($18)+(2))|0);
    $21=((20248+($_sum111<<2))|0);
    $22=((HEAP32[(($21)>>2)])|0);
    $23=(($22+8)|0);
    $24=((HEAP32[(($23)>>2)])|0);
    $25=($20|0)==($24|0);
    do {
     if ($25) {
      $27=1<<$17;
      $28=$27^-1;
      $29=$10&$28;
      HEAP32[((20208)>>2)]=$29;
     } else {
      $31=$24;
      $32=((HEAP32[((20224)>>2)])|0);
      $33=($31>>>0)<($32>>>0);
      if ($33) {
       _abort(); return ((0)|0);
       return ((0)|0);
      }
      $35=(($24+12)|0);
      $36=((HEAP32[(($35)>>2)])|0);
      $37=($36|0)==($22|0);
      if ($37) {
       HEAP32[(($35)>>2)]=$20;
       HEAP32[(($21)>>2)]=$24;
       break;
      } else {
       _abort(); return ((0)|0);
       return ((0)|0);
      }
     }
    } while(0);
    $40=$17<<3;
    $41=$40|3;
    $42=(($22+4)|0);
    HEAP32[(($42)>>2)]=$41;
    $43=$22;
    $_sum113114=$40|4;
    $44=(($43+$_sum113114)|0);
    $45=$44;
    $46=((HEAP32[(($45)>>2)])|0);
    $47=$46|1;
    HEAP32[(($45)>>2)]=$47;
    $48=$23;
    $mem_0=$48;

    return (($mem_0)|0);
   }
   $50=((HEAP32[((20216)>>2)])|0);
   $51=($8>>>0)>($50>>>0);
   if (!($51)) {
    $nb_0=$8;
    break;
   }
   $53=($11|0)==0;
   if (!($53)) {
    $55=$11<<$9;
    $56=2<<$9;
    $57=(((-$56))|0);
    $58=$56|$57;
    $59=$55&$58;
    $60=(((-$59))|0);
    $61=$59&$60;
    $62=((($61)-(1))|0);
    $63=$62>>>12;
    $64=$63&16;
    $65=$62>>>($64>>>0);
    $66=$65>>>5;
    $67=$66&8;
    $68=$67|$64;
    $69=$65>>>($67>>>0);
    $70=$69>>>2;
    $71=$70&4;
    $72=$68|$71;
    $73=$69>>>($71>>>0);
    $74=$73>>>1;
    $75=$74&2;
    $76=$72|$75;
    $77=$73>>>($75>>>0);
    $78=$77>>>1;
    $79=$78&1;
    $80=$76|$79;
    $81=$77>>>($79>>>0);
    $82=((($80)+($81))|0);
    $83=$82<<1;
    $84=((20248+($83<<2))|0);
    $85=$84;
    $_sum104=((($83)+(2))|0);
    $86=((20248+($_sum104<<2))|0);
    $87=((HEAP32[(($86)>>2)])|0);
    $88=(($87+8)|0);
    $89=((HEAP32[(($88)>>2)])|0);
    $90=($85|0)==($89|0);
    do {
     if ($90) {
      $92=1<<$82;
      $93=$92^-1;
      $94=$10&$93;
      HEAP32[((20208)>>2)]=$94;
     } else {
      $96=$89;
      $97=((HEAP32[((20224)>>2)])|0);
      $98=($96>>>0)<($97>>>0);
      if ($98) {
       _abort(); return ((0)|0);
       return ((0)|0);
      }
      $100=(($89+12)|0);
      $101=((HEAP32[(($100)>>2)])|0);
      $102=($101|0)==($87|0);
      if ($102) {
       HEAP32[(($100)>>2)]=$85;
       HEAP32[(($86)>>2)]=$89;
       break;
      } else {
       _abort(); return ((0)|0);
       return ((0)|0);
      }
     }
    } while(0);
    $105=$82<<3;
    $106=((($105)-($8))|0);
    $107=$8|3;
    $108=(($87+4)|0);
    HEAP32[(($108)>>2)]=$107;
    $109=$87;
    $110=(($109+$8)|0);
    $111=$110;
    $112=$106|1;
    $_sum106107=$8|4;
    $113=(($109+$_sum106107)|0);
    $114=$113;
    HEAP32[(($114)>>2)]=$112;
    $115=(($109+$105)|0);
    $116=$115;
    HEAP32[(($116)>>2)]=$106;
    $117=((HEAP32[((20216)>>2)])|0);
    $118=($117|0)==0;
    if (!($118)) {
     $120=((HEAP32[((20228)>>2)])|0);
     $121=$117>>>3;
     $122=$121<<1;
     $123=((20248+($122<<2))|0);
     $124=$123;
     $125=((HEAP32[((20208)>>2)])|0);
     $126=1<<$121;
     $127=$125&$126;
     $128=($127|0)==0;
     do {
      if ($128) {
       $130=$125|$126;
       HEAP32[((20208)>>2)]=$130;
       $_sum109_pre=((($122)+(2))|0);
       $_pre=((20248+($_sum109_pre<<2))|0);
       $F4_0=$124;$_pre_phi=$_pre;
      } else {
       $_sum110=((($122)+(2))|0);
       $132=((20248+($_sum110<<2))|0);
       $133=((HEAP32[(($132)>>2)])|0);
       $134=$133;
       $135=((HEAP32[((20224)>>2)])|0);
       $136=($134>>>0)<($135>>>0);
       if (!($136)) {
        $F4_0=$133;$_pre_phi=$132;
        break;
       }
       _abort(); return ((0)|0);
       return ((0)|0);
      }
     } while(0);


     HEAP32[(($_pre_phi)>>2)]=$120;
     $139=(($F4_0+12)|0);
     HEAP32[(($139)>>2)]=$120;
     $140=(($120+8)|0);
     HEAP32[(($140)>>2)]=$F4_0;
     $141=(($120+12)|0);
     HEAP32[(($141)>>2)]=$124;
    }
    HEAP32[((20216)>>2)]=$106;
    HEAP32[((20228)>>2)]=$111;
    $143=$88;
    $mem_0=$143;

    return (($mem_0)|0);
   }
   $145=((HEAP32[((20212)>>2)])|0);
   $146=($145|0)==0;
   if ($146) {
    $nb_0=$8;
    break;
   }
   $148=(((-$145))|0);
   $149=$145&$148;
   $150=((($149)-(1))|0);
   $151=$150>>>12;
   $152=$151&16;
   $153=$150>>>($152>>>0);
   $154=$153>>>5;
   $155=$154&8;
   $156=$155|$152;
   $157=$153>>>($155>>>0);
   $158=$157>>>2;
   $159=$158&4;
   $160=$156|$159;
   $161=$157>>>($159>>>0);
   $162=$161>>>1;
   $163=$162&2;
   $164=$160|$163;
   $165=$161>>>($163>>>0);
   $166=$165>>>1;
   $167=$166&1;
   $168=$164|$167;
   $169=$165>>>($167>>>0);
   $170=((($168)+($169))|0);
   $171=((20512+($170<<2))|0);
   $172=((HEAP32[(($171)>>2)])|0);
   $173=(($172+4)|0);
   $174=((HEAP32[(($173)>>2)])|0);
   $175=$174&-8;
   $176=((($175)-($8))|0);
   $t_0_i=$172;$v_0_i=$172;$rsize_0_i=$176;
   while(1) {



    $178=(($t_0_i+16)|0);
    $179=((HEAP32[(($178)>>2)])|0);
    $180=($179|0)==0;
    if ($180) {
     $182=(($t_0_i+20)|0);
     $183=((HEAP32[(($182)>>2)])|0);
     $184=($183|0)==0;
     if ($184) {
      break;
     } else {
      $185=$183;
     }
    } else {
     $185=$179;
    }

    $186=(($185+4)|0);
    $187=((HEAP32[(($186)>>2)])|0);
    $188=$187&-8;
    $189=((($188)-($8))|0);
    $190=($189>>>0)<($rsize_0_i>>>0);
    $_rsize_0_i=($190?$189:$rsize_0_i);
    $_v_0_i=($190?$185:$v_0_i);
    $t_0_i=$185;$v_0_i=$_v_0_i;$rsize_0_i=$_rsize_0_i;
   }
   $192=$v_0_i;
   $193=((HEAP32[((20224)>>2)])|0);
   $194=($192>>>0)<($193>>>0);
   if ($194) {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
   $196=(($192+$8)|0);
   $197=$196;
   $198=($192>>>0)<($196>>>0);
   if (!($198)) {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
   $200=(($v_0_i+24)|0);
   $201=((HEAP32[(($200)>>2)])|0);
   $202=(($v_0_i+12)|0);
   $203=((HEAP32[(($202)>>2)])|0);
   $204=($203|0)==($v_0_i|0);
   do {
    if ($204) {
     $220=(($v_0_i+20)|0);
     $221=((HEAP32[(($220)>>2)])|0);
     $222=($221|0)==0;
     if ($222) {
      $224=(($v_0_i+16)|0);
      $225=((HEAP32[(($224)>>2)])|0);
      $226=($225|0)==0;
      if ($226) {
       $R_1_i=0;
       break;
      } else {
       $R_0_i=$225;$RP_0_i=$224;
      }
     } else {
      $R_0_i=$221;$RP_0_i=$220;
     }
     while(1) {


      $227=(($R_0_i+20)|0);
      $228=((HEAP32[(($227)>>2)])|0);
      $229=($228|0)==0;
      if (!($229)) {
       $R_0_i=$228;$RP_0_i=$227;
       continue;
      }
      $231=(($R_0_i+16)|0);
      $232=((HEAP32[(($231)>>2)])|0);
      $233=($232|0)==0;
      if ($233) {
       break;
      } else {
       $R_0_i=$232;$RP_0_i=$231;
      }
     }
     $235=$RP_0_i;
     $236=($235>>>0)<($193>>>0);
     if ($236) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      HEAP32[(($RP_0_i)>>2)]=0;
      $R_1_i=$R_0_i;
      break;
     }
    } else {
     $206=(($v_0_i+8)|0);
     $207=((HEAP32[(($206)>>2)])|0);
     $208=$207;
     $209=($208>>>0)<($193>>>0);
     if ($209) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $211=(($207+12)|0);
     $212=((HEAP32[(($211)>>2)])|0);
     $213=($212|0)==($v_0_i|0);
     if (!($213)) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $215=(($203+8)|0);
     $216=((HEAP32[(($215)>>2)])|0);
     $217=($216|0)==($v_0_i|0);
     if ($217) {
      HEAP32[(($211)>>2)]=$203;
      HEAP32[(($215)>>2)]=$207;
      $R_1_i=$203;
      break;
     } else {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
    }
   } while(0);

   $240=($201|0)==0;
   L78: do {
    if (!($240)) {
     $242=(($v_0_i+28)|0);
     $243=((HEAP32[(($242)>>2)])|0);
     $244=((20512+($243<<2))|0);
     $245=((HEAP32[(($244)>>2)])|0);
     $246=($v_0_i|0)==($245|0);
     do {
      if ($246) {
       HEAP32[(($244)>>2)]=$R_1_i;
       $cond_i=($R_1_i|0)==0;
       if (!($cond_i)) {
        break;
       }
       $248=1<<$243;
       $249=$248^-1;
       $250=((HEAP32[((20212)>>2)])|0);
       $251=$250&$249;
       HEAP32[((20212)>>2)]=$251;
       break L78;
      } else {
       $253=$201;
       $254=((HEAP32[((20224)>>2)])|0);
       $255=($253>>>0)<($254>>>0);
       if ($255) {
        _abort(); return ((0)|0);
        return ((0)|0);
       }
       $257=(($201+16)|0);
       $258=((HEAP32[(($257)>>2)])|0);
       $259=($258|0)==($v_0_i|0);
       if ($259) {
        HEAP32[(($257)>>2)]=$R_1_i;
       } else {
        $262=(($201+20)|0);
        HEAP32[(($262)>>2)]=$R_1_i;
       }
       $265=($R_1_i|0)==0;
       if ($265) {
        break L78;
       }
      }
     } while(0);
     $267=$R_1_i;
     $268=((HEAP32[((20224)>>2)])|0);
     $269=($267>>>0)<($268>>>0);
     if ($269) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $271=(($R_1_i+24)|0);
     HEAP32[(($271)>>2)]=$201;
     $272=(($v_0_i+16)|0);
     $273=((HEAP32[(($272)>>2)])|0);
     $274=($273|0)==0;
     do {
      if (!($274)) {
       $276=$273;
       $277=((HEAP32[((20224)>>2)])|0);
       $278=($276>>>0)<($277>>>0);
       if ($278) {
        _abort(); return ((0)|0);
        return ((0)|0);
       } else {
        $280=(($R_1_i+16)|0);
        HEAP32[(($280)>>2)]=$273;
        $281=(($273+24)|0);
        HEAP32[(($281)>>2)]=$R_1_i;
        break;
       }
      }
     } while(0);
     $284=(($v_0_i+20)|0);
     $285=((HEAP32[(($284)>>2)])|0);
     $286=($285|0)==0;
     if ($286) {
      break;
     }
     $288=$285;
     $289=((HEAP32[((20224)>>2)])|0);
     $290=($288>>>0)<($289>>>0);
     if ($290) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      $292=(($R_1_i+20)|0);
      HEAP32[(($292)>>2)]=$285;
      $293=(($285+24)|0);
      HEAP32[(($293)>>2)]=$R_1_i;
      break;
     }
    }
   } while(0);
   $297=($rsize_0_i>>>0)<((16)>>>0);
   if ($297) {
    $299=((($rsize_0_i)+($8))|0);
    $300=$299|3;
    $301=(($v_0_i+4)|0);
    HEAP32[(($301)>>2)]=$300;
    $_sum4_i=((($299)+(4))|0);
    $302=(($192+$_sum4_i)|0);
    $303=$302;
    $304=((HEAP32[(($303)>>2)])|0);
    $305=$304|1;
    HEAP32[(($303)>>2)]=$305;
   } else {
    $307=$8|3;
    $308=(($v_0_i+4)|0);
    HEAP32[(($308)>>2)]=$307;
    $309=$rsize_0_i|1;
    $_sum_i137=$8|4;
    $310=(($192+$_sum_i137)|0);
    $311=$310;
    HEAP32[(($311)>>2)]=$309;
    $_sum1_i=((($rsize_0_i)+($8))|0);
    $312=(($192+$_sum1_i)|0);
    $313=$312;
    HEAP32[(($313)>>2)]=$rsize_0_i;
    $314=((HEAP32[((20216)>>2)])|0);
    $315=($314|0)==0;
    if (!($315)) {
     $317=((HEAP32[((20228)>>2)])|0);
     $318=$314>>>3;
     $319=$318<<1;
     $320=((20248+($319<<2))|0);
     $321=$320;
     $322=((HEAP32[((20208)>>2)])|0);
     $323=1<<$318;
     $324=$322&$323;
     $325=($324|0)==0;
     do {
      if ($325) {
       $327=$322|$323;
       HEAP32[((20208)>>2)]=$327;
       $_sum2_pre_i=((($319)+(2))|0);
       $_pre_i=((20248+($_sum2_pre_i<<2))|0);
       $F1_0_i=$321;$_pre_phi_i=$_pre_i;
      } else {
       $_sum3_i=((($319)+(2))|0);
       $329=((20248+($_sum3_i<<2))|0);
       $330=((HEAP32[(($329)>>2)])|0);
       $331=$330;
       $332=((HEAP32[((20224)>>2)])|0);
       $333=($331>>>0)<($332>>>0);
       if (!($333)) {
        $F1_0_i=$330;$_pre_phi_i=$329;
        break;
       }
       _abort(); return ((0)|0);
       return ((0)|0);
      }
     } while(0);


     HEAP32[(($_pre_phi_i)>>2)]=$317;
     $336=(($F1_0_i+12)|0);
     HEAP32[(($336)>>2)]=$317;
     $337=(($317+8)|0);
     HEAP32[(($337)>>2)]=$F1_0_i;
     $338=(($317+12)|0);
     HEAP32[(($338)>>2)]=$321;
    }
    HEAP32[((20216)>>2)]=$rsize_0_i;
    HEAP32[((20228)>>2)]=$197;
   }
   $341=(($v_0_i+8)|0);
   $342=$341;
   $343=($341|0)==0;
   if ($343) {
    $nb_0=$8;
    break;
   } else {
    $mem_0=$342;
   }

   return (($mem_0)|0);
  } else {
   $345=($bytes>>>0)>((4294967231)>>>0);
   if ($345) {
    $nb_0=-1;
    break;
   }
   $347=((($bytes)+(11))|0);
   $348=$347&-8;
   $349=((HEAP32[((20212)>>2)])|0);
   $350=($349|0)==0;
   if ($350) {
    $nb_0=$348;
    break;
   }
   $352=(((-$348))|0);
   $353=$347>>>8;
   $354=($353|0)==0;
   do {
    if ($354) {
     $idx_0_i=0;
    } else {
     $356=($348>>>0)>((16777215)>>>0);
     if ($356) {
      $idx_0_i=31;
      break;
     }
     $358=((($353)+(1048320))|0);
     $359=$358>>>16;
     $360=$359&8;
     $361=$353<<$360;
     $362=((($361)+(520192))|0);
     $363=$362>>>16;
     $364=$363&4;
     $365=$364|$360;
     $366=$361<<$364;
     $367=((($366)+(245760))|0);
     $368=$367>>>16;
     $369=$368&2;
     $370=$365|$369;
     $371=(((14)-($370))|0);
     $372=$366<<$369;
     $373=$372>>>15;
     $374=((($371)+($373))|0);
     $375=$374<<1;
     $376=((($374)+(7))|0);
     $377=$348>>>($376>>>0);
     $378=$377&1;
     $379=$378|$375;
     $idx_0_i=$379;
    }
   } while(0);

   $381=((20512+($idx_0_i<<2))|0);
   $382=((HEAP32[(($381)>>2)])|0);
   $383=($382|0)==0;
   L126: do {
    if ($383) {
     $v_2_i=0;$rsize_2_i=$352;$t_1_i=0;
    } else {
     $385=($idx_0_i|0)==31;
     if ($385) {
      $390=0;
     } else {
      $387=$idx_0_i>>>1;
      $388=(((25)-($387))|0);
      $390=$388;
     }

     $391=$348<<$390;
     $v_0_i118=0;$rsize_0_i117=$352;$t_0_i116=$382;$sizebits_0_i=$391;$rst_0_i=0;
     while(1) {





      $393=(($t_0_i116+4)|0);
      $394=((HEAP32[(($393)>>2)])|0);
      $395=$394&-8;
      $396=((($395)-($348))|0);
      $397=($396>>>0)<($rsize_0_i117>>>0);
      if ($397) {
       $399=($395|0)==($348|0);
       if ($399) {
        $v_2_i=$t_0_i116;$rsize_2_i=$396;$t_1_i=$t_0_i116;
        break L126;
       } else {
        $v_1_i=$t_0_i116;$rsize_1_i=$396;
       }
      } else {
       $v_1_i=$v_0_i118;$rsize_1_i=$rsize_0_i117;
      }


      $401=(($t_0_i116+20)|0);
      $402=((HEAP32[(($401)>>2)])|0);
      $403=$sizebits_0_i>>>31;
      $404=(($t_0_i116+16+($403<<2))|0);
      $405=((HEAP32[(($404)>>2)])|0);
      $406=($402|0)==0;
      $407=($402|0)==($405|0);
      $or_cond_i=$406|$407;
      $rst_1_i=($or_cond_i?$rst_0_i:$402);
      $408=($405|0)==0;
      $409=$sizebits_0_i<<1;
      if ($408) {
       $v_2_i=$v_1_i;$rsize_2_i=$rsize_1_i;$t_1_i=$rst_1_i;
       break;
      } else {
       $v_0_i118=$v_1_i;$rsize_0_i117=$rsize_1_i;$t_0_i116=$405;$sizebits_0_i=$409;$rst_0_i=$rst_1_i;
      }
     }
    }
   } while(0);



   $410=($t_1_i|0)==0;
   $411=($v_2_i|0)==0;
   $or_cond21_i=$410&$411;
   if ($or_cond21_i) {
    $413=2<<$idx_0_i;
    $414=(((-$413))|0);
    $415=$413|$414;
    $416=$349&$415;
    $417=($416|0)==0;
    if ($417) {
     $nb_0=$348;
     break;
    }
    $419=(((-$416))|0);
    $420=$416&$419;
    $421=((($420)-(1))|0);
    $422=$421>>>12;
    $423=$422&16;
    $424=$421>>>($423>>>0);
    $425=$424>>>5;
    $426=$425&8;
    $427=$426|$423;
    $428=$424>>>($426>>>0);
    $429=$428>>>2;
    $430=$429&4;
    $431=$427|$430;
    $432=$428>>>($430>>>0);
    $433=$432>>>1;
    $434=$433&2;
    $435=$431|$434;
    $436=$432>>>($434>>>0);
    $437=$436>>>1;
    $438=$437&1;
    $439=$435|$438;
    $440=$436>>>($438>>>0);
    $441=((($439)+($440))|0);
    $442=((20512+($441<<2))|0);
    $443=((HEAP32[(($442)>>2)])|0);
    $t_2_ph_i=$443;
   } else {
    $t_2_ph_i=$t_1_i;
   }

   $444=($t_2_ph_i|0)==0;
   if ($444) {
    $rsize_3_lcssa_i=$rsize_2_i;$v_3_lcssa_i=$v_2_i;
   } else {
    $t_228_i=$t_2_ph_i;$rsize_329_i=$rsize_2_i;$v_330_i=$v_2_i;
    while(1) {



     $445=(($t_228_i+4)|0);
     $446=((HEAP32[(($445)>>2)])|0);
     $447=$446&-8;
     $448=((($447)-($348))|0);
     $449=($448>>>0)<($rsize_329_i>>>0);
     $_rsize_3_i=($449?$448:$rsize_329_i);
     $t_2_v_3_i=($449?$t_228_i:$v_330_i);
     $450=(($t_228_i+16)|0);
     $451=((HEAP32[(($450)>>2)])|0);
     $452=($451|0)==0;
     if (!($452)) {
      $t_228_i=$451;$rsize_329_i=$_rsize_3_i;$v_330_i=$t_2_v_3_i;
      continue;
     }
     $453=(($t_228_i+20)|0);
     $454=((HEAP32[(($453)>>2)])|0);
     $455=($454|0)==0;
     if ($455) {
      $rsize_3_lcssa_i=$_rsize_3_i;$v_3_lcssa_i=$t_2_v_3_i;
      break;
     } else {
      $t_228_i=$454;$rsize_329_i=$_rsize_3_i;$v_330_i=$t_2_v_3_i;
     }
    }
   }


   $456=($v_3_lcssa_i|0)==0;
   if ($456) {
    $nb_0=$348;
    break;
   }
   $458=((HEAP32[((20216)>>2)])|0);
   $459=((($458)-($348))|0);
   $460=($rsize_3_lcssa_i>>>0)<($459>>>0);
   if (!($460)) {
    $nb_0=$348;
    break;
   }
   $462=$v_3_lcssa_i;
   $463=((HEAP32[((20224)>>2)])|0);
   $464=($462>>>0)<($463>>>0);
   if ($464) {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
   $466=(($462+$348)|0);
   $467=$466;
   $468=($462>>>0)<($466>>>0);
   if (!($468)) {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
   $470=(($v_3_lcssa_i+24)|0);
   $471=((HEAP32[(($470)>>2)])|0);
   $472=(($v_3_lcssa_i+12)|0);
   $473=((HEAP32[(($472)>>2)])|0);
   $474=($473|0)==($v_3_lcssa_i|0);
   do {
    if ($474) {
     $490=(($v_3_lcssa_i+20)|0);
     $491=((HEAP32[(($490)>>2)])|0);
     $492=($491|0)==0;
     if ($492) {
      $494=(($v_3_lcssa_i+16)|0);
      $495=((HEAP32[(($494)>>2)])|0);
      $496=($495|0)==0;
      if ($496) {
       $R_1_i122=0;
       break;
      } else {
       $R_0_i120=$495;$RP_0_i119=$494;
      }
     } else {
      $R_0_i120=$491;$RP_0_i119=$490;
     }
     while(1) {


      $497=(($R_0_i120+20)|0);
      $498=((HEAP32[(($497)>>2)])|0);
      $499=($498|0)==0;
      if (!($499)) {
       $R_0_i120=$498;$RP_0_i119=$497;
       continue;
      }
      $501=(($R_0_i120+16)|0);
      $502=((HEAP32[(($501)>>2)])|0);
      $503=($502|0)==0;
      if ($503) {
       break;
      } else {
       $R_0_i120=$502;$RP_0_i119=$501;
      }
     }
     $505=$RP_0_i119;
     $506=($505>>>0)<($463>>>0);
     if ($506) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      HEAP32[(($RP_0_i119)>>2)]=0;
      $R_1_i122=$R_0_i120;
      break;
     }
    } else {
     $476=(($v_3_lcssa_i+8)|0);
     $477=((HEAP32[(($476)>>2)])|0);
     $478=$477;
     $479=($478>>>0)<($463>>>0);
     if ($479) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $481=(($477+12)|0);
     $482=((HEAP32[(($481)>>2)])|0);
     $483=($482|0)==($v_3_lcssa_i|0);
     if (!($483)) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $485=(($473+8)|0);
     $486=((HEAP32[(($485)>>2)])|0);
     $487=($486|0)==($v_3_lcssa_i|0);
     if ($487) {
      HEAP32[(($481)>>2)]=$473;
      HEAP32[(($485)>>2)]=$477;
      $R_1_i122=$473;
      break;
     } else {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
    }
   } while(0);

   $510=($471|0)==0;
   L176: do {
    if (!($510)) {
     $512=(($v_3_lcssa_i+28)|0);
     $513=((HEAP32[(($512)>>2)])|0);
     $514=((20512+($513<<2))|0);
     $515=((HEAP32[(($514)>>2)])|0);
     $516=($v_3_lcssa_i|0)==($515|0);
     do {
      if ($516) {
       HEAP32[(($514)>>2)]=$R_1_i122;
       $cond_i123=($R_1_i122|0)==0;
       if (!($cond_i123)) {
        break;
       }
       $518=1<<$513;
       $519=$518^-1;
       $520=((HEAP32[((20212)>>2)])|0);
       $521=$520&$519;
       HEAP32[((20212)>>2)]=$521;
       break L176;
      } else {
       $523=$471;
       $524=((HEAP32[((20224)>>2)])|0);
       $525=($523>>>0)<($524>>>0);
       if ($525) {
        _abort(); return ((0)|0);
        return ((0)|0);
       }
       $527=(($471+16)|0);
       $528=((HEAP32[(($527)>>2)])|0);
       $529=($528|0)==($v_3_lcssa_i|0);
       if ($529) {
        HEAP32[(($527)>>2)]=$R_1_i122;
       } else {
        $532=(($471+20)|0);
        HEAP32[(($532)>>2)]=$R_1_i122;
       }
       $535=($R_1_i122|0)==0;
       if ($535) {
        break L176;
       }
      }
     } while(0);
     $537=$R_1_i122;
     $538=((HEAP32[((20224)>>2)])|0);
     $539=($537>>>0)<($538>>>0);
     if ($539) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $541=(($R_1_i122+24)|0);
     HEAP32[(($541)>>2)]=$471;
     $542=(($v_3_lcssa_i+16)|0);
     $543=((HEAP32[(($542)>>2)])|0);
     $544=($543|0)==0;
     do {
      if (!($544)) {
       $546=$543;
       $547=((HEAP32[((20224)>>2)])|0);
       $548=($546>>>0)<($547>>>0);
       if ($548) {
        _abort(); return ((0)|0);
        return ((0)|0);
       } else {
        $550=(($R_1_i122+16)|0);
        HEAP32[(($550)>>2)]=$543;
        $551=(($543+24)|0);
        HEAP32[(($551)>>2)]=$R_1_i122;
        break;
       }
      }
     } while(0);
     $554=(($v_3_lcssa_i+20)|0);
     $555=((HEAP32[(($554)>>2)])|0);
     $556=($555|0)==0;
     if ($556) {
      break;
     }
     $558=$555;
     $559=((HEAP32[((20224)>>2)])|0);
     $560=($558>>>0)<($559>>>0);
     if ($560) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      $562=(($R_1_i122+20)|0);
      HEAP32[(($562)>>2)]=$555;
      $563=(($555+24)|0);
      HEAP32[(($563)>>2)]=$R_1_i122;
      break;
     }
    }
   } while(0);
   $567=($rsize_3_lcssa_i>>>0)<((16)>>>0);
   do {
    if ($567) {
     $569=((($rsize_3_lcssa_i)+($348))|0);
     $570=$569|3;
     $571=(($v_3_lcssa_i+4)|0);
     HEAP32[(($571)>>2)]=$570;
     $_sum19_i=((($569)+(4))|0);
     $572=(($462+$_sum19_i)|0);
     $573=$572;
     $574=((HEAP32[(($573)>>2)])|0);
     $575=$574|1;
     HEAP32[(($573)>>2)]=$575;
    } else {
     $577=$348|3;
     $578=(($v_3_lcssa_i+4)|0);
     HEAP32[(($578)>>2)]=$577;
     $579=$rsize_3_lcssa_i|1;
     $_sum_i125136=$348|4;
     $580=(($462+$_sum_i125136)|0);
     $581=$580;
     HEAP32[(($581)>>2)]=$579;
     $_sum1_i126=((($rsize_3_lcssa_i)+($348))|0);
     $582=(($462+$_sum1_i126)|0);
     $583=$582;
     HEAP32[(($583)>>2)]=$rsize_3_lcssa_i;
     $584=$rsize_3_lcssa_i>>>3;
     $585=($rsize_3_lcssa_i>>>0)<((256)>>>0);
     if ($585) {
      $587=$584<<1;
      $588=((20248+($587<<2))|0);
      $589=$588;
      $590=((HEAP32[((20208)>>2)])|0);
      $591=1<<$584;
      $592=$590&$591;
      $593=($592|0)==0;
      do {
       if ($593) {
        $595=$590|$591;
        HEAP32[((20208)>>2)]=$595;
        $_sum15_pre_i=((($587)+(2))|0);
        $_pre_i127=((20248+($_sum15_pre_i<<2))|0);
        $F5_0_i=$589;$_pre_phi_i128=$_pre_i127;
       } else {
        $_sum18_i=((($587)+(2))|0);
        $597=((20248+($_sum18_i<<2))|0);
        $598=((HEAP32[(($597)>>2)])|0);
        $599=$598;
        $600=((HEAP32[((20224)>>2)])|0);
        $601=($599>>>0)<($600>>>0);
        if (!($601)) {
         $F5_0_i=$598;$_pre_phi_i128=$597;
         break;
        }
        _abort(); return ((0)|0);
        return ((0)|0);
       }
      } while(0);


      HEAP32[(($_pre_phi_i128)>>2)]=$467;
      $604=(($F5_0_i+12)|0);
      HEAP32[(($604)>>2)]=$467;
      $_sum16_i=((($348)+(8))|0);
      $605=(($462+$_sum16_i)|0);
      $606=$605;
      HEAP32[(($606)>>2)]=$F5_0_i;
      $_sum17_i=((($348)+(12))|0);
      $607=(($462+$_sum17_i)|0);
      $608=$607;
      HEAP32[(($608)>>2)]=$589;
      break;
     }
     $610=$466;
     $611=$rsize_3_lcssa_i>>>8;
     $612=($611|0)==0;
     do {
      if ($612) {
       $I7_0_i=0;
      } else {
       $614=($rsize_3_lcssa_i>>>0)>((16777215)>>>0);
       if ($614) {
        $I7_0_i=31;
        break;
       }
       $616=((($611)+(1048320))|0);
       $617=$616>>>16;
       $618=$617&8;
       $619=$611<<$618;
       $620=((($619)+(520192))|0);
       $621=$620>>>16;
       $622=$621&4;
       $623=$622|$618;
       $624=$619<<$622;
       $625=((($624)+(245760))|0);
       $626=$625>>>16;
       $627=$626&2;
       $628=$623|$627;
       $629=(((14)-($628))|0);
       $630=$624<<$627;
       $631=$630>>>15;
       $632=((($629)+($631))|0);
       $633=$632<<1;
       $634=((($632)+(7))|0);
       $635=$rsize_3_lcssa_i>>>($634>>>0);
       $636=$635&1;
       $637=$636|$633;
       $I7_0_i=$637;
      }
     } while(0);

     $639=((20512+($I7_0_i<<2))|0);
     $_sum2_i=((($348)+(28))|0);
     $640=(($462+$_sum2_i)|0);
     $641=$640;
     HEAP32[(($641)>>2)]=$I7_0_i;
     $_sum3_i129=((($348)+(16))|0);
     $642=(($462+$_sum3_i129)|0);
     $_sum4_i130=((($348)+(20))|0);
     $643=(($462+$_sum4_i130)|0);
     $644=$643;
     HEAP32[(($644)>>2)]=0;
     $645=$642;
     HEAP32[(($645)>>2)]=0;
     $646=((HEAP32[((20212)>>2)])|0);
     $647=1<<$I7_0_i;
     $648=$646&$647;
     $649=($648|0)==0;
     if ($649) {
      $651=$646|$647;
      HEAP32[((20212)>>2)]=$651;
      HEAP32[(($639)>>2)]=$610;
      $652=$639;
      $_sum5_i=((($348)+(24))|0);
      $653=(($462+$_sum5_i)|0);
      $654=$653;
      HEAP32[(($654)>>2)]=$652;
      $_sum6_i=((($348)+(12))|0);
      $655=(($462+$_sum6_i)|0);
      $656=$655;
      HEAP32[(($656)>>2)]=$610;
      $_sum7_i=((($348)+(8))|0);
      $657=(($462+$_sum7_i)|0);
      $658=$657;
      HEAP32[(($658)>>2)]=$610;
      break;
     }
     $660=((HEAP32[(($639)>>2)])|0);
     $661=($I7_0_i|0)==31;
     if ($661) {
      $666=0;
     } else {
      $663=$I7_0_i>>>1;
      $664=(((25)-($663))|0);
      $666=$664;
     }

     $667=$rsize_3_lcssa_i<<$666;
     $K12_0_i=$667;$T_0_i=$660;
     while(1) {


      $669=(($T_0_i+4)|0);
      $670=((HEAP32[(($669)>>2)])|0);
      $671=$670&-8;
      $672=($671|0)==($rsize_3_lcssa_i|0);
      if ($672) {
       break;
      }
      $674=$K12_0_i>>>31;
      $675=(($T_0_i+16+($674<<2))|0);
      $676=((HEAP32[(($675)>>2)])|0);
      $677=($676|0)==0;
      $678=$K12_0_i<<1;
      if ($677) {
       label = 151;
       break;
      } else {
       $K12_0_i=$678;$T_0_i=$676;
      }
     }
     if ((label|0) == 151) {
      $680=$675;
      $681=((HEAP32[((20224)>>2)])|0);
      $682=($680>>>0)<($681>>>0);
      if ($682) {
       _abort(); return ((0)|0);
       return ((0)|0);
      } else {
       HEAP32[(($675)>>2)]=$610;
       $_sum12_i=((($348)+(24))|0);
       $684=(($462+$_sum12_i)|0);
       $685=$684;
       HEAP32[(($685)>>2)]=$T_0_i;
       $_sum13_i=((($348)+(12))|0);
       $686=(($462+$_sum13_i)|0);
       $687=$686;
       HEAP32[(($687)>>2)]=$610;
       $_sum14_i=((($348)+(8))|0);
       $688=(($462+$_sum14_i)|0);
       $689=$688;
       HEAP32[(($689)>>2)]=$610;
       break;
      }
     }
     $692=(($T_0_i+8)|0);
     $693=((HEAP32[(($692)>>2)])|0);
     $694=$T_0_i;
     $695=((HEAP32[((20224)>>2)])|0);
     $696=($694>>>0)<($695>>>0);
     if ($696) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $698=$693;
     $699=($698>>>0)<($695>>>0);
     if ($699) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      $701=(($693+12)|0);
      HEAP32[(($701)>>2)]=$610;
      HEAP32[(($692)>>2)]=$610;
      $_sum9_i=((($348)+(8))|0);
      $702=(($462+$_sum9_i)|0);
      $703=$702;
      HEAP32[(($703)>>2)]=$693;
      $_sum10_i=((($348)+(12))|0);
      $704=(($462+$_sum10_i)|0);
      $705=$704;
      HEAP32[(($705)>>2)]=$T_0_i;
      $_sum11_i=((($348)+(24))|0);
      $706=(($462+$_sum11_i)|0);
      $707=$706;
      HEAP32[(($707)>>2)]=0;
      break;
     }
    }
   } while(0);
   $709=(($v_3_lcssa_i+8)|0);
   $710=$709;
   $711=($709|0)==0;
   if ($711) {
    $nb_0=$348;
    break;
   } else {
    $mem_0=$710;
   }

   return (($mem_0)|0);
  }
 } while(0);

 $712=((HEAP32[((20216)>>2)])|0);
 $713=($nb_0>>>0)>($712>>>0);
 if (!($713)) {
  $715=((($712)-($nb_0))|0);
  $716=((HEAP32[((20228)>>2)])|0);
  $717=($715>>>0)>((15)>>>0);
  if ($717) {
   $719=$716;
   $720=(($719+$nb_0)|0);
   $721=$720;
   HEAP32[((20228)>>2)]=$721;
   HEAP32[((20216)>>2)]=$715;
   $722=$715|1;
   $_sum102=((($nb_0)+(4))|0);
   $723=(($719+$_sum102)|0);
   $724=$723;
   HEAP32[(($724)>>2)]=$722;
   $725=(($719+$712)|0);
   $726=$725;
   HEAP32[(($726)>>2)]=$715;
   $727=$nb_0|3;
   $728=(($716+4)|0);
   HEAP32[(($728)>>2)]=$727;
  } else {
   HEAP32[((20216)>>2)]=0;
   HEAP32[((20228)>>2)]=0;
   $730=$712|3;
   $731=(($716+4)|0);
   HEAP32[(($731)>>2)]=$730;
   $732=$716;
   $_sum101=((($712)+(4))|0);
   $733=(($732+$_sum101)|0);
   $734=$733;
   $735=((HEAP32[(($734)>>2)])|0);
   $736=$735|1;
   HEAP32[(($734)>>2)]=$736;
  }
  $738=(($716+8)|0);
  $739=$738;
  $mem_0=$739;

  return (($mem_0)|0);
 }
 $741=((HEAP32[((20220)>>2)])|0);
 $742=($nb_0>>>0)<($741>>>0);
 if ($742) {
  $744=((($741)-($nb_0))|0);
  HEAP32[((20220)>>2)]=$744;
  $745=((HEAP32[((20232)>>2)])|0);
  $746=$745;
  $747=(($746+$nb_0)|0);
  $748=$747;
  HEAP32[((20232)>>2)]=$748;
  $749=$744|1;
  $_sum=((($nb_0)+(4))|0);
  $750=(($746+$_sum)|0);
  $751=$750;
  HEAP32[(($751)>>2)]=$749;
  $752=$nb_0|3;
  $753=(($745+4)|0);
  HEAP32[(($753)>>2)]=$752;
  $754=(($745+8)|0);
  $755=$754;
  $mem_0=$755;

  return (($mem_0)|0);
 }
 $757=((HEAP32[((16432)>>2)])|0);
 $758=($757|0)==0;
 do {
  if ($758) {
   $760=((_sysconf(((30)|0)))|0);
   $761=((($760)-(1))|0);
   $762=$761&$760;
   $763=($762|0)==0;
   if ($763) {
    HEAP32[((16440)>>2)]=$760;
    HEAP32[((16436)>>2)]=$760;
    HEAP32[((16444)>>2)]=-1;
    HEAP32[((16448)>>2)]=-1;
    HEAP32[((16452)>>2)]=0;
    HEAP32[((20652)>>2)]=0;
    $765=((_time(((0)|0)))|0);
    $766=$765&-16;
    $767=$766^1431655768;
    HEAP32[((16432)>>2)]=$767;
    break;
   } else {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
  }
 } while(0);
 $769=((($nb_0)+(48))|0);
 $770=((HEAP32[((16440)>>2)])|0);
 $771=((($nb_0)+(47))|0);
 $772=((($770)+($771))|0);
 $773=(((-$770))|0);
 $774=$772&$773;
 $775=($774>>>0)>($nb_0>>>0);
 if (!($775)) {
  $mem_0=0;

  return (($mem_0)|0);
 }
 $777=((HEAP32[((20648)>>2)])|0);
 $778=($777|0)==0;
 do {
  if (!($778)) {
   $780=((HEAP32[((20640)>>2)])|0);
   $781=((($780)+($774))|0);
   $782=($781>>>0)<=($780>>>0);
   $783=($781>>>0)>($777>>>0);
   $or_cond1_i=$782|$783;
   if ($or_cond1_i) {
    $mem_0=0;
   } else {
    break;
   }

   return (($mem_0)|0);
  }
 } while(0);
 $785=((HEAP32[((20652)>>2)])|0);
 $786=$785&4;
 $787=($786|0)==0;
 L268: do {
  if ($787) {
   $789=((HEAP32[((20232)>>2)])|0);
   $790=($789|0)==0;
   L270: do {
    if ($790) {
     label = 181;
    } else {
     $792=$789;
     $sp_0_i_i=20656;
     while(1) {

      $794=(($sp_0_i_i)|0);
      $795=((HEAP32[(($794)>>2)])|0);
      $796=($795>>>0)>($792>>>0);
      if (!($796)) {
       $798=(($sp_0_i_i+4)|0);
       $799=((HEAP32[(($798)>>2)])|0);
       $800=(($795+$799)|0);
       $801=($800>>>0)>($792>>>0);
       if ($801) {
        break;
       }
      }
      $803=(($sp_0_i_i+8)|0);
      $804=((HEAP32[(($803)>>2)])|0);
      $805=($804|0)==0;
      if ($805) {
       label = 181;
       break L270;
      } else {
       $sp_0_i_i=$804;
      }
     }
     $806=($sp_0_i_i|0)==0;
     if ($806) {
      label = 181;
      break;
     }
     $836=((HEAP32[((20220)>>2)])|0);
     $837=((($772)-($836))|0);
     $838=$837&$773;
     $839=($838>>>0)<((2147483647)>>>0);
     if (!($839)) {
      $tsize_0303639_i=0;
      break;
     }
     $841=((_sbrk((($838)|0)))|0);
     $842=((HEAP32[(($794)>>2)])|0);
     $843=((HEAP32[(($798)>>2)])|0);
     $844=(($842+$843)|0);
     $845=($841|0)==($844|0);
     $_3_i=($845?$838:0);
     $_4_i=($845?$841:-1);
     $tbase_0_i=$_4_i;$tsize_0_i=$_3_i;$br_0_i=$841;$ssize_1_i=$838;
     label = 190;
    }
   } while(0);
   do {
    if ((label|0) == 181) {
     $807=((_sbrk(((0)|0)))|0);
     $808=($807|0)==-1;
     if ($808) {
      $tsize_0303639_i=0;
      break;
     }
     $810=$807;
     $811=((HEAP32[((16436)>>2)])|0);
     $812=((($811)-(1))|0);
     $813=$812&$810;
     $814=($813|0)==0;
     if ($814) {
      $ssize_0_i=$774;
     } else {
      $816=((($812)+($810))|0);
      $817=(((-$811))|0);
      $818=$816&$817;
      $819=((($774)-($810))|0);
      $820=((($819)+($818))|0);
      $ssize_0_i=$820;
     }

     $822=((HEAP32[((20640)>>2)])|0);
     $823=((($822)+($ssize_0_i))|0);
     $824=($ssize_0_i>>>0)>($nb_0>>>0);
     $825=($ssize_0_i>>>0)<((2147483647)>>>0);
     $or_cond_i131=$824&$825;
     if (!($or_cond_i131)) {
      $tsize_0303639_i=0;
      break;
     }
     $827=((HEAP32[((20648)>>2)])|0);
     $828=($827|0)==0;
     if (!($828)) {
      $830=($823>>>0)<=($822>>>0);
      $831=($823>>>0)>($827>>>0);
      $or_cond2_i=$830|$831;
      if ($or_cond2_i) {
       $tsize_0303639_i=0;
       break;
      }
     }
     $833=((_sbrk((($ssize_0_i)|0)))|0);
     $834=($833|0)==($807|0);
     $ssize_0__i=($834?$ssize_0_i:0);
     $__i=($834?$807:-1);
     $tbase_0_i=$__i;$tsize_0_i=$ssize_0__i;$br_0_i=$833;$ssize_1_i=$ssize_0_i;
     label = 190;
    }
   } while(0);
   L290: do {
    if ((label|0) == 190) {




     $847=(((-$ssize_1_i))|0);
     $848=($tbase_0_i|0)==-1;
     if (!($848)) {
      $tsize_244_i=$tsize_0_i;$tbase_245_i=$tbase_0_i;
      label = 201;
      break L268;
     }
     $850=($br_0_i|0)!=-1;
     $851=($ssize_1_i>>>0)<((2147483647)>>>0);
     $or_cond5_i=$850&$851;
     $852=($ssize_1_i>>>0)<($769>>>0);
     $or_cond6_i=$or_cond5_i&$852;
     do {
      if ($or_cond6_i) {
       $854=((HEAP32[((16440)>>2)])|0);
       $855=((($771)-($ssize_1_i))|0);
       $856=((($855)+($854))|0);
       $857=(((-$854))|0);
       $858=$856&$857;
       $859=($858>>>0)<((2147483647)>>>0);
       if (!($859)) {
        $ssize_2_i=$ssize_1_i;
        break;
       }
       $861=((_sbrk((($858)|0)))|0);
       $862=($861|0)==-1;
       if ($862) {
        $866=((_sbrk((($847)|0)))|0);
        $tsize_0303639_i=$tsize_0_i;
        break L290;
       } else {
        $864=((($858)+($ssize_1_i))|0);
        $ssize_2_i=$864;
        break;
       }
      } else {
       $ssize_2_i=$ssize_1_i;
      }
     } while(0);

     $868=($br_0_i|0)==-1;
     if ($868) {
      $tsize_0303639_i=$tsize_0_i;
     } else {
      $tsize_244_i=$ssize_2_i;$tbase_245_i=$br_0_i;
      label = 201;
      break L268;
     }
    }
   } while(0);

   $869=((HEAP32[((20652)>>2)])|0);
   $870=$869|4;
   HEAP32[((20652)>>2)]=$870;
   $tsize_1_i=$tsize_0303639_i;
   label = 198;
  } else {
   $tsize_1_i=0;
   label = 198;
  }
 } while(0);
 do {
  if ((label|0) == 198) {

   $872=($774>>>0)<((2147483647)>>>0);
   if (!($872)) {
    break;
   }
   $874=((_sbrk((($774)|0)))|0);
   $875=((_sbrk(((0)|0)))|0);
   $notlhs_i=($874|0)!=-1;
   $notrhs_i=($875|0)!=-1;
   $or_cond8_not_i=$notrhs_i&$notlhs_i;
   $876=($874>>>0)<($875>>>0);
   $or_cond9_i=$or_cond8_not_i&$876;
   if (!($or_cond9_i)) {
    break;
   }
   $877=$875;
   $878=$874;
   $879=((($877)-($878))|0);
   $880=((($nb_0)+(40))|0);
   $881=($879>>>0)>($880>>>0);
   $_tsize_1_i=($881?$879:$tsize_1_i);
   $_tbase_1_i=($881?$874:-1);
   $882=($_tbase_1_i|0)==-1;
   if (!($882)) {
    $tsize_244_i=$_tsize_1_i;$tbase_245_i=$_tbase_1_i;
    label = 201;
   }
  }
 } while(0);
 do {
  if ((label|0) == 201) {


   $883=((HEAP32[((20640)>>2)])|0);
   $884=((($883)+($tsize_244_i))|0);
   HEAP32[((20640)>>2)]=$884;
   $885=((HEAP32[((20644)>>2)])|0);
   $886=($884>>>0)>($885>>>0);
   if ($886) {
    HEAP32[((20644)>>2)]=$884;
   }
   $888=((HEAP32[((20232)>>2)])|0);
   $889=($888|0)==0;
   L310: do {
    if ($889) {
     $891=((HEAP32[((20224)>>2)])|0);
     $892=($891|0)==0;
     $893=($tbase_245_i>>>0)<($891>>>0);
     $or_cond10_i=$892|$893;
     if ($or_cond10_i) {
      HEAP32[((20224)>>2)]=$tbase_245_i;
     }
     HEAP32[((20656)>>2)]=$tbase_245_i;
     HEAP32[((20660)>>2)]=$tsize_244_i;
     HEAP32[((20668)>>2)]=0;
     $895=((HEAP32[((16432)>>2)])|0);
     HEAP32[((20244)>>2)]=$895;
     HEAP32[((20240)>>2)]=-1;
     $i_02_i_i=0;
     while(1) {

      $897=$i_02_i_i<<1;
      $898=((20248+($897<<2))|0);
      $899=$898;
      $_sum_i_i=((($897)+(3))|0);
      $900=((20248+($_sum_i_i<<2))|0);
      HEAP32[(($900)>>2)]=$899;
      $_sum1_i_i=((($897)+(2))|0);
      $901=((20248+($_sum1_i_i<<2))|0);
      HEAP32[(($901)>>2)]=$899;
      $902=((($i_02_i_i)+(1))|0);
      $903=($902>>>0)<((32)>>>0);
      if ($903) {
       $i_02_i_i=$902;
      } else {
       break;
      }
     }
     $904=((($tsize_244_i)-(40))|0);
     $905=(($tbase_245_i+8)|0);
     $906=$905;
     $907=$906&7;
     $908=($907|0)==0;
     if ($908) {
      $912=0;
     } else {
      $910=(((-$906))|0);
      $911=$910&7;
      $912=$911;
     }

     $913=(($tbase_245_i+$912)|0);
     $914=$913;
     $915=((($904)-($912))|0);
     HEAP32[((20232)>>2)]=$914;
     HEAP32[((20220)>>2)]=$915;
     $916=$915|1;
     $_sum_i14_i=((($912)+(4))|0);
     $917=(($tbase_245_i+$_sum_i14_i)|0);
     $918=$917;
     HEAP32[(($918)>>2)]=$916;
     $_sum2_i_i=((($tsize_244_i)-(36))|0);
     $919=(($tbase_245_i+$_sum2_i_i)|0);
     $920=$919;
     HEAP32[(($920)>>2)]=40;
     $921=((HEAP32[((16448)>>2)])|0);
     HEAP32[((20236)>>2)]=$921;
    } else {
     $sp_067_i=20656;
     while(1) {

      $922=(($sp_067_i)|0);
      $923=((HEAP32[(($922)>>2)])|0);
      $924=(($sp_067_i+4)|0);
      $925=((HEAP32[(($924)>>2)])|0);
      $926=(($923+$925)|0);
      $927=($tbase_245_i|0)==($926|0);
      if ($927) {
       label = 213;
       break;
      }
      $929=(($sp_067_i+8)|0);
      $930=((HEAP32[(($929)>>2)])|0);
      $931=($930|0)==0;
      if ($931) {
       break;
      } else {
       $sp_067_i=$930;
      }
     }
     do {
      if ((label|0) == 213) {
       $932=(($sp_067_i+12)|0);
       $933=((HEAP32[(($932)>>2)])|0);
       $934=$933&8;
       $935=($934|0)==0;
       if (!($935)) {
        break;
       }
       $937=$888;
       $938=($937>>>0)>=($923>>>0);
       $939=($937>>>0)<($tbase_245_i>>>0);
       $or_cond47_i=$938&$939;
       if (!($or_cond47_i)) {
        break;
       }
       $941=((($925)+($tsize_244_i))|0);
       HEAP32[(($924)>>2)]=$941;
       $942=((HEAP32[((20220)>>2)])|0);
       $943=((($942)+($tsize_244_i))|0);
       $944=(($888+8)|0);
       $945=$944;
       $946=$945&7;
       $947=($946|0)==0;
       if ($947) {
        $951=0;
       } else {
        $949=(((-$945))|0);
        $950=$949&7;
        $951=$950;
       }

       $952=(($937+$951)|0);
       $953=$952;
       $954=((($943)-($951))|0);
       HEAP32[((20232)>>2)]=$953;
       HEAP32[((20220)>>2)]=$954;
       $955=$954|1;
       $_sum_i18_i=((($951)+(4))|0);
       $956=(($937+$_sum_i18_i)|0);
       $957=$956;
       HEAP32[(($957)>>2)]=$955;
       $_sum2_i19_i=((($943)+(4))|0);
       $958=(($937+$_sum2_i19_i)|0);
       $959=$958;
       HEAP32[(($959)>>2)]=40;
       $960=((HEAP32[((16448)>>2)])|0);
       HEAP32[((20236)>>2)]=$960;
       break L310;
      }
     } while(0);
     $961=((HEAP32[((20224)>>2)])|0);
     $962=($tbase_245_i>>>0)<($961>>>0);
     if ($962) {
      HEAP32[((20224)>>2)]=$tbase_245_i;
     }
     $964=(($tbase_245_i+$tsize_244_i)|0);
     $sp_160_i=20656;
     while(1) {

      $966=(($sp_160_i)|0);
      $967=((HEAP32[(($966)>>2)])|0);
      $968=($967|0)==($964|0);
      if ($968) {
       label = 223;
       break;
      }
      $970=(($sp_160_i+8)|0);
      $971=((HEAP32[(($970)>>2)])|0);
      $972=($971|0)==0;
      if ($972) {
       break;
      } else {
       $sp_160_i=$971;
      }
     }
     do {
      if ((label|0) == 223) {
       $973=(($sp_160_i+12)|0);
       $974=((HEAP32[(($973)>>2)])|0);
       $975=$974&8;
       $976=($975|0)==0;
       if (!($976)) {
        break;
       }
       HEAP32[(($966)>>2)]=$tbase_245_i;
       $978=(($sp_160_i+4)|0);
       $979=((HEAP32[(($978)>>2)])|0);
       $980=((($979)+($tsize_244_i))|0);
       HEAP32[(($978)>>2)]=$980;
       $981=(($tbase_245_i+8)|0);
       $982=$981;
       $983=$982&7;
       $984=($983|0)==0;
       if ($984) {
        $989=0;
       } else {
        $986=(((-$982))|0);
        $987=$986&7;
        $989=$987;
       }

       $990=(($tbase_245_i+$989)|0);
       $_sum93_i=((($tsize_244_i)+(8))|0);
       $991=(($tbase_245_i+$_sum93_i)|0);
       $992=$991;
       $993=$992&7;
       $994=($993|0)==0;
       if ($994) {
        $999=0;
       } else {
        $996=(((-$992))|0);
        $997=$996&7;
        $999=$997;
       }

       $_sum94_i=((($999)+($tsize_244_i))|0);
       $1000=(($tbase_245_i+$_sum94_i)|0);
       $1001=$1000;
       $1002=$1000;
       $1003=$990;
       $1004=((($1002)-($1003))|0);
       $_sum_i21_i=((($989)+($nb_0))|0);
       $1005=(($tbase_245_i+$_sum_i21_i)|0);
       $1006=$1005;
       $1007=((($1004)-($nb_0))|0);
       $1008=$nb_0|3;
       $_sum1_i22_i=((($989)+(4))|0);
       $1009=(($tbase_245_i+$_sum1_i22_i)|0);
       $1010=$1009;
       HEAP32[(($1010)>>2)]=$1008;
       $1011=((HEAP32[((20232)>>2)])|0);
       $1012=($1001|0)==($1011|0);
       do {
        if ($1012) {
         $1014=((HEAP32[((20220)>>2)])|0);
         $1015=((($1014)+($1007))|0);
         HEAP32[((20220)>>2)]=$1015;
         HEAP32[((20232)>>2)]=$1006;
         $1016=$1015|1;
         $_sum46_i_i=((($_sum_i21_i)+(4))|0);
         $1017=(($tbase_245_i+$_sum46_i_i)|0);
         $1018=$1017;
         HEAP32[(($1018)>>2)]=$1016;
        } else {
         $1020=((HEAP32[((20228)>>2)])|0);
         $1021=($1001|0)==($1020|0);
         if ($1021) {
          $1023=((HEAP32[((20216)>>2)])|0);
          $1024=((($1023)+($1007))|0);
          HEAP32[((20216)>>2)]=$1024;
          HEAP32[((20228)>>2)]=$1006;
          $1025=$1024|1;
          $_sum44_i_i=((($_sum_i21_i)+(4))|0);
          $1026=(($tbase_245_i+$_sum44_i_i)|0);
          $1027=$1026;
          HEAP32[(($1027)>>2)]=$1025;
          $_sum45_i_i=((($1024)+($_sum_i21_i))|0);
          $1028=(($tbase_245_i+$_sum45_i_i)|0);
          $1029=$1028;
          HEAP32[(($1029)>>2)]=$1024;
          break;
         }
         $_sum2_i23_i=((($tsize_244_i)+(4))|0);
         $_sum95_i=((($_sum2_i23_i)+($999))|0);
         $1031=(($tbase_245_i+$_sum95_i)|0);
         $1032=$1031;
         $1033=((HEAP32[(($1032)>>2)])|0);
         $1034=$1033&3;
         $1035=($1034|0)==1;
         if ($1035) {
          $1037=$1033&-8;
          $1038=$1033>>>3;
          $1039=($1033>>>0)<((256)>>>0);
          L355: do {
           if ($1039) {
            $_sum3940_i_i=$999|8;
            $_sum105_i=((($_sum3940_i_i)+($tsize_244_i))|0);
            $1041=(($tbase_245_i+$_sum105_i)|0);
            $1042=$1041;
            $1043=((HEAP32[(($1042)>>2)])|0);
            $_sum41_i_i=((($tsize_244_i)+(12))|0);
            $_sum106_i=((($_sum41_i_i)+($999))|0);
            $1044=(($tbase_245_i+$_sum106_i)|0);
            $1045=$1044;
            $1046=((HEAP32[(($1045)>>2)])|0);
            $1047=$1038<<1;
            $1048=((20248+($1047<<2))|0);
            $1049=$1048;
            $1050=($1043|0)==($1049|0);
            do {
             if (!($1050)) {
              $1052=$1043;
              $1053=((HEAP32[((20224)>>2)])|0);
              $1054=($1052>>>0)<($1053>>>0);
              if ($1054) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1056=(($1043+12)|0);
              $1057=((HEAP32[(($1056)>>2)])|0);
              $1058=($1057|0)==($1001|0);
              if ($1058) {
               break;
              }
              _abort(); return ((0)|0);
              return ((0)|0);
             }
            } while(0);
            $1059=($1046|0)==($1043|0);
            if ($1059) {
             $1061=1<<$1038;
             $1062=$1061^-1;
             $1063=((HEAP32[((20208)>>2)])|0);
             $1064=$1063&$1062;
             HEAP32[((20208)>>2)]=$1064;
             break;
            }
            $1066=($1046|0)==($1049|0);
            do {
             if ($1066) {
              $_pre56_i_i=(($1046+8)|0);
              $_pre_phi57_i_i=$_pre56_i_i;
             } else {
              $1068=$1046;
              $1069=((HEAP32[((20224)>>2)])|0);
              $1070=($1068>>>0)<($1069>>>0);
              if ($1070) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1072=(($1046+8)|0);
              $1073=((HEAP32[(($1072)>>2)])|0);
              $1074=($1073|0)==($1001|0);
              if ($1074) {
               $_pre_phi57_i_i=$1072;
               break;
              }
              _abort(); return ((0)|0);
              return ((0)|0);
             }
            } while(0);

            $1075=(($1043+12)|0);
            HEAP32[(($1075)>>2)]=$1046;
            HEAP32[(($_pre_phi57_i_i)>>2)]=$1043;
           } else {
            $1077=$1000;
            $_sum34_i_i=$999|24;
            $_sum96_i=((($_sum34_i_i)+($tsize_244_i))|0);
            $1078=(($tbase_245_i+$_sum96_i)|0);
            $1079=$1078;
            $1080=((HEAP32[(($1079)>>2)])|0);
            $_sum5_i_i=((($tsize_244_i)+(12))|0);
            $_sum97_i=((($_sum5_i_i)+($999))|0);
            $1081=(($tbase_245_i+$_sum97_i)|0);
            $1082=$1081;
            $1083=((HEAP32[(($1082)>>2)])|0);
            $1084=($1083|0)==($1077|0);
            do {
             if ($1084) {
              $_sum67_i_i=$999|16;
              $_sum103_i=((($_sum2_i23_i)+($_sum67_i_i))|0);
              $1102=(($tbase_245_i+$_sum103_i)|0);
              $1103=$1102;
              $1104=((HEAP32[(($1103)>>2)])|0);
              $1105=($1104|0)==0;
              if ($1105) {
               $_sum104_i=((($_sum67_i_i)+($tsize_244_i))|0);
               $1107=(($tbase_245_i+$_sum104_i)|0);
               $1108=$1107;
               $1109=((HEAP32[(($1108)>>2)])|0);
               $1110=($1109|0)==0;
               if ($1110) {
                $R_1_i_i=0;
                break;
               } else {
                $R_0_i_i=$1109;$RP_0_i_i=$1108;
               }
              } else {
               $R_0_i_i=$1104;$RP_0_i_i=$1103;
              }
              while(1) {


               $1111=(($R_0_i_i+20)|0);
               $1112=((HEAP32[(($1111)>>2)])|0);
               $1113=($1112|0)==0;
               if (!($1113)) {
                $R_0_i_i=$1112;$RP_0_i_i=$1111;
                continue;
               }
               $1115=(($R_0_i_i+16)|0);
               $1116=((HEAP32[(($1115)>>2)])|0);
               $1117=($1116|0)==0;
               if ($1117) {
                break;
               } else {
                $R_0_i_i=$1116;$RP_0_i_i=$1115;
               }
              }
              $1119=$RP_0_i_i;
              $1120=((HEAP32[((20224)>>2)])|0);
              $1121=($1119>>>0)<($1120>>>0);
              if ($1121) {
               _abort(); return ((0)|0);
               return ((0)|0);
              } else {
               HEAP32[(($RP_0_i_i)>>2)]=0;
               $R_1_i_i=$R_0_i_i;
               break;
              }
             } else {
              $_sum3637_i_i=$999|8;
              $_sum98_i=((($_sum3637_i_i)+($tsize_244_i))|0);
              $1086=(($tbase_245_i+$_sum98_i)|0);
              $1087=$1086;
              $1088=((HEAP32[(($1087)>>2)])|0);
              $1089=$1088;
              $1090=((HEAP32[((20224)>>2)])|0);
              $1091=($1089>>>0)<($1090>>>0);
              if ($1091) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1093=(($1088+12)|0);
              $1094=((HEAP32[(($1093)>>2)])|0);
              $1095=($1094|0)==($1077|0);
              if (!($1095)) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1097=(($1083+8)|0);
              $1098=((HEAP32[(($1097)>>2)])|0);
              $1099=($1098|0)==($1077|0);
              if ($1099) {
               HEAP32[(($1093)>>2)]=$1083;
               HEAP32[(($1097)>>2)]=$1088;
               $R_1_i_i=$1083;
               break;
              } else {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
             }
            } while(0);

            $1125=($1080|0)==0;
            if ($1125) {
             break;
            }
            $_sum31_i_i=((($tsize_244_i)+(28))|0);
            $_sum99_i=((($_sum31_i_i)+($999))|0);
            $1127=(($tbase_245_i+$_sum99_i)|0);
            $1128=$1127;
            $1129=((HEAP32[(($1128)>>2)])|0);
            $1130=((20512+($1129<<2))|0);
            $1131=((HEAP32[(($1130)>>2)])|0);
            $1132=($1077|0)==($1131|0);
            do {
             if ($1132) {
              HEAP32[(($1130)>>2)]=$R_1_i_i;
              $cond_i_i=($R_1_i_i|0)==0;
              if (!($cond_i_i)) {
               break;
              }
              $1134=1<<$1129;
              $1135=$1134^-1;
              $1136=((HEAP32[((20212)>>2)])|0);
              $1137=$1136&$1135;
              HEAP32[((20212)>>2)]=$1137;
              break L355;
             } else {
              $1139=$1080;
              $1140=((HEAP32[((20224)>>2)])|0);
              $1141=($1139>>>0)<($1140>>>0);
              if ($1141) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1143=(($1080+16)|0);
              $1144=((HEAP32[(($1143)>>2)])|0);
              $1145=($1144|0)==($1077|0);
              if ($1145) {
               HEAP32[(($1143)>>2)]=$R_1_i_i;
              } else {
               $1148=(($1080+20)|0);
               HEAP32[(($1148)>>2)]=$R_1_i_i;
              }
              $1151=($R_1_i_i|0)==0;
              if ($1151) {
               break L355;
              }
             }
            } while(0);
            $1153=$R_1_i_i;
            $1154=((HEAP32[((20224)>>2)])|0);
            $1155=($1153>>>0)<($1154>>>0);
            if ($1155) {
             _abort(); return ((0)|0);
             return ((0)|0);
            }
            $1157=(($R_1_i_i+24)|0);
            HEAP32[(($1157)>>2)]=$1080;
            $_sum3233_i_i=$999|16;
            $_sum100_i=((($_sum3233_i_i)+($tsize_244_i))|0);
            $1158=(($tbase_245_i+$_sum100_i)|0);
            $1159=$1158;
            $1160=((HEAP32[(($1159)>>2)])|0);
            $1161=($1160|0)==0;
            do {
             if (!($1161)) {
              $1163=$1160;
              $1164=((HEAP32[((20224)>>2)])|0);
              $1165=($1163>>>0)<($1164>>>0);
              if ($1165) {
               _abort(); return ((0)|0);
               return ((0)|0);
              } else {
               $1167=(($R_1_i_i+16)|0);
               HEAP32[(($1167)>>2)]=$1160;
               $1168=(($1160+24)|0);
               HEAP32[(($1168)>>2)]=$R_1_i_i;
               break;
              }
             }
            } while(0);
            $_sum101_i=((($_sum2_i23_i)+($_sum3233_i_i))|0);
            $1171=(($tbase_245_i+$_sum101_i)|0);
            $1172=$1171;
            $1173=((HEAP32[(($1172)>>2)])|0);
            $1174=($1173|0)==0;
            if ($1174) {
             break;
            }
            $1176=$1173;
            $1177=((HEAP32[((20224)>>2)])|0);
            $1178=($1176>>>0)<($1177>>>0);
            if ($1178) {
             _abort(); return ((0)|0);
             return ((0)|0);
            } else {
             $1180=(($R_1_i_i+20)|0);
             HEAP32[(($1180)>>2)]=$1173;
             $1181=(($1173+24)|0);
             HEAP32[(($1181)>>2)]=$R_1_i_i;
             break;
            }
           }
          } while(0);
          $_sum9_i_i=$1037|$999;
          $_sum102_i=((($_sum9_i_i)+($tsize_244_i))|0);
          $1185=(($tbase_245_i+$_sum102_i)|0);
          $1186=$1185;
          $1187=((($1037)+($1007))|0);
          $oldfirst_0_i_i=$1186;$qsize_0_i_i=$1187;
         } else {
          $oldfirst_0_i_i=$1001;$qsize_0_i_i=$1007;
         }


         $1189=(($oldfirst_0_i_i+4)|0);
         $1190=((HEAP32[(($1189)>>2)])|0);
         $1191=$1190&-2;
         HEAP32[(($1189)>>2)]=$1191;
         $1192=$qsize_0_i_i|1;
         $_sum10_i_i=((($_sum_i21_i)+(4))|0);
         $1193=(($tbase_245_i+$_sum10_i_i)|0);
         $1194=$1193;
         HEAP32[(($1194)>>2)]=$1192;
         $_sum11_i_i=((($qsize_0_i_i)+($_sum_i21_i))|0);
         $1195=(($tbase_245_i+$_sum11_i_i)|0);
         $1196=$1195;
         HEAP32[(($1196)>>2)]=$qsize_0_i_i;
         $1197=$qsize_0_i_i>>>3;
         $1198=($qsize_0_i_i>>>0)<((256)>>>0);
         if ($1198) {
          $1200=$1197<<1;
          $1201=((20248+($1200<<2))|0);
          $1202=$1201;
          $1203=((HEAP32[((20208)>>2)])|0);
          $1204=1<<$1197;
          $1205=$1203&$1204;
          $1206=($1205|0)==0;
          do {
           if ($1206) {
            $1208=$1203|$1204;
            HEAP32[((20208)>>2)]=$1208;
            $_sum27_pre_i_i=((($1200)+(2))|0);
            $_pre_i24_i=((20248+($_sum27_pre_i_i<<2))|0);
            $F4_0_i_i=$1202;$_pre_phi_i25_i=$_pre_i24_i;
           } else {
            $_sum30_i_i=((($1200)+(2))|0);
            $1210=((20248+($_sum30_i_i<<2))|0);
            $1211=((HEAP32[(($1210)>>2)])|0);
            $1212=$1211;
            $1213=((HEAP32[((20224)>>2)])|0);
            $1214=($1212>>>0)<($1213>>>0);
            if (!($1214)) {
             $F4_0_i_i=$1211;$_pre_phi_i25_i=$1210;
             break;
            }
            _abort(); return ((0)|0);
            return ((0)|0);
           }
          } while(0);


          HEAP32[(($_pre_phi_i25_i)>>2)]=$1006;
          $1217=(($F4_0_i_i+12)|0);
          HEAP32[(($1217)>>2)]=$1006;
          $_sum28_i_i=((($_sum_i21_i)+(8))|0);
          $1218=(($tbase_245_i+$_sum28_i_i)|0);
          $1219=$1218;
          HEAP32[(($1219)>>2)]=$F4_0_i_i;
          $_sum29_i_i=((($_sum_i21_i)+(12))|0);
          $1220=(($tbase_245_i+$_sum29_i_i)|0);
          $1221=$1220;
          HEAP32[(($1221)>>2)]=$1202;
          break;
         }
         $1223=$1005;
         $1224=$qsize_0_i_i>>>8;
         $1225=($1224|0)==0;
         do {
          if ($1225) {
           $I7_0_i_i=0;
          } else {
           $1227=($qsize_0_i_i>>>0)>((16777215)>>>0);
           if ($1227) {
            $I7_0_i_i=31;
            break;
           }
           $1229=((($1224)+(1048320))|0);
           $1230=$1229>>>16;
           $1231=$1230&8;
           $1232=$1224<<$1231;
           $1233=((($1232)+(520192))|0);
           $1234=$1233>>>16;
           $1235=$1234&4;
           $1236=$1235|$1231;
           $1237=$1232<<$1235;
           $1238=((($1237)+(245760))|0);
           $1239=$1238>>>16;
           $1240=$1239&2;
           $1241=$1236|$1240;
           $1242=(((14)-($1241))|0);
           $1243=$1237<<$1240;
           $1244=$1243>>>15;
           $1245=((($1242)+($1244))|0);
           $1246=$1245<<1;
           $1247=((($1245)+(7))|0);
           $1248=$qsize_0_i_i>>>($1247>>>0);
           $1249=$1248&1;
           $1250=$1249|$1246;
           $I7_0_i_i=$1250;
          }
         } while(0);

         $1252=((20512+($I7_0_i_i<<2))|0);
         $_sum12_i26_i=((($_sum_i21_i)+(28))|0);
         $1253=(($tbase_245_i+$_sum12_i26_i)|0);
         $1254=$1253;
         HEAP32[(($1254)>>2)]=$I7_0_i_i;
         $_sum13_i_i=((($_sum_i21_i)+(16))|0);
         $1255=(($tbase_245_i+$_sum13_i_i)|0);
         $_sum14_i_i=((($_sum_i21_i)+(20))|0);
         $1256=(($tbase_245_i+$_sum14_i_i)|0);
         $1257=$1256;
         HEAP32[(($1257)>>2)]=0;
         $1258=$1255;
         HEAP32[(($1258)>>2)]=0;
         $1259=((HEAP32[((20212)>>2)])|0);
         $1260=1<<$I7_0_i_i;
         $1261=$1259&$1260;
         $1262=($1261|0)==0;
         if ($1262) {
          $1264=$1259|$1260;
          HEAP32[((20212)>>2)]=$1264;
          HEAP32[(($1252)>>2)]=$1223;
          $1265=$1252;
          $_sum15_i_i=((($_sum_i21_i)+(24))|0);
          $1266=(($tbase_245_i+$_sum15_i_i)|0);
          $1267=$1266;
          HEAP32[(($1267)>>2)]=$1265;
          $_sum16_i_i=((($_sum_i21_i)+(12))|0);
          $1268=(($tbase_245_i+$_sum16_i_i)|0);
          $1269=$1268;
          HEAP32[(($1269)>>2)]=$1223;
          $_sum17_i_i=((($_sum_i21_i)+(8))|0);
          $1270=(($tbase_245_i+$_sum17_i_i)|0);
          $1271=$1270;
          HEAP32[(($1271)>>2)]=$1223;
          break;
         }
         $1273=((HEAP32[(($1252)>>2)])|0);
         $1274=($I7_0_i_i|0)==31;
         if ($1274) {
          $1279=0;
         } else {
          $1276=$I7_0_i_i>>>1;
          $1277=(((25)-($1276))|0);
          $1279=$1277;
         }

         $1280=$qsize_0_i_i<<$1279;
         $K8_0_i_i=$1280;$T_0_i27_i=$1273;
         while(1) {


          $1282=(($T_0_i27_i+4)|0);
          $1283=((HEAP32[(($1282)>>2)])|0);
          $1284=$1283&-8;
          $1285=($1284|0)==($qsize_0_i_i|0);
          if ($1285) {
           break;
          }
          $1287=$K8_0_i_i>>>31;
          $1288=(($T_0_i27_i+16+($1287<<2))|0);
          $1289=((HEAP32[(($1288)>>2)])|0);
          $1290=($1289|0)==0;
          $1291=$K8_0_i_i<<1;
          if ($1290) {
           label = 296;
           break;
          } else {
           $K8_0_i_i=$1291;$T_0_i27_i=$1289;
          }
         }
         if ((label|0) == 296) {
          $1293=$1288;
          $1294=((HEAP32[((20224)>>2)])|0);
          $1295=($1293>>>0)<($1294>>>0);
          if ($1295) {
           _abort(); return ((0)|0);
           return ((0)|0);
          } else {
           HEAP32[(($1288)>>2)]=$1223;
           $_sum24_i_i=((($_sum_i21_i)+(24))|0);
           $1297=(($tbase_245_i+$_sum24_i_i)|0);
           $1298=$1297;
           HEAP32[(($1298)>>2)]=$T_0_i27_i;
           $_sum25_i_i=((($_sum_i21_i)+(12))|0);
           $1299=(($tbase_245_i+$_sum25_i_i)|0);
           $1300=$1299;
           HEAP32[(($1300)>>2)]=$1223;
           $_sum26_i_i=((($_sum_i21_i)+(8))|0);
           $1301=(($tbase_245_i+$_sum26_i_i)|0);
           $1302=$1301;
           HEAP32[(($1302)>>2)]=$1223;
           break;
          }
         }
         $1305=(($T_0_i27_i+8)|0);
         $1306=((HEAP32[(($1305)>>2)])|0);
         $1307=$T_0_i27_i;
         $1308=((HEAP32[((20224)>>2)])|0);
         $1309=($1307>>>0)<($1308>>>0);
         if ($1309) {
          _abort(); return ((0)|0);
          return ((0)|0);
         }
         $1311=$1306;
         $1312=($1311>>>0)<($1308>>>0);
         if ($1312) {
          _abort(); return ((0)|0);
          return ((0)|0);
         } else {
          $1314=(($1306+12)|0);
          HEAP32[(($1314)>>2)]=$1223;
          HEAP32[(($1305)>>2)]=$1223;
          $_sum21_i_i=((($_sum_i21_i)+(8))|0);
          $1315=(($tbase_245_i+$_sum21_i_i)|0);
          $1316=$1315;
          HEAP32[(($1316)>>2)]=$1306;
          $_sum22_i_i=((($_sum_i21_i)+(12))|0);
          $1317=(($tbase_245_i+$_sum22_i_i)|0);
          $1318=$1317;
          HEAP32[(($1318)>>2)]=$T_0_i27_i;
          $_sum23_i_i=((($_sum_i21_i)+(24))|0);
          $1319=(($tbase_245_i+$_sum23_i_i)|0);
          $1320=$1319;
          HEAP32[(($1320)>>2)]=0;
          break;
         }
        }
       } while(0);
       $_sum1819_i_i=$989|8;
       $1321=(($tbase_245_i+$_sum1819_i_i)|0);
       $mem_0=$1321;

       return (($mem_0)|0);
      }
     } while(0);
     $1322=$888;
     $sp_0_i_i_i=20656;
     while(1) {

      $1324=(($sp_0_i_i_i)|0);
      $1325=((HEAP32[(($1324)>>2)])|0);
      $1326=($1325>>>0)>($1322>>>0);
      if (!($1326)) {
       $1328=(($sp_0_i_i_i+4)|0);
       $1329=((HEAP32[(($1328)>>2)])|0);
       $1330=(($1325+$1329)|0);
       $1331=($1330>>>0)>($1322>>>0);
       if ($1331) {
        break;
       }
      }
      $1333=(($sp_0_i_i_i+8)|0);
      $1334=((HEAP32[(($1333)>>2)])|0);
      $sp_0_i_i_i=$1334;
     }
     $_sum_i15_i=((($1329)-(47))|0);
     $_sum1_i16_i=((($1329)-(39))|0);
     $1335=(($1325+$_sum1_i16_i)|0);
     $1336=$1335;
     $1337=$1336&7;
     $1338=($1337|0)==0;
     if ($1338) {
      $1343=0;
     } else {
      $1340=(((-$1336))|0);
      $1341=$1340&7;
      $1343=$1341;
     }

     $_sum2_i17_i=((($_sum_i15_i)+($1343))|0);
     $1344=(($1325+$_sum2_i17_i)|0);
     $1345=(($888+16)|0);
     $1346=$1345;
     $1347=($1344>>>0)<($1346>>>0);
     $1348=($1347?$1322:$1344);
     $1349=(($1348+8)|0);
     $1350=$1349;
     $1351=((($tsize_244_i)-(40))|0);
     $1352=(($tbase_245_i+8)|0);
     $1353=$1352;
     $1354=$1353&7;
     $1355=($1354|0)==0;
     if ($1355) {
      $1359=0;
     } else {
      $1357=(((-$1353))|0);
      $1358=$1357&7;
      $1359=$1358;
     }

     $1360=(($tbase_245_i+$1359)|0);
     $1361=$1360;
     $1362=((($1351)-($1359))|0);
     HEAP32[((20232)>>2)]=$1361;
     HEAP32[((20220)>>2)]=$1362;
     $1363=$1362|1;
     $_sum_i_i_i=((($1359)+(4))|0);
     $1364=(($tbase_245_i+$_sum_i_i_i)|0);
     $1365=$1364;
     HEAP32[(($1365)>>2)]=$1363;
     $_sum2_i_i_i=((($tsize_244_i)-(36))|0);
     $1366=(($tbase_245_i+$_sum2_i_i_i)|0);
     $1367=$1366;
     HEAP32[(($1367)>>2)]=40;
     $1368=((HEAP32[((16448)>>2)])|0);
     HEAP32[((20236)>>2)]=$1368;
     $1369=(($1348+4)|0);
     $1370=$1369;
     HEAP32[(($1370)>>2)]=27;
     HEAP32[(($1349)>>2)]=((HEAP32[((20656)>>2)])|0);HEAP32[((($1349)+(4))>>2)]=((HEAP32[((20660)>>2)])|0);HEAP32[((($1349)+(8))>>2)]=((HEAP32[((20664)>>2)])|0);HEAP32[((($1349)+(12))>>2)]=((HEAP32[((20668)>>2)])|0);
     HEAP32[((20656)>>2)]=$tbase_245_i;
     HEAP32[((20660)>>2)]=$tsize_244_i;
     HEAP32[((20668)>>2)]=0;
     HEAP32[((20664)>>2)]=$1350;
     $1371=(($1348+28)|0);
     $1372=$1371;
     HEAP32[(($1372)>>2)]=7;
     $1373=(($1348+32)|0);
     $1374=($1373>>>0)<($1330>>>0);
     if ($1374) {
      $1375=$1372;
      while(1) {

       $1376=(($1375+4)|0);
       HEAP32[(($1376)>>2)]=7;
       $1377=(($1375+8)|0);
       $1378=$1377;
       $1379=($1378>>>0)<($1330>>>0);
       if ($1379) {
        $1375=$1376;
       } else {
        break;
       }
      }
     }
     $1380=($1348|0)==($1322|0);
     if ($1380) {
      break;
     }
     $1382=$1348;
     $1383=$888;
     $1384=((($1382)-($1383))|0);
     $1385=(($1322+$1384)|0);
     $_sum3_i_i=((($1384)+(4))|0);
     $1386=(($1322+$_sum3_i_i)|0);
     $1387=$1386;
     $1388=((HEAP32[(($1387)>>2)])|0);
     $1389=$1388&-2;
     HEAP32[(($1387)>>2)]=$1389;
     $1390=$1384|1;
     $1391=(($888+4)|0);
     HEAP32[(($1391)>>2)]=$1390;
     $1392=$1385;
     HEAP32[(($1392)>>2)]=$1384;
     $1393=$1384>>>3;
     $1394=($1384>>>0)<((256)>>>0);
     if ($1394) {
      $1396=$1393<<1;
      $1397=((20248+($1396<<2))|0);
      $1398=$1397;
      $1399=((HEAP32[((20208)>>2)])|0);
      $1400=1<<$1393;
      $1401=$1399&$1400;
      $1402=($1401|0)==0;
      do {
       if ($1402) {
        $1404=$1399|$1400;
        HEAP32[((20208)>>2)]=$1404;
        $_sum11_pre_i_i=((($1396)+(2))|0);
        $_pre_i_i=((20248+($_sum11_pre_i_i<<2))|0);
        $F_0_i_i=$1398;$_pre_phi_i_i=$_pre_i_i;
       } else {
        $_sum12_i_i=((($1396)+(2))|0);
        $1406=((20248+($_sum12_i_i<<2))|0);
        $1407=((HEAP32[(($1406)>>2)])|0);
        $1408=$1407;
        $1409=((HEAP32[((20224)>>2)])|0);
        $1410=($1408>>>0)<($1409>>>0);
        if (!($1410)) {
         $F_0_i_i=$1407;$_pre_phi_i_i=$1406;
         break;
        }
        _abort(); return ((0)|0);
        return ((0)|0);
       }
      } while(0);


      HEAP32[(($_pre_phi_i_i)>>2)]=$888;
      $1413=(($F_0_i_i+12)|0);
      HEAP32[(($1413)>>2)]=$888;
      $1414=(($888+8)|0);
      HEAP32[(($1414)>>2)]=$F_0_i_i;
      $1415=(($888+12)|0);
      HEAP32[(($1415)>>2)]=$1398;
      break;
     }
     $1417=$888;
     $1418=$1384>>>8;
     $1419=($1418|0)==0;
     do {
      if ($1419) {
       $I1_0_i_i=0;
      } else {
       $1421=($1384>>>0)>((16777215)>>>0);
       if ($1421) {
        $I1_0_i_i=31;
        break;
       }
       $1423=((($1418)+(1048320))|0);
       $1424=$1423>>>16;
       $1425=$1424&8;
       $1426=$1418<<$1425;
       $1427=((($1426)+(520192))|0);
       $1428=$1427>>>16;
       $1429=$1428&4;
       $1430=$1429|$1425;
       $1431=$1426<<$1429;
       $1432=((($1431)+(245760))|0);
       $1433=$1432>>>16;
       $1434=$1433&2;
       $1435=$1430|$1434;
       $1436=(((14)-($1435))|0);
       $1437=$1431<<$1434;
       $1438=$1437>>>15;
       $1439=((($1436)+($1438))|0);
       $1440=$1439<<1;
       $1441=((($1439)+(7))|0);
       $1442=$1384>>>($1441>>>0);
       $1443=$1442&1;
       $1444=$1443|$1440;
       $I1_0_i_i=$1444;
      }
     } while(0);

     $1446=((20512+($I1_0_i_i<<2))|0);
     $1447=(($888+28)|0);
     $I1_0_c_i_i=$I1_0_i_i;
     HEAP32[(($1447)>>2)]=$I1_0_c_i_i;
     $1448=(($888+20)|0);
     HEAP32[(($1448)>>2)]=0;
     $1449=(($888+16)|0);
     HEAP32[(($1449)>>2)]=0;
     $1450=((HEAP32[((20212)>>2)])|0);
     $1451=1<<$I1_0_i_i;
     $1452=$1450&$1451;
     $1453=($1452|0)==0;
     if ($1453) {
      $1455=$1450|$1451;
      HEAP32[((20212)>>2)]=$1455;
      HEAP32[(($1446)>>2)]=$1417;
      $1456=(($888+24)|0);
      $_c_i_i=$1446;
      HEAP32[(($1456)>>2)]=$_c_i_i;
      $1457=(($888+12)|0);
      HEAP32[(($1457)>>2)]=$888;
      $1458=(($888+8)|0);
      HEAP32[(($1458)>>2)]=$888;
      break;
     }
     $1460=((HEAP32[(($1446)>>2)])|0);
     $1461=($I1_0_i_i|0)==31;
     if ($1461) {
      $1466=0;
     } else {
      $1463=$I1_0_i_i>>>1;
      $1464=(((25)-($1463))|0);
      $1466=$1464;
     }

     $1467=$1384<<$1466;
     $K2_0_i_i=$1467;$T_0_i_i=$1460;
     while(1) {


      $1469=(($T_0_i_i+4)|0);
      $1470=((HEAP32[(($1469)>>2)])|0);
      $1471=$1470&-8;
      $1472=($1471|0)==($1384|0);
      if ($1472) {
       break;
      }
      $1474=$K2_0_i_i>>>31;
      $1475=(($T_0_i_i+16+($1474<<2))|0);
      $1476=((HEAP32[(($1475)>>2)])|0);
      $1477=($1476|0)==0;
      $1478=$K2_0_i_i<<1;
      if ($1477) {
       label = 331;
       break;
      } else {
       $K2_0_i_i=$1478;$T_0_i_i=$1476;
      }
     }
     if ((label|0) == 331) {
      $1480=$1475;
      $1481=((HEAP32[((20224)>>2)])|0);
      $1482=($1480>>>0)<($1481>>>0);
      if ($1482) {
       _abort(); return ((0)|0);
       return ((0)|0);
      } else {
       HEAP32[(($1475)>>2)]=$1417;
       $1484=(($888+24)|0);
       $T_0_c8_i_i=$T_0_i_i;
       HEAP32[(($1484)>>2)]=$T_0_c8_i_i;
       $1485=(($888+12)|0);
       HEAP32[(($1485)>>2)]=$888;
       $1486=(($888+8)|0);
       HEAP32[(($1486)>>2)]=$888;
       break;
      }
     }
     $1489=(($T_0_i_i+8)|0);
     $1490=((HEAP32[(($1489)>>2)])|0);
     $1491=$T_0_i_i;
     $1492=((HEAP32[((20224)>>2)])|0);
     $1493=($1491>>>0)<($1492>>>0);
     if ($1493) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $1495=$1490;
     $1496=($1495>>>0)<($1492>>>0);
     if ($1496) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      $1498=(($1490+12)|0);
      HEAP32[(($1498)>>2)]=$1417;
      HEAP32[(($1489)>>2)]=$1417;
      $1499=(($888+8)|0);
      $_c7_i_i=$1490;
      HEAP32[(($1499)>>2)]=$_c7_i_i;
      $1500=(($888+12)|0);
      $T_0_c_i_i=$T_0_i_i;
      HEAP32[(($1500)>>2)]=$T_0_c_i_i;
      $1501=(($888+24)|0);
      HEAP32[(($1501)>>2)]=0;
      break;
     }
    }
   } while(0);
   $1502=((HEAP32[((20220)>>2)])|0);
   $1503=($1502>>>0)>($nb_0>>>0);
   if (!($1503)) {
    break;
   }
   $1505=((($1502)-($nb_0))|0);
   HEAP32[((20220)>>2)]=$1505;
   $1506=((HEAP32[((20232)>>2)])|0);
   $1507=$1506;
   $1508=(($1507+$nb_0)|0);
   $1509=$1508;
   HEAP32[((20232)>>2)]=$1509;
   $1510=$1505|1;
   $_sum_i134=((($nb_0)+(4))|0);
   $1511=(($1507+$_sum_i134)|0);
   $1512=$1511;
   HEAP32[(($1512)>>2)]=$1510;
   $1513=$nb_0|3;
   $1514=(($1506+4)|0);
   HEAP32[(($1514)>>2)]=$1513;
   $1515=(($1506+8)|0);
   $1516=$1515;
   $mem_0=$1516;

   return (($mem_0)|0);
  }
 } while(0);
 $1517=((___errno_location())|0);
 HEAP32[(($1517)>>2)]=12;
 $mem_0=0;

 return (($mem_0)|0);
}


function _free($mem){
 $mem=($mem)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$8=0,$9=0,$10=0,$11=0,$12=0,$14=0,$_sum=0,$15=0,$16=0,$17=0,$18=0,$20=0,$21=0,$22=0,$_sum232=0;
 var $24=0,$25=0,$26=0,$27=0,$29=0,$30=0,$32=0,$33=0,$_sum276=0,$35=0,$36=0,$37=0,$_sum277=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0;
 var $46=0,$47=0,$49=0,$50=0,$51=0,$52=0,$54=0,$55=0,$56=0,$57=0,$59=0,$_pre307=0,$61=0,$62=0,$64=0,$65=0,$66=0,$_pre_phi308=0,$67=0,$69=0;
 var $_sum266=0,$70=0,$71=0,$72=0,$_sum267=0,$73=0,$74=0,$75=0,$76=0,$_sum273=0,$78=0,$79=0,$80=0,$81=0,$82=0,$84=0,$85=0,$86=0,$88=0,$89=0;
 var $90=0,$_sum269=0,$93=0,$94=0,$95=0,$96=0,$_sum268=0,$98=0,$99=0,$100=0,$101=0,$RP_0=0,$R_0=0,$102=0,$103=0,$104=0,$106=0,$107=0,$108=0,$110=0;
 var $111=0,$R_1=0,$115=0,$_sum270=0,$117=0,$118=0,$119=0,$120=0,$121=0,$122=0,$cond=0,$124=0,$125=0,$126=0,$127=0,$129=0,$130=0,$131=0,$133=0,$134=0;
 var $135=0,$138=0,$141=0,$143=0,$144=0,$145=0,$147=0,$_sum271=0,$148=0,$149=0,$150=0,$151=0,$153=0,$154=0,$155=0,$157=0,$158=0,$_sum272=0,$161=0,$162=0;
 var $163=0,$164=0,$166=0,$167=0,$168=0,$170=0,$171=0,$_sum233=0,$175=0,$176=0,$177=0,$178=0,$179=0,$181=0,$182=0,$183=0,$_sum264=0,$184=0,$185=0,$186=0;
 var $psize_0=0,$p_0=0,$188=0,$189=0,$_sum263=0,$191=0,$192=0,$193=0,$194=0,$phitmp=0,$196=0,$197=0,$199=0,$200=0,$202=0,$203=0,$204=0,$205=0,$206=0,$207=0;
 var $210=0,$211=0,$213=0,$214=0,$215=0,$216=0,$217=0,$218=0,$220=0,$221=0,$222=0,$223=0,$225=0,$226=0,$227=0,$_sum257258=0,$228=0,$229=0,$230=0,$231=0;
 var $232=0,$233=0,$234=0,$236=0,$237=0,$238=0,$240=0,$241=0,$242=0,$243=0,$245=0,$246=0,$247=0,$248=0,$250=0,$_pre305=0,$252=0,$253=0,$254=0,$256=0;
 var $257=0,$258=0,$_pre_phi306=0,$259=0,$261=0,$_sum235=0,$262=0,$263=0,$264=0,$_sum236237=0,$265=0,$266=0,$267=0,$268=0,$270=0,$271=0,$272=0,$273=0,$274=0,$275=0;
 var $277=0,$278=0,$279=0,$281=0,$282=0,$283=0,$_sum239=0,$286=0,$287=0,$288=0,$289=0,$_sum238=0,$291=0,$292=0,$293=0,$294=0,$RP9_0=0,$R7_0=0,$295=0,$296=0;
 var $297=0,$299=0,$300=0,$301=0,$303=0,$304=0,$305=0,$R7_1=0,$309=0,$_sum250=0,$311=0,$312=0,$313=0,$314=0,$315=0,$316=0,$cond298=0,$318=0,$319=0,$320=0;
 var $321=0,$323=0,$324=0,$325=0,$327=0,$328=0,$329=0,$332=0,$335=0,$337=0,$338=0,$339=0,$341=0,$_sum251=0,$342=0,$343=0,$344=0,$345=0,$347=0,$348=0;
 var $349=0,$351=0,$352=0,$_sum252=0,$355=0,$356=0,$357=0,$358=0,$360=0,$361=0,$362=0,$364=0,$365=0,$368=0,$369=0,$370=0,$371=0,$372=0,$373=0,$376=0;
 var $377=0,$378=0,$379=0,$380=0,$psize_1=0,$382=0,$383=0,$385=0,$386=0,$387=0,$388=0,$389=0,$390=0,$391=0,$393=0,$_sum248_pre=0,$_pre=0,$_sum249=0,$395=0,$396=0;
 var $397=0,$398=0,$399=0,$_pre_phi=0,$F16_0=0,$402=0,$403=0,$404=0,$406=0,$407=0,$408=0,$410=0,$412=0,$413=0,$414=0,$415=0,$416=0,$417=0,$418=0,$419=0;
 var $420=0,$421=0,$422=0,$423=0,$424=0,$425=0,$426=0,$427=0,$428=0,$429=0,$430=0,$431=0,$432=0,$433=0,$I18_0=0,$435=0,$436=0,$I18_0_c=0,$437=0,$438=0;
 var $439=0,$440=0,$441=0,$442=0,$444=0,$445=0,$_c=0,$446=0,$447=0,$449=0,$450=0,$452=0,$453=0,$455=0,$456=0,$T_0=0,$K19_0=0,$458=0,$459=0,$460=0;
 var $461=0,$463=0,$464=0,$465=0,$466=0,$467=0,$469=0,$470=0,$471=0,$473=0,$T_0_c245=0,$474=0,$475=0,$478=0,$479=0,$480=0,$481=0,$482=0,$484=0,$485=0;
 var $487=0,$488=0,$_c244=0,$489=0,$T_0_c=0,$490=0,$492=0,$493=0,$494=0,$sp_0_in_i=0,$sp_0_i=0,$495=0,$496=0,label=0;

 $1=($mem|0)==0;
 if ($1) {
  return;
 }
 $3=((($mem)-(8))|0);
 $4=$3;
 $5=((HEAP32[((20224)>>2)])|0);
 $6=($3>>>0)<($5>>>0);
 if ($6) {
  _abort();

 }
 $8=((($mem)-(4))|0);
 $9=$8;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=$10&3;
 $12=($11|0)==1;
 if ($12) {
  _abort();

 }
 $14=$10&-8;
 $_sum=((($14)-(8))|0);
 $15=(($mem+$_sum)|0);
 $16=$15;
 $17=$10&1;
 $18=($17|0)==0;
 L10: do {
  if ($18) {
   $20=$3;
   $21=((HEAP32[(($20)>>2)])|0);
   $22=($11|0)==0;
   if ($22) {
    return;
   }
   $_sum232=(((-8)-($21))|0);
   $24=(($mem+$_sum232)|0);
   $25=$24;
   $26=((($21)+($14))|0);
   $27=($24>>>0)<($5>>>0);
   if ($27) {
    _abort();

   }
   $29=((HEAP32[((20228)>>2)])|0);
   $30=($25|0)==($29|0);
   if ($30) {
    $_sum233=((($14)-(4))|0);
    $175=(($mem+$_sum233)|0);
    $176=$175;
    $177=((HEAP32[(($176)>>2)])|0);
    $178=$177&3;
    $179=($178|0)==3;
    if (!($179)) {
     $p_0=$25;$psize_0=$26;
     break;
    }
    HEAP32[((20216)>>2)]=$26;
    $181=((HEAP32[(($176)>>2)])|0);
    $182=$181&-2;
    HEAP32[(($176)>>2)]=$182;
    $183=$26|1;
    $_sum264=((($_sum232)+(4))|0);
    $184=(($mem+$_sum264)|0);
    $185=$184;
    HEAP32[(($185)>>2)]=$183;
    $186=$15;
    HEAP32[(($186)>>2)]=$26;
    return;
   }
   $32=$21>>>3;
   $33=($21>>>0)<((256)>>>0);
   if ($33) {
    $_sum276=((($_sum232)+(8))|0);
    $35=(($mem+$_sum276)|0);
    $36=$35;
    $37=((HEAP32[(($36)>>2)])|0);
    $_sum277=((($_sum232)+(12))|0);
    $38=(($mem+$_sum277)|0);
    $39=$38;
    $40=((HEAP32[(($39)>>2)])|0);
    $41=$32<<1;
    $42=((20248+($41<<2))|0);
    $43=$42;
    $44=($37|0)==($43|0);
    do {
     if (!($44)) {
      $46=$37;
      $47=($46>>>0)<($5>>>0);
      if ($47) {
       _abort();

      }
      $49=(($37+12)|0);
      $50=((HEAP32[(($49)>>2)])|0);
      $51=($50|0)==($25|0);
      if ($51) {
       break;
      }
      _abort();

     }
    } while(0);
    $52=($40|0)==($37|0);
    if ($52) {
     $54=1<<$32;
     $55=$54^-1;
     $56=((HEAP32[((20208)>>2)])|0);
     $57=$56&$55;
     HEAP32[((20208)>>2)]=$57;
     $p_0=$25;$psize_0=$26;
     break;
    }
    $59=($40|0)==($43|0);
    do {
     if ($59) {
      $_pre307=(($40+8)|0);
      $_pre_phi308=$_pre307;
     } else {
      $61=$40;
      $62=($61>>>0)<($5>>>0);
      if ($62) {
       _abort();

      }
      $64=(($40+8)|0);
      $65=((HEAP32[(($64)>>2)])|0);
      $66=($65|0)==($25|0);
      if ($66) {
       $_pre_phi308=$64;
       break;
      }
      _abort();

     }
    } while(0);

    $67=(($37+12)|0);
    HEAP32[(($67)>>2)]=$40;
    HEAP32[(($_pre_phi308)>>2)]=$37;
    $p_0=$25;$psize_0=$26;
    break;
   }
   $69=$24;
   $_sum266=((($_sum232)+(24))|0);
   $70=(($mem+$_sum266)|0);
   $71=$70;
   $72=((HEAP32[(($71)>>2)])|0);
   $_sum267=((($_sum232)+(12))|0);
   $73=(($mem+$_sum267)|0);
   $74=$73;
   $75=((HEAP32[(($74)>>2)])|0);
   $76=($75|0)==($69|0);
   do {
    if ($76) {
     $_sum269=((($_sum232)+(20))|0);
     $93=(($mem+$_sum269)|0);
     $94=$93;
     $95=((HEAP32[(($94)>>2)])|0);
     $96=($95|0)==0;
     if ($96) {
      $_sum268=((($_sum232)+(16))|0);
      $98=(($mem+$_sum268)|0);
      $99=$98;
      $100=((HEAP32[(($99)>>2)])|0);
      $101=($100|0)==0;
      if ($101) {
       $R_1=0;
       break;
      } else {
       $R_0=$100;$RP_0=$99;
      }
     } else {
      $R_0=$95;$RP_0=$94;
     }
     while(1) {


      $102=(($R_0+20)|0);
      $103=((HEAP32[(($102)>>2)])|0);
      $104=($103|0)==0;
      if (!($104)) {
       $R_0=$103;$RP_0=$102;
       continue;
      }
      $106=(($R_0+16)|0);
      $107=((HEAP32[(($106)>>2)])|0);
      $108=($107|0)==0;
      if ($108) {
       break;
      } else {
       $R_0=$107;$RP_0=$106;
      }
     }
     $110=$RP_0;
     $111=($110>>>0)<($5>>>0);
     if ($111) {
      _abort();

     } else {
      HEAP32[(($RP_0)>>2)]=0;
      $R_1=$R_0;
      break;
     }
    } else {
     $_sum273=((($_sum232)+(8))|0);
     $78=(($mem+$_sum273)|0);
     $79=$78;
     $80=((HEAP32[(($79)>>2)])|0);
     $81=$80;
     $82=($81>>>0)<($5>>>0);
     if ($82) {
      _abort();

     }
     $84=(($80+12)|0);
     $85=((HEAP32[(($84)>>2)])|0);
     $86=($85|0)==($69|0);
     if (!($86)) {
      _abort();

     }
     $88=(($75+8)|0);
     $89=((HEAP32[(($88)>>2)])|0);
     $90=($89|0)==($69|0);
     if ($90) {
      HEAP32[(($84)>>2)]=$75;
      HEAP32[(($88)>>2)]=$80;
      $R_1=$75;
      break;
     } else {
      _abort();

     }
    }
   } while(0);

   $115=($72|0)==0;
   if ($115) {
    $p_0=$25;$psize_0=$26;
    break;
   }
   $_sum270=((($_sum232)+(28))|0);
   $117=(($mem+$_sum270)|0);
   $118=$117;
   $119=((HEAP32[(($118)>>2)])|0);
   $120=((20512+($119<<2))|0);
   $121=((HEAP32[(($120)>>2)])|0);
   $122=($69|0)==($121|0);
   do {
    if ($122) {
     HEAP32[(($120)>>2)]=$R_1;
     $cond=($R_1|0)==0;
     if (!($cond)) {
      break;
     }
     $124=1<<$119;
     $125=$124^-1;
     $126=((HEAP32[((20212)>>2)])|0);
     $127=$126&$125;
     HEAP32[((20212)>>2)]=$127;
     $p_0=$25;$psize_0=$26;
     break L10;
    } else {
     $129=$72;
     $130=((HEAP32[((20224)>>2)])|0);
     $131=($129>>>0)<($130>>>0);
     if ($131) {
      _abort();

     }
     $133=(($72+16)|0);
     $134=((HEAP32[(($133)>>2)])|0);
     $135=($134|0)==($69|0);
     if ($135) {
      HEAP32[(($133)>>2)]=$R_1;
     } else {
      $138=(($72+20)|0);
      HEAP32[(($138)>>2)]=$R_1;
     }
     $141=($R_1|0)==0;
     if ($141) {
      $p_0=$25;$psize_0=$26;
      break L10;
     }
    }
   } while(0);
   $143=$R_1;
   $144=((HEAP32[((20224)>>2)])|0);
   $145=($143>>>0)<($144>>>0);
   if ($145) {
    _abort();

   }
   $147=(($R_1+24)|0);
   HEAP32[(($147)>>2)]=$72;
   $_sum271=((($_sum232)+(16))|0);
   $148=(($mem+$_sum271)|0);
   $149=$148;
   $150=((HEAP32[(($149)>>2)])|0);
   $151=($150|0)==0;
   do {
    if (!($151)) {
     $153=$150;
     $154=((HEAP32[((20224)>>2)])|0);
     $155=($153>>>0)<($154>>>0);
     if ($155) {
      _abort();

     } else {
      $157=(($R_1+16)|0);
      HEAP32[(($157)>>2)]=$150;
      $158=(($150+24)|0);
      HEAP32[(($158)>>2)]=$R_1;
      break;
     }
    }
   } while(0);
   $_sum272=((($_sum232)+(20))|0);
   $161=(($mem+$_sum272)|0);
   $162=$161;
   $163=((HEAP32[(($162)>>2)])|0);
   $164=($163|0)==0;
   if ($164) {
    $p_0=$25;$psize_0=$26;
    break;
   }
   $166=$163;
   $167=((HEAP32[((20224)>>2)])|0);
   $168=($166>>>0)<($167>>>0);
   if ($168) {
    _abort();

   } else {
    $170=(($R_1+20)|0);
    HEAP32[(($170)>>2)]=$163;
    $171=(($163+24)|0);
    HEAP32[(($171)>>2)]=$R_1;
    $p_0=$25;$psize_0=$26;
    break;
   }
  } else {
   $p_0=$4;$psize_0=$14;
  }
 } while(0);


 $188=$p_0;
 $189=($188>>>0)<($15>>>0);
 if (!($189)) {
  _abort();

 }
 $_sum263=((($14)-(4))|0);
 $191=(($mem+$_sum263)|0);
 $192=$191;
 $193=((HEAP32[(($192)>>2)])|0);
 $194=$193&1;
 $phitmp=($194|0)==0;
 if ($phitmp) {
  _abort();

 }
 $196=$193&2;
 $197=($196|0)==0;
 do {
  if ($197) {
   $199=((HEAP32[((20232)>>2)])|0);
   $200=($16|0)==($199|0);
   if ($200) {
    $202=((HEAP32[((20220)>>2)])|0);
    $203=((($202)+($psize_0))|0);
    HEAP32[((20220)>>2)]=$203;
    HEAP32[((20232)>>2)]=$p_0;
    $204=$203|1;
    $205=(($p_0+4)|0);
    HEAP32[(($205)>>2)]=$204;
    $206=((HEAP32[((20228)>>2)])|0);
    $207=($p_0|0)==($206|0);
    if (!($207)) {
     return;
    }
    HEAP32[((20228)>>2)]=0;
    HEAP32[((20216)>>2)]=0;
    return;
   }
   $210=((HEAP32[((20228)>>2)])|0);
   $211=($16|0)==($210|0);
   if ($211) {
    $213=((HEAP32[((20216)>>2)])|0);
    $214=((($213)+($psize_0))|0);
    HEAP32[((20216)>>2)]=$214;
    HEAP32[((20228)>>2)]=$p_0;
    $215=$214|1;
    $216=(($p_0+4)|0);
    HEAP32[(($216)>>2)]=$215;
    $217=(($188+$214)|0);
    $218=$217;
    HEAP32[(($218)>>2)]=$214;
    return;
   }
   $220=$193&-8;
   $221=((($220)+($psize_0))|0);
   $222=$193>>>3;
   $223=($193>>>0)<((256)>>>0);
   L113: do {
    if ($223) {
     $225=(($mem+$14)|0);
     $226=$225;
     $227=((HEAP32[(($226)>>2)])|0);
     $_sum257258=$14|4;
     $228=(($mem+$_sum257258)|0);
     $229=$228;
     $230=((HEAP32[(($229)>>2)])|0);
     $231=$222<<1;
     $232=((20248+($231<<2))|0);
     $233=$232;
     $234=($227|0)==($233|0);
     do {
      if (!($234)) {
       $236=$227;
       $237=((HEAP32[((20224)>>2)])|0);
       $238=($236>>>0)<($237>>>0);
       if ($238) {
        _abort();

       }
       $240=(($227+12)|0);
       $241=((HEAP32[(($240)>>2)])|0);
       $242=($241|0)==($16|0);
       if ($242) {
        break;
       }
       _abort();

      }
     } while(0);
     $243=($230|0)==($227|0);
     if ($243) {
      $245=1<<$222;
      $246=$245^-1;
      $247=((HEAP32[((20208)>>2)])|0);
      $248=$247&$246;
      HEAP32[((20208)>>2)]=$248;
      break;
     }
     $250=($230|0)==($233|0);
     do {
      if ($250) {
       $_pre305=(($230+8)|0);
       $_pre_phi306=$_pre305;
      } else {
       $252=$230;
       $253=((HEAP32[((20224)>>2)])|0);
       $254=($252>>>0)<($253>>>0);
       if ($254) {
        _abort();

       }
       $256=(($230+8)|0);
       $257=((HEAP32[(($256)>>2)])|0);
       $258=($257|0)==($16|0);
       if ($258) {
        $_pre_phi306=$256;
        break;
       }
       _abort();

      }
     } while(0);

     $259=(($227+12)|0);
     HEAP32[(($259)>>2)]=$230;
     HEAP32[(($_pre_phi306)>>2)]=$227;
    } else {
     $261=$15;
     $_sum235=((($14)+(16))|0);
     $262=(($mem+$_sum235)|0);
     $263=$262;
     $264=((HEAP32[(($263)>>2)])|0);
     $_sum236237=$14|4;
     $265=(($mem+$_sum236237)|0);
     $266=$265;
     $267=((HEAP32[(($266)>>2)])|0);
     $268=($267|0)==($261|0);
     do {
      if ($268) {
       $_sum239=((($14)+(12))|0);
       $286=(($mem+$_sum239)|0);
       $287=$286;
       $288=((HEAP32[(($287)>>2)])|0);
       $289=($288|0)==0;
       if ($289) {
        $_sum238=((($14)+(8))|0);
        $291=(($mem+$_sum238)|0);
        $292=$291;
        $293=((HEAP32[(($292)>>2)])|0);
        $294=($293|0)==0;
        if ($294) {
         $R7_1=0;
         break;
        } else {
         $R7_0=$293;$RP9_0=$292;
        }
       } else {
        $R7_0=$288;$RP9_0=$287;
       }
       while(1) {


        $295=(($R7_0+20)|0);
        $296=((HEAP32[(($295)>>2)])|0);
        $297=($296|0)==0;
        if (!($297)) {
         $R7_0=$296;$RP9_0=$295;
         continue;
        }
        $299=(($R7_0+16)|0);
        $300=((HEAP32[(($299)>>2)])|0);
        $301=($300|0)==0;
        if ($301) {
         break;
        } else {
         $R7_0=$300;$RP9_0=$299;
        }
       }
       $303=$RP9_0;
       $304=((HEAP32[((20224)>>2)])|0);
       $305=($303>>>0)<($304>>>0);
       if ($305) {
        _abort();

       } else {
        HEAP32[(($RP9_0)>>2)]=0;
        $R7_1=$R7_0;
        break;
       }
      } else {
       $270=(($mem+$14)|0);
       $271=$270;
       $272=((HEAP32[(($271)>>2)])|0);
       $273=$272;
       $274=((HEAP32[((20224)>>2)])|0);
       $275=($273>>>0)<($274>>>0);
       if ($275) {
        _abort();

       }
       $277=(($272+12)|0);
       $278=((HEAP32[(($277)>>2)])|0);
       $279=($278|0)==($261|0);
       if (!($279)) {
        _abort();

       }
       $281=(($267+8)|0);
       $282=((HEAP32[(($281)>>2)])|0);
       $283=($282|0)==($261|0);
       if ($283) {
        HEAP32[(($277)>>2)]=$267;
        HEAP32[(($281)>>2)]=$272;
        $R7_1=$267;
        break;
       } else {
        _abort();

       }
      }
     } while(0);

     $309=($264|0)==0;
     if ($309) {
      break;
     }
     $_sum250=((($14)+(20))|0);
     $311=(($mem+$_sum250)|0);
     $312=$311;
     $313=((HEAP32[(($312)>>2)])|0);
     $314=((20512+($313<<2))|0);
     $315=((HEAP32[(($314)>>2)])|0);
     $316=($261|0)==($315|0);
     do {
      if ($316) {
       HEAP32[(($314)>>2)]=$R7_1;
       $cond298=($R7_1|0)==0;
       if (!($cond298)) {
        break;
       }
       $318=1<<$313;
       $319=$318^-1;
       $320=((HEAP32[((20212)>>2)])|0);
       $321=$320&$319;
       HEAP32[((20212)>>2)]=$321;
       break L113;
      } else {
       $323=$264;
       $324=((HEAP32[((20224)>>2)])|0);
       $325=($323>>>0)<($324>>>0);
       if ($325) {
        _abort();

       }
       $327=(($264+16)|0);
       $328=((HEAP32[(($327)>>2)])|0);
       $329=($328|0)==($261|0);
       if ($329) {
        HEAP32[(($327)>>2)]=$R7_1;
       } else {
        $332=(($264+20)|0);
        HEAP32[(($332)>>2)]=$R7_1;
       }
       $335=($R7_1|0)==0;
       if ($335) {
        break L113;
       }
      }
     } while(0);
     $337=$R7_1;
     $338=((HEAP32[((20224)>>2)])|0);
     $339=($337>>>0)<($338>>>0);
     if ($339) {
      _abort();

     }
     $341=(($R7_1+24)|0);
     HEAP32[(($341)>>2)]=$264;
     $_sum251=((($14)+(8))|0);
     $342=(($mem+$_sum251)|0);
     $343=$342;
     $344=((HEAP32[(($343)>>2)])|0);
     $345=($344|0)==0;
     do {
      if (!($345)) {
       $347=$344;
       $348=((HEAP32[((20224)>>2)])|0);
       $349=($347>>>0)<($348>>>0);
       if ($349) {
        _abort();

       } else {
        $351=(($R7_1+16)|0);
        HEAP32[(($351)>>2)]=$344;
        $352=(($344+24)|0);
        HEAP32[(($352)>>2)]=$R7_1;
        break;
       }
      }
     } while(0);
     $_sum252=((($14)+(12))|0);
     $355=(($mem+$_sum252)|0);
     $356=$355;
     $357=((HEAP32[(($356)>>2)])|0);
     $358=($357|0)==0;
     if ($358) {
      break;
     }
     $360=$357;
     $361=((HEAP32[((20224)>>2)])|0);
     $362=($360>>>0)<($361>>>0);
     if ($362) {
      _abort();

     } else {
      $364=(($R7_1+20)|0);
      HEAP32[(($364)>>2)]=$357;
      $365=(($357+24)|0);
      HEAP32[(($365)>>2)]=$R7_1;
      break;
     }
    }
   } while(0);
   $368=$221|1;
   $369=(($p_0+4)|0);
   HEAP32[(($369)>>2)]=$368;
   $370=(($188+$221)|0);
   $371=$370;
   HEAP32[(($371)>>2)]=$221;
   $372=((HEAP32[((20228)>>2)])|0);
   $373=($p_0|0)==($372|0);
   if (!($373)) {
    $psize_1=$221;
    break;
   }
   HEAP32[((20216)>>2)]=$221;
   return;
  } else {
   $376=$193&-2;
   HEAP32[(($192)>>2)]=$376;
   $377=$psize_0|1;
   $378=(($p_0+4)|0);
   HEAP32[(($378)>>2)]=$377;
   $379=(($188+$psize_0)|0);
   $380=$379;
   HEAP32[(($380)>>2)]=$psize_0;
   $psize_1=$psize_0;
  }
 } while(0);

 $382=$psize_1>>>3;
 $383=($psize_1>>>0)<((256)>>>0);
 if ($383) {
  $385=$382<<1;
  $386=((20248+($385<<2))|0);
  $387=$386;
  $388=((HEAP32[((20208)>>2)])|0);
  $389=1<<$382;
  $390=$388&$389;
  $391=($390|0)==0;
  do {
   if ($391) {
    $393=$388|$389;
    HEAP32[((20208)>>2)]=$393;
    $_sum248_pre=((($385)+(2))|0);
    $_pre=((20248+($_sum248_pre<<2))|0);
    $F16_0=$387;$_pre_phi=$_pre;
   } else {
    $_sum249=((($385)+(2))|0);
    $395=((20248+($_sum249<<2))|0);
    $396=((HEAP32[(($395)>>2)])|0);
    $397=$396;
    $398=((HEAP32[((20224)>>2)])|0);
    $399=($397>>>0)<($398>>>0);
    if (!($399)) {
     $F16_0=$396;$_pre_phi=$395;
     break;
    }
    _abort();

   }
  } while(0);


  HEAP32[(($_pre_phi)>>2)]=$p_0;
  $402=(($F16_0+12)|0);
  HEAP32[(($402)>>2)]=$p_0;
  $403=(($p_0+8)|0);
  HEAP32[(($403)>>2)]=$F16_0;
  $404=(($p_0+12)|0);
  HEAP32[(($404)>>2)]=$387;
  return;
 }
 $406=$p_0;
 $407=$psize_1>>>8;
 $408=($407|0)==0;
 do {
  if ($408) {
   $I18_0=0;
  } else {
   $410=($psize_1>>>0)>((16777215)>>>0);
   if ($410) {
    $I18_0=31;
    break;
   }
   $412=((($407)+(1048320))|0);
   $413=$412>>>16;
   $414=$413&8;
   $415=$407<<$414;
   $416=((($415)+(520192))|0);
   $417=$416>>>16;
   $418=$417&4;
   $419=$418|$414;
   $420=$415<<$418;
   $421=((($420)+(245760))|0);
   $422=$421>>>16;
   $423=$422&2;
   $424=$419|$423;
   $425=(((14)-($424))|0);
   $426=$420<<$423;
   $427=$426>>>15;
   $428=((($425)+($427))|0);
   $429=$428<<1;
   $430=((($428)+(7))|0);
   $431=$psize_1>>>($430>>>0);
   $432=$431&1;
   $433=$432|$429;
   $I18_0=$433;
  }
 } while(0);

 $435=((20512+($I18_0<<2))|0);
 $436=(($p_0+28)|0);
 $I18_0_c=$I18_0;
 HEAP32[(($436)>>2)]=$I18_0_c;
 $437=(($p_0+20)|0);
 HEAP32[(($437)>>2)]=0;
 $438=(($p_0+16)|0);
 HEAP32[(($438)>>2)]=0;
 $439=((HEAP32[((20212)>>2)])|0);
 $440=1<<$I18_0;
 $441=$439&$440;
 $442=($441|0)==0;
 do {
  if ($442) {
   $444=$439|$440;
   HEAP32[((20212)>>2)]=$444;
   HEAP32[(($435)>>2)]=$406;
   $445=(($p_0+24)|0);
   $_c=$435;
   HEAP32[(($445)>>2)]=$_c;
   $446=(($p_0+12)|0);
   HEAP32[(($446)>>2)]=$p_0;
   $447=(($p_0+8)|0);
   HEAP32[(($447)>>2)]=$p_0;
  } else {
   $449=((HEAP32[(($435)>>2)])|0);
   $450=($I18_0|0)==31;
   if ($450) {
    $455=0;
   } else {
    $452=$I18_0>>>1;
    $453=(((25)-($452))|0);
    $455=$453;
   }

   $456=$psize_1<<$455;
   $K19_0=$456;$T_0=$449;
   while(1) {


    $458=(($T_0+4)|0);
    $459=((HEAP32[(($458)>>2)])|0);
    $460=$459&-8;
    $461=($460|0)==($psize_1|0);
    if ($461) {
     break;
    }
    $463=$K19_0>>>31;
    $464=(($T_0+16+($463<<2))|0);
    $465=((HEAP32[(($464)>>2)])|0);
    $466=($465|0)==0;
    $467=$K19_0<<1;
    if ($466) {
     label = 129;
     break;
    } else {
     $K19_0=$467;$T_0=$465;
    }
   }
   if ((label|0) == 129) {
    $469=$464;
    $470=((HEAP32[((20224)>>2)])|0);
    $471=($469>>>0)<($470>>>0);
    if ($471) {
     _abort();

    } else {
     HEAP32[(($464)>>2)]=$406;
     $473=(($p_0+24)|0);
     $T_0_c245=$T_0;
     HEAP32[(($473)>>2)]=$T_0_c245;
     $474=(($p_0+12)|0);
     HEAP32[(($474)>>2)]=$p_0;
     $475=(($p_0+8)|0);
     HEAP32[(($475)>>2)]=$p_0;
     break;
    }
   }
   $478=(($T_0+8)|0);
   $479=((HEAP32[(($478)>>2)])|0);
   $480=$T_0;
   $481=((HEAP32[((20224)>>2)])|0);
   $482=($480>>>0)<($481>>>0);
   if ($482) {
    _abort();

   }
   $484=$479;
   $485=($484>>>0)<($481>>>0);
   if ($485) {
    _abort();

   } else {
    $487=(($479+12)|0);
    HEAP32[(($487)>>2)]=$406;
    HEAP32[(($478)>>2)]=$406;
    $488=(($p_0+8)|0);
    $_c244=$479;
    HEAP32[(($488)>>2)]=$_c244;
    $489=(($p_0+12)|0);
    $T_0_c=$T_0;
    HEAP32[(($489)>>2)]=$T_0_c;
    $490=(($p_0+24)|0);
    HEAP32[(($490)>>2)]=0;
    break;
   }
  }
 } while(0);
 $492=((HEAP32[((20240)>>2)])|0);
 $493=((($492)-(1))|0);
 HEAP32[((20240)>>2)]=$493;
 $494=($493|0)==0;
 if ($494) {
  $sp_0_in_i=20664;
 } else {
  return;
 }
 while(1) {

  $sp_0_i=((HEAP32[(($sp_0_in_i)>>2)])|0);
  $495=($sp_0_i|0)==0;
  $496=(($sp_0_i+8)|0);
  if ($495) {
   break;
  } else {
   $sp_0_in_i=$496;
  }
 }
 HEAP32[((20240)>>2)]=-1;
 return;
}


function __Znwj($size){
 $size=($size)|0;
 var $1=0,$_size=0,$3=0,$4=0,$6=0,$7=0,$9=0,$lpad_phi$0=0,$lpad_phi$1=0,$11=0,$12=0,$14=0,$16=0,$17=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,label=0;

 $1=($size|0)==0;
 $_size=($1?1:$size);
 while(1) {
  $3=((_malloc($_size))|0);
  $4=($3|0)==0;
  if (!($4)) {
   label = 10;
   break;
  }
  $6=(tempValue=((HEAP32[((21536)>>2)])|0),HEAP32[((21536)>>2)]=((tempValue+0)|0),tempValue);
  $7=($6|0)==0;
  if ($7) {
   break;
  }
  $9=$6;
  FUNCTION_TABLE_v[($9)&63]();
 }
 if ((label|0) == 10) {
  return (($3)|0);
 }
 $16=((___cxa_allocate_exception(((4)|0)))|0);
 $17=$16;
 HEAP32[(($17)>>2)]=13312;
 ___cxa_throw((($16)|0),((15496)|0),(((120))|0));
 return ((0)|0);
}


function __ZdlPv($ptr){
 $ptr=($ptr)|0;
 var $1=0,label=0;

 $1=($ptr|0)==0;
 if ($1) {
  return;
 }
 _free($ptr);
 return;
}


function __ZNSt9bad_allocD0Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);

 $2=$this;
 __ZdlPv($2);
 return;
}


function __ZNSt9bad_allocD2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);

 return;
}


function __ZNKSt9bad_alloc4whatEv($this){
 $this=($this)|0;
 var label=0;

 return ((4600)|0);
}


function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[(dest)]=((HEAP8[(src)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[(dest)]=((HEAP8[(src)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[(ptr)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[(ptr)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[(curr)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}


// EMSCRIPTEN_END_FUNCS

  function v____cxa_pure_virtual__wrapper() {  ; ___cxa_pure_virtual() }

  function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    FUNCTION_TABLE_viiiii[index&63](a1|0,a2|0,a3|0,a4|0,a5|0);
  }


  function jsCall_viiiii_0(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(0,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_1(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(1,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_2(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(2,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_3(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(3,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_4(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(4,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_5(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(5,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_6(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(6,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_7(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(7,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_8(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(8,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_9(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(9,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_10(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(10,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_11(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(11,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_12(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(12,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_13(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(13,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_14(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(14,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_15(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(15,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_16(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(16,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_17(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(17,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_18(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(18,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function jsCall_viiiii_19(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    jsCall(19,a1|0,a2|0,a3|0,a4|0,a5|0);
  }



  function dynCall_viifi(index,a1,a2,a3,a4) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    FUNCTION_TABLE_viifi[index&63](a1|0,a2|0,+a3,a4|0);
  }


  function jsCall_viifi_0(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(0,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_1(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(1,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_2(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(2,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_3(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(3,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_4(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(4,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_5(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(5,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_6(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(6,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_7(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(7,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_8(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(8,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_9(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(9,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_10(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(10,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_11(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(11,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_12(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(12,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_13(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(13,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_14(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(14,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_15(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(15,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_16(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(16,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_17(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(17,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_18(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(18,a1|0,a2|0,+a3,a4|0);
  }



  function jsCall_viifi_19(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0;
    jsCall(19,a1|0,a2|0,+a3,a4|0);
  }



  function dynCall_vi(index,a1) {
    index = index|0;
    a1=a1|0;
    FUNCTION_TABLE_vi[index&255](a1|0);
  }


  function jsCall_vi_0(a1) {
    a1=a1|0;
    jsCall(0,a1|0);
  }



  function jsCall_vi_1(a1) {
    a1=a1|0;
    jsCall(1,a1|0);
  }



  function jsCall_vi_2(a1) {
    a1=a1|0;
    jsCall(2,a1|0);
  }



  function jsCall_vi_3(a1) {
    a1=a1|0;
    jsCall(3,a1|0);
  }



  function jsCall_vi_4(a1) {
    a1=a1|0;
    jsCall(4,a1|0);
  }



  function jsCall_vi_5(a1) {
    a1=a1|0;
    jsCall(5,a1|0);
  }



  function jsCall_vi_6(a1) {
    a1=a1|0;
    jsCall(6,a1|0);
  }



  function jsCall_vi_7(a1) {
    a1=a1|0;
    jsCall(7,a1|0);
  }



  function jsCall_vi_8(a1) {
    a1=a1|0;
    jsCall(8,a1|0);
  }



  function jsCall_vi_9(a1) {
    a1=a1|0;
    jsCall(9,a1|0);
  }



  function jsCall_vi_10(a1) {
    a1=a1|0;
    jsCall(10,a1|0);
  }



  function jsCall_vi_11(a1) {
    a1=a1|0;
    jsCall(11,a1|0);
  }



  function jsCall_vi_12(a1) {
    a1=a1|0;
    jsCall(12,a1|0);
  }



  function jsCall_vi_13(a1) {
    a1=a1|0;
    jsCall(13,a1|0);
  }



  function jsCall_vi_14(a1) {
    a1=a1|0;
    jsCall(14,a1|0);
  }



  function jsCall_vi_15(a1) {
    a1=a1|0;
    jsCall(15,a1|0);
  }



  function jsCall_vi_16(a1) {
    a1=a1|0;
    jsCall(16,a1|0);
  }



  function jsCall_vi_17(a1) {
    a1=a1|0;
    jsCall(17,a1|0);
  }



  function jsCall_vi_18(a1) {
    a1=a1|0;
    jsCall(18,a1|0);
  }



  function jsCall_vi_19(a1) {
    a1=a1|0;
    jsCall(19,a1|0);
  }



  function dynCall_vii(index,a1,a2) {
    index = index|0;
    a1=a1|0; a2=a2|0;
    FUNCTION_TABLE_vii[index&255](a1|0,a2|0);
  }


  function jsCall_vii_0(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(0,a1|0,a2|0);
  }



  function jsCall_vii_1(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(1,a1|0,a2|0);
  }



  function jsCall_vii_2(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(2,a1|0,a2|0);
  }



  function jsCall_vii_3(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(3,a1|0,a2|0);
  }



  function jsCall_vii_4(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(4,a1|0,a2|0);
  }



  function jsCall_vii_5(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(5,a1|0,a2|0);
  }



  function jsCall_vii_6(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(6,a1|0,a2|0);
  }



  function jsCall_vii_7(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(7,a1|0,a2|0);
  }



  function jsCall_vii_8(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(8,a1|0,a2|0);
  }



  function jsCall_vii_9(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(9,a1|0,a2|0);
  }



  function jsCall_vii_10(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(10,a1|0,a2|0);
  }



  function jsCall_vii_11(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(11,a1|0,a2|0);
  }



  function jsCall_vii_12(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(12,a1|0,a2|0);
  }



  function jsCall_vii_13(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(13,a1|0,a2|0);
  }



  function jsCall_vii_14(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(14,a1|0,a2|0);
  }



  function jsCall_vii_15(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(15,a1|0,a2|0);
  }



  function jsCall_vii_16(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(16,a1|0,a2|0);
  }



  function jsCall_vii_17(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(17,a1|0,a2|0);
  }



  function jsCall_vii_18(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(18,a1|0,a2|0);
  }



  function jsCall_vii_19(a1,a2) {
    a1=a1|0; a2=a2|0;
    jsCall(19,a1|0,a2|0);
  }



  function dynCall_iiii(index,a1,a2,a3) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0;
    return FUNCTION_TABLE_iiii[index&63](a1|0,a2|0,a3|0)|0;
  }


  function jsCall_iiii_0(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(0,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_1(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(1,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_2(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(2,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_3(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(3,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_4(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(4,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_5(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(5,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_6(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(6,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_7(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(7,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_8(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(8,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_9(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(9,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_10(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(10,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_11(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(11,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_12(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(12,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_13(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(13,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_14(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(14,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_15(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(15,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_16(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(16,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_17(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(17,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_18(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(18,a1|0,a2|0,a3|0)|0;
  }



  function jsCall_iiii_19(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    return jsCall(19,a1|0,a2|0,a3|0)|0;
  }



  function dynCall_ii(index,a1) {
    index = index|0;
    a1=a1|0;
    return FUNCTION_TABLE_ii[index&63](a1|0)|0;
  }


  function jsCall_ii_0(a1) {
    a1=a1|0;
    return jsCall(0,a1|0)|0;
  }



  function jsCall_ii_1(a1) {
    a1=a1|0;
    return jsCall(1,a1|0)|0;
  }



  function jsCall_ii_2(a1) {
    a1=a1|0;
    return jsCall(2,a1|0)|0;
  }



  function jsCall_ii_3(a1) {
    a1=a1|0;
    return jsCall(3,a1|0)|0;
  }



  function jsCall_ii_4(a1) {
    a1=a1|0;
    return jsCall(4,a1|0)|0;
  }



  function jsCall_ii_5(a1) {
    a1=a1|0;
    return jsCall(5,a1|0)|0;
  }



  function jsCall_ii_6(a1) {
    a1=a1|0;
    return jsCall(6,a1|0)|0;
  }



  function jsCall_ii_7(a1) {
    a1=a1|0;
    return jsCall(7,a1|0)|0;
  }



  function jsCall_ii_8(a1) {
    a1=a1|0;
    return jsCall(8,a1|0)|0;
  }



  function jsCall_ii_9(a1) {
    a1=a1|0;
    return jsCall(9,a1|0)|0;
  }



  function jsCall_ii_10(a1) {
    a1=a1|0;
    return jsCall(10,a1|0)|0;
  }



  function jsCall_ii_11(a1) {
    a1=a1|0;
    return jsCall(11,a1|0)|0;
  }



  function jsCall_ii_12(a1) {
    a1=a1|0;
    return jsCall(12,a1|0)|0;
  }



  function jsCall_ii_13(a1) {
    a1=a1|0;
    return jsCall(13,a1|0)|0;
  }



  function jsCall_ii_14(a1) {
    a1=a1|0;
    return jsCall(14,a1|0)|0;
  }



  function jsCall_ii_15(a1) {
    a1=a1|0;
    return jsCall(15,a1|0)|0;
  }



  function jsCall_ii_16(a1) {
    a1=a1|0;
    return jsCall(16,a1|0)|0;
  }



  function jsCall_ii_17(a1) {
    a1=a1|0;
    return jsCall(17,a1|0)|0;
  }



  function jsCall_ii_18(a1) {
    a1=a1|0;
    return jsCall(18,a1|0)|0;
  }



  function jsCall_ii_19(a1) {
    a1=a1|0;
    return jsCall(19,a1|0)|0;
  }



  function dynCall_fif(index,a1,a2) {
    index = index|0;
    a1=a1|0; a2=+a2;
    return +FUNCTION_TABLE_fif[index&63](a1|0,+a2);
  }


  function jsCall_fif_0(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(0,a1|0,+a2);
  }



  function jsCall_fif_1(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(1,a1|0,+a2);
  }



  function jsCall_fif_2(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(2,a1|0,+a2);
  }



  function jsCall_fif_3(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(3,a1|0,+a2);
  }



  function jsCall_fif_4(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(4,a1|0,+a2);
  }



  function jsCall_fif_5(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(5,a1|0,+a2);
  }



  function jsCall_fif_6(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(6,a1|0,+a2);
  }



  function jsCall_fif_7(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(7,a1|0,+a2);
  }



  function jsCall_fif_8(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(8,a1|0,+a2);
  }



  function jsCall_fif_9(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(9,a1|0,+a2);
  }



  function jsCall_fif_10(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(10,a1|0,+a2);
  }



  function jsCall_fif_11(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(11,a1|0,+a2);
  }



  function jsCall_fif_12(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(12,a1|0,+a2);
  }



  function jsCall_fif_13(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(13,a1|0,+a2);
  }



  function jsCall_fif_14(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(14,a1|0,+a2);
  }



  function jsCall_fif_15(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(15,a1|0,+a2);
  }



  function jsCall_fif_16(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(16,a1|0,+a2);
  }



  function jsCall_fif_17(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(17,a1|0,+a2);
  }



  function jsCall_fif_18(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(18,a1|0,+a2);
  }



  function jsCall_fif_19(a1,a2) {
    a1=a1|0; a2=+a2;
    return +jsCall(19,a1|0,+a2);
  }



  function dynCall_viii(index,a1,a2,a3) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0;
    FUNCTION_TABLE_viii[index&63](a1|0,a2|0,a3|0);
  }


  function jsCall_viii_0(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(0,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_1(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(1,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_2(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(2,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_3(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(3,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_4(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(4,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_5(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(5,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_6(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(6,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_7(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(7,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_8(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(8,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_9(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(9,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_10(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(10,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_11(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(11,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_12(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(12,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_13(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(13,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_14(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(14,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_15(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(15,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_16(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(16,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_17(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(17,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_18(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(18,a1|0,a2|0,a3|0);
  }



  function jsCall_viii_19(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=a3|0;
    jsCall(19,a1|0,a2|0,a3|0);
  }



  function dynCall_viifii(index,a1,a2,a3,a4,a5) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    FUNCTION_TABLE_viifii[index&63](a1|0,a2|0,+a3,a4|0,a5|0);
  }


  function jsCall_viifii_0(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(0,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_1(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(1,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_2(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(2,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_3(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(3,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_4(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(4,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_5(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(5,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_6(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(6,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_7(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(7,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_8(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(8,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_9(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(9,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_10(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(10,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_11(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(11,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_12(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(12,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_13(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(13,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_14(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(14,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_15(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(15,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_16(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(16,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_17(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(17,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_18(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(18,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function jsCall_viifii_19(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=+a3; a4=a4|0; a5=a5|0;
    jsCall(19,a1|0,a2|0,+a3,a4|0,a5|0);
  }



  function dynCall_v(index) {
    index = index|0;

    FUNCTION_TABLE_v[index&63]();
  }


  function jsCall_v_0() {

    jsCall(0);
  }



  function jsCall_v_1() {

    jsCall(1);
  }



  function jsCall_v_2() {

    jsCall(2);
  }



  function jsCall_v_3() {

    jsCall(3);
  }



  function jsCall_v_4() {

    jsCall(4);
  }



  function jsCall_v_5() {

    jsCall(5);
  }



  function jsCall_v_6() {

    jsCall(6);
  }



  function jsCall_v_7() {

    jsCall(7);
  }



  function jsCall_v_8() {

    jsCall(8);
  }



  function jsCall_v_9() {

    jsCall(9);
  }



  function jsCall_v_10() {

    jsCall(10);
  }



  function jsCall_v_11() {

    jsCall(11);
  }



  function jsCall_v_12() {

    jsCall(12);
  }



  function jsCall_v_13() {

    jsCall(13);
  }



  function jsCall_v_14() {

    jsCall(14);
  }



  function jsCall_v_15() {

    jsCall(15);
  }



  function jsCall_v_16() {

    jsCall(16);
  }



  function jsCall_v_17() {

    jsCall(17);
  }



  function jsCall_v_18() {

    jsCall(18);
  }



  function jsCall_v_19() {

    jsCall(19);
  }



  function dynCall_viif(index,a1,a2,a3) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=+a3;
    FUNCTION_TABLE_viif[index&127](a1|0,a2|0,+a3);
  }


  function jsCall_viif_0(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(0,a1|0,a2|0,+a3);
  }



  function jsCall_viif_1(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(1,a1|0,a2|0,+a3);
  }



  function jsCall_viif_2(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(2,a1|0,a2|0,+a3);
  }



  function jsCall_viif_3(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(3,a1|0,a2|0,+a3);
  }



  function jsCall_viif_4(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(4,a1|0,a2|0,+a3);
  }



  function jsCall_viif_5(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(5,a1|0,a2|0,+a3);
  }



  function jsCall_viif_6(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(6,a1|0,a2|0,+a3);
  }



  function jsCall_viif_7(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(7,a1|0,a2|0,+a3);
  }



  function jsCall_viif_8(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(8,a1|0,a2|0,+a3);
  }



  function jsCall_viif_9(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(9,a1|0,a2|0,+a3);
  }



  function jsCall_viif_10(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(10,a1|0,a2|0,+a3);
  }



  function jsCall_viif_11(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(11,a1|0,a2|0,+a3);
  }



  function jsCall_viif_12(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(12,a1|0,a2|0,+a3);
  }



  function jsCall_viif_13(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(13,a1|0,a2|0,+a3);
  }



  function jsCall_viif_14(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(14,a1|0,a2|0,+a3);
  }



  function jsCall_viif_15(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(15,a1|0,a2|0,+a3);
  }



  function jsCall_viif_16(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(16,a1|0,a2|0,+a3);
  }



  function jsCall_viif_17(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(17,a1|0,a2|0,+a3);
  }



  function jsCall_viif_18(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(18,a1|0,a2|0,+a3);
  }



  function jsCall_viif_19(a1,a2,a3) {
    a1=a1|0; a2=a2|0; a3=+a3;
    jsCall(19,a1|0,a2|0,+a3);
  }



  function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    FUNCTION_TABLE_viiiiii[index&63](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }


  function jsCall_viiiiii_0(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(0,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_1(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(1,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_2(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(2,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_3(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(3,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_4(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(4,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_5(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(5,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_6(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(6,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_7(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(7,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_8(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(8,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_9(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(9,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_10(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(10,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_11(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(11,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_12(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(12,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_13(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(13,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_14(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(14,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_15(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(15,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_16(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(16,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_17(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(17,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_18(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(18,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function jsCall_viiiiii_19(a1,a2,a3,a4,a5,a6) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    jsCall(19,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }



  function dynCall_iii(index,a1,a2) {
    index = index|0;
    a1=a1|0; a2=a2|0;
    return FUNCTION_TABLE_iii[index&127](a1|0,a2|0)|0;
  }


  function jsCall_iii_0(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(0,a1|0,a2|0)|0;
  }



  function jsCall_iii_1(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(1,a1|0,a2|0)|0;
  }



  function jsCall_iii_2(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(2,a1|0,a2|0)|0;
  }



  function jsCall_iii_3(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(3,a1|0,a2|0)|0;
  }



  function jsCall_iii_4(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(4,a1|0,a2|0)|0;
  }



  function jsCall_iii_5(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(5,a1|0,a2|0)|0;
  }



  function jsCall_iii_6(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(6,a1|0,a2|0)|0;
  }



  function jsCall_iii_7(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(7,a1|0,a2|0)|0;
  }



  function jsCall_iii_8(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(8,a1|0,a2|0)|0;
  }



  function jsCall_iii_9(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(9,a1|0,a2|0)|0;
  }



  function jsCall_iii_10(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(10,a1|0,a2|0)|0;
  }



  function jsCall_iii_11(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(11,a1|0,a2|0)|0;
  }



  function jsCall_iii_12(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(12,a1|0,a2|0)|0;
  }



  function jsCall_iii_13(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(13,a1|0,a2|0)|0;
  }



  function jsCall_iii_14(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(14,a1|0,a2|0)|0;
  }



  function jsCall_iii_15(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(15,a1|0,a2|0)|0;
  }



  function jsCall_iii_16(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(16,a1|0,a2|0)|0;
  }



  function jsCall_iii_17(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(17,a1|0,a2|0)|0;
  }



  function jsCall_iii_18(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(18,a1|0,a2|0)|0;
  }



  function jsCall_iii_19(a1,a2) {
    a1=a1|0; a2=a2|0;
    return jsCall(19,a1|0,a2|0)|0;
  }



  function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return FUNCTION_TABLE_iiiiii[index&63](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }


  function jsCall_iiiiii_0(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(0,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_1(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(1,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_2(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(2,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_3(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(3,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_4(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(4,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_5(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(5,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_6(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(6,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_7(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(7,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_8(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(8,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_9(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(9,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_10(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(10,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_11(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(11,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_12(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(12,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_13(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(13,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_14(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(14,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_15(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(15,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_16(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(16,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_17(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(17,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_18(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(18,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function jsCall_iiiiii_19(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return jsCall(19,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }



  function dynCall_fiiiif(index,a1,a2,a3,a4,a5) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +FUNCTION_TABLE_fiiiif[index&63](a1|0,a2|0,a3|0,a4|0,+a5);
  }


  function jsCall_fiiiif_0(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(0,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_1(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(1,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_2(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(2,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_3(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(3,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_4(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(4,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_5(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(5,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_6(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(6,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_7(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(7,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_8(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(8,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_9(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(9,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_10(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(10,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_11(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(11,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_12(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(12,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_13(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(13,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_14(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(14,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_15(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(15,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_16(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(16,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_17(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(17,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_18(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(18,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function jsCall_fiiiif_19(a1,a2,a3,a4,a5) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
    return +jsCall(19,a1|0,a2|0,a3|0,a4|0,+a5);
  }



  function dynCall_viiii(index,a1,a2,a3,a4) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    FUNCTION_TABLE_viiii[index&127](a1|0,a2|0,a3|0,a4|0);
  }


  function jsCall_viiii_0(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(0,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_1(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(1,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_2(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(2,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_3(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(3,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_4(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(4,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_5(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(5,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_6(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(6,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_7(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(7,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_8(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(8,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_9(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(9,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_10(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(10,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_11(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(11,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_12(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(12,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_13(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(13,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_14(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(14,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_15(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(15,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_16(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(16,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_17(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(17,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_18(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(18,a1|0,a2|0,a3|0,a4|0);
  }



  function jsCall_viiii_19(a1,a2,a3,a4) {
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    jsCall(19,a1|0,a2|0,a3|0,a4|0);
  }


function b0(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(0);  }
  function b1(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = +p2;p3 = p3|0; abort(1);  }
  function b2(p0) { p0 = p0|0; abort(2);  }
  function b3(p0,p1) { p0 = p0|0;p1 = p1|0; abort(3);  }
  function b4(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(4); return 0 }
  function b5(p0) { p0 = p0|0; abort(5); return 0 }
  function b6(p0,p1) { p0 = p0|0;p1 = +p1; abort(6); return +0 }
  function b7(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(7);  }
  function b8(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = +p2;p3 = p3|0;p4 = p4|0; abort(8);  }
  function b9() { ; abort(9);  }
  function b10(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = +p2; abort(10);  }
  function b11(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(11);  }
  function b12(p0,p1) { p0 = p0|0;p1 = p1|0; abort(12); return 0 }
  function b13(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(13); return 0 }
  function b14(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = +p4; abort(14); return +0 }
  function b15(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(15);  }
  // EMSCRIPTEN_END_FUNCS
  var FUNCTION_TABLE_viiiii = [b0,b0,jsCall_viiiii_0,b0,jsCall_viiiii_1,b0,jsCall_viiiii_2,b0,jsCall_viiiii_3,b0,jsCall_viiiii_4,b0,jsCall_viiiii_5,b0,jsCall_viiiii_6,b0,jsCall_viiiii_7,b0,jsCall_viiiii_8,b0,jsCall_viiiii_9,b0,jsCall_viiiii_10,b0,jsCall_viiiii_11,b0,jsCall_viiiii_12,b0,jsCall_viiiii_13
  ,b0,jsCall_viiiii_14,b0,jsCall_viiiii_15,b0,jsCall_viiiii_16,b0,jsCall_viiiii_17,b0,jsCall_viiiii_18,b0,jsCall_viiiii_19,b0,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b0,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0];

  var FUNCTION_TABLE_viifi = [b1,b1,jsCall_viifi_0,b1,jsCall_viifi_1,b1,jsCall_viifi_2,b1,jsCall_viifi_3,b1,jsCall_viifi_4,b1,jsCall_viifi_5,b1,jsCall_viifi_6,b1,jsCall_viifi_7,b1,jsCall_viifi_8,b1,jsCall_viifi_9,b1,jsCall_viifi_10,b1,jsCall_viifi_11,b1,jsCall_viifi_12,b1,jsCall_viifi_13
  ,b1,jsCall_viifi_14,b1,jsCall_viifi_15,b1,jsCall_viifi_16,b1,jsCall_viifi_17,b1,jsCall_viifi_18,b1,jsCall_viifi_19,b1,__ZN6b2Draw10DrawCircleERK6b2Vec2fRK7b2Color,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1];

  var FUNCTION_TABLE_vi = [b2,b2,jsCall_vi_0,b2,jsCall_vi_1,b2,jsCall_vi_2,b2,jsCall_vi_3,b2,jsCall_vi_4,b2,jsCall_vi_5,b2,jsCall_vi_6,b2,jsCall_vi_7,b2,jsCall_vi_8,b2,jsCall_vi_9,b2,jsCall_vi_10,b2,jsCall_vi_11,b2,jsCall_vi_12,b2,jsCall_vi_13
  ,b2,jsCall_vi_14,b2,jsCall_vi_15,b2,jsCall_vi_16,b2,jsCall_vi_17,b2,jsCall_vi_18,b2,jsCall_vi_19,b2,__ZN25b2PolygonAndCircleContactD0Ev,b2,__ZN22b2EdgeAndCircleContactD0Ev,b2,__ZN15b2QueryCallbackD0Ev,b2,__ZN16b2PrismaticJoint4DumpEv,b2,__ZN12b2WheelJointD1Ev,b2,__ZN15b2CircleContactD0Ev,b2,__ZN16b2BlockAllocatorC2Ev,b2,__ZN17b2ContactListenerD0Ev,b2,__ZN7b2JointD0Ev
  ,b2,__ZN11b2WeldJointD0Ev,b2,__ZN15b2FrictionJointD0Ev,b2,__ZN25b2PolygonAndCircleContactD1Ev,b2,__ZN11b2RopeJointD1Ev,b2,__ZN15b2RevoluteJointD1Ev,b2,__ZN10__cxxabiv116__shim_type_infoD2Ev,b2,__ZN11b2EdgeShapeD0Ev,b2,__ZN15b2DistanceJointD0Ev,b2,__ZN13b2DynamicTreeD2Ev,b2,__ZN16b2StackAllocatorD2Ev,b2,__ZN9b2ContactD1Ev,b2,__ZN7b2WorldD2Ev,b2,__ZN16b2PrismaticJointD0Ev,b2,__ZN16b2BlockAllocatorD2Ev,b2,__ZN6b2DrawD1Ev
  ,b2,__ZN12b2MouseJoint4DumpEv,b2,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b2,__ZN7b2TimerC2Ev,b2,__ZN6b2DrawC2Ev,b2,__ZN12b2WheelJointD0Ev,b2,__ZN23b2EdgeAndPolygonContactD0Ev,b2,__ZN22b2EdgeAndCircleContactD1Ev,b2,__ZN9b2FixtureC2Ev,b2,__ZN15b2RevoluteJoint4DumpEv,b2,__ZN13b2PulleyJointD0Ev,b2,__ZN23b2ChainAndCircleContactD1Ev,b2,__ZN15b2FrictionJointD1Ev,b2,__ZN14b2PolygonShapeD1Ev,b2,__ZN17b2ContactListenerD1Ev,b2,__ZN16b2PolygonContactD1Ev
  ,b2,__ZNSt9bad_allocD2Ev,b2,__ZN21b2DestructionListenerD0Ev,b2,__ZN6b2BodyD2Ev,b2,__ZN11b2RopeJointD0Ev,b2,__ZN11b2WeldJoint4DumpEv,b2,__ZN24b2ChainAndPolygonContactD0Ev,b2,__ZN9b2ContactD0Ev,b2,__ZN6b2DrawD0Ev,b2,__ZN7b2Joint4DumpEv,b2,__ZN15b2ContactSolverD2Ev,b2,__ZN15b2DistanceJoint4DumpEv,b2,__ZN17b2RayCastCallbackD1Ev,b2,__ZN23b2EdgeAndPolygonContactD1Ev,b2,__ZN12b2BroadPhaseD2Ev,b2,__ZN15b2ContactFilterD0Ev
  ,b2,__ZN24b2ChainAndPolygonContactD1Ev,b2,__ZN7b2ShapeD1Ev,b2,__ZN12b2BroadPhaseC2Ev,b2,__ZN16b2PolygonContactD0Ev,b2,__ZN13b2PulleyJointD1Ev,b2,__ZN13b2PulleyJoint4DumpEv,b2,__ZN23b2ChainAndCircleContactD0Ev,b2,__ZN12b2WheelJoint4DumpEv,b2,__ZN17b2RayCastCallbackD0Ev,b2,__ZN15b2FrictionJoint4DumpEv,b2,__ZN15b2CircleContactD1Ev,b2,__ZN14b2PolygonShapeD0Ev,b2,__ZN21b2DestructionListenerD1Ev,b2,__ZN8b2IslandD2Ev,b2,__ZN11b2GearJointD0Ev
  ,b2,__ZN12b2ChainShapeD2Ev,b2,__ZN16b2ContactManagerC2Ev,b2,__ZN16b2StackAllocatorC2Ev,b2,__ZN12b2MouseJointD1Ev,b2,__ZN13b2CircleShapeD0Ev,b2,__ZNSt9bad_allocD0Ev,b2,__ZN15b2ContactFilterD1Ev,b2,__ZN12b2ChainShapeD0Ev,b2,__ZN10__cxxabiv117__class_type_infoD0Ev,b2,__ZN15b2QueryCallbackD1Ev,b2,__ZN15b2DistanceJointD1Ev,b2,__ZN11b2GearJointD1Ev,b2,__ZN11b2WeldJointD1Ev,b2,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,b2,__ZN7b2ShapeD0Ev
  ,b2,__ZN15b2RevoluteJointD0Ev,b2,__ZN11b2RopeJoint4DumpEv,b2,__ZN11b2EdgeShapeD1Ev,b2,__ZN7b2JointD1Ev,b2,__ZN11b2GearJoint4DumpEv,b2,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b2,__ZN16b2PrismaticJointD1Ev,b2,__ZN13b2CircleShapeD1Ev,b2,__ZN12b2MouseJointD0Ev,b2,__ZN13b2DynamicTreeC2Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2];

  var FUNCTION_TABLE_vii = [b3,b3,jsCall_vii_0,b3,jsCall_vii_1,b3,jsCall_vii_2,b3,jsCall_vii_3,b3,jsCall_vii_4,b3,jsCall_vii_5,b3,jsCall_vii_6,b3,jsCall_vii_7,b3,jsCall_vii_8,b3,jsCall_vii_9,b3,jsCall_vii_10,b3,jsCall_vii_11,b3,jsCall_vii_12,b3,jsCall_vii_13
  ,b3,jsCall_vii_14,b3,jsCall_vii_15,b3,jsCall_vii_16,b3,jsCall_vii_17,b3,jsCall_vii_18,b3,jsCall_vii_19,b3,__ZN15b2CircleContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZNK12b2MouseJoint10GetAnchorAEv,b3,__ZN11b2WeldJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZN12b2MouseJointC2EPK15b2MouseJointDef,b3,__ZN15b2FrictionJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN6b2Draw13DrawTransformERK11b2Transform,b3,__ZNK15b2RevoluteJoint10GetAnchorAEv,b3,__ZN15b2RevoluteJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZNK15b2DistanceJoint10GetAnchorBEv
  ,b3,__ZNK15b2RevoluteJoint10GetAnchorBEv,b3,__ZN12b2MouseJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN16b2PrismaticJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN24b2ChainAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZNK11b2GearJoint10GetAnchorBEv,b3,__ZN17b2ContactListener12BeginContactEP9b2Contact,b3,__ZN25b2PolygonAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZN12b2WheelJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN11b2RopeJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN23b2ChainAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZN11b2GearJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN17b2ContactListener10EndContactEP9b2Contact,b3,__ZN21b2DestructionListener10SayGoodbyeEP7b2Joint,b3,__ZN12b2WheelJointC2EPK15b2WheelJointDef
  ,b3,__ZN16b2PrismaticJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZN16b2PolygonContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZN15b2DistanceJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN7b2WorldC2ERK6b2Vec2,b3,__ZN11b2RopeJointC2EPK14b2RopeJointDef,b3,__ZN13b2PulleyJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZN22b2EdgeAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZN15b2RevoluteJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZNK11b2GearJoint10GetAnchorAEv,b3,__ZN15b2DistanceJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZNK11b2RopeJoint10GetAnchorBEv,b3,__ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef,b3,__ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef,b3,__ZN12b2WheelJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZNK11b2RopeJoint10GetAnchorAEv
  ,b3,__ZN13b2PulleyJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZNK13b2PulleyJoint10GetAnchorAEv,b3,__ZNK15b2FrictionJoint10GetAnchorBEv,b3,__ZN13b2PulleyJointC2EPK16b2PulleyJointDef,b3,__ZNK15b2FrictionJoint10GetAnchorAEv,b3,__ZNK16b2PrismaticJoint10GetAnchorBEv,b3,__ZNK11b2WeldJoint10GetAnchorAEv,b3,__ZN15b2FrictionJointC2EPK18b2FrictionJointDef,b3,__ZN15b2ContactSolverC2EP18b2ContactSolverDef,b3,__ZNK16b2PrismaticJoint10GetAnchorAEv,b3,__ZN11b2WeldJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN15b2DistanceJointC2EPK18b2DistanceJointDef,b3,__ZN23b2EdgeAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZNK12b2MouseJoint10GetAnchorBEv,b3,__ZN21b2DestructionListener10SayGoodbyeEP9b2Fixture
  ,b3,__ZNK13b2PulleyJoint10GetAnchorBEv,b3,__ZN15b2FrictionJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZNK12b2WheelJoint10GetAnchorBEv,b3,__ZNK12b2WheelJoint10GetAnchorAEv,b3,__ZNK15b2DistanceJoint10GetAnchorAEv,b3,__ZN11b2RopeJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZN11b2GearJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZN11b2WeldJointC2EPK14b2WeldJointDef,b3,__ZNK11b2WeldJoint10GetAnchorBEv,b3,__ZN11b2GearJointC2EPK14b2GearJointDef,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3];

  var FUNCTION_TABLE_iiii = [b4,b4,jsCall_iiii_0,b4,jsCall_iiii_1,b4,jsCall_iiii_2,b4,jsCall_iiii_3,b4,jsCall_iiii_4,b4,jsCall_iiii_5,b4,jsCall_iiii_6,b4,jsCall_iiii_7,b4,jsCall_iiii_8,b4,jsCall_iiii_9,b4,jsCall_iiii_10,b4,jsCall_iiii_11,b4,jsCall_iiii_12,b4,jsCall_iiii_13
  ,b4,jsCall_iiii_14,b4,jsCall_iiii_15,b4,jsCall_iiii_16,b4,jsCall_iiii_17,b4,jsCall_iiii_18,b4,jsCall_iiii_19,b4,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b4,__ZNK14b2PolygonShape9TestPointERK11b2TransformRK6b2Vec2,b4,__ZNK11b2EdgeShape9TestPointERK11b2TransformRK6b2Vec2,b4,__ZN15b2ContactFilter13ShouldCollideEP9b2FixtureS1_,b4,__ZNK12b2ChainShape9TestPointERK11b2TransformRK6b2Vec2,b4,__ZNK13b2CircleShape9TestPointERK11b2TransformRK6b2Vec2,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4];

  var FUNCTION_TABLE_ii = [b5,b5,jsCall_ii_0,b5,jsCall_ii_1,b5,jsCall_ii_2,b5,jsCall_ii_3,b5,jsCall_ii_4,b5,jsCall_ii_5,b5,jsCall_ii_6,b5,jsCall_ii_7,b5,jsCall_ii_8,b5,jsCall_ii_9,b5,jsCall_ii_10,b5,jsCall_ii_11,b5,jsCall_ii_12,b5,jsCall_ii_13
  ,b5,jsCall_ii_14,b5,jsCall_ii_15,b5,jsCall_ii_16,b5,jsCall_ii_17,b5,jsCall_ii_18,b5,jsCall_ii_19,b5,__ZNK13b2CircleShape13GetChildCountEv,b5,__ZNKSt9bad_alloc4whatEv,b5,__ZNK11b2EdgeShape13GetChildCountEv,b5,__ZNK12b2ChainShape13GetChildCountEv,b5,__ZNK14b2PolygonShape13GetChildCountEv,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5];

  var FUNCTION_TABLE_fif = [b6,b6,jsCall_fif_0,b6,jsCall_fif_1,b6,jsCall_fif_2,b6,jsCall_fif_3,b6,jsCall_fif_4,b6,jsCall_fif_5,b6,jsCall_fif_6,b6,jsCall_fif_7,b6,jsCall_fif_8,b6,jsCall_fif_9,b6,jsCall_fif_10,b6,jsCall_fif_11,b6,jsCall_fif_12,b6,jsCall_fif_13
  ,b6,jsCall_fif_14,b6,jsCall_fif_15,b6,jsCall_fif_16,b6,jsCall_fif_17,b6,jsCall_fif_18,b6,jsCall_fif_19,b6,__ZNK11b2RopeJoint17GetReactionTorqueEf,b6,__ZNK15b2RevoluteJoint17GetReactionTorqueEf,b6,__ZNK12b2MouseJoint17GetReactionTorqueEf,b6,__ZNK15b2FrictionJoint17GetReactionTorqueEf,b6,__ZNK15b2DistanceJoint17GetReactionTorqueEf,b6,__ZNK11b2GearJoint17GetReactionTorqueEf,b6,__ZNK16b2PrismaticJoint17GetReactionTorqueEf,b6,__ZNK12b2WheelJoint17GetReactionTorqueEf,b6,__ZNK11b2WeldJoint17GetReactionTorqueEf
  ,b6,__ZNK13b2PulleyJoint17GetReactionTorqueEf,b6,b6,b6];

  var FUNCTION_TABLE_viii = [b7,b7,jsCall_viii_0,b7,jsCall_viii_1,b7,jsCall_viii_2,b7,jsCall_viii_3,b7,jsCall_viii_4,b7,jsCall_viii_5,b7,jsCall_viii_6,b7,jsCall_viii_7,b7,jsCall_viii_8,b7,jsCall_viii_9,b7,jsCall_viii_10,b7,jsCall_viii_11,b7,jsCall_viii_12,b7,jsCall_viii_13
  ,b7,jsCall_viii_14,b7,jsCall_viii_15,b7,jsCall_viii_16,b7,jsCall_viii_17,b7,jsCall_viii_18,b7,jsCall_viii_19,b7,__ZN17b2ContactListener9PostSolveEP9b2ContactPK16b2ContactImpulse,b7,__ZN6b2BodyC2EPK9b2BodyDefP7b2World,b7,__ZN17b2ContactListener8PreSolveEP9b2ContactPK10b2Manifold,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7];

  var FUNCTION_TABLE_viifii = [b8,b8,jsCall_viifii_0,b8,jsCall_viifii_1,b8,jsCall_viifii_2,b8,jsCall_viifii_3,b8,jsCall_viifii_4,b8,jsCall_viifii_5,b8,jsCall_viifii_6,b8,jsCall_viifii_7,b8,jsCall_viifii_8,b8,jsCall_viifii_9,b8,jsCall_viifii_10,b8,jsCall_viifii_11,b8,jsCall_viifii_12,b8,jsCall_viifii_13
  ,b8,jsCall_viifii_14,b8,jsCall_viifii_15,b8,jsCall_viifii_16,b8,jsCall_viifii_17,b8,jsCall_viifii_18,b8,jsCall_viifii_19,b8,__ZN6b2Draw15DrawSolidCircleERK6b2Vec2fS2_RK7b2Color,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8];

  var FUNCTION_TABLE_v = [b9,b9,jsCall_v_0,b9,jsCall_v_1,b9,jsCall_v_2,b9,jsCall_v_3,b9,jsCall_v_4,b9,jsCall_v_5,b9,jsCall_v_6,b9,jsCall_v_7,b9,jsCall_v_8,b9,jsCall_v_9,b9,jsCall_v_10,b9,jsCall_v_11,b9,jsCall_v_12,b9,jsCall_v_13
  ,b9,jsCall_v_14,b9,jsCall_v_15,b9,jsCall_v_16,b9,jsCall_v_17,b9,jsCall_v_18,b9,jsCall_v_19,b9,v____cxa_pure_virtual__wrapper,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9];

  var FUNCTION_TABLE_viif = [b10,b10,jsCall_viif_0,b10,jsCall_viif_1,b10,jsCall_viif_2,b10,jsCall_viif_3,b10,jsCall_viif_4,b10,jsCall_viif_5,b10,jsCall_viif_6,b10,jsCall_viif_7,b10,jsCall_viif_8,b10,jsCall_viif_9,b10,jsCall_viif_10,b10,jsCall_viif_11,b10,jsCall_viif_12,b10,jsCall_viif_13
  ,b10,jsCall_viif_14,b10,jsCall_viif_15,b10,jsCall_viif_16,b10,jsCall_viif_17,b10,jsCall_viif_18,b10,jsCall_viif_19,b10,__ZNK12b2ChainShape11ComputeMassEP10b2MassDataf,b10,__ZNK11b2GearJoint16GetReactionForceEf,b10,__ZNK15b2RevoluteJoint16GetReactionForceEf,b10,__ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf,b10,__ZNK12b2MouseJoint16GetReactionForceEf,b10,__ZNK11b2WeldJoint16GetReactionForceEf,b10,__ZNK15b2DistanceJoint16GetReactionForceEf,b10,__ZNK13b2CircleShape11ComputeMassEP10b2MassDataf,b10,__ZNK13b2PulleyJoint16GetReactionForceEf
  ,b10,__ZNK16b2PrismaticJoint16GetReactionForceEf,b10,__ZNK12b2WheelJoint16GetReactionForceEf,b10,__ZNK15b2FrictionJoint16GetReactionForceEf,b10,__ZNK11b2RopeJoint16GetReactionForceEf,b10,__ZNK11b2EdgeShape11ComputeMassEP10b2MassDataf,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10];

  var FUNCTION_TABLE_viiiiii = [b11,b11,jsCall_viiiiii_0,b11,jsCall_viiiiii_1,b11,jsCall_viiiiii_2,b11,jsCall_viiiiii_3,b11,jsCall_viiiiii_4,b11,jsCall_viiiiii_5,b11,jsCall_viiiiii_6,b11,jsCall_viiiiii_7,b11,jsCall_viiiiii_8,b11,jsCall_viiiiii_9,b11,jsCall_viiiiii_10,b11,jsCall_viiiiii_11,b11,jsCall_viiiiii_12,b11,jsCall_viiiiii_13
  ,b11,jsCall_viiiiii_14,b11,jsCall_viiiiii_15,b11,jsCall_viiiiii_16,b11,jsCall_viiiiii_17,b11,jsCall_viiiiii_18,b11,jsCall_viiiiii_19,b11,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,__ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11];

  var FUNCTION_TABLE_iii = [b12,b12,jsCall_iii_0,b12,jsCall_iii_1,b12,jsCall_iii_2,b12,jsCall_iii_3,b12,jsCall_iii_4,b12,jsCall_iii_5,b12,jsCall_iii_6,b12,jsCall_iii_7,b12,jsCall_iii_8,b12,jsCall_iii_9,b12,jsCall_iii_10,b12,jsCall_iii_11,b12,jsCall_iii_12,b12,jsCall_iii_13
  ,b12,jsCall_iii_14,b12,jsCall_iii_15,b12,jsCall_iii_16,b12,jsCall_iii_17,b12,jsCall_iii_18,b12,jsCall_iii_19,b12,__ZN15b2FrictionJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZN13b2PulleyJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZNK14b2PolygonShape5CloneEP16b2BlockAllocator,b12,__ZNK13b2CircleShape5CloneEP16b2BlockAllocator,b12,__ZN15b2RevoluteJoint24SolvePositionConstraintsERK12b2SolverData,b12,__Z14b2PairLessThanRK6b2PairS1_,b12,__ZN12b2MouseJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZN15b2QueryCallback13ReportFixtureEP9b2Fixture,b12,__ZN16b2PrismaticJoint24SolvePositionConstraintsERK12b2SolverData
  ,b12,__ZN11b2RopeJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZN15b2DistanceJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZN12b2WheelJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZNK11b2EdgeShape5CloneEP16b2BlockAllocator,b12,__ZNK12b2ChainShape5CloneEP16b2BlockAllocator,b12,__ZN11b2WeldJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZN11b2GearJoint24SolvePositionConstraintsERK12b2SolverData,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12];

  var FUNCTION_TABLE_iiiiii = [b13,b13,jsCall_iiiiii_0,b13,jsCall_iiiiii_1,b13,jsCall_iiiiii_2,b13,jsCall_iiiiii_3,b13,jsCall_iiiiii_4,b13,jsCall_iiiiii_5,b13,jsCall_iiiiii_6,b13,jsCall_iiiiii_7,b13,jsCall_iiiiii_8,b13,jsCall_iiiiii_9,b13,jsCall_iiiiii_10,b13,jsCall_iiiiii_11,b13,jsCall_iiiiii_12,b13,jsCall_iiiiii_13
  ,b13,jsCall_iiiiii_14,b13,jsCall_iiiiii_15,b13,jsCall_iiiiii_16,b13,jsCall_iiiiii_17,b13,jsCall_iiiiii_18,b13,jsCall_iiiiii_19,b13,__ZN16b2PolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b13,__ZN24b2ChainAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b13,__ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi,b13,__ZN22b2EdgeAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b13,__ZN15b2CircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b13,__ZN25b2PolygonAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b13,__ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi,b13,__ZN23b2ChainAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b13,__ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi
  ,b13,__ZNK13b2CircleShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi,b13,__ZN23b2EdgeAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b13];

  var FUNCTION_TABLE_fiiiif = [b14,b14,jsCall_fiiiif_0,b14,jsCall_fiiiif_1,b14,jsCall_fiiiif_2,b14,jsCall_fiiiif_3,b14,jsCall_fiiiif_4,b14,jsCall_fiiiif_5,b14,jsCall_fiiiif_6,b14,jsCall_fiiiif_7,b14,jsCall_fiiiif_8,b14,jsCall_fiiiif_9,b14,jsCall_fiiiif_10,b14,jsCall_fiiiif_11,b14,jsCall_fiiiif_12,b14,jsCall_fiiiif_13
  ,b14,jsCall_fiiiif_14,b14,jsCall_fiiiif_15,b14,jsCall_fiiiif_16,b14,jsCall_fiiiif_17,b14,jsCall_fiiiif_18,b14,jsCall_fiiiif_19,b14,__ZN17b2RayCastCallback13ReportFixtureEP9b2FixtureRK6b2Vec2S4_f,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14];

  var FUNCTION_TABLE_viiii = [b15,b15,jsCall_viiii_0,b15,jsCall_viiii_1,b15,jsCall_viiii_2,b15,jsCall_viiii_3,b15,jsCall_viiii_4,b15,jsCall_viiii_5,b15,jsCall_viiii_6,b15,jsCall_viiii_7,b15,jsCall_viiii_8,b15,jsCall_viiii_9,b15,jsCall_viiii_10,b15,jsCall_viiii_11,b15,jsCall_viiii_12,b15,jsCall_viiii_13
  ,b15,jsCall_viiii_14,b15,jsCall_viiii_15,b15,jsCall_viiii_16,b15,jsCall_viiii_17,b15,jsCall_viiii_18,b15,jsCall_viiii_19,b15,__ZN6b2Draw16DrawSolidPolygonEPK6b2Vec2iRK7b2Color,b15,__ZN6b2Draw11DrawPolygonEPK6b2Vec2iRK7b2Color,b15,__ZNK14b2PolygonShape11ComputeAABBEP6b2AABBRK11b2Transformi,b15,__ZN6b2Draw11DrawSegmentERK6b2Vec2S2_RK7b2Color,b15,__ZN24b2ChainAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b15,__ZN15b2CircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b15,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b15,__ZN16b2PolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b15,__ZN25b2PolygonAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_
  ,b15,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b15,__ZNK11b2EdgeShape11ComputeAABBEP6b2AABBRK11b2Transformi,b15,__ZN23b2EdgeAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b15,__ZNK13b2CircleShape11ComputeAABBEP6b2AABBRK11b2Transformi,b15,__ZN23b2ChainAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b15,__ZN22b2EdgeAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b15,__ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15];


  return { _emscripten_bind_b2WheelJoint__GetSpringFrequencyHz_p0: _emscripten_bind_b2WheelJoint__GetSpringFrequencyHz_p0, _emscripten_bind_b2Vec2__get_y_p0: _emscripten_bind_b2Vec2__get_y_p0, _emscripten_bind_b2PolygonShape____destroy___p0: _emscripten_bind_b2PolygonShape____destroy___p0, _emscripten_bind_b2DistanceProxy__get_m_vertices_p0: _emscripten_bind_b2DistanceProxy__get_m_vertices_p0, _emscripten_bind_b2PrismaticJoint__EnableLimit_p1: _emscripten_bind_b2PrismaticJoint__EnableLimit_p1, _emscripten_bind_b2WheelJointDef__Initialize_p4: _emscripten_bind_b2WheelJointDef__Initialize_p4, _emscripten_bind_b2DistanceJointDef__set_frequencyHz_p1: _emscripten_bind_b2DistanceJointDef__set_frequencyHz_p1, _emscripten_bind_b2PrismaticJoint__GetMotorForce_p1: _emscripten_bind_b2PrismaticJoint__GetMotorForce_p1, _emscripten_bind_b2AABB__Combine_p1: _emscripten_bind_b2AABB__Combine_p1, _emscripten_bind_b2Body__IsSleepingAllowed_p0: _emscripten_bind_b2Body__IsSleepingAllowed_p0, _emscripten_bind_b2Vec3__set_z_p1: _emscripten_bind_b2Vec3__set_z_p1, _emscripten_bind_b2Vec2__b2Vec2_p2: _emscripten_bind_b2Vec2__b2Vec2_p2, _emscripten_bind_b2RevoluteJoint__GetMaxMotorTorque_p0: _emscripten_bind_b2RevoluteJoint__GetMaxMotorTorque_p0, _emscripten_bind_b2WeldJoint__GetFrequency_p0: _emscripten_bind_b2WeldJoint__GetFrequency_p0, _emscripten_bind_b2MouseJoint__GetType_p0: _emscripten_bind_b2MouseJoint__GetType_p0, _emscripten_bind_b2RayCastCallback__b2RayCastCallback_p0: _emscripten_bind_b2RayCastCallback__b2RayCastCallback_p0, _emscripten_bind_b2Body__GetLinearDamping_p0: _emscripten_bind_b2Body__GetLinearDamping_p0, _emscripten_bind_b2BodyDef__get_fixedRotation_p0: _emscripten_bind_b2BodyDef__get_fixedRotation_p0, _emscripten_bind_b2FixtureDef__get_shape_p0: _emscripten_bind_b2FixtureDef__get_shape_p0, _emscripten_bind_b2PrismaticJoint____destroy___p0: _emscripten_bind_b2PrismaticJoint____destroy___p0, _emscripten_bind_b2Joint__GetBodyA_p0: _emscripten_bind_b2Joint__GetBodyA_p0, _emscripten_bind_b2WheelJointDef__set_frequencyHz_p1: _emscripten_bind_b2WheelJointDef__set_frequencyHz_p1, _emscripten_bind_b2BlockAllocator____destroy___p0: _emscripten_bind_b2BlockAllocator____destroy___p0, _emscripten_bind_b2Vec2__op_add_p1: _emscripten_bind_b2Vec2__op_add_p1, _emscripten_bind_b2DistanceJointDef__set_dampingRatio_p1: _emscripten_bind_b2DistanceJointDef__set_dampingRatio_p1, _emscripten_bind_b2Transform__Set_p2: _emscripten_bind_b2Transform__Set_p2, _emscripten_bind_b2EdgeShape__RayCast_p4: _emscripten_bind_b2EdgeShape__RayCast_p4, _emscripten_bind_b2RevoluteJoint__GetLocalAnchorA_p0: _emscripten_bind_b2RevoluteJoint__GetLocalAnchorA_p0, _emscripten_bind_b2DistanceJoint__GetDampingRatio_p0: _emscripten_bind_b2DistanceJoint__GetDampingRatio_p0, _emscripten_bind_b2Fixture__SetRestitution_p1: _emscripten_bind_b2Fixture__SetRestitution_p1, _emscripten_bind_b2DynamicTree__Validate_p0: _emscripten_bind_b2DynamicTree__Validate_p0, _emscripten_bind_b2DynamicTree__DestroyProxy_p1: _emscripten_bind_b2DynamicTree__DestroyProxy_p1, _emscripten_bind_b2Filter__set_groupIndex_p1: _emscripten_bind_b2Filter__set_groupIndex_p1, _emscripten_bind_b2FixtureDef__set_userData_p1: _emscripten_bind_b2FixtureDef__set_userData_p1, _emscripten_bind_b2DynamicTree__b2DynamicTree_p0: _emscripten_bind_b2DynamicTree__b2DynamicTree_p0, _emscripten_bind_b2RevoluteJointDef__get_localAnchorA_p0: _emscripten_bind_b2RevoluteJointDef__get_localAnchorA_p0, _emscripten_bind_b2DistanceProxy__GetVertex_p1: _emscripten_bind_b2DistanceProxy__GetVertex_p1, _emscripten_bind_b2EdgeShape__get_m_radius_p0: _emscripten_bind_b2EdgeShape__get_m_radius_p0, _emscripten_bind_b2PrismaticJointDef__get_localAnchorB_p0: _emscripten_bind_b2PrismaticJointDef__get_localAnchorB_p0, _emscripten_bind_b2RevoluteJointDef__set_bodyA_p1: _emscripten_bind_b2RevoluteJointDef__set_bodyA_p1, _emscripten_bind_b2World__GetJointCount_p0: _emscripten_bind_b2World__GetJointCount_p0, _emscripten_bind_b2DynamicTree__CreateProxy_p2: _emscripten_bind_b2DynamicTree__CreateProxy_p2, _emscripten_bind_b2WheelJointDef__set_collideConnected_p1: _emscripten_bind_b2WheelJointDef__set_collideConnected_p1, _emscripten_bind_b2WeldJoint__GetLocalAnchorA_p0: _emscripten_bind_b2WeldJoint__GetLocalAnchorA_p0, _emscripten_bind_b2RevoluteJointDef__get_localAnchorB_p0: _emscripten_bind_b2RevoluteJointDef__get_localAnchorB_p0, _emscripten_bind_b2Body__GetGravityScale_p0: _emscripten_bind_b2Body__GetGravityScale_p0, _emscripten_bind_b2Fixture__Dump_p1: _emscripten_bind_b2Fixture__Dump_p1, _emscripten_bind_b2World__GetBodyList_p0: _emscripten_bind_b2World__GetBodyList_p0, _emscripten_bind_b2PulleyJoint__IsActive_p0: _emscripten_bind_b2PulleyJoint__IsActive_p0, _emscripten_bind_b2MouseJoint__SetUserData_p1: _emscripten_bind_b2MouseJoint__SetUserData_p1, _emscripten_bind_b2World__GetContactList_p0: _emscripten_bind_b2World__GetContactList_p0, _emscripten_bind_b2PrismaticJoint__GetNext_p0: _emscripten_bind_b2PrismaticJoint__GetNext_p0, _emscripten_bind_b2Vec2__Skew_p0: _emscripten_bind_b2Vec2__Skew_p0, _emscripten_bind_b2BodyDef__get_linearVelocity_p0: _emscripten_bind_b2BodyDef__get_linearVelocity_p0, _emscripten_bind_b2GearJointDef__set_joint2_p1: _emscripten_bind_b2GearJointDef__set_joint2_p1, _emscripten_bind_b2WheelJoint__GetReactionForce_p1: _emscripten_bind_b2WheelJoint__GetReactionForce_p1, _emscripten_bind_b2RevoluteJoint__GetLocalAnchorB_p0: _emscripten_bind_b2RevoluteJoint__GetLocalAnchorB_p0, _emscripten_bind_b2PrismaticJointDef__set_motorSpeed_p1: _emscripten_bind_b2PrismaticJointDef__set_motorSpeed_p1, _emscripten_bind_b2PrismaticJoint__SetMaxMotorForce_p1: _emscripten_bind_b2PrismaticJoint__SetMaxMotorForce_p1, _emscripten_bind_b2ChainShape__b2ChainShape_p0: _emscripten_bind_b2ChainShape__b2ChainShape_p0, _emscripten_bind_b2CircleShape__RayCast_p4: _emscripten_bind_b2CircleShape__RayCast_p4, _emscripten_bind_b2WheelJoint__GetBodyA_p0: _emscripten_bind_b2WheelJoint__GetBodyA_p0, _emscripten_bind_b2RevoluteJointDef__set_bodyB_p1: _emscripten_bind_b2RevoluteJointDef__set_bodyB_p1, _emscripten_bind_b2MouseJointDef__get_dampingRatio_p0: _emscripten_bind_b2MouseJointDef__get_dampingRatio_p0, _emscripten_bind_b2JointDef__set_bodyB_p1: _emscripten_bind_b2JointDef__set_bodyB_p1, _emscripten_bind_b2RevoluteJoint__GetJointSpeed_p0: _emscripten_bind_b2RevoluteJoint__GetJointSpeed_p0, _emscripten_bind_b2RopeJoint__GetLocalAnchorB_p0: _emscripten_bind_b2RopeJoint__GetLocalAnchorB_p0, _emscripten_bind_b2Fixture__GetAABB_p1: _emscripten_bind_b2Fixture__GetAABB_p1, _emscripten_bind_b2BroadPhase__TouchProxy_p1: _emscripten_bind_b2BroadPhase__TouchProxy_p1, _emscripten_bind_b2RopeJointDef__get_bodyB_p1: _emscripten_bind_b2RopeJointDef__get_bodyB_p1, _emscripten_bind_b2World__GetAllowSleeping_p0: _emscripten_bind_b2World__GetAllowSleeping_p0, _emscripten_bind_b2DestructionListener____destroy___p0: _emscripten_bind_b2DestructionListener____destroy___p0, _emscripten_bind_b2BroadPhase____destroy___p0: _emscripten_bind_b2BroadPhase____destroy___p0, _emscripten_bind_b2World__GetWarmStarting_p0: _emscripten_bind_b2World__GetWarmStarting_p0, _emscripten_bind_b2Rot__b2Rot_p1: _emscripten_bind_b2Rot__b2Rot_p1, _emscripten_bind_b2Rot__b2Rot_p0: _emscripten_bind_b2Rot__b2Rot_p0, _emscripten_bind_b2DistanceJoint__GetUserData_p0: _emscripten_bind_b2DistanceJoint__GetUserData_p0, _emscripten_bind_b2MouseJointDef__get_frequencyHz_p0: _emscripten_bind_b2MouseJointDef__get_frequencyHz_p0, _emscripten_bind_b2ContactManager__set_m_allocator_p1: _emscripten_bind_b2ContactManager__set_m_allocator_p1, _emscripten_bind_b2WheelJoint__SetMaxMotorTorque_p1: _emscripten_bind_b2WheelJoint__SetMaxMotorTorque_p1, _emscripten_bind_b2GearJoint__GetBodyB_p0: _emscripten_bind_b2GearJoint__GetBodyB_p0, _emscripten_bind_b2MouseJointDef__get_target_p0: _emscripten_bind_b2MouseJointDef__get_target_p0, _emscripten_bind_b2WeldJoint__SetUserData_p1: _emscripten_bind_b2WeldJoint__SetUserData_p1, _emscripten_bind_b2PrismaticJoint__GetBodyA_p0: _emscripten_bind_b2PrismaticJoint__GetBodyA_p0, _emscripten_bind_b2StackAllocator__b2StackAllocator_p0: _emscripten_bind_b2StackAllocator__b2StackAllocator_p0, _emscripten_bind_b2MouseJoint__GetDampingRatio_p0: _emscripten_bind_b2MouseJoint__GetDampingRatio_p0, _emscripten_bind_b2DistanceJoint__GetNext_p0: _emscripten_bind_b2DistanceJoint__GetNext_p0, _emscripten_bind_b2Filter__get_maskBits_p0: _emscripten_bind_b2Filter__get_maskBits_p0, _emscripten_bind_b2RayCastCallback____destroy___p0: _emscripten_bind_b2RayCastCallback____destroy___p0, _emscripten_bind_b2World__Dump_p0: _emscripten_bind_b2World__Dump_p0, _emscripten_bind_b2RevoluteJointDef____destroy___p0: _emscripten_bind_b2RevoluteJointDef____destroy___p0, _emscripten_bind_b2RevoluteJointDef__get_motorSpeed_p0: _emscripten_bind_b2RevoluteJointDef__get_motorSpeed_p0, _emscripten_bind_b2BodyDef__get_bullet_p0: _emscripten_bind_b2BodyDef__get_bullet_p0, _emscripten_bind_b2Body__SetAngularDamping_p1: _emscripten_bind_b2Body__SetAngularDamping_p1, _emscripten_bind_b2ChainShape__ComputeMass_p2: _emscripten_bind_b2ChainShape__ComputeMass_p2, _emscripten_bind_b2Fixture__GetFilterData_p0: _emscripten_bind_b2Fixture__GetFilterData_p0, _emscripten_bind_b2DistanceJoint__SetLength_p1: _emscripten_bind_b2DistanceJoint__SetLength_p1, _emscripten_bind_b2BodyDef__get_position_p0: _emscripten_bind_b2BodyDef__get_position_p0, _emscripten_bind_b2FrictionJoint__GetUserData_p0: _emscripten_bind_b2FrictionJoint__GetUserData_p0, _emscripten_bind_b2Transform__b2Transform_p0: _emscripten_bind_b2Transform__b2Transform_p0, _emscripten_bind_b2ContactEdge__set_next_p1: _emscripten_bind_b2ContactEdge__set_next_p1, _emscripten_bind_b2Transform__b2Transform_p2: _emscripten_bind_b2Transform__b2Transform_p2, _emscripten_bind_b2FrictionJointDef__get_maxTorque_p0: _emscripten_bind_b2FrictionJointDef__get_maxTorque_p0, _emscripten_bind_b2WeldJointDef__set_localAnchorB_p1: _emscripten_bind_b2WeldJointDef__set_localAnchorB_p1, _emscripten_bind_b2World__GetProxyCount_p0: _emscripten_bind_b2World__GetProxyCount_p0, _emscripten_bind_b2WeldJointDef__get_bodyB_p1: _emscripten_bind_b2WeldJointDef__get_bodyB_p1, _emscripten_bind_b2PulleyJointDef__set_lengthA_p1: _emscripten_bind_b2PulleyJointDef__set_lengthA_p1, _emscripten_bind_b2PolygonShape__set_m_centroid_p1: _emscripten_bind_b2PolygonShape__set_m_centroid_p1, _emscripten_bind_b2WeldJoint__GetAnchorB_p0: _emscripten_bind_b2WeldJoint__GetAnchorB_p0, _emscripten_bind_b2PulleyJointDef__get_collideConnected_p1: _emscripten_bind_b2PulleyJointDef__get_collideConnected_p1, _emscripten_bind_b2Vec3____destroy___p0: _emscripten_bind_b2Vec3____destroy___p0, _emscripten_bind_b2Color__set_r_p1: _emscripten_bind_b2Color__set_r_p1, _emscripten_bind_b2PrismaticJointDef__get_enableMotor_p0: _emscripten_bind_b2PrismaticJointDef__get_enableMotor_p0, _emscripten_bind_b2BodyDef__get_linearDamping_p0: _emscripten_bind_b2BodyDef__get_linearDamping_p0, _emscripten_bind_b2EdgeShape__ComputeMass_p2: _emscripten_bind_b2EdgeShape__ComputeMass_p2, _emscripten_bind_b2RayCastCallback__ReportFixture_p4: _emscripten_bind_b2RayCastCallback__ReportFixture_p4, _emscripten_bind_b2Body__Dump_p0: _emscripten_bind_b2Body__Dump_p0, _emscripten_bind_b2BodyDef__get_allowSleep_p0: _emscripten_bind_b2BodyDef__get_allowSleep_p0, _emscripten_bind_b2PrismaticJoint__GetJointTranslation_p0: _emscripten_bind_b2PrismaticJoint__GetJointTranslation_p0, _emscripten_bind_b2PulleyJoint__GetAnchorB_p0: _emscripten_bind_b2PulleyJoint__GetAnchorB_p0, _emscripten_bind_b2PrismaticJoint__GetReactionTorque_p1: _emscripten_bind_b2PrismaticJoint__GetReactionTorque_p1, _emscripten_bind_b2JointDef__set_bodyA_p1: _emscripten_bind_b2JointDef__set_bodyA_p1, _emscripten_bind_b2PrismaticJoint__GetBodyB_p0: _emscripten_bind_b2PrismaticJoint__GetBodyB_p0, _emscripten_bind_b2DistanceJoint__GetLocalAnchorA_p0: _emscripten_bind_b2DistanceJoint__GetLocalAnchorA_p0, _emscripten_bind_b2RopeJoint__GetLocalAnchorA_p0: _emscripten_bind_b2RopeJoint__GetLocalAnchorA_p0, _emscripten_bind_b2Rot__set_c_p1: _emscripten_bind_b2Rot__set_c_p1, _emscripten_bind_b2Vec3__op_mul_p1: _emscripten_bind_b2Vec3__op_mul_p1, _emscripten_bind_b2StackAllocator__GetMaxAllocation_p0: _emscripten_bind_b2StackAllocator__GetMaxAllocation_p0, _emscripten_bind_b2JointDef__set_collideConnected_p1: _emscripten_bind_b2JointDef__set_collideConnected_p1, _emscripten_bind_b2WeldJoint__GetAnchorA_p0: _emscripten_bind_b2WeldJoint__GetAnchorA_p0, _emscripten_bind_b2World__SetAutoClearForces_p1: _emscripten_bind_b2World__SetAutoClearForces_p1, _emscripten_bind_b2Contact__SetEnabled_p1: _emscripten_bind_b2Contact__SetEnabled_p1, _emscripten_bind_b2ContactManager__get_m_contactFilter_p0: _emscripten_bind_b2ContactManager__get_m_contactFilter_p0, _emscripten_bind_b2BodyDef__get_angularDamping_p0: _emscripten_bind_b2BodyDef__get_angularDamping_p0, _emscripten_bind_b2WeldJointDef__set_localAnchorA_p1: _emscripten_bind_b2WeldJointDef__set_localAnchorA_p1, _emscripten_bind_b2PulleyJointDef__set_lengthB_p1: _emscripten_bind_b2PulleyJointDef__set_lengthB_p1, _emscripten_bind_b2Vec2__op_sub_p0: _emscripten_bind_b2Vec2__op_sub_p0, _emscripten_bind_b2PrismaticJoint__GetLocalAnchorB_p0: _emscripten_bind_b2PrismaticJoint__GetLocalAnchorB_p0, _emscripten_bind_b2RopeJointDef__get_localAnchorB_p0: _emscripten_bind_b2RopeJointDef__get_localAnchorB_p0, _emscripten_bind_b2Contact__GetChildIndexB_p0: _emscripten_bind_b2Contact__GetChildIndexB_p0, _emscripten_bind_b2Fixture__TestPoint_p1: _emscripten_bind_b2Fixture__TestPoint_p1, _emscripten_bind_b2PrismaticJoint__GetType_p0: _emscripten_bind_b2PrismaticJoint__GetType_p0, _emscripten_bind_b2AABB__RayCast_p2: _emscripten_bind_b2AABB__RayCast_p2, _emscripten_bind_b2WheelJointDef__get_bodyB_p1: _emscripten_bind_b2WheelJointDef__get_bodyB_p1, _emscripten_bind_b2QueryCallback__ReportFixture_p1: _emscripten_bind_b2QueryCallback__ReportFixture_p1, _emscripten_bind_b2BodyDef__set_linearVelocity_p1: _emscripten_bind_b2BodyDef__set_linearVelocity_p1, _emscripten_bind_b2Body__GetMass_p0: _emscripten_bind_b2Body__GetMass_p0, _emscripten_bind_b2WeldJoint____destroy___p0: _emscripten_bind_b2WeldJoint____destroy___p0, _emscripten_bind_b2WheelJoint__GetSpringDampingRatio_p0: _emscripten_bind_b2WheelJoint__GetSpringDampingRatio_p0, _emscripten_bind_b2RopeJointDef__set_localAnchorB_p1: _emscripten_bind_b2RopeJointDef__set_localAnchorB_p1, _emscripten_bind_b2Body__IsFixedRotation_p0: _emscripten_bind_b2Body__IsFixedRotation_p0, _emscripten_bind_b2Rot__SetIdentity_p0: _emscripten_bind_b2Rot__SetIdentity_p0, _emscripten_bind_b2WheelJoint__SetSpringDampingRatio_p1: _emscripten_bind_b2WheelJoint__SetSpringDampingRatio_p1, _emscripten_bind_b2PrismaticJointDef__get_localAnchorA_p0: _emscripten_bind_b2PrismaticJointDef__get_localAnchorA_p0, _emscripten_bind_b2FrictionJoint__IsActive_p0: _emscripten_bind_b2FrictionJoint__IsActive_p0, _emscripten_bind_b2JointDef__get_userData_p0: _emscripten_bind_b2JointDef__get_userData_p0, _emscripten_bind_b2Draw__DrawPolygon_p3: _emscripten_bind_b2Draw__DrawPolygon_p3, _emscripten_bind_b2MouseJoint__GetBodyB_p0: _emscripten_bind_b2MouseJoint__GetBodyB_p0, _emscripten_bind_b2DistanceJointDef__get_dampingRatio_p0: _emscripten_bind_b2DistanceJointDef__get_dampingRatio_p0, _emscripten_bind_b2ContactManager__get_m_broadPhase_p0: _emscripten_bind_b2ContactManager__get_m_broadPhase_p0, _emscripten_bind_b2RopeJoint__GetReactionTorque_p1: _emscripten_bind_b2RopeJoint__GetReactionTorque_p1, _emscripten_bind_b2PrismaticJoint__GetLowerLimit_p0: _emscripten_bind_b2PrismaticJoint__GetLowerLimit_p0, _emscripten_bind_b2Contact__GetManifold_p0: _emscripten_bind_b2Contact__GetManifold_p0, _emscripten_bind_b2Contact__SetFriction_p1: _emscripten_bind_b2Contact__SetFriction_p1, _emscripten_bind_b2WheelJoint__GetJointSpeed_p0: _emscripten_bind_b2WheelJoint__GetJointSpeed_p0, _emscripten_bind_b2BodyDef__set_allowSleep_p1: _emscripten_bind_b2BodyDef__set_allowSleep_p1, _emscripten_bind_b2Fixture__RayCast_p3: _emscripten_bind_b2Fixture__RayCast_p3, _emscripten_bind_b2WeldJointDef__get_referenceAngle_p0: _emscripten_bind_b2WeldJointDef__get_referenceAngle_p0, _emscripten_bind_b2Fixture____destroy___p0: _emscripten_bind_b2Fixture____destroy___p0, _emscripten_bind_b2RopeJointDef__set_localAnchorA_p1: _emscripten_bind_b2RopeJointDef__set_localAnchorA_p1, _emscripten_bind_b2WheelJoint__SetUserData_p1: _emscripten_bind_b2WheelJoint__SetUserData_p1, _emscripten_bind_b2WeldJoint__b2WeldJoint_p1: _emscripten_bind_b2WeldJoint__b2WeldJoint_p1, _emscripten_bind_b2WeldJoint__IsActive_p0: _emscripten_bind_b2WeldJoint__IsActive_p0, _emscripten_bind_b2Draw__DrawSolidPolygon_p3: _emscripten_bind_b2Draw__DrawSolidPolygon_p3, _emscripten_bind_b2ContactManager____destroy___p0: _emscripten_bind_b2ContactManager____destroy___p0, _emscripten_bind_b2GearJoint__GetAnchorB_p0: _emscripten_bind_b2GearJoint__GetAnchorB_p0, _emscripten_bind_b2WheelJointDef__get_localAxisA_p0: _emscripten_bind_b2WheelJointDef__get_localAxisA_p0, _emscripten_bind_b2PrismaticJointDef__get_lowerTranslation_p0: _emscripten_bind_b2PrismaticJointDef__get_lowerTranslation_p0, _emscripten_bind_b2PolygonShape__get_m_vertexCount_p0: _emscripten_bind_b2PolygonShape__get_m_vertexCount_p0, _emscripten_bind_b2PolygonShape__SetAsBox_p2: _emscripten_bind_b2PolygonShape__SetAsBox_p2, _emscripten_bind_b2DistanceJointDef__Initialize_p4: _emscripten_bind_b2DistanceJointDef__Initialize_p4, _emscripten_bind_b2World__IsLocked_p0: _emscripten_bind_b2World__IsLocked_p0, _emscripten_bind_b2ContactEdge__get_prev_p0: _emscripten_bind_b2ContactEdge__get_prev_p0, _emscripten_bind_b2Joint__GetReactionForce_p1: _emscripten_bind_b2Joint__GetReactionForce_p1, _emscripten_bind_b2WeldJointDef__get_collideConnected_p1: _emscripten_bind_b2WeldJointDef__get_collideConnected_p1, _emscripten_bind_b2World__GetTreeHeight_p0: _emscripten_bind_b2World__GetTreeHeight_p0, _emscripten_bind_b2Draw__AppendFlags_p1: _emscripten_bind_b2Draw__AppendFlags_p1, _emscripten_bind_b2PrismaticJointDef__get_maxMotorForce_p0: _emscripten_bind_b2PrismaticJointDef__get_maxMotorForce_p0, _emscripten_bind_b2PrismaticJointDef__set_upperTranslation_p1: _emscripten_bind_b2PrismaticJointDef__set_upperTranslation_p1, _emscripten_bind_b2GearJointDef__set_collideConnected_p1: _emscripten_bind_b2GearJointDef__set_collideConnected_p1, _emscripten_bind_b2DistanceJointDef__get_bodyA_p1: _emscripten_bind_b2DistanceJointDef__get_bodyA_p1, _emscripten_bind_b2Body__SetActive_p1: _emscripten_bind_b2Body__SetActive_p1, _emscripten_bind_b2PrismaticJoint__GetCollideConnected_p0: _emscripten_bind_b2PrismaticJoint__GetCollideConnected_p0, _emscripten_bind_b2ContactListener____destroy___p0: _emscripten_bind_b2ContactListener____destroy___p0, _emscripten_bind_b2MouseJoint__SetDampingRatio_p1: _emscripten_bind_b2MouseJoint__SetDampingRatio_p1, _emscripten_bind_b2Body__ApplyTorque_p1: _emscripten_bind_b2Body__ApplyTorque_p1, _emscripten_bind_b2DistanceProxy__GetVertexCount_p0: _emscripten_bind_b2DistanceProxy__GetVertexCount_p0, _emscripten_bind_b2BodyDef__set_position_p1: _emscripten_bind_b2BodyDef__set_position_p1, _emscripten_bind_b2FixtureDef__set_density_p1: _emscripten_bind_b2FixtureDef__set_density_p1, _emscripten_bind_b2PulleyJointDef__set_bodyA_p1: _emscripten_bind_b2PulleyJointDef__set_bodyA_p1, _emscripten_bind_b2RopeJoint__b2RopeJoint_p1: _emscripten_bind_b2RopeJoint__b2RopeJoint_p1, _emscripten_bind_b2FixtureDef__get_filter_p0: _emscripten_bind_b2FixtureDef__get_filter_p0, _emscripten_bind_b2WheelJoint__GetUserData_p0: _emscripten_bind_b2WheelJoint__GetUserData_p0, _emscripten_bind_b2PrismaticJoint__GetReactionForce_p1: _emscripten_bind_b2PrismaticJoint__GetReactionForce_p1, _emscripten_bind_b2GearJoint____destroy___p0: _emscripten_bind_b2GearJoint____destroy___p0, _emscripten_bind_b2ContactEdge__set_prev_p1: _emscripten_bind_b2ContactEdge__set_prev_p1, _emscripten_bind_b2Shape__RayCast_p4: _emscripten_bind_b2Shape__RayCast_p4, _emscripten_bind_b2RevoluteJoint__EnableMotor_p1: _emscripten_bind_b2RevoluteJoint__EnableMotor_p1, _emscripten_bind_b2Body__SetType_p1: _emscripten_bind_b2Body__SetType_p1, _emscripten_bind_b2RopeJointDef__set_collideConnected_p1: _emscripten_bind_b2RopeJointDef__set_collideConnected_p1, _emscripten_bind_b2FrictionJoint__GetBodyB_p0: _emscripten_bind_b2FrictionJoint__GetBodyB_p0, _emscripten_bind_b2RevoluteJoint__IsLimitEnabled_p0: _emscripten_bind_b2RevoluteJoint__IsLimitEnabled_p0, _emscripten_bind_b2FrictionJointDef__set_maxForce_p1: _emscripten_bind_b2FrictionJointDef__set_maxForce_p1, _emscripten_bind_b2Contact__SetRestitution_p1: _emscripten_bind_b2Contact__SetRestitution_p1, _emscripten_bind_b2WheelJointDef__get_enableMotor_p0: _emscripten_bind_b2WheelJointDef__get_enableMotor_p0, _emscripten_bind_b2DistanceJointDef__b2DistanceJointDef_p0: _emscripten_bind_b2DistanceJointDef__b2DistanceJointDef_p0, _emscripten_bind_b2PolygonShape__GetChildCount_p0: _emscripten_bind_b2PolygonShape__GetChildCount_p0, _emscripten_bind_b2BlockAllocator__b2BlockAllocator_p0: _emscripten_bind_b2BlockAllocator__b2BlockAllocator_p0, _emscripten_bind_b2ContactEdge__set_other_p1: _emscripten_bind_b2ContactEdge__set_other_p1, _emscripten_bind_b2Body__GetMassData_p1: _emscripten_bind_b2Body__GetMassData_p1, _emscripten_bind_b2Joint__GetNext_p0: _emscripten_bind_b2Joint__GetNext_p0, _emscripten_bind_b2World__SetDestructionListener_p1: _emscripten_bind_b2World__SetDestructionListener_p1, _emscripten_bind_b2RevoluteJoint__GetAnchorA_p0: _emscripten_bind_b2RevoluteJoint__GetAnchorA_p0, _emscripten_bind_b2MouseJointDef__get_collideConnected_p1: _emscripten_bind_b2MouseJointDef__get_collideConnected_p1, _emscripten_bind_b2PrismaticJointDef__set_maxMotorForce_p1: _emscripten_bind_b2PrismaticJointDef__set_maxMotorForce_p1, _emscripten_bind_b2FrictionJoint__SetMaxForce_p1: _emscripten_bind_b2FrictionJoint__SetMaxForce_p1, _malloc: _malloc, _emscripten_bind_b2MouseJoint__GetMaxForce_p0: _emscripten_bind_b2MouseJoint__GetMaxForce_p0, _emscripten_bind_b2MouseJoint__Dump_p0: _emscripten_bind_b2MouseJoint__Dump_p0, _emscripten_bind_b2FixtureDef__set_restitution_p1: _emscripten_bind_b2FixtureDef__set_restitution_p1, _emscripten_bind_b2Shape__GetChildCount_p0: _emscripten_bind_b2Shape__GetChildCount_p0, _emscripten_bind_b2Body__GetJointList_p0: _emscripten_bind_b2Body__GetJointList_p0, _emscripten_bind_b2Timer____destroy___p0: _emscripten_bind_b2Timer____destroy___p0, _emscripten_bind_b2Vec2__IsValid_p0: _emscripten_bind_b2Vec2__IsValid_p0, _emscripten_bind_b2Contact__ResetRestitution_p0: _emscripten_bind_b2Contact__ResetRestitution_p0, _emscripten_bind_b2RevoluteJointDef__get_collideConnected_p1: _emscripten_bind_b2RevoluteJointDef__get_collideConnected_p1, _emscripten_bind_b2DynamicTree__MoveProxy_p3: _emscripten_bind_b2DynamicTree__MoveProxy_p3, _emscripten_bind_b2PulleyJointDef__get_localAnchorA_p0: _emscripten_bind_b2PulleyJointDef__get_localAnchorA_p0, _emscripten_bind_b2RevoluteJointDef__get_bodyA_p1: _emscripten_bind_b2RevoluteJointDef__get_bodyA_p1, _emscripten_bind_b2WheelJointDef____destroy___p0: _emscripten_bind_b2WheelJointDef____destroy___p0, _emscripten_bind_b2MouseJoint__GetBodyA_p0: _emscripten_bind_b2MouseJoint__GetBodyA_p0, _emscripten_bind_b2GearJoint__GetType_p0: _emscripten_bind_b2GearJoint__GetType_p0, _emscripten_bind_b2Body__SetMassData_p1: _emscripten_bind_b2Body__SetMassData_p1, _emscripten_bind_b2MouseJoint__IsActive_p0: _emscripten_bind_b2MouseJoint__IsActive_p0, _emscripten_bind_b2FrictionJoint__GetAnchorA_p0: _emscripten_bind_b2FrictionJoint__GetAnchorA_p0, _emscripten_bind_b2Contact__GetChildIndexA_p0: _emscripten_bind_b2Contact__GetChildIndexA_p0, _emscripten_bind_b2Fixture__GetShape_p0: _emscripten_bind_b2Fixture__GetShape_p0, _emscripten_bind_b2DistanceProxy__set_m_radius_p1: _emscripten_bind_b2DistanceProxy__set_m_radius_p1, _emscripten_bind_b2DistanceJointDef__get_bodyB_p1: _emscripten_bind_b2DistanceJointDef__get_bodyB_p1, _emscripten_bind_b2RevoluteJoint__GetLowerLimit_p0: _emscripten_bind_b2RevoluteJoint__GetLowerLimit_p0, _emscripten_bind_b2World__DestroyJoint_p1: _emscripten_bind_b2World__DestroyJoint_p1, _emscripten_bind_b2PulleyJointDef__set_ratio_p1: _emscripten_bind_b2PulleyJointDef__set_ratio_p1, _emscripten_bind_b2PulleyJoint__GetNext_p0: _emscripten_bind_b2PulleyJoint__GetNext_p0, _emscripten_bind_b2RopeJoint__GetType_p0: _emscripten_bind_b2RopeJoint__GetType_p0, _emscripten_bind_b2Body__GetLocalPoint_p1: _emscripten_bind_b2Body__GetLocalPoint_p1, _emscripten_bind_b2Body__SetGravityScale_p1: _emscripten_bind_b2Body__SetGravityScale_p1, _emscripten_bind_b2PrismaticJointDef__set_bodyA_p1: _emscripten_bind_b2PrismaticJointDef__set_bodyA_p1, _emscripten_bind_b2CircleShape__GetType_p0: _emscripten_bind_b2CircleShape__GetType_p0, _emscripten_bind_b2DistanceProxy__get_m_radius_p0: _emscripten_bind_b2DistanceProxy__get_m_radius_p0, _emscripten_bind_b2World__ClearForces_p0: _emscripten_bind_b2World__ClearForces_p0, _emscripten_bind_b2DynamicTree____destroy___p0: _emscripten_bind_b2DynamicTree____destroy___p0, _emscripten_bind_b2Contact__GetWorldManifold_p1: _emscripten_bind_b2Contact__GetWorldManifold_p1, _emscripten_bind_b2DynamicTree__GetUserData_p1: _emscripten_bind_b2DynamicTree__GetUserData_p1, _emscripten_bind_b2JointDef____destroy___p0: _emscripten_bind_b2JointDef____destroy___p0, _emscripten_bind_b2GearJoint__IsActive_p0: _emscripten_bind_b2GearJoint__IsActive_p0, _emscripten_bind_b2Draw__GetFlags_p0: _emscripten_bind_b2Draw__GetFlags_p0, _emscripten_bind_b2RevoluteJoint__GetAnchorB_p0: _emscripten_bind_b2RevoluteJoint__GetAnchorB_p0, _emscripten_bind_b2RevoluteJointDef__get_bodyB_p1: _emscripten_bind_b2RevoluteJointDef__get_bodyB_p1, _emscripten_bind_b2DistanceJoint____destroy___p0: _emscripten_bind_b2DistanceJoint____destroy___p0, _emscripten_bind_b2DestructionListener__SayGoodbye_p1: _emscripten_bind_b2DestructionListener__SayGoodbye_p1, _emscripten_bind_b2PrismaticJoint__IsLimitEnabled_p0: _emscripten_bind_b2PrismaticJoint__IsLimitEnabled_p0, _emscripten_bind_b2BodyDef____destroy___p0: _emscripten_bind_b2BodyDef____destroy___p0, _emscripten_bind_b2EdgeShape____destroy___p0: _emscripten_bind_b2EdgeShape____destroy___p0, _emscripten_bind_b2GearJointDef__get_ratio_p0: _emscripten_bind_b2GearJointDef__get_ratio_p0, _emscripten_bind_b2BlockAllocator__Clear_p0: _emscripten_bind_b2BlockAllocator__Clear_p0, _emscripten_bind_b2RopeJoint__GetAnchorB_p0: _emscripten_bind_b2RopeJoint__GetAnchorB_p0, _emscripten_bind_b2BodyDef__set_type_p1: _emscripten_bind_b2BodyDef__set_type_p1, _emscripten_bind_b2WheelJoint__EnableMotor_p1: _emscripten_bind_b2WheelJoint__EnableMotor_p1, _emscripten_bind_b2FrictionJoint__GetBodyA_p0: _emscripten_bind_b2FrictionJoint__GetBodyA_p0, _emscripten_bind_b2Joint__GetType_p0: _emscripten_bind_b2Joint__GetType_p0, _emscripten_bind_b2RopeJoint__GetBodyA_p0: _emscripten_bind_b2RopeJoint__GetBodyA_p0, _emscripten_bind_b2WheelJointDef__get_bodyA_p1: _emscripten_bind_b2WheelJointDef__get_bodyA_p1, _emscripten_bind_b2RopeJoint__GetAnchorA_p0: _emscripten_bind_b2RopeJoint__GetAnchorA_p0, _emscripten_bind_b2GearJointDef__get_collideConnected_p1: _emscripten_bind_b2GearJointDef__get_collideConnected_p1, _emscripten_bind_b2RevoluteJointDef__get_upperAngle_p0: _emscripten_bind_b2RevoluteJointDef__get_upperAngle_p0, _emscripten_bind_b2MouseJointDef__set_dampingRatio_p1: _emscripten_bind_b2MouseJointDef__set_dampingRatio_p1, _emscripten_bind_b2PolygonShape__set_m_radius_p1: _emscripten_bind_b2PolygonShape__set_m_radius_p1, _emscripten_bind_b2GearJointDef__set_bodyA_p1: _emscripten_bind_b2GearJointDef__set_bodyA_p1, _emscripten_bind_b2WheelJointDef__get_maxMotorTorque_p0: _emscripten_bind_b2WheelJointDef__get_maxMotorTorque_p0, _emscripten_bind_b2ChainShape__CreateLoop_p2: _emscripten_bind_b2ChainShape__CreateLoop_p2, _emscripten_bind_b2RevoluteJoint__GetNext_p0: _emscripten_bind_b2RevoluteJoint__GetNext_p0, _emscripten_bind_b2MouseJointDef__set_bodyB_p1: _emscripten_bind_b2MouseJointDef__set_bodyB_p1, _emscripten_bind_b2World__DestroyBody_p1: _emscripten_bind_b2World__DestroyBody_p1, _emscripten_bind_b2World__SetSubStepping_p1: _emscripten_bind_b2World__SetSubStepping_p1, _emscripten_bind_b2PulleyJoint__SetUserData_p1: _emscripten_bind_b2PulleyJoint__SetUserData_p1, _emscripten_bind_b2WheelJoint__GetMotorSpeed_p0: _emscripten_bind_b2WheelJoint__GetMotorSpeed_p0, _emscripten_bind_b2RopeJoint__GetLimitState_p0: _emscripten_bind_b2RopeJoint__GetLimitState_p0, _emscripten_bind_b2PrismaticJointDef____destroy___p0: _emscripten_bind_b2PrismaticJointDef____destroy___p0, _emscripten_bind_b2PulleyJointDef__set_collideConnected_p1: _emscripten_bind_b2PulleyJointDef__set_collideConnected_p1, _emscripten_bind_b2WheelJoint__GetNext_p0: _emscripten_bind_b2WheelJoint__GetNext_p0, _emscripten_bind_b2GearJoint__GetJoint1_p0: _emscripten_bind_b2GearJoint__GetJoint1_p0, _emscripten_bind_b2BroadPhase__GetFatAABB_p1: _emscripten_bind_b2BroadPhase__GetFatAABB_p1, _emscripten_bind_b2FrictionJoint__SetMaxTorque_p1: _emscripten_bind_b2FrictionJoint__SetMaxTorque_p1, _emscripten_bind_b2ContactManager__set_m_contactCount_p1: _emscripten_bind_b2ContactManager__set_m_contactCount_p1, _emscripten_bind_b2Body__GetLinearVelocity_p0: _emscripten_bind_b2Body__GetLinearVelocity_p0, _emscripten_bind_b2RevoluteJointDef__set_enableMotor_p1: _emscripten_bind_b2RevoluteJointDef__set_enableMotor_p1, _emscripten_bind_b2AABB____destroy___p0: _emscripten_bind_b2AABB____destroy___p0, _emscripten_bind_b2PulleyJoint__GetCollideConnected_p0: _emscripten_bind_b2PulleyJoint__GetCollideConnected_p0, _emscripten_bind_b2Body__GetAngularVelocity_p0: _emscripten_bind_b2Body__GetAngularVelocity_p0, _emscripten_bind_b2Rot__GetXAxis_p0: _emscripten_bind_b2Rot__GetXAxis_p0, _emscripten_bind_b2WeldJointDef__set_referenceAngle_p1: _emscripten_bind_b2WeldJointDef__set_referenceAngle_p1, _emscripten_bind_b2DistanceJoint__Dump_p0: _emscripten_bind_b2DistanceJoint__Dump_p0, _emscripten_bind_b2StackAllocator__Free_p1: _emscripten_bind_b2StackAllocator__Free_p1, _emscripten_bind_b2CircleShape__GetSupportVertex_p1: _emscripten_bind_b2CircleShape__GetSupportVertex_p1, _emscripten_bind_b2PrismaticJointDef__set_enableMotor_p1: _emscripten_bind_b2PrismaticJointDef__set_enableMotor_p1, _emscripten_bind_b2DistanceProxy__GetSupportVertex_p1: _emscripten_bind_b2DistanceProxy__GetSupportVertex_p1, _emscripten_bind_b2DistanceJointDef__set_bodyA_p1: _emscripten_bind_b2DistanceJointDef__set_bodyA_p1, _emscripten_bind_b2JointDef__set_userData_p1: _emscripten_bind_b2JointDef__set_userData_p1, _emscripten_bind_b2RopeJointDef__get_collideConnected_p1: _emscripten_bind_b2RopeJointDef__get_collideConnected_p1, _emscripten_bind_b2Vec3__get_z_p0: _emscripten_bind_b2Vec3__get_z_p0, _emscripten_bind_b2RopeJoint__GetUserData_p0: _emscripten_bind_b2RopeJoint__GetUserData_p0, _emscripten_bind_b2GearJoint__GetUserData_p0: _emscripten_bind_b2GearJoint__GetUserData_p0, _emscripten_bind_b2FixtureDef__get_restitution_p0: _emscripten_bind_b2FixtureDef__get_restitution_p0, _emscripten_bind_b2WheelJoint__GetAnchorB_p0: _emscripten_bind_b2WheelJoint__GetAnchorB_p0, _emscripten_bind_b2FixtureDef__b2FixtureDef_p0: _emscripten_bind_b2FixtureDef__b2FixtureDef_p0, _emscripten_bind_b2WheelJointDef__get_motorSpeed_p0: _emscripten_bind_b2WheelJointDef__get_motorSpeed_p0, _emscripten_bind_b2FrictionJoint__b2FrictionJoint_p1: _emscripten_bind_b2FrictionJoint__b2FrictionJoint_p1, _emscripten_bind_b2ContactEdge____destroy___p0: _emscripten_bind_b2ContactEdge____destroy___p0, _emscripten_bind_b2Body__GetAngularDamping_p0: _emscripten_bind_b2Body__GetAngularDamping_p0, _emscripten_bind_b2ChainShape__GetChildCount_p0: _emscripten_bind_b2ChainShape__GetChildCount_p0, _emscripten_bind_b2ChainShape__SetNextVertex_p1: _emscripten_bind_b2ChainShape__SetNextVertex_p1, _emscripten_bind_b2Joint__SetUserData_p1: _emscripten_bind_b2Joint__SetUserData_p1, _emscripten_bind_b2Fixture__IsSensor_p0: _emscripten_bind_b2Fixture__IsSensor_p0, _emscripten_bind_b2Filter__set_maskBits_p1: _emscripten_bind_b2Filter__set_maskBits_p1, _emscripten_bind_b2PulleyJointDef__set_groundAnchorB_p1: _emscripten_bind_b2PulleyJointDef__set_groundAnchorB_p1, _emscripten_bind_b2Timer__GetMilliseconds_p0: _emscripten_bind_b2Timer__GetMilliseconds_p0, _emscripten_bind_b2ContactListener__PreSolve_p2: _emscripten_bind_b2ContactListener__PreSolve_p2, _emscripten_bind_b2PulleyJointDef__set_localAnchorB_p1: _emscripten_bind_b2PulleyJointDef__set_localAnchorB_p1, _emscripten_bind_b2WheelJointDef__set_bodyB_p1: _emscripten_bind_b2WheelJointDef__set_bodyB_p1, _emscripten_bind_b2BroadPhase__MoveProxy_p3: _emscripten_bind_b2BroadPhase__MoveProxy_p3, _emscripten_bind_b2BodyDef__get_active_p0: _emscripten_bind_b2BodyDef__get_active_p0, _emscripten_bind_b2DynamicTree__GetMaxBalance_p0: _emscripten_bind_b2DynamicTree__GetMaxBalance_p0, _emscripten_bind_b2Timer__Reset_p0: _emscripten_bind_b2Timer__Reset_p0, _emscripten_bind_b2QueryCallback____destroy___p0: _emscripten_bind_b2QueryCallback____destroy___p0, _emscripten_bind_b2World__b2World_p1: _emscripten_bind_b2World__b2World_p1, _emscripten_bind_b2Vec3__Set_p3: _emscripten_bind_b2Vec3__Set_p3, _emscripten_bind_b2RevoluteJointDef__set_referenceAngle_p1: _emscripten_bind_b2RevoluteJointDef__set_referenceAngle_p1, _emscripten_bind_b2StackAllocator____destroy___p0: _emscripten_bind_b2StackAllocator____destroy___p0, _emscripten_bind_b2PrismaticJoint__GetMaxMotorForce_p0: _emscripten_bind_b2PrismaticJoint__GetMaxMotorForce_p0, _emscripten_bind_b2ContactEdge__get_other_p0: _emscripten_bind_b2ContactEdge__get_other_p0, _emscripten_bind_b2MouseJoint__SetTarget_p1: _emscripten_bind_b2MouseJoint__SetTarget_p1, _emscripten_bind_b2Fixture__GetType_p0: _emscripten_bind_b2Fixture__GetType_p0, _emscripten_bind_b2ContactListener__PostSolve_p2: _emscripten_bind_b2ContactListener__PostSolve_p2, _emscripten_bind_b2WeldJointDef__set_collideConnected_p1: _emscripten_bind_b2WeldJointDef__set_collideConnected_p1, _emscripten_bind_b2Body__GetInertia_p0: _emscripten_bind_b2Body__GetInertia_p0, _emscripten_bind_b2FrictionJointDef__b2FrictionJointDef_p0: _emscripten_bind_b2FrictionJointDef__b2FrictionJointDef_p0, _emscripten_bind_b2PolygonShape__get_m_centroid_p0: _emscripten_bind_b2PolygonShape__get_m_centroid_p0, _emscripten_bind_b2FrictionJointDef__get_localAnchorA_p0: _emscripten_bind_b2FrictionJointDef__get_localAnchorA_p0, _emscripten_bind_b2Draw__SetFlags_p1: _emscripten_bind_b2Draw__SetFlags_p1, _emscripten_bind_b2WeldJoint__GetUserData_p0: _emscripten_bind_b2WeldJoint__GetUserData_p0, _emscripten_bind_b2WeldJointDef__b2WeldJointDef_p0: _emscripten_bind_b2WeldJointDef__b2WeldJointDef_p0, _emscripten_bind_b2RevoluteJoint__SetUserData_p1: _emscripten_bind_b2RevoluteJoint__SetUserData_p1, _emscripten_bind_b2FrictionJointDef__set_collideConnected_p1: _emscripten_bind_b2FrictionJointDef__set_collideConnected_p1, _emscripten_bind_b2World__SetAllowSleeping_p1: _emscripten_bind_b2World__SetAllowSleeping_p1, _emscripten_bind_b2RevoluteJointDef__set_collideConnected_p1: _emscripten_bind_b2RevoluteJointDef__set_collideConnected_p1, _emscripten_bind_b2Contact__IsTouching_p0: _emscripten_bind_b2Contact__IsTouching_p0, _emscripten_bind_b2Transform__set_q_p1: _emscripten_bind_b2Transform__set_q_p1, _emscripten_bind_b2FrictionJoint__GetAnchorB_p0: _emscripten_bind_b2FrictionJoint__GetAnchorB_p0, _emscripten_bind_b2WeldJointDef__get_bodyA_p1: _emscripten_bind_b2WeldJointDef__get_bodyA_p1, _emscripten_bind_b2WheelJoint__GetMotorTorque_p1: _emscripten_bind_b2WheelJoint__GetMotorTorque_p1, _emscripten_bind_b2Draw__b2Draw_p0: _emscripten_bind_b2Draw__b2Draw_p0, _emscripten_bind_b2ChainShape____destroy___p0: _emscripten_bind_b2ChainShape____destroy___p0, _emscripten_bind_b2Rot____destroy___p0: _emscripten_bind_b2Rot____destroy___p0, _emscripten_bind_b2RopeJoint__IsActive_p0: _emscripten_bind_b2RopeJoint__IsActive_p0, _emscripten_bind_b2EdgeShape__set_m_radius_p1: _emscripten_bind_b2EdgeShape__set_m_radius_p1, _emscripten_bind_b2DistanceJointDef__get_length_p0: _emscripten_bind_b2DistanceJointDef__get_length_p0, _emscripten_bind_b2DistanceJoint__SetUserData_p1: _emscripten_bind_b2DistanceJoint__SetUserData_p1, _emscripten_bind_b2ContactManager__set_m_contactListener_p1: _emscripten_bind_b2ContactManager__set_m_contactListener_p1, _emscripten_bind_b2MouseJointDef__get_maxForce_p0: _emscripten_bind_b2MouseJointDef__get_maxForce_p0, _emscripten_bind_b2DistanceProxy__GetSupport_p1: _emscripten_bind_b2DistanceProxy__GetSupport_p1, _emscripten_bind_b2PulleyJoint__GetBodyA_p0: _emscripten_bind_b2PulleyJoint__GetBodyA_p0, _emscripten_bind_b2MouseJoint__SetMaxForce_p1: _emscripten_bind_b2MouseJoint__SetMaxForce_p1, _emscripten_bind_b2World__GetGravity_p0: _emscripten_bind_b2World__GetGravity_p0, _emscripten_bind_b2WheelJointDef__set_bodyA_p1: _emscripten_bind_b2WheelJointDef__set_bodyA_p1, _emscripten_bind_b2AABB__b2AABB_p0: _emscripten_bind_b2AABB__b2AABB_p0, _emscripten_bind_b2DistanceProxy____destroy___p0: _emscripten_bind_b2DistanceProxy____destroy___p0, _emscripten_bind_b2RevoluteJointDef__set_lowerAngle_p1: _emscripten_bind_b2RevoluteJointDef__set_lowerAngle_p1, _emscripten_bind_b2World__GetProfile_p0: _emscripten_bind_b2World__GetProfile_p0, _emscripten_bind_b2Vec2__b2Vec2_p0: _emscripten_bind_b2Vec2__b2Vec2_p0, _emscripten_bind_b2PulleyJointDef__set_groundAnchorA_p1: _emscripten_bind_b2PulleyJointDef__set_groundAnchorA_p1, _emscripten_bind_b2PolygonShape__Clone_p1: _emscripten_bind_b2PolygonShape__Clone_p1, _emscripten_bind_b2Body__GetNext_p0: _emscripten_bind_b2Body__GetNext_p0, _emscripten_bind_b2Fixture__GetMassData_p1: _emscripten_bind_b2Fixture__GetMassData_p1, _emscripten_bind_b2Body__GetWorldVector_p1: _emscripten_bind_b2Body__GetWorldVector_p1, _emscripten_bind_b2RevoluteJoint__GetType_p0: _emscripten_bind_b2RevoluteJoint__GetType_p0, _emscripten_bind_b2Fixture__Refilter_p0: _emscripten_bind_b2Fixture__Refilter_p0, _emscripten_bind_b2Vec3__SetZero_p0: _emscripten_bind_b2Vec3__SetZero_p0, _emscripten_bind_b2ContactListener__EndContact_p1: _emscripten_bind_b2ContactListener__EndContact_p1, _emscripten_bind_b2Vec2__Normalize_p0: _emscripten_bind_b2Vec2__Normalize_p0, _emscripten_bind_b2Shape__ComputeMass_p2: _emscripten_bind_b2Shape__ComputeMass_p2, _emscripten_bind_b2FrictionJoint__GetMaxForce_p0: _emscripten_bind_b2FrictionJoint__GetMaxForce_p0, _emscripten_bind_b2BodyDef__get_type_p0: _emscripten_bind_b2BodyDef__get_type_p0, _emscripten_bind_b2FixtureDef__get_userData_p0: _emscripten_bind_b2FixtureDef__get_userData_p0, _emscripten_bind_b2AABB__GetCenter_p0: _emscripten_bind_b2AABB__GetCenter_p0, _free: _free, _emscripten_bind_b2WeldJointDef__Initialize_p3: _emscripten_bind_b2WeldJointDef__Initialize_p3, _emscripten_bind_b2Color__b2Color_p0: _emscripten_bind_b2Color__b2Color_p0, _emscripten_bind_b2DistanceJoint__GetCollideConnected_p0: _emscripten_bind_b2DistanceJoint__GetCollideConnected_p0, _emscripten_bind_b2Rot__Set_p1: _emscripten_bind_b2Rot__Set_p1, _emscripten_bind_b2RevoluteJoint__GetReactionForce_p1: _emscripten_bind_b2RevoluteJoint__GetReactionForce_p1, _emscripten_bind_b2PrismaticJointDef__b2PrismaticJointDef_p0: _emscripten_bind_b2PrismaticJointDef__b2PrismaticJointDef_p0, _emscripten_bind_b2FrictionJointDef__get_localAnchorB_p0: _emscripten_bind_b2FrictionJointDef__get_localAnchorB_p0, _emscripten_bind_b2MouseJoint__b2MouseJoint_p1: _emscripten_bind_b2MouseJoint__b2MouseJoint_p1, _emscripten_bind_b2RopeJoint__Dump_p0: _emscripten_bind_b2RopeJoint__Dump_p0, _emscripten_bind_b2WheelJointDef__set_enableMotor_p1: _emscripten_bind_b2WheelJointDef__set_enableMotor_p1, _emscripten_bind_b2Vec3__b2Vec3_p3: _emscripten_bind_b2Vec3__b2Vec3_p3, _emscripten_bind_b2PolygonShape__ComputeAABB_p3: _emscripten_bind_b2PolygonShape__ComputeAABB_p3, _emscripten_bind_b2RopeJointDef__set_bodyB_p1: _emscripten_bind_b2RopeJointDef__set_bodyB_p1, _emscripten_bind_b2BodyDef__set_fixedRotation_p1: _emscripten_bind_b2BodyDef__set_fixedRotation_p1, _emscripten_bind_b2WheelJoint__GetAnchorA_p0: _emscripten_bind_b2WheelJoint__GetAnchorA_p0, _emscripten_bind_b2GearJoint__GetBodyA_p0: _emscripten_bind_b2GearJoint__GetBodyA_p0, _emscripten_bind_b2PulleyJointDef__b2PulleyJointDef_p0: _emscripten_bind_b2PulleyJointDef__b2PulleyJointDef_p0, _emscripten_bind_b2EdgeShape__GetChildCount_p0: _emscripten_bind_b2EdgeShape__GetChildCount_p0, _emscripten_bind_b2BodyDef__set_active_p1: _emscripten_bind_b2BodyDef__set_active_p1, _emscripten_bind_b2FrictionJointDef__get_bodyA_p1: _emscripten_bind_b2FrictionJointDef__get_bodyA_p1, _emscripten_bind_b2PulleyJoint__GetReactionTorque_p1: _emscripten_bind_b2PulleyJoint__GetReactionTorque_p1, _emscripten_bind_b2DistanceJoint__b2DistanceJoint_p1: _emscripten_bind_b2DistanceJoint__b2DistanceJoint_p1, _emscripten_bind_b2Vec2____destroy___p0: _emscripten_bind_b2Vec2____destroy___p0, _emscripten_bind_b2GearJointDef__get_bodyA_p1: _emscripten_bind_b2GearJointDef__get_bodyA_p1, _emscripten_bind_b2BodyDef__b2BodyDef_p0: _emscripten_bind_b2BodyDef__b2BodyDef_p0, _emscripten_bind_b2RevoluteJoint__Dump_p0: _emscripten_bind_b2RevoluteJoint__Dump_p0, _emscripten_bind_b2RevoluteJointDef__b2RevoluteJointDef_p0: _emscripten_bind_b2RevoluteJointDef__b2RevoluteJointDef_p0, _emscripten_bind_b2World__SetDebugDraw_p1: _emscripten_bind_b2World__SetDebugDraw_p1, _emscripten_bind_b2MouseJoint____destroy___p0: _emscripten_bind_b2MouseJoint____destroy___p0, _emscripten_bind_b2RevoluteJoint__IsMotorEnabled_p0: _emscripten_bind_b2RevoluteJoint__IsMotorEnabled_p0, _emscripten_bind_b2MouseJointDef__set_frequencyHz_p1: _emscripten_bind_b2MouseJointDef__set_frequencyHz_p1, _emscripten_bind_b2DestructionListener__b2DestructionListener_p0: _emscripten_bind_b2DestructionListener__b2DestructionListener_p0, _emscripten_bind_b2WheelJointDef__get_frequencyHz_p0: _emscripten_bind_b2WheelJointDef__get_frequencyHz_p0, _emscripten_bind_b2Filter__b2Filter_p0: _emscripten_bind_b2Filter__b2Filter_p0, _emscripten_bind_b2JointDef__b2JointDef_p0: _emscripten_bind_b2JointDef__b2JointDef_p0, _emscripten_bind_b2Body__SetBullet_p1: _emscripten_bind_b2Body__SetBullet_p1, _emscripten_bind_b2Body__GetAngle_p0: _emscripten_bind_b2Body__GetAngle_p0, _emscripten_bind_b2PulleyJoint__GetBodyB_p0: _emscripten_bind_b2PulleyJoint__GetBodyB_p0, _emscripten_bind_b2MouseJoint__GetTarget_p0: _emscripten_bind_b2MouseJoint__GetTarget_p0, _emscripten_bind_b2DistanceJointDef__get_frequencyHz_p0: _emscripten_bind_b2DistanceJointDef__get_frequencyHz_p0, _emscripten_bind_b2Contact__GetNext_p0: _emscripten_bind_b2Contact__GetNext_p0, _emscripten_bind_b2World__DrawDebugData_p0: _emscripten_bind_b2World__DrawDebugData_p0, _emscripten_bind_b2RevoluteJointDef__set_maxMotorTorque_p1: _emscripten_bind_b2RevoluteJointDef__set_maxMotorTorque_p1, _emscripten_bind_b2AABB__set_upperBound_p1: _emscripten_bind_b2AABB__set_upperBound_p1, _emscripten_bind_b2WheelJointDef__get_localAnchorA_p0: _emscripten_bind_b2WheelJointDef__get_localAnchorA_p0, _emscripten_bind_b2RevoluteJoint____destroy___p0: _emscripten_bind_b2RevoluteJoint____destroy___p0, _emscripten_bind_b2PulleyJointDef__get_lengthB_p0: _emscripten_bind_b2PulleyJointDef__get_lengthB_p0, _emscripten_bind_b2WeldJoint__GetReferenceAngle_p0: _emscripten_bind_b2WeldJoint__GetReferenceAngle_p0, _strlen: _strlen, _emscripten_bind_b2FixtureDef__set_filter_p1: _emscripten_bind_b2FixtureDef__set_filter_p1, _emscripten_bind_b2ChainShape__CreateChain_p2: _emscripten_bind_b2ChainShape__CreateChain_p2, _emscripten_bind_b2Body__GetLocalVector_p1: _emscripten_bind_b2Body__GetLocalVector_p1, _emscripten_bind_b2Fixture__SetUserData_p1: _emscripten_bind_b2Fixture__SetUserData_p1, _emscripten_bind_b2WheelJoint____destroy___p0: _emscripten_bind_b2WheelJoint____destroy___p0, _emscripten_bind_b2PolygonShape__TestPoint_p2: _emscripten_bind_b2PolygonShape__TestPoint_p2, _emscripten_bind_b2FrictionJointDef__set_maxTorque_p1: _emscripten_bind_b2FrictionJointDef__set_maxTorque_p1, _emscripten_bind_b2ChainShape__ComputeAABB_p3: _emscripten_bind_b2ChainShape__ComputeAABB_p3, _emscripten_bind_b2RopeJoint__GetReactionForce_p1: _emscripten_bind_b2RopeJoint__GetReactionForce_p1, _emscripten_bind_b2CircleShape__GetSupport_p1: _emscripten_bind_b2CircleShape__GetSupport_p1, _emscripten_bind_b2World__GetContinuousPhysics_p0: _emscripten_bind_b2World__GetContinuousPhysics_p0, _emscripten_bind_b2ContactManager__set_m_contactFilter_p1: _emscripten_bind_b2ContactManager__set_m_contactFilter_p1, _emscripten_bind_b2Draw____destroy___p0: _emscripten_bind_b2Draw____destroy___p0, _emscripten_bind_b2RevoluteJointDef__set_localAnchorA_p1: _emscripten_bind_b2RevoluteJointDef__set_localAnchorA_p1, _emscripten_bind_b2MouseJoint__GetCollideConnected_p0: _emscripten_bind_b2MouseJoint__GetCollideConnected_p0, _emscripten_bind_b2MouseJoint__GetReactionForce_p1: _emscripten_bind_b2MouseJoint__GetReactionForce_p1, _emscripten_bind_b2JointDef__set_type_p1: _emscripten_bind_b2JointDef__set_type_p1, _emscripten_bind_b2Color__Set_p3: _emscripten_bind_b2Color__Set_p3, _emscripten_bind_b2RopeJoint__GetCollideConnected_p0: _emscripten_bind_b2RopeJoint__GetCollideConnected_p0, _emscripten_bind_b2WeldJoint__GetType_p0: _emscripten_bind_b2WeldJoint__GetType_p0, _emscripten_bind_b2Joint__GetBodyB_p0: _emscripten_bind_b2Joint__GetBodyB_p0, _emscripten_bind_b2ContactManager__set_m_broadPhase_p1: _emscripten_bind_b2ContactManager__set_m_broadPhase_p1, _emscripten_bind_b2Body__GetLinearVelocityFromLocalPoint_p1: _emscripten_bind_b2Body__GetLinearVelocityFromLocalPoint_p1, _emscripten_bind_b2Vec2__Length_p0: _emscripten_bind_b2Vec2__Length_p0, _emscripten_bind_b2MouseJoint__GetUserData_p0: _emscripten_bind_b2MouseJoint__GetUserData_p0, _emscripten_bind_b2JointDef__get_collideConnected_p0: _emscripten_bind_b2JointDef__get_collideConnected_p0, _emscripten_bind_b2BroadPhase__GetTreeQuality_p0: _emscripten_bind_b2BroadPhase__GetTreeQuality_p0, _emscripten_bind_b2WheelJointDef__get_dampingRatio_p0: _emscripten_bind_b2WheelJointDef__get_dampingRatio_p0, _emscripten_bind_b2Body__GetType_p0: _emscripten_bind_b2Body__GetType_p0, _emscripten_bind_b2Joint__GetCollideConnected_p0: _emscripten_bind_b2Joint__GetCollideConnected_p0, _emscripten_bind_b2FrictionJoint__GetReactionTorque_p1: _emscripten_bind_b2FrictionJoint__GetReactionTorque_p1, _emscripten_bind_b2PulleyJointDef__get_bodyB_p1: _emscripten_bind_b2PulleyJointDef__get_bodyB_p1, _emscripten_bind_b2FrictionJointDef__set_localAnchorB_p1: _emscripten_bind_b2FrictionJointDef__set_localAnchorB_p1, _emscripten_bind_b2FrictionJointDef__get_maxForce_p0: _emscripten_bind_b2FrictionJointDef__get_maxForce_p0, _emscripten_bind_b2WheelJointDef__set_localAnchorA_p1: _emscripten_bind_b2WheelJointDef__set_localAnchorA_p1, _emscripten_bind_b2FrictionJointDef__get_bodyB_p1: _emscripten_bind_b2FrictionJointDef__get_bodyB_p1, _emscripten_bind_b2FrictionJoint__GetType_p0: _emscripten_bind_b2FrictionJoint__GetType_p0, _emscripten_bind_b2PolygonShape__RayCast_p4: _emscripten_bind_b2PolygonShape__RayCast_p4, _emscripten_bind_b2GearJoint__GetCollideConnected_p0: _emscripten_bind_b2GearJoint__GetCollideConnected_p0, _emscripten_bind_b2CircleShape__ComputeMass_p2: _emscripten_bind_b2CircleShape__ComputeMass_p2, _emscripten_bind_b2Joint__IsActive_p0: _emscripten_bind_b2Joint__IsActive_p0, _emscripten_bind_b2MouseJoint__GetFrequency_p0: _emscripten_bind_b2MouseJoint__GetFrequency_p0, _emscripten_bind_b2MouseJointDef__b2MouseJointDef_p0: _emscripten_bind_b2MouseJointDef__b2MouseJointDef_p0, _emscripten_bind_b2Contact__IsEnabled_p0: _emscripten_bind_b2Contact__IsEnabled_p0, _emscripten_bind_b2PrismaticJointDef__set_bodyB_p1: _emscripten_bind_b2PrismaticJointDef__set_bodyB_p1, _emscripten_bind_b2Vec2__SetZero_p0: _emscripten_bind_b2Vec2__SetZero_p0, _emscripten_bind_b2Fixture__SetSensor_p1: _emscripten_bind_b2Fixture__SetSensor_p1, _emscripten_bind_b2Shape__GetType_p0: _emscripten_bind_b2Shape__GetType_p0, _emscripten_bind_b2WeldJointDef__get_localAnchorB_p0: _emscripten_bind_b2WeldJointDef__get_localAnchorB_p0, _emscripten_bind_b2DistanceProxy__set_m_vertices_p1: _emscripten_bind_b2DistanceProxy__set_m_vertices_p1, _emscripten_bind_b2PrismaticJoint__GetLocalAnchorA_p0: _emscripten_bind_b2PrismaticJoint__GetLocalAnchorA_p0, _emscripten_bind_b2WheelJointDef__set_motorSpeed_p1: _emscripten_bind_b2WheelJointDef__set_motorSpeed_p1, _emscripten_bind_b2Contact__Evaluate_p3: _emscripten_bind_b2Contact__Evaluate_p3, _emscripten_bind_b2WheelJointDef__get_localAnchorB_p0: _emscripten_bind_b2WheelJointDef__get_localAnchorB_p0, _emscripten_bind_b2WeldJoint__GetNext_p0: _emscripten_bind_b2WeldJoint__GetNext_p0, _emscripten_bind_b2WeldJoint__GetReactionForce_p1: _emscripten_bind_b2WeldJoint__GetReactionForce_p1, _emscripten_bind_b2AABB__Combine_p2: _emscripten_bind_b2AABB__Combine_p2, _emscripten_bind_b2PulleyJointDef__get_lengthA_p0: _emscripten_bind_b2PulleyJointDef__get_lengthA_p0, _emscripten_bind_b2Shape__get_m_radius_p0: _emscripten_bind_b2Shape__get_m_radius_p0, _emscripten_bind_b2ChainShape__set_m_count_p1: _emscripten_bind_b2ChainShape__set_m_count_p1, _emscripten_bind_b2Contact__ResetFriction_p0: _emscripten_bind_b2Contact__ResetFriction_p0, _emscripten_bind_b2DynamicTree__GetFatAABB_p1: _emscripten_bind_b2DynamicTree__GetFatAABB_p1, _emscripten_bind_b2Body__SetLinearVelocity_p1: _emscripten_bind_b2Body__SetLinearVelocity_p1, _emscripten_bind_b2PrismaticJoint__SetLimits_p2: _emscripten_bind_b2PrismaticJoint__SetLimits_p2, _emscripten_bind_b2CircleShape__b2CircleShape_p0: _emscripten_bind_b2CircleShape__b2CircleShape_p0, _emscripten_bind_b2Color__get_g_p0: _emscripten_bind_b2Color__get_g_p0, _emscripten_bind_b2Fixture__GetBody_p0: _emscripten_bind_b2Fixture__GetBody_p0, _emscripten_bind_b2FrictionJointDef__get_collideConnected_p1: _emscripten_bind_b2FrictionJointDef__get_collideConnected_p1, _emscripten_bind_b2WheelJointDef__set_maxMotorTorque_p1: _emscripten_bind_b2WheelJointDef__set_maxMotorTorque_p1, _emscripten_bind_b2GearJointDef__get_bodyB_p1: _emscripten_bind_b2GearJointDef__get_bodyB_p1, _emscripten_bind_b2Vec2__LengthSquared_p0: _emscripten_bind_b2Vec2__LengthSquared_p0, _emscripten_bind_b2Contact__GetFixtureA_p0: _emscripten_bind_b2Contact__GetFixtureA_p0, _emscripten_bind_b2RevoluteJointDef__set_localAnchorB_p1: _emscripten_bind_b2RevoluteJointDef__set_localAnchorB_p1, _emscripten_bind_b2DistanceJointDef__set_bodyB_p1: _emscripten_bind_b2DistanceJointDef__set_bodyB_p1, _emscripten_bind_b2Transform__SetIdentity_p0: _emscripten_bind_b2Transform__SetIdentity_p0, _emscripten_bind_b2FrictionJointDef__set_localAnchorA_p1: _emscripten_bind_b2FrictionJointDef__set_localAnchorA_p1, _emscripten_bind_b2Body__SetTransform_p2: _emscripten_bind_b2Body__SetTransform_p2, _emscripten_bind_b2PulleyJointDef__get_bodyA_p1: _emscripten_bind_b2PulleyJointDef__get_bodyA_p1, _emscripten_bind_b2DistanceJoint__GetReactionTorque_p1: _emscripten_bind_b2DistanceJoint__GetReactionTorque_p1, _emscripten_bind_b2FrictionJointDef____destroy___p0: _emscripten_bind_b2FrictionJointDef____destroy___p0, _emscripten_bind_b2MouseJointDef__set_maxForce_p1: _emscripten_bind_b2MouseJointDef__set_maxForce_p1, _emscripten_bind_b2GearJoint__GetReactionForce_p1: _emscripten_bind_b2GearJoint__GetReactionForce_p1, _emscripten_bind_b2Vec2__set_y_p1: _emscripten_bind_b2Vec2__set_y_p1, _emscripten_bind_b2CircleShape__Clone_p1: _emscripten_bind_b2CircleShape__Clone_p1, _emscripten_bind_b2FrictionJoint__GetNext_p0: _emscripten_bind_b2FrictionJoint__GetNext_p0, _emscripten_bind_b2Color____destroy___p0: _emscripten_bind_b2Color____destroy___p0, _emscripten_bind_b2WeldJoint__GetBodyA_p0: _emscripten_bind_b2WeldJoint__GetBodyA_p0, _emscripten_bind_b2Fixture__GetRestitution_p0: _emscripten_bind_b2Fixture__GetRestitution_p0, _emscripten_bind_b2DistanceJointDef__set_length_p1: _emscripten_bind_b2DistanceJointDef__set_length_p1, _emscripten_bind_b2PrismaticJointDef__get_localAxisA_p0: _emscripten_bind_b2PrismaticJointDef__get_localAxisA_p0, _emscripten_bind_b2Color__b2Color_p3: _emscripten_bind_b2Color__b2Color_p3, _emscripten_bind_b2Body__ApplyForceToCenter_p1: _emscripten_bind_b2Body__ApplyForceToCenter_p1, _emscripten_bind_b2PrismaticJoint__SetUserData_p1: _emscripten_bind_b2PrismaticJoint__SetUserData_p1, _emscripten_bind_b2Color__get_r_p0: _emscripten_bind_b2Color__get_r_p0, _emscripten_bind_b2RevoluteJoint__b2RevoluteJoint_p1: _emscripten_bind_b2RevoluteJoint__b2RevoluteJoint_p1, _emscripten_bind_b2RevoluteJoint__GetCollideConnected_p0: _emscripten_bind_b2RevoluteJoint__GetCollideConnected_p0, _emscripten_bind_b2PrismaticJoint__IsActive_p0: _emscripten_bind_b2PrismaticJoint__IsActive_p0, _emscripten_bind_b2Body__SetFixedRotation_p1: _emscripten_bind_b2Body__SetFixedRotation_p1, _emscripten_bind_b2RopeJointDef____destroy___p0: _emscripten_bind_b2RopeJointDef____destroy___p0, _emscripten_bind_b2CircleShape____destroy___p0: _emscripten_bind_b2CircleShape____destroy___p0, _emscripten_bind_b2Shape__set_m_radius_p1: _emscripten_bind_b2Shape__set_m_radius_p1, _emscripten_bind_b2WheelJoint__GetBodyB_p0: _emscripten_bind_b2WheelJoint__GetBodyB_p0, _emscripten_bind_b2JointDef__get_bodyA_p0: _emscripten_bind_b2JointDef__get_bodyA_p0, _emscripten_bind_b2World__GetContactCount_p0: _emscripten_bind_b2World__GetContactCount_p0, _emscripten_bind_b2Fixture__b2Fixture_p0: _emscripten_bind_b2Fixture__b2Fixture_p0, _emscripten_bind_b2StackAllocator__Allocate_p1: _emscripten_bind_b2StackAllocator__Allocate_p1, _emscripten_bind_b2World__GetBodyCount_p0: _emscripten_bind_b2World__GetBodyCount_p0, _emscripten_bind_b2BodyDef__set_awake_p1: _emscripten_bind_b2BodyDef__set_awake_p1, _emscripten_bind_b2BroadPhase__CreateProxy_p2: _emscripten_bind_b2BroadPhase__CreateProxy_p2, _emscripten_bind_b2WheelJoint__GetLocalAnchorA_p0: _emscripten_bind_b2WheelJoint__GetLocalAnchorA_p0, _emscripten_bind_b2FrictionJointDef__set_bodyB_p1: _emscripten_bind_b2FrictionJointDef__set_bodyB_p1, _emscripten_bind_b2WheelJoint__SetSpringFrequencyHz_p1: _emscripten_bind_b2WheelJoint__SetSpringFrequencyHz_p1, _emscripten_bind_b2MouseJoint__SetFrequency_p1: _emscripten_bind_b2MouseJoint__SetFrequency_p1, _emscripten_bind_b2Timer__b2Timer_p0: _emscripten_bind_b2Timer__b2Timer_p0, _emscripten_bind_b2Filter____destroy___p0: _emscripten_bind_b2Filter____destroy___p0, _emscripten_bind_b2WeldJointDef__get_dampingRatio_p0: _emscripten_bind_b2WeldJointDef__get_dampingRatio_p0, _emscripten_bind_b2Fixture__GetUserData_p0: _emscripten_bind_b2Fixture__GetUserData_p0, _emscripten_bind_b2AABB__get_upperBound_p0: _emscripten_bind_b2AABB__get_upperBound_p0, _emscripten_bind_b2PulleyJoint__Dump_p0: _emscripten_bind_b2PulleyJoint__Dump_p0, _emscripten_bind_b2RopeJointDef__get_localAnchorA_p0: _emscripten_bind_b2RopeJointDef__get_localAnchorA_p0, _emscripten_bind_b2RevoluteJoint__GetBodyA_p0: _emscripten_bind_b2RevoluteJoint__GetBodyA_p0, _emscripten_bind_b2CircleShape__get_m_radius_p0: _emscripten_bind_b2CircleShape__get_m_radius_p0, _emscripten_bind_b2DistanceJoint__GetLength_p0: _emscripten_bind_b2DistanceJoint__GetLength_p0, _emscripten_bind_b2BodyDef__set_angularVelocity_p1: _emscripten_bind_b2BodyDef__set_angularVelocity_p1, _emscripten_bind_b2Color__get_b_p0: _emscripten_bind_b2Color__get_b_p0, _emscripten_bind_b2BroadPhase__GetProxyCount_p0: _emscripten_bind_b2BroadPhase__GetProxyCount_p0, _emscripten_bind_b2RevoluteJoint__SetMotorSpeed_p1: _emscripten_bind_b2RevoluteJoint__SetMotorSpeed_p1, _emscripten_bind_b2WeldJoint__GetReactionTorque_p1: _emscripten_bind_b2WeldJoint__GetReactionTorque_p1, _emscripten_bind_b2GearJoint__SetUserData_p1: _emscripten_bind_b2GearJoint__SetUserData_p1, _emscripten_bind_b2PrismaticJoint__GetAnchorB_p0: _emscripten_bind_b2PrismaticJoint__GetAnchorB_p0, _emscripten_bind_b2MouseJointDef__set_target_p1: _emscripten_bind_b2MouseJointDef__set_target_p1, _emscripten_bind_b2EdgeShape__ComputeAABB_p3: _emscripten_bind_b2EdgeShape__ComputeAABB_p3, _emscripten_bind_b2Body__GetFixtureList_p0: _emscripten_bind_b2Body__GetFixtureList_p0, _emscripten_bind_b2RopeJoint__SetMaxLength_p1: _emscripten_bind_b2RopeJoint__SetMaxLength_p1, _emscripten_bind_b2WheelJointDef__set_localAnchorB_p1: _emscripten_bind_b2WheelJointDef__set_localAnchorB_p1, _emscripten_bind_b2WheelJoint__GetReactionTorque_p1: _emscripten_bind_b2WheelJoint__GetReactionTorque_p1, _emscripten_bind_b2FrictionJointDef__set_bodyA_p1: _emscripten_bind_b2FrictionJointDef__set_bodyA_p1, _emscripten_bind_b2WheelJoint__GetLocalAnchorB_p0: _emscripten_bind_b2WheelJoint__GetLocalAnchorB_p0, _emscripten_bind_b2PrismaticJointDef__set_localAxisA_p1: _emscripten_bind_b2PrismaticJointDef__set_localAxisA_p1, _emscripten_bind_b2PrismaticJointDef__set_localAnchorA_p1: _emscripten_bind_b2PrismaticJointDef__set_localAnchorA_p1, _emscripten_bind_b2RevoluteJoint__GetReactionTorque_p1: _emscripten_bind_b2RevoluteJoint__GetReactionTorque_p1, _emscripten_bind_b2Joint__GetAnchorB_p0: _emscripten_bind_b2Joint__GetAnchorB_p0, _emscripten_bind_b2CircleShape__set_m_radius_p1: _emscripten_bind_b2CircleShape__set_m_radius_p1, _memcpy: _memcpy, _emscripten_bind_b2World__GetContactManager_p0: _emscripten_bind_b2World__GetContactManager_p0, _emscripten_bind_b2WeldJoint__GetLocalAnchorB_p0: _emscripten_bind_b2WeldJoint__GetLocalAnchorB_p0, _emscripten_bind_b2Contact__GetFixtureB_p0: _emscripten_bind_b2Contact__GetFixtureB_p0, _emscripten_bind_b2Rot__GetYAxis_p0: _emscripten_bind_b2Rot__GetYAxis_p0, _emscripten_bind_b2RevoluteJointDef__set_upperAngle_p1: _emscripten_bind_b2RevoluteJointDef__set_upperAngle_p1, _emscripten_bind_b2Shape__Clone_p1: _emscripten_bind_b2Shape__Clone_p1, _emscripten_bind_b2PulleyJoint__GetType_p0: _emscripten_bind_b2PulleyJoint__GetType_p0, _emscripten_bind_b2AABB__set_lowerBound_p1: _emscripten_bind_b2AABB__set_lowerBound_p1, _emscripten_bind_b2PrismaticJointDef__get_motorSpeed_p0: _emscripten_bind_b2PrismaticJointDef__get_motorSpeed_p0, _emscripten_bind_b2BodyDef__set_linearDamping_p1: _emscripten_bind_b2BodyDef__set_linearDamping_p1, _emscripten_bind_b2BroadPhase__GetTreeBalance_p0: _emscripten_bind_b2BroadPhase__GetTreeBalance_p0, _emscripten_bind_b2AABB__GetExtents_p0: _emscripten_bind_b2AABB__GetExtents_p0, _emscripten_bind_b2PrismaticJointDef__get_bodyB_p1: _emscripten_bind_b2PrismaticJointDef__get_bodyB_p1, _emscripten_bind_b2WeldJoint__SetFrequency_p1: _emscripten_bind_b2WeldJoint__SetFrequency_p1, _emscripten_bind_b2FixtureDef__get_density_p0: _emscripten_bind_b2FixtureDef__get_density_p0, _emscripten_bind_b2Draw__ClearFlags_p1: _emscripten_bind_b2Draw__ClearFlags_p1, _emscripten_bind_b2WeldJointDef__get_localAnchorA_p0: _emscripten_bind_b2WeldJointDef__get_localAnchorA_p0, _emscripten_bind_b2PolygonShape__GetType_p0: _emscripten_bind_b2PolygonShape__GetType_p0, _emscripten_bind_b2World__GetJointList_p0: _emscripten_bind_b2World__GetJointList_p0, _emscripten_bind_b2BroadPhase__GetUserData_p1: _emscripten_bind_b2BroadPhase__GetUserData_p1, _emscripten_bind_b2Rot__get_c_p0: _emscripten_bind_b2Rot__get_c_p0, _emscripten_bind_b2World__GetAutoClearForces_p0: _emscripten_bind_b2World__GetAutoClearForces_p0, _emscripten_bind_b2Rot__GetAngle_p0: _emscripten_bind_b2Rot__GetAngle_p0, _emscripten_bind_b2AABB__IsValid_p0: _emscripten_bind_b2AABB__IsValid_p0, _emscripten_bind_b2PolygonShape__Set_p2: _emscripten_bind_b2PolygonShape__Set_p2, _emscripten_bind_b2FixtureDef__set_isSensor_p1: _emscripten_bind_b2FixtureDef__set_isSensor_p1, _emscripten_bind_b2World__CreateJoint_p1: _emscripten_bind_b2World__CreateJoint_p1, _emscripten_bind_b2WheelJoint__GetDefinition_p1: _emscripten_bind_b2WheelJoint__GetDefinition_p1, _emscripten_bind_b2Color__set_b_p1: _emscripten_bind_b2Color__set_b_p1, _emscripten_bind_b2PrismaticJointDef__get_referenceAngle_p0: _emscripten_bind_b2PrismaticJointDef__get_referenceAngle_p0, _emscripten_bind_b2Body__GetLocalCenter_p0: _emscripten_bind_b2Body__GetLocalCenter_p0, _emscripten_bind_b2WheelJoint__GetLocalAxisA_p0: _emscripten_bind_b2WheelJoint__GetLocalAxisA_p0, _emscripten_bind_b2Body__SetAngularVelocity_p1: _emscripten_bind_b2Body__SetAngularVelocity_p1, _emscripten_bind_b2World__SetGravity_p1: _emscripten_bind_b2World__SetGravity_p1, _emscripten_bind_b2CircleShape__TestPoint_p2: _emscripten_bind_b2CircleShape__TestPoint_p2, _emscripten_bind_b2Body__SetAwake_p1: _emscripten_bind_b2Body__SetAwake_p1, _emscripten_bind_b2Filter__set_categoryBits_p1: _emscripten_bind_b2Filter__set_categoryBits_p1, _emscripten_bind_b2DynamicTree__RebuildBottomUp_p0: _emscripten_bind_b2DynamicTree__RebuildBottomUp_p0, _emscripten_bind_b2PrismaticJointDef__get_collideConnected_p1: _emscripten_bind_b2PrismaticJointDef__get_collideConnected_p1, _emscripten_bind_b2World__CreateBody_p1: _emscripten_bind_b2World__CreateBody_p1, _emscripten_bind_b2JointDef__get_bodyB_p0: _emscripten_bind_b2JointDef__get_bodyB_p0, _emscripten_bind_b2ChainShape__get_m_count_p0: _emscripten_bind_b2ChainShape__get_m_count_p0, _emscripten_bind_b2PrismaticJoint__GetAnchorA_p0: _emscripten_bind_b2PrismaticJoint__GetAnchorA_p0, _emscripten_bind_b2PulleyJoint__GetRatio_p0: _emscripten_bind_b2PulleyJoint__GetRatio_p0, _emscripten_bind_b2WheelJointDef__set_localAxisA_p1: _emscripten_bind_b2WheelJointDef__set_localAxisA_p1, _emscripten_bind_b2Draw__DrawCircle_p3: _emscripten_bind_b2Draw__DrawCircle_p3, _emscripten_bind_b2CircleShape__GetVertex_p1: _emscripten_bind_b2CircleShape__GetVertex_p1, _emscripten_bind_b2WeldJoint__GetCollideConnected_p0: _emscripten_bind_b2WeldJoint__GetCollideConnected_p0, _emscripten_bind_b2RevoluteJointDef__get_lowerAngle_p0: _emscripten_bind_b2RevoluteJointDef__get_lowerAngle_p0, _emscripten_bind_b2PulleyJointDef__get_ratio_p0: _emscripten_bind_b2PulleyJointDef__get_ratio_p0, _emscripten_bind_b2Joint__GetAnchorA_p0: _emscripten_bind_b2Joint__GetAnchorA_p0, _emscripten_bind_b2DistanceProxy__b2DistanceProxy_p0: _emscripten_bind_b2DistanceProxy__b2DistanceProxy_p0, _emscripten_bind_b2WheelJoint__IsActive_p0: _emscripten_bind_b2WheelJoint__IsActive_p0, _emscripten_bind_b2Transform____destroy___p0: _emscripten_bind_b2Transform____destroy___p0, _emscripten_bind_b2PolygonShape__ComputeMass_p2: _emscripten_bind_b2PolygonShape__ComputeMass_p2, _emscripten_bind_b2RopeJointDef__get_bodyA_p1: _emscripten_bind_b2RopeJointDef__get_bodyA_p1, _emscripten_bind_b2WheelJoint__b2WheelJoint_p1: _emscripten_bind_b2WheelJoint__b2WheelJoint_p1, _emscripten_bind_b2RopeJoint__GetMaxLength_p0: _emscripten_bind_b2RopeJoint__GetMaxLength_p0, _emscripten_bind_b2Draw__DrawTransform_p1: _emscripten_bind_b2Draw__DrawTransform_p1, _emscripten_bind_b2DistanceJoint__GetType_p0: _emscripten_bind_b2DistanceJoint__GetType_p0, _emscripten_bind_b2PolygonShape__get_m_radius_p0: _emscripten_bind_b2PolygonShape__get_m_radius_p0, _emscripten_bind_b2Fixture__GetFriction_p0: _emscripten_bind_b2Fixture__GetFriction_p0, _emscripten_bind_b2Body__GetWorld_p0: _emscripten_bind_b2Body__GetWorld_p0, _emscripten_bind_b2PolygonShape__b2PolygonShape_p0: _emscripten_bind_b2PolygonShape__b2PolygonShape_p0, _emscripten_bind_b2WeldJointDef__set_frequencyHz_p1: _emscripten_bind_b2WeldJointDef__set_frequencyHz_p1, _emscripten_bind_b2RevoluteJoint__GetJointAngle_p0: _emscripten_bind_b2RevoluteJoint__GetJointAngle_p0, _emscripten_bind_b2Body__ResetMassData_p0: _emscripten_bind_b2Body__ResetMassData_p0, _emscripten_bind_b2RevoluteJoint__IsActive_p0: _emscripten_bind_b2RevoluteJoint__IsActive_p0, _emscripten_bind_b2FrictionJoint__SetUserData_p1: _emscripten_bind_b2FrictionJoint__SetUserData_p1, _emscripten_bind_b2PulleyJoint__GetReactionForce_p1: _emscripten_bind_b2PulleyJoint__GetReactionForce_p1, _emscripten_bind_b2PrismaticJointDef__set_localAnchorB_p1: _emscripten_bind_b2PrismaticJointDef__set_localAnchorB_p1, _emscripten_bind_b2World__SetContinuousPhysics_p1: _emscripten_bind_b2World__SetContinuousPhysics_p1, _emscripten_bind_b2PulleyJoint__GetAnchorA_p0: _emscripten_bind_b2PulleyJoint__GetAnchorA_p0, _emscripten_bind_b2ContactManager__FindNewContacts_p0: _emscripten_bind_b2ContactManager__FindNewContacts_p0, _emscripten_bind_b2DistanceJointDef__get_localAnchorA_p0: _emscripten_bind_b2DistanceJointDef__get_localAnchorA_p0, _emscripten_bind_b2CircleShape__GetVertexCount_p0: _emscripten_bind_b2CircleShape__GetVertexCount_p0, _emscripten_bind_b2PolygonShape__GetVertex_p1: _emscripten_bind_b2PolygonShape__GetVertex_p1, _emscripten_bind_b2WeldJointDef__get_frequencyHz_p0: _emscripten_bind_b2WeldJointDef__get_frequencyHz_p0, _emscripten_bind_b2ContactListener__BeginContact_p1: _emscripten_bind_b2ContactListener__BeginContact_p1, _emscripten_bind_b2BodyDef__set_gravityScale_p1: _emscripten_bind_b2BodyDef__set_gravityScale_p1, _emscripten_bind_b2DistanceJoint__GetAnchorA_p0: _emscripten_bind_b2DistanceJoint__GetAnchorA_p0, _emscripten_bind_b2PrismaticJoint__GetLocalAxisA_p0: _emscripten_bind_b2PrismaticJoint__GetLocalAxisA_p0, _emscripten_bind_b2ChainShape__Clone_p1: _emscripten_bind_b2ChainShape__Clone_p1, _emscripten_bind_b2GearJointDef__b2GearJointDef_p0: _emscripten_bind_b2GearJointDef__b2GearJointDef_p0, _emscripten_bind_b2GearJoint__GetReactionTorque_p1: _emscripten_bind_b2GearJoint__GetReactionTorque_p1, _emscripten_bind_b2Body__ApplyForce_p2: _emscripten_bind_b2Body__ApplyForce_p2, _emscripten_bind_b2ContactEdge__get_contact_p0: _emscripten_bind_b2ContactEdge__get_contact_p0, _emscripten_bind_b2GearJointDef__set_bodyB_p1: _emscripten_bind_b2GearJointDef__set_bodyB_p1, _emscripten_bind_b2RevoluteJointDef__get_enableMotor_p0: _emscripten_bind_b2RevoluteJointDef__get_enableMotor_p0, _emscripten_bind_b2RopeJoint____destroy___p0: _emscripten_bind_b2RopeJoint____destroy___p0, _emscripten_bind_b2WheelJointDef__b2WheelJointDef_p0: _emscripten_bind_b2WheelJointDef__b2WheelJointDef_p0, _emscripten_bind_b2DistanceJoint__SetFrequency_p1: _emscripten_bind_b2DistanceJoint__SetFrequency_p1, _emscripten_bind_b2PrismaticJointDef__set_lowerTranslation_p1: _emscripten_bind_b2PrismaticJointDef__set_lowerTranslation_p1, _emscripten_bind_b2PrismaticJointDef__get_bodyA_p1: _emscripten_bind_b2PrismaticJointDef__get_bodyA_p1, _emscripten_bind_b2FixtureDef__get_friction_p0: _emscripten_bind_b2FixtureDef__get_friction_p0, _emscripten_bind_b2ContactEdge__get_next_p0: _emscripten_bind_b2ContactEdge__get_next_p0, _emscripten_bind_b2RevoluteJoint__GetBodyB_p0: _emscripten_bind_b2RevoluteJoint__GetBodyB_p0, _emscripten_bind_b2RevoluteJoint__GetUserData_p0: _emscripten_bind_b2RevoluteJoint__GetUserData_p0, _emscripten_bind_b2RopeJoint__GetBodyB_p0: _emscripten_bind_b2RopeJoint__GetBodyB_p0, _emscripten_bind_b2World__Step_p3: _emscripten_bind_b2World__Step_p3, _emscripten_bind_b2Vec2__set_x_p1: _emscripten_bind_b2Vec2__set_x_p1, _emscripten_bind_b2ContactManager__b2ContactManager_p0: _emscripten_bind_b2ContactManager__b2ContactManager_p0, _emscripten_bind_b2RopeJoint__GetNext_p0: _emscripten_bind_b2RopeJoint__GetNext_p0, _emscripten_bind_b2WeldJoint__SetDampingRatio_p1: _emscripten_bind_b2WeldJoint__SetDampingRatio_p1, _emscripten_bind_b2GearJoint__GetAnchorA_p0: _emscripten_bind_b2GearJoint__GetAnchorA_p0, _emscripten_bind_b2Contact__GetRestitution_p0: _emscripten_bind_b2Contact__GetRestitution_p0, _emscripten_bind_b2MouseJointDef____destroy___p0: _emscripten_bind_b2MouseJointDef____destroy___p0, _emscripten_bind_b2Body__GetTransform_p0: _emscripten_bind_b2Body__GetTransform_p0, _emscripten_bind_b2PrismaticJoint__b2PrismaticJoint_p1: _emscripten_bind_b2PrismaticJoint__b2PrismaticJoint_p1, _emscripten_bind_b2RopeJointDef__get_maxLength_p0: _emscripten_bind_b2RopeJointDef__get_maxLength_p0, _emscripten_bind_b2DistanceJoint__GetAnchorB_p0: _emscripten_bind_b2DistanceJoint__GetAnchorB_p0, _emscripten_bind_b2ChainShape__set_m_vertices_p1: _emscripten_bind_b2ChainShape__set_m_vertices_p1, _emscripten_bind_b2EdgeShape__TestPoint_p2: _emscripten_bind_b2EdgeShape__TestPoint_p2, _emscripten_bind_b2FrictionJoint__GetMaxTorque_p0: _emscripten_bind_b2FrictionJoint__GetMaxTorque_p0, _emscripten_bind_b2RopeJointDef__b2RopeJointDef_p0: _emscripten_bind_b2RopeJointDef__b2RopeJointDef_p0, _emscripten_bind_b2ContactManager__AddPair_p2: _emscripten_bind_b2ContactManager__AddPair_p2, _emscripten_bind_b2Color__set_g_p1: _emscripten_bind_b2Color__set_g_p1, _emscripten_bind_b2WheelJoint__IsMotorEnabled_p0: _emscripten_bind_b2WheelJoint__IsMotorEnabled_p0, _emscripten_bind_b2QueryCallback__b2QueryCallback_p0: _emscripten_bind_b2QueryCallback__b2QueryCallback_p0, _emscripten_bind_b2WheelJointDef__get_collideConnected_p1: _emscripten_bind_b2WheelJointDef__get_collideConnected_p1, _emscripten_bind_b2FrictionJoint__Dump_p0: _emscripten_bind_b2FrictionJoint__Dump_p0, _emscripten_bind_b2ChainShape__SetPrevVertex_p1: _emscripten_bind_b2ChainShape__SetPrevVertex_p1, _emscripten_bind_b2AABB__GetPerimeter_p0: _emscripten_bind_b2AABB__GetPerimeter_p0, _emscripten_bind_b2DistanceProxy__set_m_count_p1: _emscripten_bind_b2DistanceProxy__set_m_count_p1, _emscripten_bind_b2Body__GetLinearVelocityFromWorldPoint_p1: _emscripten_bind_b2Body__GetLinearVelocityFromWorldPoint_p1, _emscripten_bind_b2MouseJointDef__set_bodyA_p1: _emscripten_bind_b2MouseJointDef__set_bodyA_p1, _emscripten_bind_b2DynamicTree__GetAreaRatio_p0: _emscripten_bind_b2DynamicTree__GetAreaRatio_p0, _emscripten_bind_b2World__QueryAABB_p2: _emscripten_bind_b2World__QueryAABB_p2, _emscripten_bind_b2RevoluteJoint__GetUpperLimit_p0: _emscripten_bind_b2RevoluteJoint__GetUpperLimit_p0, _emscripten_bind_b2PrismaticJoint__GetJointSpeed_p0: _emscripten_bind_b2PrismaticJoint__GetJointSpeed_p0, _emscripten_bind_b2PulleyJointDef__Initialize_p7: _emscripten_bind_b2PulleyJointDef__Initialize_p7, _emscripten_bind_b2World__GetTreeQuality_p0: _emscripten_bind_b2World__GetTreeQuality_p0, _emscripten_bind_b2BodyDef__get_gravityScale_p0: _emscripten_bind_b2BodyDef__get_gravityScale_p0, _emscripten_bind_b2DistanceJoint__GetBodyA_p0: _emscripten_bind_b2DistanceJoint__GetBodyA_p0, _emscripten_bind_b2BroadPhase__DestroyProxy_p1: _emscripten_bind_b2BroadPhase__DestroyProxy_p1, _emscripten_bind_b2PulleyJoint____destroy___p0: _emscripten_bind_b2PulleyJoint____destroy___p0, _emscripten_bind_b2PulleyJointDef__set_localAnchorA_p1: _emscripten_bind_b2PulleyJointDef__set_localAnchorA_p1, _emscripten_bind_b2DistanceJoint__GetLocalAnchorB_p0: _emscripten_bind_b2DistanceJoint__GetLocalAnchorB_p0, _emscripten_bind_b2ChainShape__GetChildEdge_p2: _emscripten_bind_b2ChainShape__GetChildEdge_p2, _emscripten_bind_b2EdgeShape__b2EdgeShape_p0: _emscripten_bind_b2EdgeShape__b2EdgeShape_p0, _emscripten_bind_b2ContactEdge__set_contact_p1: _emscripten_bind_b2ContactEdge__set_contact_p1, _emscripten_bind_b2ChainShape__TestPoint_p2: _emscripten_bind_b2ChainShape__TestPoint_p2, _emscripten_bind_b2ChainShape__GetType_p0: _emscripten_bind_b2ChainShape__GetType_p0, _emscripten_bind_b2Fixture__SetFilterData_p1: _emscripten_bind_b2Fixture__SetFilterData_p1, _emscripten_bind_b2WheelJoint__GetCollideConnected_p0: _emscripten_bind_b2WheelJoint__GetCollideConnected_p0, _emscripten_bind_b2Body__ApplyAngularImpulse_p1: _emscripten_bind_b2Body__ApplyAngularImpulse_p1, _emscripten_bind_b2RevoluteJoint__SetLimits_p2: _emscripten_bind_b2RevoluteJoint__SetLimits_p2, _emscripten_bind_b2WheelJoint__SetMotorSpeed_p1: _emscripten_bind_b2WheelJoint__SetMotorSpeed_p1, _emscripten_bind_b2RevoluteJointDef__get_maxMotorTorque_p0: _emscripten_bind_b2RevoluteJointDef__get_maxMotorTorque_p0, _emscripten_bind_b2CircleShape__get_m_p_p0: _emscripten_bind_b2CircleShape__get_m_p_p0, _emscripten_bind_b2BodyDef__get_awake_p0: _emscripten_bind_b2BodyDef__get_awake_p0, _emscripten_bind_b2MouseJoint__GetAnchorB_p0: _emscripten_bind_b2MouseJoint__GetAnchorB_p0, _emscripten_bind_b2Body__CreateFixture_p1: _emscripten_bind_b2Body__CreateFixture_p1, _emscripten_bind_b2Body__CreateFixture_p2: _emscripten_bind_b2Body__CreateFixture_p2, _emscripten_bind_b2GearJointDef____destroy___p0: _emscripten_bind_b2GearJointDef____destroy___p0, _emscripten_bind_b2Fixture__GetDensity_p0: _emscripten_bind_b2Fixture__GetDensity_p0, _emscripten_bind_b2AABB__get_lowerBound_p0: _emscripten_bind_b2AABB__get_lowerBound_p0, _emscripten_bind_b2WeldJoint__GetDampingRatio_p0: _emscripten_bind_b2WeldJoint__GetDampingRatio_p0, _emscripten_bind_b2FrictionJoint__GetReactionForce_p1: _emscripten_bind_b2FrictionJoint__GetReactionForce_p1, _emscripten_bind_b2PolygonShape__set_m_vertexCount_p1: _emscripten_bind_b2PolygonShape__set_m_vertexCount_p1, _emscripten_bind_b2World__SetContactListener_p1: _emscripten_bind_b2World__SetContactListener_p1, _emscripten_bind_b2PulleyJointDef__get_localAnchorB_p0: _emscripten_bind_b2PulleyJointDef__get_localAnchorB_p0, _emscripten_bind_b2FixtureDef__set_shape_p1: _emscripten_bind_b2FixtureDef__set_shape_p1, _emscripten_bind_b2DistanceJoint__SetDampingRatio_p1: _emscripten_bind_b2DistanceJoint__SetDampingRatio_p1, _emscripten_bind_b2Joint__Dump_p0: _emscripten_bind_b2Joint__Dump_p0, _emscripten_bind_b2Shape__TestPoint_p2: _emscripten_bind_b2Shape__TestPoint_p2, _emscripten_bind_b2ChainShape__RayCast_p4: _emscripten_bind_b2ChainShape__RayCast_p4, _emscripten_bind_b2RopeJoint__SetUserData_p1: _emscripten_bind_b2RopeJoint__SetUserData_p1, _emscripten_bind_b2Transform__get_p_p0: _emscripten_bind_b2Transform__get_p_p0, _emscripten_bind_b2PulleyJoint__GetLengthA_p0: _emscripten_bind_b2PulleyJoint__GetLengthA_p0, _emscripten_bind_b2GearJoint__GetJoint2_p0: _emscripten_bind_b2GearJoint__GetJoint2_p0, _emscripten_bind_b2DistanceJoint__GetBodyB_p0: _emscripten_bind_b2DistanceJoint__GetBodyB_p0, _emscripten_bind_b2Body__IsBullet_p0: _emscripten_bind_b2Body__IsBullet_p0, _emscripten_bind_b2PrismaticJoint__Dump_p0: _emscripten_bind_b2PrismaticJoint__Dump_p0, _emscripten_bind_b2WeldJointDef____destroy___p0: _emscripten_bind_b2WeldJointDef____destroy___p0, _emscripten_bind_b2PrismaticJoint__GetMotorSpeed_p0: _emscripten_bind_b2PrismaticJoint__GetMotorSpeed_p0, _emscripten_bind_b2ChainShape__get_m_vertices_p0: _emscripten_bind_b2ChainShape__get_m_vertices_p0, _emscripten_bind_b2World__SetWarmStarting_p1: _emscripten_bind_b2World__SetWarmStarting_p1, _emscripten_bind_b2FrictionJoint__GetLocalAnchorA_p0: _emscripten_bind_b2FrictionJoint__GetLocalAnchorA_p0, _emscripten_bind_b2RevoluteJointDef__get_referenceAngle_p0: _emscripten_bind_b2RevoluteJointDef__get_referenceAngle_p0, _emscripten_bind_b2PrismaticJointDef__set_referenceAngle_p1: _emscripten_bind_b2PrismaticJointDef__set_referenceAngle_p1, _emscripten_bind_b2RevoluteJointDef__set_motorSpeed_p1: _emscripten_bind_b2RevoluteJointDef__set_motorSpeed_p1, _emscripten_bind_b2BodyDef__get_angularVelocity_p0: _emscripten_bind_b2BodyDef__get_angularVelocity_p0, _emscripten_bind_b2GearJoint__GetNext_p0: _emscripten_bind_b2GearJoint__GetNext_p0, _emscripten_bind_b2PrismaticJointDef__get_enableLimit_p0: _emscripten_bind_b2PrismaticJointDef__get_enableLimit_p0, _emscripten_bind_b2JointDef__get_type_p0: _emscripten_bind_b2JointDef__get_type_p0, _emscripten_bind_b2WeldJoint__GetBodyB_p0: _emscripten_bind_b2WeldJoint__GetBodyB_p0, _emscripten_bind_b2WheelJoint__GetJointTranslation_p0: _emscripten_bind_b2WheelJoint__GetJointTranslation_p0, _emscripten_bind_b2RopeJointDef__set_bodyA_p1: _emscripten_bind_b2RopeJointDef__set_bodyA_p1, _emscripten_bind_b2DistanceJointDef__get_localAnchorB_p0: _emscripten_bind_b2DistanceJointDef__get_localAnchorB_p0, _emscripten_bind_b2PulleyJoint__GetGroundAnchorB_p0: _emscripten_bind_b2PulleyJoint__GetGroundAnchorB_p0, _emscripten_bind_b2PulleyJointDef__get_groundAnchorB_p0: _emscripten_bind_b2PulleyJointDef__get_groundAnchorB_p0, _emscripten_bind_b2Body__GetPosition_p0: _emscripten_bind_b2Body__GetPosition_p0, _emscripten_bind_b2BroadPhase__b2BroadPhase_p0: _emscripten_bind_b2BroadPhase__b2BroadPhase_p0, _emscripten_bind_b2BodyDef__set_userData_p1: _emscripten_bind_b2BodyDef__set_userData_p1, _emscripten_bind_b2PrismaticJoint__EnableMotor_p1: _emscripten_bind_b2PrismaticJoint__EnableMotor_p1, _emscripten_bind_b2PrismaticJointDef__get_upperTranslation_p0: _emscripten_bind_b2PrismaticJointDef__get_upperTranslation_p0, _emscripten_bind_b2ChainShape__set_m_radius_p1: _emscripten_bind_b2ChainShape__set_m_radius_p1, _emscripten_bind_b2GearJointDef__get_joint2_p0: _emscripten_bind_b2GearJointDef__get_joint2_p0, _emscripten_bind_b2PrismaticJointDef__set_collideConnected_p1: _emscripten_bind_b2PrismaticJointDef__set_collideConnected_p1, _emscripten_bind_b2BroadPhase__TestOverlap_p2: _emscripten_bind_b2BroadPhase__TestOverlap_p2, _emscripten_bind_b2Fixture__SetDensity_p1: _emscripten_bind_b2Fixture__SetDensity_p1, _emscripten_bind_b2RevoluteJointDef__set_enableLimit_p1: _emscripten_bind_b2RevoluteJointDef__set_enableLimit_p1, _emscripten_bind_b2Body__IsAwake_p0: _emscripten_bind_b2Body__IsAwake_p0, _emscripten_bind_b2MouseJoint__GetAnchorA_p0: _emscripten_bind_b2MouseJoint__GetAnchorA_p0, _emscripten_bind_b2PolygonShape__SetAsBox_p4: _emscripten_bind_b2PolygonShape__SetAsBox_p4, _emscripten_bind_b2RevoluteJoint__GetReferenceAngle_p0: _emscripten_bind_b2RevoluteJoint__GetReferenceAngle_p0, _emscripten_bind_b2GearJointDef__set_joint1_p1: _emscripten_bind_b2GearJointDef__set_joint1_p1, _emscripten_bind_b2Draw__DrawSolidCircle_p4: _emscripten_bind_b2Draw__DrawSolidCircle_p4, _emscripten_bind_b2World__GetSubStepping_p0: _emscripten_bind_b2World__GetSubStepping_p0, _emscripten_bind_b2Body__SetLinearDamping_p1: _emscripten_bind_b2Body__SetLinearDamping_p1, _emscripten_bind_b2Fixture__SetFriction_p1: _emscripten_bind_b2Fixture__SetFriction_p1, _emscripten_bind_b2Filter__get_groupIndex_p0: _emscripten_bind_b2Filter__get_groupIndex_p0, _emscripten_bind_b2FixtureDef__get_isSensor_p0: _emscripten_bind_b2FixtureDef__get_isSensor_p0, _emscripten_bind_b2PrismaticJoint__GetUpperLimit_p0: _emscripten_bind_b2PrismaticJoint__GetUpperLimit_p0, _emscripten_bind_b2MouseJoint__GetReactionTorque_p1: _emscripten_bind_b2MouseJoint__GetReactionTorque_p1, _emscripten_bind_b2Vec2__op_mul_p1: _emscripten_bind_b2Vec2__op_mul_p1, _emscripten_bind_b2DistanceProxy__Set_p2: _emscripten_bind_b2DistanceProxy__Set_p2, _emscripten_bind_b2EdgeShape__Set_p2: _emscripten_bind_b2EdgeShape__Set_p2, _emscripten_bind_b2BodyDef__get_userData_p0: _emscripten_bind_b2BodyDef__get_userData_p0, _emscripten_bind_b2CircleShape__set_m_p_p1: _emscripten_bind_b2CircleShape__set_m_p_p1, _emscripten_bind_b2WheelJoint__GetMaxMotorTorque_p0: _emscripten_bind_b2WheelJoint__GetMaxMotorTorque_p0, _emscripten_bind_b2World__SetContactFilter_p1: _emscripten_bind_b2World__SetContactFilter_p1, _emscripten_bind_b2Body__GetWorldPoint_p1: _emscripten_bind_b2Body__GetWorldPoint_p1, _emscripten_bind_b2WheelJointDef__set_dampingRatio_p1: _emscripten_bind_b2WheelJointDef__set_dampingRatio_p1, _emscripten_bind_b2DistanceJointDef__set_collideConnected_p1: _emscripten_bind_b2DistanceJointDef__set_collideConnected_p1, _emscripten_bind_b2DistanceProxy__get_m_count_p0: _emscripten_bind_b2DistanceProxy__get_m_count_p0, _emscripten_bind_b2WeldJointDef__set_dampingRatio_p1: _emscripten_bind_b2WeldJointDef__set_dampingRatio_p1, _emscripten_bind_b2DistanceJointDef__set_localAnchorB_p1: _emscripten_bind_b2DistanceJointDef__set_localAnchorB_p1, _emscripten_bind_b2DistanceJoint__IsActive_p0: _emscripten_bind_b2DistanceJoint__IsActive_p0, _emscripten_bind_b2Joint__GetUserData_p0: _emscripten_bind_b2Joint__GetUserData_p0, _emscripten_bind_b2FrictionJoint__GetCollideConnected_p0: _emscripten_bind_b2FrictionJoint__GetCollideConnected_p0, _memset: _memset, _emscripten_bind_b2WheelJoint__Dump_p0: _emscripten_bind_b2WheelJoint__Dump_p0, _emscripten_bind_b2World__GetTreeBalance_p0: _emscripten_bind_b2World__GetTreeBalance_p0, _emscripten_bind_b2ContactListener__b2ContactListener_p0: _emscripten_bind_b2ContactListener__b2ContactListener_p0, _emscripten_bind_b2ChainShape__get_m_radius_p0: _emscripten_bind_b2ChainShape__get_m_radius_p0, _emscripten_bind_b2RopeJointDef__set_maxLength_p1: _emscripten_bind_b2RopeJointDef__set_maxLength_p1, _emscripten_bind_b2PulleyJointDef__set_bodyB_p1: _emscripten_bind_b2PulleyJointDef__set_bodyB_p1, _emscripten_bind_b2PulleyJointDef__get_groundAnchorA_p0: _emscripten_bind_b2PulleyJointDef__get_groundAnchorA_p0, _emscripten_bind_b2Body__ApplyLinearImpulse_p2: _emscripten_bind_b2Body__ApplyLinearImpulse_p2, _emscripten_bind_b2RevoluteJoint__GetMotorSpeed_p0: _emscripten_bind_b2RevoluteJoint__GetMotorSpeed_p0, _emscripten_bind_b2PrismaticJoint__GetUserData_p0: _emscripten_bind_b2PrismaticJoint__GetUserData_p0, _emscripten_bind_b2BroadPhase__GetTreeHeight_p0: _emscripten_bind_b2BroadPhase__GetTreeHeight_p0, _emscripten_bind_b2Draw__DrawSegment_p3: _emscripten_bind_b2Draw__DrawSegment_p3, _emscripten_bind_b2Body__IsActive_p0: _emscripten_bind_b2Body__IsActive_p0, _emscripten_bind_b2Vec2__Set_p2: _emscripten_bind_b2Vec2__Set_p2, _emscripten_bind_b2PulleyJoint__GetUserData_p0: _emscripten_bind_b2PulleyJoint__GetUserData_p0, _emscripten_bind_b2ContactEdge__b2ContactEdge_p0: _emscripten_bind_b2ContactEdge__b2ContactEdge_p0, _emscripten_bind_b2ContactManager__get_m_contactList_p0: _emscripten_bind_b2ContactManager__get_m_contactList_p0, _emscripten_bind_b2Vec3__b2Vec3_p0: _emscripten_bind_b2Vec3__b2Vec3_p0, _emscripten_bind_b2PulleyJoint__GetGroundAnchorA_p0: _emscripten_bind_b2PulleyJoint__GetGroundAnchorA_p0, _emscripten_bind_b2World____destroy___p0: _emscripten_bind_b2World____destroy___p0, _emscripten_bind_b2Vec2__get_x_p0: _emscripten_bind_b2Vec2__get_x_p0, _emscripten_bind_b2PulleyJointDef____destroy___p0: _emscripten_bind_b2PulleyJointDef____destroy___p0, _emscripten_bind_b2FixtureDef____destroy___p0: _emscripten_bind_b2FixtureDef____destroy___p0, _emscripten_bind_b2EdgeShape__Clone_p1: _emscripten_bind_b2EdgeShape__Clone_p1, _emscripten_bind_b2Body__GetUserData_p0: _emscripten_bind_b2Body__GetUserData_p0, _emscripten_bind_b2Body__SetUserData_p1: _emscripten_bind_b2Body__SetUserData_p1, _emscripten_bind_b2FixtureDef__set_friction_p1: _emscripten_bind_b2FixtureDef__set_friction_p1, _emscripten_bind_b2GearJoint__Dump_p0: _emscripten_bind_b2GearJoint__Dump_p0, _emscripten_bind_b2PrismaticJoint__SetMotorSpeed_p1: _emscripten_bind_b2PrismaticJoint__SetMotorSpeed_p1, _emscripten_bind_b2DistanceJointDef____destroy___p0: _emscripten_bind_b2DistanceJointDef____destroy___p0, _emscripten_bind_b2FrictionJointDef__Initialize_p3: _emscripten_bind_b2FrictionJointDef__Initialize_p3, _emscripten_bind_b2GearJoint__b2GearJoint_p1: _emscripten_bind_b2GearJoint__b2GearJoint_p1, _emscripten_bind_b2Body__SetSleepingAllowed_p1: _emscripten_bind_b2Body__SetSleepingAllowed_p1, _emscripten_bind_b2DistanceJoint__GetFrequency_p0: _emscripten_bind_b2DistanceJoint__GetFrequency_p0, _emscripten_bind_b2PolygonShape__GetVertexCount_p0: _emscripten_bind_b2PolygonShape__GetVertexCount_p0, _emscripten_bind_b2PulleyJoint__b2PulleyJoint_p1: _emscripten_bind_b2PulleyJoint__b2PulleyJoint_p1, _emscripten_bind_b2MouseJointDef__get_bodyB_p1: _emscripten_bind_b2MouseJointDef__get_bodyB_p1, _emscripten_bind_b2ContactManager__set_m_contactList_p1: _emscripten_bind_b2ContactManager__set_m_contactList_p1, _emscripten_bind_b2MouseJoint__GetNext_p0: _emscripten_bind_b2MouseJoint__GetNext_p0, _emscripten_bind_b2Transform__get_q_p0: _emscripten_bind_b2Transform__get_q_p0, _emscripten_bind_b2DistanceJointDef__get_collideConnected_p1: _emscripten_bind_b2DistanceJointDef__get_collideConnected_p1, _emscripten_bind_b2WeldJointDef__set_bodyB_p1: _emscripten_bind_b2WeldJointDef__set_bodyB_p1, _emscripten_bind_b2DistanceJoint__GetReactionForce_p1: _emscripten_bind_b2DistanceJoint__GetReactionForce_p1, _emscripten_bind_b2FrictionJoint____destroy___p0: _emscripten_bind_b2FrictionJoint____destroy___p0, _emscripten_bind_b2PrismaticJoint__IsMotorEnabled_p0: _emscripten_bind_b2PrismaticJoint__IsMotorEnabled_p0, _emscripten_bind_b2CircleShape__ComputeAABB_p3: _emscripten_bind_b2CircleShape__ComputeAABB_p3, _emscripten_bind_b2RevoluteJointDef__get_enableLimit_p0: _emscripten_bind_b2RevoluteJointDef__get_enableLimit_p0, _emscripten_bind_b2GearJoint__GetRatio_p0: _emscripten_bind_b2GearJoint__GetRatio_p0, _emscripten_bind_b2BlockAllocator__Allocate_p1: _emscripten_bind_b2BlockAllocator__Allocate_p1, _emscripten_bind_b2GearJointDef__get_joint1_p0: _emscripten_bind_b2GearJointDef__get_joint1_p0, _emscripten_bind_b2AABB__Contains_p1: _emscripten_bind_b2AABB__Contains_p1, _emscripten_bind_b2GearJointDef__set_ratio_p1: _emscripten_bind_b2GearJointDef__set_ratio_p1, _emscripten_bind_b2ContactManager__Destroy_p1: _emscripten_bind_b2ContactManager__Destroy_p1, _emscripten_bind_b2RevoluteJointDef__Initialize_p3: _emscripten_bind_b2RevoluteJointDef__Initialize_p3, _emscripten_bind_b2BodyDef__set_angle_p1: _emscripten_bind_b2BodyDef__set_angle_p1, _emscripten_bind_b2PrismaticJointDef__Initialize_p4: _emscripten_bind_b2PrismaticJointDef__Initialize_p4, _emscripten_bind_b2Body__GetContactList_p0: _emscripten_bind_b2Body__GetContactList_p0, _emscripten_bind_b2RevoluteJoint__EnableLimit_p1: _emscripten_bind_b2RevoluteJoint__EnableLimit_p1, _emscripten_bind_b2Body__GetWorldCenter_p0: _emscripten_bind_b2Body__GetWorldCenter_p0, _emscripten_bind_b2ContactManager__get_m_allocator_p0: _emscripten_bind_b2ContactManager__get_m_allocator_p0, _emscripten_bind_b2DistanceJointDef__set_localAnchorA_p1: _emscripten_bind_b2DistanceJointDef__set_localAnchorA_p1, _emscripten_bind_b2BodyDef__set_angularDamping_p1: _emscripten_bind_b2BodyDef__set_angularDamping_p1, _emscripten_bind_b2MouseJointDef__set_collideConnected_p1: _emscripten_bind_b2MouseJointDef__set_collideConnected_p1, _emscripten_bind_b2Shape__ComputeAABB_p3: _emscripten_bind_b2Shape__ComputeAABB_p3, _emscripten_bind_b2Joint__GetReactionTorque_p1: _emscripten_bind_b2Joint__GetReactionTorque_p1, _emscripten_bind_b2WheelJoint__GetType_p0: _emscripten_bind_b2WheelJoint__GetType_p0, _emscripten_bind_b2Vec3__op_add_p1: _emscripten_bind_b2Vec3__op_add_p1, _emscripten_bind_b2Filter__get_categoryBits_p0: _emscripten_bind_b2Filter__get_categoryBits_p0, _emscripten_bind_b2Contact__GetFriction_p0: _emscripten_bind_b2Contact__GetFriction_p0, _emscripten_bind_b2CircleShape__GetChildCount_p0: _emscripten_bind_b2CircleShape__GetChildCount_p0, _emscripten_bind_b2Transform__set_p_p1: _emscripten_bind_b2Transform__set_p_p1, _emscripten_bind_b2Fixture__GetNext_p0: _emscripten_bind_b2Fixture__GetNext_p0, _emscripten_bind_b2BodyDef__set_bullet_p1: _emscripten_bind_b2BodyDef__set_bullet_p1, _emscripten_bind_b2Vec3__op_sub_p0: _emscripten_bind_b2Vec3__op_sub_p0, _emscripten_bind_b2ContactManager__Collide_p0: _emscripten_bind_b2ContactManager__Collide_p0, _emscripten_bind_b2FrictionJoint__GetLocalAnchorB_p0: _emscripten_bind_b2FrictionJoint__GetLocalAnchorB_p0, _emscripten_bind_b2ContactManager__get_m_contactListener_p0: _emscripten_bind_b2ContactManager__get_m_contactListener_p0, _emscripten_bind_b2World__RayCast_p3: _emscripten_bind_b2World__RayCast_p3, _emscripten_bind_b2WeldJoint__Dump_p0: _emscripten_bind_b2WeldJoint__Dump_p0, _emscripten_bind_b2PrismaticJointDef__set_enableLimit_p1: _emscripten_bind_b2PrismaticJointDef__set_enableLimit_p1, _emscripten_bind_b2EdgeShape__GetType_p0: _emscripten_bind_b2EdgeShape__GetType_p0, _emscripten_bind_b2RevoluteJoint__GetMotorTorque_p1: _emscripten_bind_b2RevoluteJoint__GetMotorTorque_p1, _emscripten_bind_b2Body__DestroyFixture_p1: _emscripten_bind_b2Body__DestroyFixture_p1, _emscripten_bind_b2RevoluteJoint__SetMaxMotorTorque_p1: _emscripten_bind_b2RevoluteJoint__SetMaxMotorTorque_p1, _emscripten_bind_b2MouseJointDef__get_bodyA_p1: _emscripten_bind_b2MouseJointDef__get_bodyA_p1, _emscripten_bind_b2DynamicTree__GetHeight_p0: _emscripten_bind_b2DynamicTree__GetHeight_p0, _emscripten_bind_b2ContactManager__get_m_contactCount_p0: _emscripten_bind_b2ContactManager__get_m_contactCount_p0, _emscripten_bind_b2BlockAllocator__Free_p2: _emscripten_bind_b2BlockAllocator__Free_p2, _emscripten_bind_b2GearJoint__SetRatio_p1: _emscripten_bind_b2GearJoint__SetRatio_p1, _emscripten_bind_b2BodyDef__get_angle_p0: _emscripten_bind_b2BodyDef__get_angle_p0, _emscripten_bind_b2PrismaticJoint__GetReferenceAngle_p0: _emscripten_bind_b2PrismaticJoint__GetReferenceAngle_p0, _emscripten_bind_b2WeldJointDef__set_bodyA_p1: _emscripten_bind_b2WeldJointDef__set_bodyA_p1, _emscripten_bind_b2PulleyJoint__GetLengthB_p0: _emscripten_bind_b2PulleyJoint__GetLengthB_p0, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, setTempRet1: setTempRet1, setTempRet2: setTempRet2, setTempRet3: setTempRet3, setTempRet4: setTempRet4, setTempRet5: setTempRet5, setTempRet6: setTempRet6, setTempRet7: setTempRet7, setTempRet8: setTempRet8, setTempRet9: setTempRet9, dynCall_viiiii: dynCall_viiiii, dynCall_viifi: dynCall_viifi, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiii: dynCall_iiii, dynCall_ii: dynCall_ii, dynCall_fif: dynCall_fif, dynCall_viii: dynCall_viii, dynCall_viifii: dynCall_viifii, dynCall_v: dynCall_v, dynCall_viif: dynCall_viif, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_fiiiif: dynCall_fiiiif, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "jsCall": jsCall, "invoke_viiiii": invoke_viiiii, "invoke_viifi": invoke_viifi, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiii": invoke_iiii, "invoke_ii": invoke_ii, "invoke_fif": invoke_fif, "invoke_viii": invoke_viii, "invoke_viifii": invoke_viifii, "invoke_v": invoke_v, "invoke_viif": invoke_viif, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_fiiiif": invoke_fiiiif, "invoke_viiii": invoke_viiii, "_llvm_va_end": _llvm_va_end, "_cosf": _cosf, "___cxa_call_unexpected": ___cxa_call_unexpected, "_floorf": _floorf, "___cxa_throw": ___cxa_throw, "_sinf": _sinf, "_abort": _abort, "_fprintf": _fprintf, "_printf": _printf, "_fflush": _fflush, "_sqrtf": _sqrtf, "__ZNK12b2WheelJoint13GetDefinitionEP15b2WheelJointDef": __ZNK12b2WheelJoint13GetDefinitionEP15b2WheelJointDef, "___assert_fail": ___assert_fail, "___setErrNo": ___setErrNo, "_fwrite": _fwrite, "_send": _send, "_write": _write, "_exit": _exit, "_llvm_lifetime_end": _llvm_lifetime_end, "_time": _time, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_atan2f": _atan2f, "_sysconf": _sysconf, "___cxa_pure_virtual": ___cxa_pure_virtual, "_vprintf": _vprintf, "_fileno": _fileno, "__formatString": __formatString, "__reallyNegative": __reallyNegative, "___cxa_guard_release": ___cxa_guard_release, "___cxa_is_number_type": ___cxa_is_number_type, "___cxa_does_inherit": ___cxa_does_inherit, "___cxa_guard_acquire": ___cxa_guard_acquire, "__ZSt9terminatev": __ZSt9terminatev, "_emscripten_memcpy_big": _emscripten_memcpy_big, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_pwrite": _pwrite, "_sbrk": _sbrk, "__ZNSt9exceptionD2Ev": __ZNSt9exceptionD2Ev, "___cxa_allocate_exception": ___cxa_allocate_exception, "___errno_location": ___errno_location, "___gxx_personality_v0": ___gxx_personality_v0, "_llvm_lifetime_start": _llvm_lifetime_start, "_mkport": _mkport, "___resumeException": ___resumeException, "__exit": __exit, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "NaN": NaN, "Infinity": Infinity, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE }, buffer);
var _emscripten_bind_b2WheelJoint__GetSpringFrequencyHz_p0 = Module["_emscripten_bind_b2WheelJoint__GetSpringFrequencyHz_p0"] = asm["_emscripten_bind_b2WheelJoint__GetSpringFrequencyHz_p0"];
var _emscripten_bind_b2Vec2__get_y_p0 = Module["_emscripten_bind_b2Vec2__get_y_p0"] = asm["_emscripten_bind_b2Vec2__get_y_p0"];
var _emscripten_bind_b2PolygonShape____destroy___p0 = Module["_emscripten_bind_b2PolygonShape____destroy___p0"] = asm["_emscripten_bind_b2PolygonShape____destroy___p0"];
var _emscripten_bind_b2DistanceProxy__get_m_vertices_p0 = Module["_emscripten_bind_b2DistanceProxy__get_m_vertices_p0"] = asm["_emscripten_bind_b2DistanceProxy__get_m_vertices_p0"];
var _emscripten_bind_b2PrismaticJoint__EnableLimit_p1 = Module["_emscripten_bind_b2PrismaticJoint__EnableLimit_p1"] = asm["_emscripten_bind_b2PrismaticJoint__EnableLimit_p1"];
var _emscripten_bind_b2WheelJointDef__Initialize_p4 = Module["_emscripten_bind_b2WheelJointDef__Initialize_p4"] = asm["_emscripten_bind_b2WheelJointDef__Initialize_p4"];
var _emscripten_bind_b2DistanceJointDef__set_frequencyHz_p1 = Module["_emscripten_bind_b2DistanceJointDef__set_frequencyHz_p1"] = asm["_emscripten_bind_b2DistanceJointDef__set_frequencyHz_p1"];
var _emscripten_bind_b2PrismaticJoint__GetMotorForce_p1 = Module["_emscripten_bind_b2PrismaticJoint__GetMotorForce_p1"] = asm["_emscripten_bind_b2PrismaticJoint__GetMotorForce_p1"];
var _emscripten_bind_b2AABB__Combine_p1 = Module["_emscripten_bind_b2AABB__Combine_p1"] = asm["_emscripten_bind_b2AABB__Combine_p1"];
var _emscripten_bind_b2Body__IsSleepingAllowed_p0 = Module["_emscripten_bind_b2Body__IsSleepingAllowed_p0"] = asm["_emscripten_bind_b2Body__IsSleepingAllowed_p0"];
var _emscripten_bind_b2Vec3__set_z_p1 = Module["_emscripten_bind_b2Vec3__set_z_p1"] = asm["_emscripten_bind_b2Vec3__set_z_p1"];
var _emscripten_bind_b2Vec2__b2Vec2_p2 = Module["_emscripten_bind_b2Vec2__b2Vec2_p2"] = asm["_emscripten_bind_b2Vec2__b2Vec2_p2"];
var _emscripten_bind_b2RevoluteJoint__GetMaxMotorTorque_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetMaxMotorTorque_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetMaxMotorTorque_p0"];
var _emscripten_bind_b2WeldJoint__GetFrequency_p0 = Module["_emscripten_bind_b2WeldJoint__GetFrequency_p0"] = asm["_emscripten_bind_b2WeldJoint__GetFrequency_p0"];
var _emscripten_bind_b2MouseJoint__GetType_p0 = Module["_emscripten_bind_b2MouseJoint__GetType_p0"] = asm["_emscripten_bind_b2MouseJoint__GetType_p0"];
var _emscripten_bind_b2RayCastCallback__b2RayCastCallback_p0 = Module["_emscripten_bind_b2RayCastCallback__b2RayCastCallback_p0"] = asm["_emscripten_bind_b2RayCastCallback__b2RayCastCallback_p0"];
var _emscripten_bind_b2Body__GetLinearDamping_p0 = Module["_emscripten_bind_b2Body__GetLinearDamping_p0"] = asm["_emscripten_bind_b2Body__GetLinearDamping_p0"];
var _emscripten_bind_b2BodyDef__get_fixedRotation_p0 = Module["_emscripten_bind_b2BodyDef__get_fixedRotation_p0"] = asm["_emscripten_bind_b2BodyDef__get_fixedRotation_p0"];
var _emscripten_bind_b2FixtureDef__get_shape_p0 = Module["_emscripten_bind_b2FixtureDef__get_shape_p0"] = asm["_emscripten_bind_b2FixtureDef__get_shape_p0"];
var _emscripten_bind_b2PrismaticJoint____destroy___p0 = Module["_emscripten_bind_b2PrismaticJoint____destroy___p0"] = asm["_emscripten_bind_b2PrismaticJoint____destroy___p0"];
var _emscripten_bind_b2Joint__GetBodyA_p0 = Module["_emscripten_bind_b2Joint__GetBodyA_p0"] = asm["_emscripten_bind_b2Joint__GetBodyA_p0"];
var _emscripten_bind_b2WheelJointDef__set_frequencyHz_p1 = Module["_emscripten_bind_b2WheelJointDef__set_frequencyHz_p1"] = asm["_emscripten_bind_b2WheelJointDef__set_frequencyHz_p1"];
var _emscripten_bind_b2BlockAllocator____destroy___p0 = Module["_emscripten_bind_b2BlockAllocator____destroy___p0"] = asm["_emscripten_bind_b2BlockAllocator____destroy___p0"];
var _emscripten_bind_b2Vec2__op_add_p1 = Module["_emscripten_bind_b2Vec2__op_add_p1"] = asm["_emscripten_bind_b2Vec2__op_add_p1"];
var _emscripten_bind_b2DistanceJointDef__set_dampingRatio_p1 = Module["_emscripten_bind_b2DistanceJointDef__set_dampingRatio_p1"] = asm["_emscripten_bind_b2DistanceJointDef__set_dampingRatio_p1"];
var _emscripten_bind_b2Transform__Set_p2 = Module["_emscripten_bind_b2Transform__Set_p2"] = asm["_emscripten_bind_b2Transform__Set_p2"];
var _emscripten_bind_b2EdgeShape__RayCast_p4 = Module["_emscripten_bind_b2EdgeShape__RayCast_p4"] = asm["_emscripten_bind_b2EdgeShape__RayCast_p4"];
var _emscripten_bind_b2RevoluteJoint__GetLocalAnchorA_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetLocalAnchorA_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetLocalAnchorA_p0"];
var _emscripten_bind_b2DistanceJoint__GetDampingRatio_p0 = Module["_emscripten_bind_b2DistanceJoint__GetDampingRatio_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetDampingRatio_p0"];
var _emscripten_bind_b2Fixture__SetRestitution_p1 = Module["_emscripten_bind_b2Fixture__SetRestitution_p1"] = asm["_emscripten_bind_b2Fixture__SetRestitution_p1"];
var _emscripten_bind_b2DynamicTree__Validate_p0 = Module["_emscripten_bind_b2DynamicTree__Validate_p0"] = asm["_emscripten_bind_b2DynamicTree__Validate_p0"];
var _emscripten_bind_b2DynamicTree__DestroyProxy_p1 = Module["_emscripten_bind_b2DynamicTree__DestroyProxy_p1"] = asm["_emscripten_bind_b2DynamicTree__DestroyProxy_p1"];
var _emscripten_bind_b2Filter__set_groupIndex_p1 = Module["_emscripten_bind_b2Filter__set_groupIndex_p1"] = asm["_emscripten_bind_b2Filter__set_groupIndex_p1"];
var _emscripten_bind_b2FixtureDef__set_userData_p1 = Module["_emscripten_bind_b2FixtureDef__set_userData_p1"] = asm["_emscripten_bind_b2FixtureDef__set_userData_p1"];
var _emscripten_bind_b2DynamicTree__b2DynamicTree_p0 = Module["_emscripten_bind_b2DynamicTree__b2DynamicTree_p0"] = asm["_emscripten_bind_b2DynamicTree__b2DynamicTree_p0"];
var _emscripten_bind_b2RevoluteJointDef__get_localAnchorA_p0 = Module["_emscripten_bind_b2RevoluteJointDef__get_localAnchorA_p0"] = asm["_emscripten_bind_b2RevoluteJointDef__get_localAnchorA_p0"];
var _emscripten_bind_b2DistanceProxy__GetVertex_p1 = Module["_emscripten_bind_b2DistanceProxy__GetVertex_p1"] = asm["_emscripten_bind_b2DistanceProxy__GetVertex_p1"];
var _emscripten_bind_b2EdgeShape__get_m_radius_p0 = Module["_emscripten_bind_b2EdgeShape__get_m_radius_p0"] = asm["_emscripten_bind_b2EdgeShape__get_m_radius_p0"];
var _emscripten_bind_b2PrismaticJointDef__get_localAnchorB_p0 = Module["_emscripten_bind_b2PrismaticJointDef__get_localAnchorB_p0"] = asm["_emscripten_bind_b2PrismaticJointDef__get_localAnchorB_p0"];
var _emscripten_bind_b2RevoluteJointDef__set_bodyA_p1 = Module["_emscripten_bind_b2RevoluteJointDef__set_bodyA_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__set_bodyA_p1"];
var _emscripten_bind_b2World__GetJointCount_p0 = Module["_emscripten_bind_b2World__GetJointCount_p0"] = asm["_emscripten_bind_b2World__GetJointCount_p0"];
var _emscripten_bind_b2DynamicTree__CreateProxy_p2 = Module["_emscripten_bind_b2DynamicTree__CreateProxy_p2"] = asm["_emscripten_bind_b2DynamicTree__CreateProxy_p2"];
var _emscripten_bind_b2WheelJointDef__set_collideConnected_p1 = Module["_emscripten_bind_b2WheelJointDef__set_collideConnected_p1"] = asm["_emscripten_bind_b2WheelJointDef__set_collideConnected_p1"];
var _emscripten_bind_b2WeldJoint__GetLocalAnchorA_p0 = Module["_emscripten_bind_b2WeldJoint__GetLocalAnchorA_p0"] = asm["_emscripten_bind_b2WeldJoint__GetLocalAnchorA_p0"];
var _emscripten_bind_b2RevoluteJointDef__get_localAnchorB_p0 = Module["_emscripten_bind_b2RevoluteJointDef__get_localAnchorB_p0"] = asm["_emscripten_bind_b2RevoluteJointDef__get_localAnchorB_p0"];
var _emscripten_bind_b2Body__GetGravityScale_p0 = Module["_emscripten_bind_b2Body__GetGravityScale_p0"] = asm["_emscripten_bind_b2Body__GetGravityScale_p0"];
var _emscripten_bind_b2Fixture__Dump_p1 = Module["_emscripten_bind_b2Fixture__Dump_p1"] = asm["_emscripten_bind_b2Fixture__Dump_p1"];
var _emscripten_bind_b2World__GetBodyList_p0 = Module["_emscripten_bind_b2World__GetBodyList_p0"] = asm["_emscripten_bind_b2World__GetBodyList_p0"];
var _emscripten_bind_b2PulleyJoint__IsActive_p0 = Module["_emscripten_bind_b2PulleyJoint__IsActive_p0"] = asm["_emscripten_bind_b2PulleyJoint__IsActive_p0"];
var _emscripten_bind_b2MouseJoint__SetUserData_p1 = Module["_emscripten_bind_b2MouseJoint__SetUserData_p1"] = asm["_emscripten_bind_b2MouseJoint__SetUserData_p1"];
var _emscripten_bind_b2World__GetContactList_p0 = Module["_emscripten_bind_b2World__GetContactList_p0"] = asm["_emscripten_bind_b2World__GetContactList_p0"];
var _emscripten_bind_b2PrismaticJoint__GetNext_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetNext_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetNext_p0"];
var _emscripten_bind_b2Vec2__Skew_p0 = Module["_emscripten_bind_b2Vec2__Skew_p0"] = asm["_emscripten_bind_b2Vec2__Skew_p0"];
var _emscripten_bind_b2BodyDef__get_linearVelocity_p0 = Module["_emscripten_bind_b2BodyDef__get_linearVelocity_p0"] = asm["_emscripten_bind_b2BodyDef__get_linearVelocity_p0"];
var _emscripten_bind_b2GearJointDef__set_joint2_p1 = Module["_emscripten_bind_b2GearJointDef__set_joint2_p1"] = asm["_emscripten_bind_b2GearJointDef__set_joint2_p1"];
var _emscripten_bind_b2WheelJoint__GetReactionForce_p1 = Module["_emscripten_bind_b2WheelJoint__GetReactionForce_p1"] = asm["_emscripten_bind_b2WheelJoint__GetReactionForce_p1"];
var _emscripten_bind_b2RevoluteJoint__GetLocalAnchorB_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetLocalAnchorB_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetLocalAnchorB_p0"];
var _emscripten_bind_b2PrismaticJointDef__set_motorSpeed_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_motorSpeed_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_motorSpeed_p1"];
var _emscripten_bind_b2PrismaticJoint__SetMaxMotorForce_p1 = Module["_emscripten_bind_b2PrismaticJoint__SetMaxMotorForce_p1"] = asm["_emscripten_bind_b2PrismaticJoint__SetMaxMotorForce_p1"];
var _emscripten_bind_b2ChainShape__b2ChainShape_p0 = Module["_emscripten_bind_b2ChainShape__b2ChainShape_p0"] = asm["_emscripten_bind_b2ChainShape__b2ChainShape_p0"];
var _emscripten_bind_b2CircleShape__RayCast_p4 = Module["_emscripten_bind_b2CircleShape__RayCast_p4"] = asm["_emscripten_bind_b2CircleShape__RayCast_p4"];
var _emscripten_bind_b2WheelJoint__GetBodyA_p0 = Module["_emscripten_bind_b2WheelJoint__GetBodyA_p0"] = asm["_emscripten_bind_b2WheelJoint__GetBodyA_p0"];
var _emscripten_bind_b2RevoluteJointDef__set_bodyB_p1 = Module["_emscripten_bind_b2RevoluteJointDef__set_bodyB_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__set_bodyB_p1"];
var _emscripten_bind_b2MouseJointDef__get_dampingRatio_p0 = Module["_emscripten_bind_b2MouseJointDef__get_dampingRatio_p0"] = asm["_emscripten_bind_b2MouseJointDef__get_dampingRatio_p0"];
var _emscripten_bind_b2JointDef__set_bodyB_p1 = Module["_emscripten_bind_b2JointDef__set_bodyB_p1"] = asm["_emscripten_bind_b2JointDef__set_bodyB_p1"];
var _emscripten_bind_b2RevoluteJoint__GetJointSpeed_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetJointSpeed_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetJointSpeed_p0"];
var _emscripten_bind_b2RopeJoint__GetLocalAnchorB_p0 = Module["_emscripten_bind_b2RopeJoint__GetLocalAnchorB_p0"] = asm["_emscripten_bind_b2RopeJoint__GetLocalAnchorB_p0"];
var _emscripten_bind_b2Fixture__GetAABB_p1 = Module["_emscripten_bind_b2Fixture__GetAABB_p1"] = asm["_emscripten_bind_b2Fixture__GetAABB_p1"];
var _emscripten_bind_b2BroadPhase__TouchProxy_p1 = Module["_emscripten_bind_b2BroadPhase__TouchProxy_p1"] = asm["_emscripten_bind_b2BroadPhase__TouchProxy_p1"];
var _emscripten_bind_b2RopeJointDef__get_bodyB_p1 = Module["_emscripten_bind_b2RopeJointDef__get_bodyB_p1"] = asm["_emscripten_bind_b2RopeJointDef__get_bodyB_p1"];
var _emscripten_bind_b2World__GetAllowSleeping_p0 = Module["_emscripten_bind_b2World__GetAllowSleeping_p0"] = asm["_emscripten_bind_b2World__GetAllowSleeping_p0"];
var _emscripten_bind_b2DestructionListener____destroy___p0 = Module["_emscripten_bind_b2DestructionListener____destroy___p0"] = asm["_emscripten_bind_b2DestructionListener____destroy___p0"];
var _emscripten_bind_b2BroadPhase____destroy___p0 = Module["_emscripten_bind_b2BroadPhase____destroy___p0"] = asm["_emscripten_bind_b2BroadPhase____destroy___p0"];
var _emscripten_bind_b2World__GetWarmStarting_p0 = Module["_emscripten_bind_b2World__GetWarmStarting_p0"] = asm["_emscripten_bind_b2World__GetWarmStarting_p0"];
var _emscripten_bind_b2Rot__b2Rot_p1 = Module["_emscripten_bind_b2Rot__b2Rot_p1"] = asm["_emscripten_bind_b2Rot__b2Rot_p1"];
var _emscripten_bind_b2Rot__b2Rot_p0 = Module["_emscripten_bind_b2Rot__b2Rot_p0"] = asm["_emscripten_bind_b2Rot__b2Rot_p0"];
var _emscripten_bind_b2DistanceJoint__GetUserData_p0 = Module["_emscripten_bind_b2DistanceJoint__GetUserData_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetUserData_p0"];
var _emscripten_bind_b2MouseJointDef__get_frequencyHz_p0 = Module["_emscripten_bind_b2MouseJointDef__get_frequencyHz_p0"] = asm["_emscripten_bind_b2MouseJointDef__get_frequencyHz_p0"];
var _emscripten_bind_b2ContactManager__set_m_allocator_p1 = Module["_emscripten_bind_b2ContactManager__set_m_allocator_p1"] = asm["_emscripten_bind_b2ContactManager__set_m_allocator_p1"];
var _emscripten_bind_b2WheelJoint__SetMaxMotorTorque_p1 = Module["_emscripten_bind_b2WheelJoint__SetMaxMotorTorque_p1"] = asm["_emscripten_bind_b2WheelJoint__SetMaxMotorTorque_p1"];
var _emscripten_bind_b2GearJoint__GetBodyB_p0 = Module["_emscripten_bind_b2GearJoint__GetBodyB_p0"] = asm["_emscripten_bind_b2GearJoint__GetBodyB_p0"];
var _emscripten_bind_b2MouseJointDef__get_target_p0 = Module["_emscripten_bind_b2MouseJointDef__get_target_p0"] = asm["_emscripten_bind_b2MouseJointDef__get_target_p0"];
var _emscripten_bind_b2WeldJoint__SetUserData_p1 = Module["_emscripten_bind_b2WeldJoint__SetUserData_p1"] = asm["_emscripten_bind_b2WeldJoint__SetUserData_p1"];
var _emscripten_bind_b2PrismaticJoint__GetBodyA_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetBodyA_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetBodyA_p0"];
var _emscripten_bind_b2StackAllocator__b2StackAllocator_p0 = Module["_emscripten_bind_b2StackAllocator__b2StackAllocator_p0"] = asm["_emscripten_bind_b2StackAllocator__b2StackAllocator_p0"];
var _emscripten_bind_b2MouseJoint__GetDampingRatio_p0 = Module["_emscripten_bind_b2MouseJoint__GetDampingRatio_p0"] = asm["_emscripten_bind_b2MouseJoint__GetDampingRatio_p0"];
var _emscripten_bind_b2DistanceJoint__GetNext_p0 = Module["_emscripten_bind_b2DistanceJoint__GetNext_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetNext_p0"];
var _emscripten_bind_b2Filter__get_maskBits_p0 = Module["_emscripten_bind_b2Filter__get_maskBits_p0"] = asm["_emscripten_bind_b2Filter__get_maskBits_p0"];
var _emscripten_bind_b2RayCastCallback____destroy___p0 = Module["_emscripten_bind_b2RayCastCallback____destroy___p0"] = asm["_emscripten_bind_b2RayCastCallback____destroy___p0"];
var _emscripten_bind_b2World__Dump_p0 = Module["_emscripten_bind_b2World__Dump_p0"] = asm["_emscripten_bind_b2World__Dump_p0"];
var _emscripten_bind_b2RevoluteJointDef____destroy___p0 = Module["_emscripten_bind_b2RevoluteJointDef____destroy___p0"] = asm["_emscripten_bind_b2RevoluteJointDef____destroy___p0"];
var _emscripten_bind_b2RevoluteJointDef__get_motorSpeed_p0 = Module["_emscripten_bind_b2RevoluteJointDef__get_motorSpeed_p0"] = asm["_emscripten_bind_b2RevoluteJointDef__get_motorSpeed_p0"];
var _emscripten_bind_b2BodyDef__get_bullet_p0 = Module["_emscripten_bind_b2BodyDef__get_bullet_p0"] = asm["_emscripten_bind_b2BodyDef__get_bullet_p0"];
var _emscripten_bind_b2Body__SetAngularDamping_p1 = Module["_emscripten_bind_b2Body__SetAngularDamping_p1"] = asm["_emscripten_bind_b2Body__SetAngularDamping_p1"];
var _emscripten_bind_b2ChainShape__ComputeMass_p2 = Module["_emscripten_bind_b2ChainShape__ComputeMass_p2"] = asm["_emscripten_bind_b2ChainShape__ComputeMass_p2"];
var _emscripten_bind_b2Fixture__GetFilterData_p0 = Module["_emscripten_bind_b2Fixture__GetFilterData_p0"] = asm["_emscripten_bind_b2Fixture__GetFilterData_p0"];
var _emscripten_bind_b2DistanceJoint__SetLength_p1 = Module["_emscripten_bind_b2DistanceJoint__SetLength_p1"] = asm["_emscripten_bind_b2DistanceJoint__SetLength_p1"];
var _emscripten_bind_b2BodyDef__get_position_p0 = Module["_emscripten_bind_b2BodyDef__get_position_p0"] = asm["_emscripten_bind_b2BodyDef__get_position_p0"];
var _emscripten_bind_b2FrictionJoint__GetUserData_p0 = Module["_emscripten_bind_b2FrictionJoint__GetUserData_p0"] = asm["_emscripten_bind_b2FrictionJoint__GetUserData_p0"];
var _emscripten_bind_b2Transform__b2Transform_p0 = Module["_emscripten_bind_b2Transform__b2Transform_p0"] = asm["_emscripten_bind_b2Transform__b2Transform_p0"];
var _emscripten_bind_b2ContactEdge__set_next_p1 = Module["_emscripten_bind_b2ContactEdge__set_next_p1"] = asm["_emscripten_bind_b2ContactEdge__set_next_p1"];
var _emscripten_bind_b2Transform__b2Transform_p2 = Module["_emscripten_bind_b2Transform__b2Transform_p2"] = asm["_emscripten_bind_b2Transform__b2Transform_p2"];
var _emscripten_bind_b2FrictionJointDef__get_maxTorque_p0 = Module["_emscripten_bind_b2FrictionJointDef__get_maxTorque_p0"] = asm["_emscripten_bind_b2FrictionJointDef__get_maxTorque_p0"];
var _emscripten_bind_b2WeldJointDef__set_localAnchorB_p1 = Module["_emscripten_bind_b2WeldJointDef__set_localAnchorB_p1"] = asm["_emscripten_bind_b2WeldJointDef__set_localAnchorB_p1"];
var _emscripten_bind_b2World__GetProxyCount_p0 = Module["_emscripten_bind_b2World__GetProxyCount_p0"] = asm["_emscripten_bind_b2World__GetProxyCount_p0"];
var _emscripten_bind_b2WeldJointDef__get_bodyB_p1 = Module["_emscripten_bind_b2WeldJointDef__get_bodyB_p1"] = asm["_emscripten_bind_b2WeldJointDef__get_bodyB_p1"];
var _emscripten_bind_b2PulleyJointDef__set_lengthA_p1 = Module["_emscripten_bind_b2PulleyJointDef__set_lengthA_p1"] = asm["_emscripten_bind_b2PulleyJointDef__set_lengthA_p1"];
var _emscripten_bind_b2PolygonShape__set_m_centroid_p1 = Module["_emscripten_bind_b2PolygonShape__set_m_centroid_p1"] = asm["_emscripten_bind_b2PolygonShape__set_m_centroid_p1"];
var _emscripten_bind_b2WeldJoint__GetAnchorB_p0 = Module["_emscripten_bind_b2WeldJoint__GetAnchorB_p0"] = asm["_emscripten_bind_b2WeldJoint__GetAnchorB_p0"];
var _emscripten_bind_b2PulleyJointDef__get_collideConnected_p1 = Module["_emscripten_bind_b2PulleyJointDef__get_collideConnected_p1"] = asm["_emscripten_bind_b2PulleyJointDef__get_collideConnected_p1"];
var _emscripten_bind_b2Vec3____destroy___p0 = Module["_emscripten_bind_b2Vec3____destroy___p0"] = asm["_emscripten_bind_b2Vec3____destroy___p0"];
var _emscripten_bind_b2Color__set_r_p1 = Module["_emscripten_bind_b2Color__set_r_p1"] = asm["_emscripten_bind_b2Color__set_r_p1"];
var _emscripten_bind_b2PrismaticJointDef__get_enableMotor_p0 = Module["_emscripten_bind_b2PrismaticJointDef__get_enableMotor_p0"] = asm["_emscripten_bind_b2PrismaticJointDef__get_enableMotor_p0"];
var _emscripten_bind_b2BodyDef__get_linearDamping_p0 = Module["_emscripten_bind_b2BodyDef__get_linearDamping_p0"] = asm["_emscripten_bind_b2BodyDef__get_linearDamping_p0"];
var _emscripten_bind_b2EdgeShape__ComputeMass_p2 = Module["_emscripten_bind_b2EdgeShape__ComputeMass_p2"] = asm["_emscripten_bind_b2EdgeShape__ComputeMass_p2"];
var _emscripten_bind_b2RayCastCallback__ReportFixture_p4 = Module["_emscripten_bind_b2RayCastCallback__ReportFixture_p4"] = asm["_emscripten_bind_b2RayCastCallback__ReportFixture_p4"];
var _emscripten_bind_b2Body__Dump_p0 = Module["_emscripten_bind_b2Body__Dump_p0"] = asm["_emscripten_bind_b2Body__Dump_p0"];
var _emscripten_bind_b2BodyDef__get_allowSleep_p0 = Module["_emscripten_bind_b2BodyDef__get_allowSleep_p0"] = asm["_emscripten_bind_b2BodyDef__get_allowSleep_p0"];
var _emscripten_bind_b2PrismaticJoint__GetJointTranslation_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetJointTranslation_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetJointTranslation_p0"];
var _emscripten_bind_b2PulleyJoint__GetAnchorB_p0 = Module["_emscripten_bind_b2PulleyJoint__GetAnchorB_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetAnchorB_p0"];
var _emscripten_bind_b2PrismaticJoint__GetReactionTorque_p1 = Module["_emscripten_bind_b2PrismaticJoint__GetReactionTorque_p1"] = asm["_emscripten_bind_b2PrismaticJoint__GetReactionTorque_p1"];
var _emscripten_bind_b2JointDef__set_bodyA_p1 = Module["_emscripten_bind_b2JointDef__set_bodyA_p1"] = asm["_emscripten_bind_b2JointDef__set_bodyA_p1"];
var _emscripten_bind_b2PrismaticJoint__GetBodyB_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetBodyB_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetBodyB_p0"];
var _emscripten_bind_b2DistanceJoint__GetLocalAnchorA_p0 = Module["_emscripten_bind_b2DistanceJoint__GetLocalAnchorA_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetLocalAnchorA_p0"];
var _emscripten_bind_b2RopeJoint__GetLocalAnchorA_p0 = Module["_emscripten_bind_b2RopeJoint__GetLocalAnchorA_p0"] = asm["_emscripten_bind_b2RopeJoint__GetLocalAnchorA_p0"];
var _emscripten_bind_b2Rot__set_c_p1 = Module["_emscripten_bind_b2Rot__set_c_p1"] = asm["_emscripten_bind_b2Rot__set_c_p1"];
var _emscripten_bind_b2Vec3__op_mul_p1 = Module["_emscripten_bind_b2Vec3__op_mul_p1"] = asm["_emscripten_bind_b2Vec3__op_mul_p1"];
var _emscripten_bind_b2StackAllocator__GetMaxAllocation_p0 = Module["_emscripten_bind_b2StackAllocator__GetMaxAllocation_p0"] = asm["_emscripten_bind_b2StackAllocator__GetMaxAllocation_p0"];
var _emscripten_bind_b2JointDef__set_collideConnected_p1 = Module["_emscripten_bind_b2JointDef__set_collideConnected_p1"] = asm["_emscripten_bind_b2JointDef__set_collideConnected_p1"];
var _emscripten_bind_b2WeldJoint__GetAnchorA_p0 = Module["_emscripten_bind_b2WeldJoint__GetAnchorA_p0"] = asm["_emscripten_bind_b2WeldJoint__GetAnchorA_p0"];
var _emscripten_bind_b2World__SetAutoClearForces_p1 = Module["_emscripten_bind_b2World__SetAutoClearForces_p1"] = asm["_emscripten_bind_b2World__SetAutoClearForces_p1"];
var _emscripten_bind_b2Contact__SetEnabled_p1 = Module["_emscripten_bind_b2Contact__SetEnabled_p1"] = asm["_emscripten_bind_b2Contact__SetEnabled_p1"];
var _emscripten_bind_b2ContactManager__get_m_contactFilter_p0 = Module["_emscripten_bind_b2ContactManager__get_m_contactFilter_p0"] = asm["_emscripten_bind_b2ContactManager__get_m_contactFilter_p0"];
var _emscripten_bind_b2BodyDef__get_angularDamping_p0 = Module["_emscripten_bind_b2BodyDef__get_angularDamping_p0"] = asm["_emscripten_bind_b2BodyDef__get_angularDamping_p0"];
var _emscripten_bind_b2WeldJointDef__set_localAnchorA_p1 = Module["_emscripten_bind_b2WeldJointDef__set_localAnchorA_p1"] = asm["_emscripten_bind_b2WeldJointDef__set_localAnchorA_p1"];
var _emscripten_bind_b2PulleyJointDef__set_lengthB_p1 = Module["_emscripten_bind_b2PulleyJointDef__set_lengthB_p1"] = asm["_emscripten_bind_b2PulleyJointDef__set_lengthB_p1"];
var _emscripten_bind_b2Vec2__op_sub_p0 = Module["_emscripten_bind_b2Vec2__op_sub_p0"] = asm["_emscripten_bind_b2Vec2__op_sub_p0"];
var _emscripten_bind_b2PrismaticJoint__GetLocalAnchorB_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetLocalAnchorB_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetLocalAnchorB_p0"];
var _emscripten_bind_b2RopeJointDef__get_localAnchorB_p0 = Module["_emscripten_bind_b2RopeJointDef__get_localAnchorB_p0"] = asm["_emscripten_bind_b2RopeJointDef__get_localAnchorB_p0"];
var _emscripten_bind_b2Contact__GetChildIndexB_p0 = Module["_emscripten_bind_b2Contact__GetChildIndexB_p0"] = asm["_emscripten_bind_b2Contact__GetChildIndexB_p0"];
var _emscripten_bind_b2Fixture__TestPoint_p1 = Module["_emscripten_bind_b2Fixture__TestPoint_p1"] = asm["_emscripten_bind_b2Fixture__TestPoint_p1"];
var _emscripten_bind_b2PrismaticJoint__GetType_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetType_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetType_p0"];
var _emscripten_bind_b2AABB__RayCast_p2 = Module["_emscripten_bind_b2AABB__RayCast_p2"] = asm["_emscripten_bind_b2AABB__RayCast_p2"];
var _emscripten_bind_b2WheelJointDef__get_bodyB_p1 = Module["_emscripten_bind_b2WheelJointDef__get_bodyB_p1"] = asm["_emscripten_bind_b2WheelJointDef__get_bodyB_p1"];
var _emscripten_bind_b2QueryCallback__ReportFixture_p1 = Module["_emscripten_bind_b2QueryCallback__ReportFixture_p1"] = asm["_emscripten_bind_b2QueryCallback__ReportFixture_p1"];
var _emscripten_bind_b2BodyDef__set_linearVelocity_p1 = Module["_emscripten_bind_b2BodyDef__set_linearVelocity_p1"] = asm["_emscripten_bind_b2BodyDef__set_linearVelocity_p1"];
var _emscripten_bind_b2Body__GetMass_p0 = Module["_emscripten_bind_b2Body__GetMass_p0"] = asm["_emscripten_bind_b2Body__GetMass_p0"];
var _emscripten_bind_b2WeldJoint____destroy___p0 = Module["_emscripten_bind_b2WeldJoint____destroy___p0"] = asm["_emscripten_bind_b2WeldJoint____destroy___p0"];
var _emscripten_bind_b2WheelJoint__GetSpringDampingRatio_p0 = Module["_emscripten_bind_b2WheelJoint__GetSpringDampingRatio_p0"] = asm["_emscripten_bind_b2WheelJoint__GetSpringDampingRatio_p0"];
var _emscripten_bind_b2RopeJointDef__set_localAnchorB_p1 = Module["_emscripten_bind_b2RopeJointDef__set_localAnchorB_p1"] = asm["_emscripten_bind_b2RopeJointDef__set_localAnchorB_p1"];
var _emscripten_bind_b2Body__IsFixedRotation_p0 = Module["_emscripten_bind_b2Body__IsFixedRotation_p0"] = asm["_emscripten_bind_b2Body__IsFixedRotation_p0"];
var _emscripten_bind_b2Rot__SetIdentity_p0 = Module["_emscripten_bind_b2Rot__SetIdentity_p0"] = asm["_emscripten_bind_b2Rot__SetIdentity_p0"];
var _emscripten_bind_b2WheelJoint__SetSpringDampingRatio_p1 = Module["_emscripten_bind_b2WheelJoint__SetSpringDampingRatio_p1"] = asm["_emscripten_bind_b2WheelJoint__SetSpringDampingRatio_p1"];
var _emscripten_bind_b2PrismaticJointDef__get_localAnchorA_p0 = Module["_emscripten_bind_b2PrismaticJointDef__get_localAnchorA_p0"] = asm["_emscripten_bind_b2PrismaticJointDef__get_localAnchorA_p0"];
var _emscripten_bind_b2FrictionJoint__IsActive_p0 = Module["_emscripten_bind_b2FrictionJoint__IsActive_p0"] = asm["_emscripten_bind_b2FrictionJoint__IsActive_p0"];
var _emscripten_bind_b2JointDef__get_userData_p0 = Module["_emscripten_bind_b2JointDef__get_userData_p0"] = asm["_emscripten_bind_b2JointDef__get_userData_p0"];
var _emscripten_bind_b2Draw__DrawPolygon_p3 = Module["_emscripten_bind_b2Draw__DrawPolygon_p3"] = asm["_emscripten_bind_b2Draw__DrawPolygon_p3"];
var _emscripten_bind_b2MouseJoint__GetBodyB_p0 = Module["_emscripten_bind_b2MouseJoint__GetBodyB_p0"] = asm["_emscripten_bind_b2MouseJoint__GetBodyB_p0"];
var _emscripten_bind_b2DistanceJointDef__get_dampingRatio_p0 = Module["_emscripten_bind_b2DistanceJointDef__get_dampingRatio_p0"] = asm["_emscripten_bind_b2DistanceJointDef__get_dampingRatio_p0"];
var _emscripten_bind_b2ContactManager__get_m_broadPhase_p0 = Module["_emscripten_bind_b2ContactManager__get_m_broadPhase_p0"] = asm["_emscripten_bind_b2ContactManager__get_m_broadPhase_p0"];
var _emscripten_bind_b2RopeJoint__GetReactionTorque_p1 = Module["_emscripten_bind_b2RopeJoint__GetReactionTorque_p1"] = asm["_emscripten_bind_b2RopeJoint__GetReactionTorque_p1"];
var _emscripten_bind_b2PrismaticJoint__GetLowerLimit_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetLowerLimit_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetLowerLimit_p0"];
var _emscripten_bind_b2Contact__GetManifold_p0 = Module["_emscripten_bind_b2Contact__GetManifold_p0"] = asm["_emscripten_bind_b2Contact__GetManifold_p0"];
var _emscripten_bind_b2Contact__SetFriction_p1 = Module["_emscripten_bind_b2Contact__SetFriction_p1"] = asm["_emscripten_bind_b2Contact__SetFriction_p1"];
var _emscripten_bind_b2WheelJoint__GetJointSpeed_p0 = Module["_emscripten_bind_b2WheelJoint__GetJointSpeed_p0"] = asm["_emscripten_bind_b2WheelJoint__GetJointSpeed_p0"];
var _emscripten_bind_b2BodyDef__set_allowSleep_p1 = Module["_emscripten_bind_b2BodyDef__set_allowSleep_p1"] = asm["_emscripten_bind_b2BodyDef__set_allowSleep_p1"];
var _emscripten_bind_b2Fixture__RayCast_p3 = Module["_emscripten_bind_b2Fixture__RayCast_p3"] = asm["_emscripten_bind_b2Fixture__RayCast_p3"];
var _emscripten_bind_b2WeldJointDef__get_referenceAngle_p0 = Module["_emscripten_bind_b2WeldJointDef__get_referenceAngle_p0"] = asm["_emscripten_bind_b2WeldJointDef__get_referenceAngle_p0"];
var _emscripten_bind_b2Fixture____destroy___p0 = Module["_emscripten_bind_b2Fixture____destroy___p0"] = asm["_emscripten_bind_b2Fixture____destroy___p0"];
var _emscripten_bind_b2RopeJointDef__set_localAnchorA_p1 = Module["_emscripten_bind_b2RopeJointDef__set_localAnchorA_p1"] = asm["_emscripten_bind_b2RopeJointDef__set_localAnchorA_p1"];
var _emscripten_bind_b2WheelJoint__SetUserData_p1 = Module["_emscripten_bind_b2WheelJoint__SetUserData_p1"] = asm["_emscripten_bind_b2WheelJoint__SetUserData_p1"];
var _emscripten_bind_b2WeldJoint__b2WeldJoint_p1 = Module["_emscripten_bind_b2WeldJoint__b2WeldJoint_p1"] = asm["_emscripten_bind_b2WeldJoint__b2WeldJoint_p1"];
var _emscripten_bind_b2WeldJoint__IsActive_p0 = Module["_emscripten_bind_b2WeldJoint__IsActive_p0"] = asm["_emscripten_bind_b2WeldJoint__IsActive_p0"];
var _emscripten_bind_b2Draw__DrawSolidPolygon_p3 = Module["_emscripten_bind_b2Draw__DrawSolidPolygon_p3"] = asm["_emscripten_bind_b2Draw__DrawSolidPolygon_p3"];
var _emscripten_bind_b2ContactManager____destroy___p0 = Module["_emscripten_bind_b2ContactManager____destroy___p0"] = asm["_emscripten_bind_b2ContactManager____destroy___p0"];
var _emscripten_bind_b2GearJoint__GetAnchorB_p0 = Module["_emscripten_bind_b2GearJoint__GetAnchorB_p0"] = asm["_emscripten_bind_b2GearJoint__GetAnchorB_p0"];
var _emscripten_bind_b2WheelJointDef__get_localAxisA_p0 = Module["_emscripten_bind_b2WheelJointDef__get_localAxisA_p0"] = asm["_emscripten_bind_b2WheelJointDef__get_localAxisA_p0"];
var _emscripten_bind_b2PrismaticJointDef__get_lowerTranslation_p0 = Module["_emscripten_bind_b2PrismaticJointDef__get_lowerTranslation_p0"] = asm["_emscripten_bind_b2PrismaticJointDef__get_lowerTranslation_p0"];
var _emscripten_bind_b2PolygonShape__get_m_vertexCount_p0 = Module["_emscripten_bind_b2PolygonShape__get_m_vertexCount_p0"] = asm["_emscripten_bind_b2PolygonShape__get_m_vertexCount_p0"];
var _emscripten_bind_b2PolygonShape__SetAsBox_p2 = Module["_emscripten_bind_b2PolygonShape__SetAsBox_p2"] = asm["_emscripten_bind_b2PolygonShape__SetAsBox_p2"];
var _emscripten_bind_b2DistanceJointDef__Initialize_p4 = Module["_emscripten_bind_b2DistanceJointDef__Initialize_p4"] = asm["_emscripten_bind_b2DistanceJointDef__Initialize_p4"];
var _emscripten_bind_b2World__IsLocked_p0 = Module["_emscripten_bind_b2World__IsLocked_p0"] = asm["_emscripten_bind_b2World__IsLocked_p0"];
var _emscripten_bind_b2ContactEdge__get_prev_p0 = Module["_emscripten_bind_b2ContactEdge__get_prev_p0"] = asm["_emscripten_bind_b2ContactEdge__get_prev_p0"];
var _emscripten_bind_b2Joint__GetReactionForce_p1 = Module["_emscripten_bind_b2Joint__GetReactionForce_p1"] = asm["_emscripten_bind_b2Joint__GetReactionForce_p1"];
var _emscripten_bind_b2WeldJointDef__get_collideConnected_p1 = Module["_emscripten_bind_b2WeldJointDef__get_collideConnected_p1"] = asm["_emscripten_bind_b2WeldJointDef__get_collideConnected_p1"];
var _emscripten_bind_b2World__GetTreeHeight_p0 = Module["_emscripten_bind_b2World__GetTreeHeight_p0"] = asm["_emscripten_bind_b2World__GetTreeHeight_p0"];
var _emscripten_bind_b2Draw__AppendFlags_p1 = Module["_emscripten_bind_b2Draw__AppendFlags_p1"] = asm["_emscripten_bind_b2Draw__AppendFlags_p1"];
var _emscripten_bind_b2PrismaticJointDef__get_maxMotorForce_p0 = Module["_emscripten_bind_b2PrismaticJointDef__get_maxMotorForce_p0"] = asm["_emscripten_bind_b2PrismaticJointDef__get_maxMotorForce_p0"];
var _emscripten_bind_b2PrismaticJointDef__set_upperTranslation_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_upperTranslation_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_upperTranslation_p1"];
var _emscripten_bind_b2GearJointDef__set_collideConnected_p1 = Module["_emscripten_bind_b2GearJointDef__set_collideConnected_p1"] = asm["_emscripten_bind_b2GearJointDef__set_collideConnected_p1"];
var _emscripten_bind_b2DistanceJointDef__get_bodyA_p1 = Module["_emscripten_bind_b2DistanceJointDef__get_bodyA_p1"] = asm["_emscripten_bind_b2DistanceJointDef__get_bodyA_p1"];
var _emscripten_bind_b2Body__SetActive_p1 = Module["_emscripten_bind_b2Body__SetActive_p1"] = asm["_emscripten_bind_b2Body__SetActive_p1"];
var _emscripten_bind_b2PrismaticJoint__GetCollideConnected_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetCollideConnected_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetCollideConnected_p0"];
var _emscripten_bind_b2ContactListener____destroy___p0 = Module["_emscripten_bind_b2ContactListener____destroy___p0"] = asm["_emscripten_bind_b2ContactListener____destroy___p0"];
var _emscripten_bind_b2MouseJoint__SetDampingRatio_p1 = Module["_emscripten_bind_b2MouseJoint__SetDampingRatio_p1"] = asm["_emscripten_bind_b2MouseJoint__SetDampingRatio_p1"];
var _emscripten_bind_b2Body__ApplyTorque_p1 = Module["_emscripten_bind_b2Body__ApplyTorque_p1"] = asm["_emscripten_bind_b2Body__ApplyTorque_p1"];
var _emscripten_bind_b2DistanceProxy__GetVertexCount_p0 = Module["_emscripten_bind_b2DistanceProxy__GetVertexCount_p0"] = asm["_emscripten_bind_b2DistanceProxy__GetVertexCount_p0"];
var _emscripten_bind_b2BodyDef__set_position_p1 = Module["_emscripten_bind_b2BodyDef__set_position_p1"] = asm["_emscripten_bind_b2BodyDef__set_position_p1"];
var _emscripten_bind_b2FixtureDef__set_density_p1 = Module["_emscripten_bind_b2FixtureDef__set_density_p1"] = asm["_emscripten_bind_b2FixtureDef__set_density_p1"];
var _emscripten_bind_b2PulleyJointDef__set_bodyA_p1 = Module["_emscripten_bind_b2PulleyJointDef__set_bodyA_p1"] = asm["_emscripten_bind_b2PulleyJointDef__set_bodyA_p1"];
var _emscripten_bind_b2RopeJoint__b2RopeJoint_p1 = Module["_emscripten_bind_b2RopeJoint__b2RopeJoint_p1"] = asm["_emscripten_bind_b2RopeJoint__b2RopeJoint_p1"];
var _emscripten_bind_b2FixtureDef__get_filter_p0 = Module["_emscripten_bind_b2FixtureDef__get_filter_p0"] = asm["_emscripten_bind_b2FixtureDef__get_filter_p0"];
var _emscripten_bind_b2WheelJoint__GetUserData_p0 = Module["_emscripten_bind_b2WheelJoint__GetUserData_p0"] = asm["_emscripten_bind_b2WheelJoint__GetUserData_p0"];
var _emscripten_bind_b2PrismaticJoint__GetReactionForce_p1 = Module["_emscripten_bind_b2PrismaticJoint__GetReactionForce_p1"] = asm["_emscripten_bind_b2PrismaticJoint__GetReactionForce_p1"];
var _emscripten_bind_b2GearJoint____destroy___p0 = Module["_emscripten_bind_b2GearJoint____destroy___p0"] = asm["_emscripten_bind_b2GearJoint____destroy___p0"];
var _emscripten_bind_b2ContactEdge__set_prev_p1 = Module["_emscripten_bind_b2ContactEdge__set_prev_p1"] = asm["_emscripten_bind_b2ContactEdge__set_prev_p1"];
var _emscripten_bind_b2Shape__RayCast_p4 = Module["_emscripten_bind_b2Shape__RayCast_p4"] = asm["_emscripten_bind_b2Shape__RayCast_p4"];
var _emscripten_bind_b2RevoluteJoint__EnableMotor_p1 = Module["_emscripten_bind_b2RevoluteJoint__EnableMotor_p1"] = asm["_emscripten_bind_b2RevoluteJoint__EnableMotor_p1"];
var _emscripten_bind_b2Body__SetType_p1 = Module["_emscripten_bind_b2Body__SetType_p1"] = asm["_emscripten_bind_b2Body__SetType_p1"];
var _emscripten_bind_b2RopeJointDef__set_collideConnected_p1 = Module["_emscripten_bind_b2RopeJointDef__set_collideConnected_p1"] = asm["_emscripten_bind_b2RopeJointDef__set_collideConnected_p1"];
var _emscripten_bind_b2FrictionJoint__GetBodyB_p0 = Module["_emscripten_bind_b2FrictionJoint__GetBodyB_p0"] = asm["_emscripten_bind_b2FrictionJoint__GetBodyB_p0"];
var _emscripten_bind_b2RevoluteJoint__IsLimitEnabled_p0 = Module["_emscripten_bind_b2RevoluteJoint__IsLimitEnabled_p0"] = asm["_emscripten_bind_b2RevoluteJoint__IsLimitEnabled_p0"];
var _emscripten_bind_b2FrictionJointDef__set_maxForce_p1 = Module["_emscripten_bind_b2FrictionJointDef__set_maxForce_p1"] = asm["_emscripten_bind_b2FrictionJointDef__set_maxForce_p1"];
var _emscripten_bind_b2Contact__SetRestitution_p1 = Module["_emscripten_bind_b2Contact__SetRestitution_p1"] = asm["_emscripten_bind_b2Contact__SetRestitution_p1"];
var _emscripten_bind_b2WheelJointDef__get_enableMotor_p0 = Module["_emscripten_bind_b2WheelJointDef__get_enableMotor_p0"] = asm["_emscripten_bind_b2WheelJointDef__get_enableMotor_p0"];
var _emscripten_bind_b2DistanceJointDef__b2DistanceJointDef_p0 = Module["_emscripten_bind_b2DistanceJointDef__b2DistanceJointDef_p0"] = asm["_emscripten_bind_b2DistanceJointDef__b2DistanceJointDef_p0"];
var _emscripten_bind_b2PolygonShape__GetChildCount_p0 = Module["_emscripten_bind_b2PolygonShape__GetChildCount_p0"] = asm["_emscripten_bind_b2PolygonShape__GetChildCount_p0"];
var _emscripten_bind_b2BlockAllocator__b2BlockAllocator_p0 = Module["_emscripten_bind_b2BlockAllocator__b2BlockAllocator_p0"] = asm["_emscripten_bind_b2BlockAllocator__b2BlockAllocator_p0"];
var _emscripten_bind_b2ContactEdge__set_other_p1 = Module["_emscripten_bind_b2ContactEdge__set_other_p1"] = asm["_emscripten_bind_b2ContactEdge__set_other_p1"];
var _emscripten_bind_b2Body__GetMassData_p1 = Module["_emscripten_bind_b2Body__GetMassData_p1"] = asm["_emscripten_bind_b2Body__GetMassData_p1"];
var _emscripten_bind_b2Joint__GetNext_p0 = Module["_emscripten_bind_b2Joint__GetNext_p0"] = asm["_emscripten_bind_b2Joint__GetNext_p0"];
var _emscripten_bind_b2World__SetDestructionListener_p1 = Module["_emscripten_bind_b2World__SetDestructionListener_p1"] = asm["_emscripten_bind_b2World__SetDestructionListener_p1"];
var _emscripten_bind_b2RevoluteJoint__GetAnchorA_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetAnchorA_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetAnchorA_p0"];
var _emscripten_bind_b2MouseJointDef__get_collideConnected_p1 = Module["_emscripten_bind_b2MouseJointDef__get_collideConnected_p1"] = asm["_emscripten_bind_b2MouseJointDef__get_collideConnected_p1"];
var _emscripten_bind_b2PrismaticJointDef__set_maxMotorForce_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_maxMotorForce_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_maxMotorForce_p1"];
var _emscripten_bind_b2FrictionJoint__SetMaxForce_p1 = Module["_emscripten_bind_b2FrictionJoint__SetMaxForce_p1"] = asm["_emscripten_bind_b2FrictionJoint__SetMaxForce_p1"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _emscripten_bind_b2MouseJoint__GetMaxForce_p0 = Module["_emscripten_bind_b2MouseJoint__GetMaxForce_p0"] = asm["_emscripten_bind_b2MouseJoint__GetMaxForce_p0"];
var _emscripten_bind_b2MouseJoint__Dump_p0 = Module["_emscripten_bind_b2MouseJoint__Dump_p0"] = asm["_emscripten_bind_b2MouseJoint__Dump_p0"];
var _emscripten_bind_b2FixtureDef__set_restitution_p1 = Module["_emscripten_bind_b2FixtureDef__set_restitution_p1"] = asm["_emscripten_bind_b2FixtureDef__set_restitution_p1"];
var _emscripten_bind_b2Shape__GetChildCount_p0 = Module["_emscripten_bind_b2Shape__GetChildCount_p0"] = asm["_emscripten_bind_b2Shape__GetChildCount_p0"];
var _emscripten_bind_b2Body__GetJointList_p0 = Module["_emscripten_bind_b2Body__GetJointList_p0"] = asm["_emscripten_bind_b2Body__GetJointList_p0"];
var _emscripten_bind_b2Timer____destroy___p0 = Module["_emscripten_bind_b2Timer____destroy___p0"] = asm["_emscripten_bind_b2Timer____destroy___p0"];
var _emscripten_bind_b2Vec2__IsValid_p0 = Module["_emscripten_bind_b2Vec2__IsValid_p0"] = asm["_emscripten_bind_b2Vec2__IsValid_p0"];
var _emscripten_bind_b2Contact__ResetRestitution_p0 = Module["_emscripten_bind_b2Contact__ResetRestitution_p0"] = asm["_emscripten_bind_b2Contact__ResetRestitution_p0"];
var _emscripten_bind_b2RevoluteJointDef__get_collideConnected_p1 = Module["_emscripten_bind_b2RevoluteJointDef__get_collideConnected_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__get_collideConnected_p1"];
var _emscripten_bind_b2DynamicTree__MoveProxy_p3 = Module["_emscripten_bind_b2DynamicTree__MoveProxy_p3"] = asm["_emscripten_bind_b2DynamicTree__MoveProxy_p3"];
var _emscripten_bind_b2PulleyJointDef__get_localAnchorA_p0 = Module["_emscripten_bind_b2PulleyJointDef__get_localAnchorA_p0"] = asm["_emscripten_bind_b2PulleyJointDef__get_localAnchorA_p0"];
var _emscripten_bind_b2RevoluteJointDef__get_bodyA_p1 = Module["_emscripten_bind_b2RevoluteJointDef__get_bodyA_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__get_bodyA_p1"];
var _emscripten_bind_b2WheelJointDef____destroy___p0 = Module["_emscripten_bind_b2WheelJointDef____destroy___p0"] = asm["_emscripten_bind_b2WheelJointDef____destroy___p0"];
var _emscripten_bind_b2MouseJoint__GetBodyA_p0 = Module["_emscripten_bind_b2MouseJoint__GetBodyA_p0"] = asm["_emscripten_bind_b2MouseJoint__GetBodyA_p0"];
var _emscripten_bind_b2GearJoint__GetType_p0 = Module["_emscripten_bind_b2GearJoint__GetType_p0"] = asm["_emscripten_bind_b2GearJoint__GetType_p0"];
var _emscripten_bind_b2Body__SetMassData_p1 = Module["_emscripten_bind_b2Body__SetMassData_p1"] = asm["_emscripten_bind_b2Body__SetMassData_p1"];
var _emscripten_bind_b2MouseJoint__IsActive_p0 = Module["_emscripten_bind_b2MouseJoint__IsActive_p0"] = asm["_emscripten_bind_b2MouseJoint__IsActive_p0"];
var _emscripten_bind_b2FrictionJoint__GetAnchorA_p0 = Module["_emscripten_bind_b2FrictionJoint__GetAnchorA_p0"] = asm["_emscripten_bind_b2FrictionJoint__GetAnchorA_p0"];
var _emscripten_bind_b2Contact__GetChildIndexA_p0 = Module["_emscripten_bind_b2Contact__GetChildIndexA_p0"] = asm["_emscripten_bind_b2Contact__GetChildIndexA_p0"];
var _emscripten_bind_b2Fixture__GetShape_p0 = Module["_emscripten_bind_b2Fixture__GetShape_p0"] = asm["_emscripten_bind_b2Fixture__GetShape_p0"];
var _emscripten_bind_b2DistanceProxy__set_m_radius_p1 = Module["_emscripten_bind_b2DistanceProxy__set_m_radius_p1"] = asm["_emscripten_bind_b2DistanceProxy__set_m_radius_p1"];
var _emscripten_bind_b2DistanceJointDef__get_bodyB_p1 = Module["_emscripten_bind_b2DistanceJointDef__get_bodyB_p1"] = asm["_emscripten_bind_b2DistanceJointDef__get_bodyB_p1"];
var _emscripten_bind_b2RevoluteJoint__GetLowerLimit_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetLowerLimit_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetLowerLimit_p0"];
var _emscripten_bind_b2World__DestroyJoint_p1 = Module["_emscripten_bind_b2World__DestroyJoint_p1"] = asm["_emscripten_bind_b2World__DestroyJoint_p1"];
var _emscripten_bind_b2PulleyJointDef__set_ratio_p1 = Module["_emscripten_bind_b2PulleyJointDef__set_ratio_p1"] = asm["_emscripten_bind_b2PulleyJointDef__set_ratio_p1"];
var _emscripten_bind_b2PulleyJoint__GetNext_p0 = Module["_emscripten_bind_b2PulleyJoint__GetNext_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetNext_p0"];
var _emscripten_bind_b2RopeJoint__GetType_p0 = Module["_emscripten_bind_b2RopeJoint__GetType_p0"] = asm["_emscripten_bind_b2RopeJoint__GetType_p0"];
var _emscripten_bind_b2Body__GetLocalPoint_p1 = Module["_emscripten_bind_b2Body__GetLocalPoint_p1"] = asm["_emscripten_bind_b2Body__GetLocalPoint_p1"];
var _emscripten_bind_b2Body__SetGravityScale_p1 = Module["_emscripten_bind_b2Body__SetGravityScale_p1"] = asm["_emscripten_bind_b2Body__SetGravityScale_p1"];
var _emscripten_bind_b2PrismaticJointDef__set_bodyA_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_bodyA_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_bodyA_p1"];
var _emscripten_bind_b2CircleShape__GetType_p0 = Module["_emscripten_bind_b2CircleShape__GetType_p0"] = asm["_emscripten_bind_b2CircleShape__GetType_p0"];
var _emscripten_bind_b2DistanceProxy__get_m_radius_p0 = Module["_emscripten_bind_b2DistanceProxy__get_m_radius_p0"] = asm["_emscripten_bind_b2DistanceProxy__get_m_radius_p0"];
var _emscripten_bind_b2World__ClearForces_p0 = Module["_emscripten_bind_b2World__ClearForces_p0"] = asm["_emscripten_bind_b2World__ClearForces_p0"];
var _emscripten_bind_b2DynamicTree____destroy___p0 = Module["_emscripten_bind_b2DynamicTree____destroy___p0"] = asm["_emscripten_bind_b2DynamicTree____destroy___p0"];
var _emscripten_bind_b2Contact__GetWorldManifold_p1 = Module["_emscripten_bind_b2Contact__GetWorldManifold_p1"] = asm["_emscripten_bind_b2Contact__GetWorldManifold_p1"];
var _emscripten_bind_b2DynamicTree__GetUserData_p1 = Module["_emscripten_bind_b2DynamicTree__GetUserData_p1"] = asm["_emscripten_bind_b2DynamicTree__GetUserData_p1"];
var _emscripten_bind_b2JointDef____destroy___p0 = Module["_emscripten_bind_b2JointDef____destroy___p0"] = asm["_emscripten_bind_b2JointDef____destroy___p0"];
var _emscripten_bind_b2GearJoint__IsActive_p0 = Module["_emscripten_bind_b2GearJoint__IsActive_p0"] = asm["_emscripten_bind_b2GearJoint__IsActive_p0"];
var _emscripten_bind_b2Draw__GetFlags_p0 = Module["_emscripten_bind_b2Draw__GetFlags_p0"] = asm["_emscripten_bind_b2Draw__GetFlags_p0"];
var _emscripten_bind_b2RevoluteJoint__GetAnchorB_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetAnchorB_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetAnchorB_p0"];
var _emscripten_bind_b2RevoluteJointDef__get_bodyB_p1 = Module["_emscripten_bind_b2RevoluteJointDef__get_bodyB_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__get_bodyB_p1"];
var _emscripten_bind_b2DistanceJoint____destroy___p0 = Module["_emscripten_bind_b2DistanceJoint____destroy___p0"] = asm["_emscripten_bind_b2DistanceJoint____destroy___p0"];
var _emscripten_bind_b2DestructionListener__SayGoodbye_p1 = Module["_emscripten_bind_b2DestructionListener__SayGoodbye_p1"] = asm["_emscripten_bind_b2DestructionListener__SayGoodbye_p1"];
var _emscripten_bind_b2PrismaticJoint__IsLimitEnabled_p0 = Module["_emscripten_bind_b2PrismaticJoint__IsLimitEnabled_p0"] = asm["_emscripten_bind_b2PrismaticJoint__IsLimitEnabled_p0"];
var _emscripten_bind_b2BodyDef____destroy___p0 = Module["_emscripten_bind_b2BodyDef____destroy___p0"] = asm["_emscripten_bind_b2BodyDef____destroy___p0"];
var _emscripten_bind_b2EdgeShape____destroy___p0 = Module["_emscripten_bind_b2EdgeShape____destroy___p0"] = asm["_emscripten_bind_b2EdgeShape____destroy___p0"];
var _emscripten_bind_b2GearJointDef__get_ratio_p0 = Module["_emscripten_bind_b2GearJointDef__get_ratio_p0"] = asm["_emscripten_bind_b2GearJointDef__get_ratio_p0"];
var _emscripten_bind_b2BlockAllocator__Clear_p0 = Module["_emscripten_bind_b2BlockAllocator__Clear_p0"] = asm["_emscripten_bind_b2BlockAllocator__Clear_p0"];
var _emscripten_bind_b2RopeJoint__GetAnchorB_p0 = Module["_emscripten_bind_b2RopeJoint__GetAnchorB_p0"] = asm["_emscripten_bind_b2RopeJoint__GetAnchorB_p0"];
var _emscripten_bind_b2BodyDef__set_type_p1 = Module["_emscripten_bind_b2BodyDef__set_type_p1"] = asm["_emscripten_bind_b2BodyDef__set_type_p1"];
var _emscripten_bind_b2WheelJoint__EnableMotor_p1 = Module["_emscripten_bind_b2WheelJoint__EnableMotor_p1"] = asm["_emscripten_bind_b2WheelJoint__EnableMotor_p1"];
var _emscripten_bind_b2FrictionJoint__GetBodyA_p0 = Module["_emscripten_bind_b2FrictionJoint__GetBodyA_p0"] = asm["_emscripten_bind_b2FrictionJoint__GetBodyA_p0"];
var _emscripten_bind_b2Joint__GetType_p0 = Module["_emscripten_bind_b2Joint__GetType_p0"] = asm["_emscripten_bind_b2Joint__GetType_p0"];
var _emscripten_bind_b2RopeJoint__GetBodyA_p0 = Module["_emscripten_bind_b2RopeJoint__GetBodyA_p0"] = asm["_emscripten_bind_b2RopeJoint__GetBodyA_p0"];
var _emscripten_bind_b2WheelJointDef__get_bodyA_p1 = Module["_emscripten_bind_b2WheelJointDef__get_bodyA_p1"] = asm["_emscripten_bind_b2WheelJointDef__get_bodyA_p1"];
var _emscripten_bind_b2RopeJoint__GetAnchorA_p0 = Module["_emscripten_bind_b2RopeJoint__GetAnchorA_p0"] = asm["_emscripten_bind_b2RopeJoint__GetAnchorA_p0"];
var _emscripten_bind_b2GearJointDef__get_collideConnected_p1 = Module["_emscripten_bind_b2GearJointDef__get_collideConnected_p1"] = asm["_emscripten_bind_b2GearJointDef__get_collideConnected_p1"];
var _emscripten_bind_b2RevoluteJointDef__get_upperAngle_p0 = Module["_emscripten_bind_b2RevoluteJointDef__get_upperAngle_p0"] = asm["_emscripten_bind_b2RevoluteJointDef__get_upperAngle_p0"];
var _emscripten_bind_b2MouseJointDef__set_dampingRatio_p1 = Module["_emscripten_bind_b2MouseJointDef__set_dampingRatio_p1"] = asm["_emscripten_bind_b2MouseJointDef__set_dampingRatio_p1"];
var _emscripten_bind_b2PolygonShape__set_m_radius_p1 = Module["_emscripten_bind_b2PolygonShape__set_m_radius_p1"] = asm["_emscripten_bind_b2PolygonShape__set_m_radius_p1"];
var _emscripten_bind_b2GearJointDef__set_bodyA_p1 = Module["_emscripten_bind_b2GearJointDef__set_bodyA_p1"] = asm["_emscripten_bind_b2GearJointDef__set_bodyA_p1"];
var _emscripten_bind_b2WheelJointDef__get_maxMotorTorque_p0 = Module["_emscripten_bind_b2WheelJointDef__get_maxMotorTorque_p0"] = asm["_emscripten_bind_b2WheelJointDef__get_maxMotorTorque_p0"];
var _emscripten_bind_b2ChainShape__CreateLoop_p2 = Module["_emscripten_bind_b2ChainShape__CreateLoop_p2"] = asm["_emscripten_bind_b2ChainShape__CreateLoop_p2"];
var _emscripten_bind_b2RevoluteJoint__GetNext_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetNext_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetNext_p0"];
var _emscripten_bind_b2MouseJointDef__set_bodyB_p1 = Module["_emscripten_bind_b2MouseJointDef__set_bodyB_p1"] = asm["_emscripten_bind_b2MouseJointDef__set_bodyB_p1"];
var _emscripten_bind_b2World__DestroyBody_p1 = Module["_emscripten_bind_b2World__DestroyBody_p1"] = asm["_emscripten_bind_b2World__DestroyBody_p1"];
var _emscripten_bind_b2World__SetSubStepping_p1 = Module["_emscripten_bind_b2World__SetSubStepping_p1"] = asm["_emscripten_bind_b2World__SetSubStepping_p1"];
var _emscripten_bind_b2PulleyJoint__SetUserData_p1 = Module["_emscripten_bind_b2PulleyJoint__SetUserData_p1"] = asm["_emscripten_bind_b2PulleyJoint__SetUserData_p1"];
var _emscripten_bind_b2WheelJoint__GetMotorSpeed_p0 = Module["_emscripten_bind_b2WheelJoint__GetMotorSpeed_p0"] = asm["_emscripten_bind_b2WheelJoint__GetMotorSpeed_p0"];
var _emscripten_bind_b2RopeJoint__GetLimitState_p0 = Module["_emscripten_bind_b2RopeJoint__GetLimitState_p0"] = asm["_emscripten_bind_b2RopeJoint__GetLimitState_p0"];
var _emscripten_bind_b2PrismaticJointDef____destroy___p0 = Module["_emscripten_bind_b2PrismaticJointDef____destroy___p0"] = asm["_emscripten_bind_b2PrismaticJointDef____destroy___p0"];
var _emscripten_bind_b2PulleyJointDef__set_collideConnected_p1 = Module["_emscripten_bind_b2PulleyJointDef__set_collideConnected_p1"] = asm["_emscripten_bind_b2PulleyJointDef__set_collideConnected_p1"];
var _emscripten_bind_b2WheelJoint__GetNext_p0 = Module["_emscripten_bind_b2WheelJoint__GetNext_p0"] = asm["_emscripten_bind_b2WheelJoint__GetNext_p0"];
var _emscripten_bind_b2GearJoint__GetJoint1_p0 = Module["_emscripten_bind_b2GearJoint__GetJoint1_p0"] = asm["_emscripten_bind_b2GearJoint__GetJoint1_p0"];
var _emscripten_bind_b2BroadPhase__GetFatAABB_p1 = Module["_emscripten_bind_b2BroadPhase__GetFatAABB_p1"] = asm["_emscripten_bind_b2BroadPhase__GetFatAABB_p1"];
var _emscripten_bind_b2FrictionJoint__SetMaxTorque_p1 = Module["_emscripten_bind_b2FrictionJoint__SetMaxTorque_p1"] = asm["_emscripten_bind_b2FrictionJoint__SetMaxTorque_p1"];
var _emscripten_bind_b2ContactManager__set_m_contactCount_p1 = Module["_emscripten_bind_b2ContactManager__set_m_contactCount_p1"] = asm["_emscripten_bind_b2ContactManager__set_m_contactCount_p1"];
var _emscripten_bind_b2Body__GetLinearVelocity_p0 = Module["_emscripten_bind_b2Body__GetLinearVelocity_p0"] = asm["_emscripten_bind_b2Body__GetLinearVelocity_p0"];
var _emscripten_bind_b2RevoluteJointDef__set_enableMotor_p1 = Module["_emscripten_bind_b2RevoluteJointDef__set_enableMotor_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__set_enableMotor_p1"];
var _emscripten_bind_b2AABB____destroy___p0 = Module["_emscripten_bind_b2AABB____destroy___p0"] = asm["_emscripten_bind_b2AABB____destroy___p0"];
var _emscripten_bind_b2PulleyJoint__GetCollideConnected_p0 = Module["_emscripten_bind_b2PulleyJoint__GetCollideConnected_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetCollideConnected_p0"];
var _emscripten_bind_b2Body__GetAngularVelocity_p0 = Module["_emscripten_bind_b2Body__GetAngularVelocity_p0"] = asm["_emscripten_bind_b2Body__GetAngularVelocity_p0"];
var _emscripten_bind_b2Rot__GetXAxis_p0 = Module["_emscripten_bind_b2Rot__GetXAxis_p0"] = asm["_emscripten_bind_b2Rot__GetXAxis_p0"];
var _emscripten_bind_b2WeldJointDef__set_referenceAngle_p1 = Module["_emscripten_bind_b2WeldJointDef__set_referenceAngle_p1"] = asm["_emscripten_bind_b2WeldJointDef__set_referenceAngle_p1"];
var _emscripten_bind_b2DistanceJoint__Dump_p0 = Module["_emscripten_bind_b2DistanceJoint__Dump_p0"] = asm["_emscripten_bind_b2DistanceJoint__Dump_p0"];
var _emscripten_bind_b2StackAllocator__Free_p1 = Module["_emscripten_bind_b2StackAllocator__Free_p1"] = asm["_emscripten_bind_b2StackAllocator__Free_p1"];
var _emscripten_bind_b2CircleShape__GetSupportVertex_p1 = Module["_emscripten_bind_b2CircleShape__GetSupportVertex_p1"] = asm["_emscripten_bind_b2CircleShape__GetSupportVertex_p1"];
var _emscripten_bind_b2PrismaticJointDef__set_enableMotor_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_enableMotor_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_enableMotor_p1"];
var _emscripten_bind_b2DistanceProxy__GetSupportVertex_p1 = Module["_emscripten_bind_b2DistanceProxy__GetSupportVertex_p1"] = asm["_emscripten_bind_b2DistanceProxy__GetSupportVertex_p1"];
var _emscripten_bind_b2DistanceJointDef__set_bodyA_p1 = Module["_emscripten_bind_b2DistanceJointDef__set_bodyA_p1"] = asm["_emscripten_bind_b2DistanceJointDef__set_bodyA_p1"];
var _emscripten_bind_b2JointDef__set_userData_p1 = Module["_emscripten_bind_b2JointDef__set_userData_p1"] = asm["_emscripten_bind_b2JointDef__set_userData_p1"];
var _emscripten_bind_b2RopeJointDef__get_collideConnected_p1 = Module["_emscripten_bind_b2RopeJointDef__get_collideConnected_p1"] = asm["_emscripten_bind_b2RopeJointDef__get_collideConnected_p1"];
var _emscripten_bind_b2Vec3__get_z_p0 = Module["_emscripten_bind_b2Vec3__get_z_p0"] = asm["_emscripten_bind_b2Vec3__get_z_p0"];
var _emscripten_bind_b2RopeJoint__GetUserData_p0 = Module["_emscripten_bind_b2RopeJoint__GetUserData_p0"] = asm["_emscripten_bind_b2RopeJoint__GetUserData_p0"];
var _emscripten_bind_b2GearJoint__GetUserData_p0 = Module["_emscripten_bind_b2GearJoint__GetUserData_p0"] = asm["_emscripten_bind_b2GearJoint__GetUserData_p0"];
var _emscripten_bind_b2FixtureDef__get_restitution_p0 = Module["_emscripten_bind_b2FixtureDef__get_restitution_p0"] = asm["_emscripten_bind_b2FixtureDef__get_restitution_p0"];
var _emscripten_bind_b2WheelJoint__GetAnchorB_p0 = Module["_emscripten_bind_b2WheelJoint__GetAnchorB_p0"] = asm["_emscripten_bind_b2WheelJoint__GetAnchorB_p0"];
var _emscripten_bind_b2FixtureDef__b2FixtureDef_p0 = Module["_emscripten_bind_b2FixtureDef__b2FixtureDef_p0"] = asm["_emscripten_bind_b2FixtureDef__b2FixtureDef_p0"];
var _emscripten_bind_b2WheelJointDef__get_motorSpeed_p0 = Module["_emscripten_bind_b2WheelJointDef__get_motorSpeed_p0"] = asm["_emscripten_bind_b2WheelJointDef__get_motorSpeed_p0"];
var _emscripten_bind_b2FrictionJoint__b2FrictionJoint_p1 = Module["_emscripten_bind_b2FrictionJoint__b2FrictionJoint_p1"] = asm["_emscripten_bind_b2FrictionJoint__b2FrictionJoint_p1"];
var _emscripten_bind_b2ContactEdge____destroy___p0 = Module["_emscripten_bind_b2ContactEdge____destroy___p0"] = asm["_emscripten_bind_b2ContactEdge____destroy___p0"];
var _emscripten_bind_b2Body__GetAngularDamping_p0 = Module["_emscripten_bind_b2Body__GetAngularDamping_p0"] = asm["_emscripten_bind_b2Body__GetAngularDamping_p0"];
var _emscripten_bind_b2ChainShape__GetChildCount_p0 = Module["_emscripten_bind_b2ChainShape__GetChildCount_p0"] = asm["_emscripten_bind_b2ChainShape__GetChildCount_p0"];
var _emscripten_bind_b2ChainShape__SetNextVertex_p1 = Module["_emscripten_bind_b2ChainShape__SetNextVertex_p1"] = asm["_emscripten_bind_b2ChainShape__SetNextVertex_p1"];
var _emscripten_bind_b2Joint__SetUserData_p1 = Module["_emscripten_bind_b2Joint__SetUserData_p1"] = asm["_emscripten_bind_b2Joint__SetUserData_p1"];
var _emscripten_bind_b2Fixture__IsSensor_p0 = Module["_emscripten_bind_b2Fixture__IsSensor_p0"] = asm["_emscripten_bind_b2Fixture__IsSensor_p0"];
var _emscripten_bind_b2Filter__set_maskBits_p1 = Module["_emscripten_bind_b2Filter__set_maskBits_p1"] = asm["_emscripten_bind_b2Filter__set_maskBits_p1"];
var _emscripten_bind_b2PulleyJointDef__set_groundAnchorB_p1 = Module["_emscripten_bind_b2PulleyJointDef__set_groundAnchorB_p1"] = asm["_emscripten_bind_b2PulleyJointDef__set_groundAnchorB_p1"];
var _emscripten_bind_b2Timer__GetMilliseconds_p0 = Module["_emscripten_bind_b2Timer__GetMilliseconds_p0"] = asm["_emscripten_bind_b2Timer__GetMilliseconds_p0"];
var _emscripten_bind_b2ContactListener__PreSolve_p2 = Module["_emscripten_bind_b2ContactListener__PreSolve_p2"] = asm["_emscripten_bind_b2ContactListener__PreSolve_p2"];
var _emscripten_bind_b2PulleyJointDef__set_localAnchorB_p1 = Module["_emscripten_bind_b2PulleyJointDef__set_localAnchorB_p1"] = asm["_emscripten_bind_b2PulleyJointDef__set_localAnchorB_p1"];
var _emscripten_bind_b2WheelJointDef__set_bodyB_p1 = Module["_emscripten_bind_b2WheelJointDef__set_bodyB_p1"] = asm["_emscripten_bind_b2WheelJointDef__set_bodyB_p1"];
var _emscripten_bind_b2BroadPhase__MoveProxy_p3 = Module["_emscripten_bind_b2BroadPhase__MoveProxy_p3"] = asm["_emscripten_bind_b2BroadPhase__MoveProxy_p3"];
var _emscripten_bind_b2BodyDef__get_active_p0 = Module["_emscripten_bind_b2BodyDef__get_active_p0"] = asm["_emscripten_bind_b2BodyDef__get_active_p0"];
var _emscripten_bind_b2DynamicTree__GetMaxBalance_p0 = Module["_emscripten_bind_b2DynamicTree__GetMaxBalance_p0"] = asm["_emscripten_bind_b2DynamicTree__GetMaxBalance_p0"];
var _emscripten_bind_b2Timer__Reset_p0 = Module["_emscripten_bind_b2Timer__Reset_p0"] = asm["_emscripten_bind_b2Timer__Reset_p0"];
var _emscripten_bind_b2QueryCallback____destroy___p0 = Module["_emscripten_bind_b2QueryCallback____destroy___p0"] = asm["_emscripten_bind_b2QueryCallback____destroy___p0"];
var _emscripten_bind_b2World__b2World_p1 = Module["_emscripten_bind_b2World__b2World_p1"] = asm["_emscripten_bind_b2World__b2World_p1"];
var _emscripten_bind_b2Vec3__Set_p3 = Module["_emscripten_bind_b2Vec3__Set_p3"] = asm["_emscripten_bind_b2Vec3__Set_p3"];
var _emscripten_bind_b2RevoluteJointDef__set_referenceAngle_p1 = Module["_emscripten_bind_b2RevoluteJointDef__set_referenceAngle_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__set_referenceAngle_p1"];
var _emscripten_bind_b2StackAllocator____destroy___p0 = Module["_emscripten_bind_b2StackAllocator____destroy___p0"] = asm["_emscripten_bind_b2StackAllocator____destroy___p0"];
var _emscripten_bind_b2PrismaticJoint__GetMaxMotorForce_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetMaxMotorForce_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetMaxMotorForce_p0"];
var _emscripten_bind_b2ContactEdge__get_other_p0 = Module["_emscripten_bind_b2ContactEdge__get_other_p0"] = asm["_emscripten_bind_b2ContactEdge__get_other_p0"];
var _emscripten_bind_b2MouseJoint__SetTarget_p1 = Module["_emscripten_bind_b2MouseJoint__SetTarget_p1"] = asm["_emscripten_bind_b2MouseJoint__SetTarget_p1"];
var _emscripten_bind_b2Fixture__GetType_p0 = Module["_emscripten_bind_b2Fixture__GetType_p0"] = asm["_emscripten_bind_b2Fixture__GetType_p0"];
var _emscripten_bind_b2ContactListener__PostSolve_p2 = Module["_emscripten_bind_b2ContactListener__PostSolve_p2"] = asm["_emscripten_bind_b2ContactListener__PostSolve_p2"];
var _emscripten_bind_b2WeldJointDef__set_collideConnected_p1 = Module["_emscripten_bind_b2WeldJointDef__set_collideConnected_p1"] = asm["_emscripten_bind_b2WeldJointDef__set_collideConnected_p1"];
var _emscripten_bind_b2Body__GetInertia_p0 = Module["_emscripten_bind_b2Body__GetInertia_p0"] = asm["_emscripten_bind_b2Body__GetInertia_p0"];
var _emscripten_bind_b2FrictionJointDef__b2FrictionJointDef_p0 = Module["_emscripten_bind_b2FrictionJointDef__b2FrictionJointDef_p0"] = asm["_emscripten_bind_b2FrictionJointDef__b2FrictionJointDef_p0"];
var _emscripten_bind_b2PolygonShape__get_m_centroid_p0 = Module["_emscripten_bind_b2PolygonShape__get_m_centroid_p0"] = asm["_emscripten_bind_b2PolygonShape__get_m_centroid_p0"];
var _emscripten_bind_b2FrictionJointDef__get_localAnchorA_p0 = Module["_emscripten_bind_b2FrictionJointDef__get_localAnchorA_p0"] = asm["_emscripten_bind_b2FrictionJointDef__get_localAnchorA_p0"];
var _emscripten_bind_b2Draw__SetFlags_p1 = Module["_emscripten_bind_b2Draw__SetFlags_p1"] = asm["_emscripten_bind_b2Draw__SetFlags_p1"];
var _emscripten_bind_b2WeldJoint__GetUserData_p0 = Module["_emscripten_bind_b2WeldJoint__GetUserData_p0"] = asm["_emscripten_bind_b2WeldJoint__GetUserData_p0"];
var _emscripten_bind_b2WeldJointDef__b2WeldJointDef_p0 = Module["_emscripten_bind_b2WeldJointDef__b2WeldJointDef_p0"] = asm["_emscripten_bind_b2WeldJointDef__b2WeldJointDef_p0"];
var _emscripten_bind_b2RevoluteJoint__SetUserData_p1 = Module["_emscripten_bind_b2RevoluteJoint__SetUserData_p1"] = asm["_emscripten_bind_b2RevoluteJoint__SetUserData_p1"];
var _emscripten_bind_b2FrictionJointDef__set_collideConnected_p1 = Module["_emscripten_bind_b2FrictionJointDef__set_collideConnected_p1"] = asm["_emscripten_bind_b2FrictionJointDef__set_collideConnected_p1"];
var _emscripten_bind_b2World__SetAllowSleeping_p1 = Module["_emscripten_bind_b2World__SetAllowSleeping_p1"] = asm["_emscripten_bind_b2World__SetAllowSleeping_p1"];
var _emscripten_bind_b2RevoluteJointDef__set_collideConnected_p1 = Module["_emscripten_bind_b2RevoluteJointDef__set_collideConnected_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__set_collideConnected_p1"];
var _emscripten_bind_b2Contact__IsTouching_p0 = Module["_emscripten_bind_b2Contact__IsTouching_p0"] = asm["_emscripten_bind_b2Contact__IsTouching_p0"];
var _emscripten_bind_b2Transform__set_q_p1 = Module["_emscripten_bind_b2Transform__set_q_p1"] = asm["_emscripten_bind_b2Transform__set_q_p1"];
var _emscripten_bind_b2FrictionJoint__GetAnchorB_p0 = Module["_emscripten_bind_b2FrictionJoint__GetAnchorB_p0"] = asm["_emscripten_bind_b2FrictionJoint__GetAnchorB_p0"];
var _emscripten_bind_b2WeldJointDef__get_bodyA_p1 = Module["_emscripten_bind_b2WeldJointDef__get_bodyA_p1"] = asm["_emscripten_bind_b2WeldJointDef__get_bodyA_p1"];
var _emscripten_bind_b2WheelJoint__GetMotorTorque_p1 = Module["_emscripten_bind_b2WheelJoint__GetMotorTorque_p1"] = asm["_emscripten_bind_b2WheelJoint__GetMotorTorque_p1"];
var _emscripten_bind_b2Draw__b2Draw_p0 = Module["_emscripten_bind_b2Draw__b2Draw_p0"] = asm["_emscripten_bind_b2Draw__b2Draw_p0"];
var _emscripten_bind_b2ChainShape____destroy___p0 = Module["_emscripten_bind_b2ChainShape____destroy___p0"] = asm["_emscripten_bind_b2ChainShape____destroy___p0"];
var _emscripten_bind_b2Rot____destroy___p0 = Module["_emscripten_bind_b2Rot____destroy___p0"] = asm["_emscripten_bind_b2Rot____destroy___p0"];
var _emscripten_bind_b2RopeJoint__IsActive_p0 = Module["_emscripten_bind_b2RopeJoint__IsActive_p0"] = asm["_emscripten_bind_b2RopeJoint__IsActive_p0"];
var _emscripten_bind_b2EdgeShape__set_m_radius_p1 = Module["_emscripten_bind_b2EdgeShape__set_m_radius_p1"] = asm["_emscripten_bind_b2EdgeShape__set_m_radius_p1"];
var _emscripten_bind_b2DistanceJointDef__get_length_p0 = Module["_emscripten_bind_b2DistanceJointDef__get_length_p0"] = asm["_emscripten_bind_b2DistanceJointDef__get_length_p0"];
var _emscripten_bind_b2DistanceJoint__SetUserData_p1 = Module["_emscripten_bind_b2DistanceJoint__SetUserData_p1"] = asm["_emscripten_bind_b2DistanceJoint__SetUserData_p1"];
var _emscripten_bind_b2ContactManager__set_m_contactListener_p1 = Module["_emscripten_bind_b2ContactManager__set_m_contactListener_p1"] = asm["_emscripten_bind_b2ContactManager__set_m_contactListener_p1"];
var _emscripten_bind_b2MouseJointDef__get_maxForce_p0 = Module["_emscripten_bind_b2MouseJointDef__get_maxForce_p0"] = asm["_emscripten_bind_b2MouseJointDef__get_maxForce_p0"];
var _emscripten_bind_b2DistanceProxy__GetSupport_p1 = Module["_emscripten_bind_b2DistanceProxy__GetSupport_p1"] = asm["_emscripten_bind_b2DistanceProxy__GetSupport_p1"];
var _emscripten_bind_b2PulleyJoint__GetBodyA_p0 = Module["_emscripten_bind_b2PulleyJoint__GetBodyA_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetBodyA_p0"];
var _emscripten_bind_b2MouseJoint__SetMaxForce_p1 = Module["_emscripten_bind_b2MouseJoint__SetMaxForce_p1"] = asm["_emscripten_bind_b2MouseJoint__SetMaxForce_p1"];
var _emscripten_bind_b2World__GetGravity_p0 = Module["_emscripten_bind_b2World__GetGravity_p0"] = asm["_emscripten_bind_b2World__GetGravity_p0"];
var _emscripten_bind_b2WheelJointDef__set_bodyA_p1 = Module["_emscripten_bind_b2WheelJointDef__set_bodyA_p1"] = asm["_emscripten_bind_b2WheelJointDef__set_bodyA_p1"];
var _emscripten_bind_b2AABB__b2AABB_p0 = Module["_emscripten_bind_b2AABB__b2AABB_p0"] = asm["_emscripten_bind_b2AABB__b2AABB_p0"];
var _emscripten_bind_b2DistanceProxy____destroy___p0 = Module["_emscripten_bind_b2DistanceProxy____destroy___p0"] = asm["_emscripten_bind_b2DistanceProxy____destroy___p0"];
var _emscripten_bind_b2RevoluteJointDef__set_lowerAngle_p1 = Module["_emscripten_bind_b2RevoluteJointDef__set_lowerAngle_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__set_lowerAngle_p1"];
var _emscripten_bind_b2World__GetProfile_p0 = Module["_emscripten_bind_b2World__GetProfile_p0"] = asm["_emscripten_bind_b2World__GetProfile_p0"];
var _emscripten_bind_b2Vec2__b2Vec2_p0 = Module["_emscripten_bind_b2Vec2__b2Vec2_p0"] = asm["_emscripten_bind_b2Vec2__b2Vec2_p0"];
var _emscripten_bind_b2PulleyJointDef__set_groundAnchorA_p1 = Module["_emscripten_bind_b2PulleyJointDef__set_groundAnchorA_p1"] = asm["_emscripten_bind_b2PulleyJointDef__set_groundAnchorA_p1"];
var _emscripten_bind_b2PolygonShape__Clone_p1 = Module["_emscripten_bind_b2PolygonShape__Clone_p1"] = asm["_emscripten_bind_b2PolygonShape__Clone_p1"];
var _emscripten_bind_b2Body__GetNext_p0 = Module["_emscripten_bind_b2Body__GetNext_p0"] = asm["_emscripten_bind_b2Body__GetNext_p0"];
var _emscripten_bind_b2Fixture__GetMassData_p1 = Module["_emscripten_bind_b2Fixture__GetMassData_p1"] = asm["_emscripten_bind_b2Fixture__GetMassData_p1"];
var _emscripten_bind_b2Body__GetWorldVector_p1 = Module["_emscripten_bind_b2Body__GetWorldVector_p1"] = asm["_emscripten_bind_b2Body__GetWorldVector_p1"];
var _emscripten_bind_b2RevoluteJoint__GetType_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetType_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetType_p0"];
var _emscripten_bind_b2Fixture__Refilter_p0 = Module["_emscripten_bind_b2Fixture__Refilter_p0"] = asm["_emscripten_bind_b2Fixture__Refilter_p0"];
var _emscripten_bind_b2Vec3__SetZero_p0 = Module["_emscripten_bind_b2Vec3__SetZero_p0"] = asm["_emscripten_bind_b2Vec3__SetZero_p0"];
var _emscripten_bind_b2ContactListener__EndContact_p1 = Module["_emscripten_bind_b2ContactListener__EndContact_p1"] = asm["_emscripten_bind_b2ContactListener__EndContact_p1"];
var _emscripten_bind_b2Vec2__Normalize_p0 = Module["_emscripten_bind_b2Vec2__Normalize_p0"] = asm["_emscripten_bind_b2Vec2__Normalize_p0"];
var _emscripten_bind_b2Shape__ComputeMass_p2 = Module["_emscripten_bind_b2Shape__ComputeMass_p2"] = asm["_emscripten_bind_b2Shape__ComputeMass_p2"];
var _emscripten_bind_b2FrictionJoint__GetMaxForce_p0 = Module["_emscripten_bind_b2FrictionJoint__GetMaxForce_p0"] = asm["_emscripten_bind_b2FrictionJoint__GetMaxForce_p0"];
var _emscripten_bind_b2BodyDef__get_type_p0 = Module["_emscripten_bind_b2BodyDef__get_type_p0"] = asm["_emscripten_bind_b2BodyDef__get_type_p0"];
var _emscripten_bind_b2FixtureDef__get_userData_p0 = Module["_emscripten_bind_b2FixtureDef__get_userData_p0"] = asm["_emscripten_bind_b2FixtureDef__get_userData_p0"];
var _emscripten_bind_b2AABB__GetCenter_p0 = Module["_emscripten_bind_b2AABB__GetCenter_p0"] = asm["_emscripten_bind_b2AABB__GetCenter_p0"];
var _free = Module["_free"] = asm["_free"];
var _emscripten_bind_b2WeldJointDef__Initialize_p3 = Module["_emscripten_bind_b2WeldJointDef__Initialize_p3"] = asm["_emscripten_bind_b2WeldJointDef__Initialize_p3"];
var _emscripten_bind_b2Color__b2Color_p0 = Module["_emscripten_bind_b2Color__b2Color_p0"] = asm["_emscripten_bind_b2Color__b2Color_p0"];
var _emscripten_bind_b2DistanceJoint__GetCollideConnected_p0 = Module["_emscripten_bind_b2DistanceJoint__GetCollideConnected_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetCollideConnected_p0"];
var _emscripten_bind_b2Rot__Set_p1 = Module["_emscripten_bind_b2Rot__Set_p1"] = asm["_emscripten_bind_b2Rot__Set_p1"];
var _emscripten_bind_b2RevoluteJoint__GetReactionForce_p1 = Module["_emscripten_bind_b2RevoluteJoint__GetReactionForce_p1"] = asm["_emscripten_bind_b2RevoluteJoint__GetReactionForce_p1"];
var _emscripten_bind_b2PrismaticJointDef__b2PrismaticJointDef_p0 = Module["_emscripten_bind_b2PrismaticJointDef__b2PrismaticJointDef_p0"] = asm["_emscripten_bind_b2PrismaticJointDef__b2PrismaticJointDef_p0"];
var _emscripten_bind_b2FrictionJointDef__get_localAnchorB_p0 = Module["_emscripten_bind_b2FrictionJointDef__get_localAnchorB_p0"] = asm["_emscripten_bind_b2FrictionJointDef__get_localAnchorB_p0"];
var _emscripten_bind_b2MouseJoint__b2MouseJoint_p1 = Module["_emscripten_bind_b2MouseJoint__b2MouseJoint_p1"] = asm["_emscripten_bind_b2MouseJoint__b2MouseJoint_p1"];
var _emscripten_bind_b2RopeJoint__Dump_p0 = Module["_emscripten_bind_b2RopeJoint__Dump_p0"] = asm["_emscripten_bind_b2RopeJoint__Dump_p0"];
var _emscripten_bind_b2WheelJointDef__set_enableMotor_p1 = Module["_emscripten_bind_b2WheelJointDef__set_enableMotor_p1"] = asm["_emscripten_bind_b2WheelJointDef__set_enableMotor_p1"];
var _emscripten_bind_b2Vec3__b2Vec3_p3 = Module["_emscripten_bind_b2Vec3__b2Vec3_p3"] = asm["_emscripten_bind_b2Vec3__b2Vec3_p3"];
var _emscripten_bind_b2PolygonShape__ComputeAABB_p3 = Module["_emscripten_bind_b2PolygonShape__ComputeAABB_p3"] = asm["_emscripten_bind_b2PolygonShape__ComputeAABB_p3"];
var _emscripten_bind_b2RopeJointDef__set_bodyB_p1 = Module["_emscripten_bind_b2RopeJointDef__set_bodyB_p1"] = asm["_emscripten_bind_b2RopeJointDef__set_bodyB_p1"];
var _emscripten_bind_b2BodyDef__set_fixedRotation_p1 = Module["_emscripten_bind_b2BodyDef__set_fixedRotation_p1"] = asm["_emscripten_bind_b2BodyDef__set_fixedRotation_p1"];
var _emscripten_bind_b2WheelJoint__GetAnchorA_p0 = Module["_emscripten_bind_b2WheelJoint__GetAnchorA_p0"] = asm["_emscripten_bind_b2WheelJoint__GetAnchorA_p0"];
var _emscripten_bind_b2GearJoint__GetBodyA_p0 = Module["_emscripten_bind_b2GearJoint__GetBodyA_p0"] = asm["_emscripten_bind_b2GearJoint__GetBodyA_p0"];
var _emscripten_bind_b2PulleyJointDef__b2PulleyJointDef_p0 = Module["_emscripten_bind_b2PulleyJointDef__b2PulleyJointDef_p0"] = asm["_emscripten_bind_b2PulleyJointDef__b2PulleyJointDef_p0"];
var _emscripten_bind_b2EdgeShape__GetChildCount_p0 = Module["_emscripten_bind_b2EdgeShape__GetChildCount_p0"] = asm["_emscripten_bind_b2EdgeShape__GetChildCount_p0"];
var _emscripten_bind_b2BodyDef__set_active_p1 = Module["_emscripten_bind_b2BodyDef__set_active_p1"] = asm["_emscripten_bind_b2BodyDef__set_active_p1"];
var _emscripten_bind_b2FrictionJointDef__get_bodyA_p1 = Module["_emscripten_bind_b2FrictionJointDef__get_bodyA_p1"] = asm["_emscripten_bind_b2FrictionJointDef__get_bodyA_p1"];
var _emscripten_bind_b2PulleyJoint__GetReactionTorque_p1 = Module["_emscripten_bind_b2PulleyJoint__GetReactionTorque_p1"] = asm["_emscripten_bind_b2PulleyJoint__GetReactionTorque_p1"];
var _emscripten_bind_b2DistanceJoint__b2DistanceJoint_p1 = Module["_emscripten_bind_b2DistanceJoint__b2DistanceJoint_p1"] = asm["_emscripten_bind_b2DistanceJoint__b2DistanceJoint_p1"];
var _emscripten_bind_b2Vec2____destroy___p0 = Module["_emscripten_bind_b2Vec2____destroy___p0"] = asm["_emscripten_bind_b2Vec2____destroy___p0"];
var _emscripten_bind_b2GearJointDef__get_bodyA_p1 = Module["_emscripten_bind_b2GearJointDef__get_bodyA_p1"] = asm["_emscripten_bind_b2GearJointDef__get_bodyA_p1"];
var _emscripten_bind_b2BodyDef__b2BodyDef_p0 = Module["_emscripten_bind_b2BodyDef__b2BodyDef_p0"] = asm["_emscripten_bind_b2BodyDef__b2BodyDef_p0"];
var _emscripten_bind_b2RevoluteJoint__Dump_p0 = Module["_emscripten_bind_b2RevoluteJoint__Dump_p0"] = asm["_emscripten_bind_b2RevoluteJoint__Dump_p0"];
var _emscripten_bind_b2RevoluteJointDef__b2RevoluteJointDef_p0 = Module["_emscripten_bind_b2RevoluteJointDef__b2RevoluteJointDef_p0"] = asm["_emscripten_bind_b2RevoluteJointDef__b2RevoluteJointDef_p0"];
var _emscripten_bind_b2World__SetDebugDraw_p1 = Module["_emscripten_bind_b2World__SetDebugDraw_p1"] = asm["_emscripten_bind_b2World__SetDebugDraw_p1"];
var _emscripten_bind_b2MouseJoint____destroy___p0 = Module["_emscripten_bind_b2MouseJoint____destroy___p0"] = asm["_emscripten_bind_b2MouseJoint____destroy___p0"];
var _emscripten_bind_b2RevoluteJoint__IsMotorEnabled_p0 = Module["_emscripten_bind_b2RevoluteJoint__IsMotorEnabled_p0"] = asm["_emscripten_bind_b2RevoluteJoint__IsMotorEnabled_p0"];
var _emscripten_bind_b2MouseJointDef__set_frequencyHz_p1 = Module["_emscripten_bind_b2MouseJointDef__set_frequencyHz_p1"] = asm["_emscripten_bind_b2MouseJointDef__set_frequencyHz_p1"];
var _emscripten_bind_b2DestructionListener__b2DestructionListener_p0 = Module["_emscripten_bind_b2DestructionListener__b2DestructionListener_p0"] = asm["_emscripten_bind_b2DestructionListener__b2DestructionListener_p0"];
var _emscripten_bind_b2WheelJointDef__get_frequencyHz_p0 = Module["_emscripten_bind_b2WheelJointDef__get_frequencyHz_p0"] = asm["_emscripten_bind_b2WheelJointDef__get_frequencyHz_p0"];
var _emscripten_bind_b2Filter__b2Filter_p0 = Module["_emscripten_bind_b2Filter__b2Filter_p0"] = asm["_emscripten_bind_b2Filter__b2Filter_p0"];
var _emscripten_bind_b2JointDef__b2JointDef_p0 = Module["_emscripten_bind_b2JointDef__b2JointDef_p0"] = asm["_emscripten_bind_b2JointDef__b2JointDef_p0"];
var _emscripten_bind_b2Body__SetBullet_p1 = Module["_emscripten_bind_b2Body__SetBullet_p1"] = asm["_emscripten_bind_b2Body__SetBullet_p1"];
var _emscripten_bind_b2Body__GetAngle_p0 = Module["_emscripten_bind_b2Body__GetAngle_p0"] = asm["_emscripten_bind_b2Body__GetAngle_p0"];
var _emscripten_bind_b2PulleyJoint__GetBodyB_p0 = Module["_emscripten_bind_b2PulleyJoint__GetBodyB_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetBodyB_p0"];
var _emscripten_bind_b2MouseJoint__GetTarget_p0 = Module["_emscripten_bind_b2MouseJoint__GetTarget_p0"] = asm["_emscripten_bind_b2MouseJoint__GetTarget_p0"];
var _emscripten_bind_b2DistanceJointDef__get_frequencyHz_p0 = Module["_emscripten_bind_b2DistanceJointDef__get_frequencyHz_p0"] = asm["_emscripten_bind_b2DistanceJointDef__get_frequencyHz_p0"];
var _emscripten_bind_b2Contact__GetNext_p0 = Module["_emscripten_bind_b2Contact__GetNext_p0"] = asm["_emscripten_bind_b2Contact__GetNext_p0"];
var _emscripten_bind_b2World__DrawDebugData_p0 = Module["_emscripten_bind_b2World__DrawDebugData_p0"] = asm["_emscripten_bind_b2World__DrawDebugData_p0"];
var _emscripten_bind_b2RevoluteJointDef__set_maxMotorTorque_p1 = Module["_emscripten_bind_b2RevoluteJointDef__set_maxMotorTorque_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__set_maxMotorTorque_p1"];
var _emscripten_bind_b2AABB__set_upperBound_p1 = Module["_emscripten_bind_b2AABB__set_upperBound_p1"] = asm["_emscripten_bind_b2AABB__set_upperBound_p1"];
var _emscripten_bind_b2WheelJointDef__get_localAnchorA_p0 = Module["_emscripten_bind_b2WheelJointDef__get_localAnchorA_p0"] = asm["_emscripten_bind_b2WheelJointDef__get_localAnchorA_p0"];
var _emscripten_bind_b2RevoluteJoint____destroy___p0 = Module["_emscripten_bind_b2RevoluteJoint____destroy___p0"] = asm["_emscripten_bind_b2RevoluteJoint____destroy___p0"];
var _emscripten_bind_b2PulleyJointDef__get_lengthB_p0 = Module["_emscripten_bind_b2PulleyJointDef__get_lengthB_p0"] = asm["_emscripten_bind_b2PulleyJointDef__get_lengthB_p0"];
var _emscripten_bind_b2WeldJoint__GetReferenceAngle_p0 = Module["_emscripten_bind_b2WeldJoint__GetReferenceAngle_p0"] = asm["_emscripten_bind_b2WeldJoint__GetReferenceAngle_p0"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _emscripten_bind_b2FixtureDef__set_filter_p1 = Module["_emscripten_bind_b2FixtureDef__set_filter_p1"] = asm["_emscripten_bind_b2FixtureDef__set_filter_p1"];
var _emscripten_bind_b2ChainShape__CreateChain_p2 = Module["_emscripten_bind_b2ChainShape__CreateChain_p2"] = asm["_emscripten_bind_b2ChainShape__CreateChain_p2"];
var _emscripten_bind_b2Body__GetLocalVector_p1 = Module["_emscripten_bind_b2Body__GetLocalVector_p1"] = asm["_emscripten_bind_b2Body__GetLocalVector_p1"];
var _emscripten_bind_b2Fixture__SetUserData_p1 = Module["_emscripten_bind_b2Fixture__SetUserData_p1"] = asm["_emscripten_bind_b2Fixture__SetUserData_p1"];
var _emscripten_bind_b2WheelJoint____destroy___p0 = Module["_emscripten_bind_b2WheelJoint____destroy___p0"] = asm["_emscripten_bind_b2WheelJoint____destroy___p0"];
var _emscripten_bind_b2PolygonShape__TestPoint_p2 = Module["_emscripten_bind_b2PolygonShape__TestPoint_p2"] = asm["_emscripten_bind_b2PolygonShape__TestPoint_p2"];
var _emscripten_bind_b2FrictionJointDef__set_maxTorque_p1 = Module["_emscripten_bind_b2FrictionJointDef__set_maxTorque_p1"] = asm["_emscripten_bind_b2FrictionJointDef__set_maxTorque_p1"];
var _emscripten_bind_b2ChainShape__ComputeAABB_p3 = Module["_emscripten_bind_b2ChainShape__ComputeAABB_p3"] = asm["_emscripten_bind_b2ChainShape__ComputeAABB_p3"];
var _emscripten_bind_b2RopeJoint__GetReactionForce_p1 = Module["_emscripten_bind_b2RopeJoint__GetReactionForce_p1"] = asm["_emscripten_bind_b2RopeJoint__GetReactionForce_p1"];
var _emscripten_bind_b2CircleShape__GetSupport_p1 = Module["_emscripten_bind_b2CircleShape__GetSupport_p1"] = asm["_emscripten_bind_b2CircleShape__GetSupport_p1"];
var _emscripten_bind_b2World__GetContinuousPhysics_p0 = Module["_emscripten_bind_b2World__GetContinuousPhysics_p0"] = asm["_emscripten_bind_b2World__GetContinuousPhysics_p0"];
var _emscripten_bind_b2ContactManager__set_m_contactFilter_p1 = Module["_emscripten_bind_b2ContactManager__set_m_contactFilter_p1"] = asm["_emscripten_bind_b2ContactManager__set_m_contactFilter_p1"];
var _emscripten_bind_b2Draw____destroy___p0 = Module["_emscripten_bind_b2Draw____destroy___p0"] = asm["_emscripten_bind_b2Draw____destroy___p0"];
var _emscripten_bind_b2RevoluteJointDef__set_localAnchorA_p1 = Module["_emscripten_bind_b2RevoluteJointDef__set_localAnchorA_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__set_localAnchorA_p1"];
var _emscripten_bind_b2MouseJoint__GetCollideConnected_p0 = Module["_emscripten_bind_b2MouseJoint__GetCollideConnected_p0"] = asm["_emscripten_bind_b2MouseJoint__GetCollideConnected_p0"];
var _emscripten_bind_b2MouseJoint__GetReactionForce_p1 = Module["_emscripten_bind_b2MouseJoint__GetReactionForce_p1"] = asm["_emscripten_bind_b2MouseJoint__GetReactionForce_p1"];
var _emscripten_bind_b2JointDef__set_type_p1 = Module["_emscripten_bind_b2JointDef__set_type_p1"] = asm["_emscripten_bind_b2JointDef__set_type_p1"];
var _emscripten_bind_b2Color__Set_p3 = Module["_emscripten_bind_b2Color__Set_p3"] = asm["_emscripten_bind_b2Color__Set_p3"];
var _emscripten_bind_b2RopeJoint__GetCollideConnected_p0 = Module["_emscripten_bind_b2RopeJoint__GetCollideConnected_p0"] = asm["_emscripten_bind_b2RopeJoint__GetCollideConnected_p0"];
var _emscripten_bind_b2WeldJoint__GetType_p0 = Module["_emscripten_bind_b2WeldJoint__GetType_p0"] = asm["_emscripten_bind_b2WeldJoint__GetType_p0"];
var _emscripten_bind_b2Joint__GetBodyB_p0 = Module["_emscripten_bind_b2Joint__GetBodyB_p0"] = asm["_emscripten_bind_b2Joint__GetBodyB_p0"];
var _emscripten_bind_b2ContactManager__set_m_broadPhase_p1 = Module["_emscripten_bind_b2ContactManager__set_m_broadPhase_p1"] = asm["_emscripten_bind_b2ContactManager__set_m_broadPhase_p1"];
var _emscripten_bind_b2Body__GetLinearVelocityFromLocalPoint_p1 = Module["_emscripten_bind_b2Body__GetLinearVelocityFromLocalPoint_p1"] = asm["_emscripten_bind_b2Body__GetLinearVelocityFromLocalPoint_p1"];
var _emscripten_bind_b2Vec2__Length_p0 = Module["_emscripten_bind_b2Vec2__Length_p0"] = asm["_emscripten_bind_b2Vec2__Length_p0"];
var _emscripten_bind_b2MouseJoint__GetUserData_p0 = Module["_emscripten_bind_b2MouseJoint__GetUserData_p0"] = asm["_emscripten_bind_b2MouseJoint__GetUserData_p0"];
var _emscripten_bind_b2JointDef__get_collideConnected_p0 = Module["_emscripten_bind_b2JointDef__get_collideConnected_p0"] = asm["_emscripten_bind_b2JointDef__get_collideConnected_p0"];
var _emscripten_bind_b2BroadPhase__GetTreeQuality_p0 = Module["_emscripten_bind_b2BroadPhase__GetTreeQuality_p0"] = asm["_emscripten_bind_b2BroadPhase__GetTreeQuality_p0"];
var _emscripten_bind_b2WheelJointDef__get_dampingRatio_p0 = Module["_emscripten_bind_b2WheelJointDef__get_dampingRatio_p0"] = asm["_emscripten_bind_b2WheelJointDef__get_dampingRatio_p0"];
var _emscripten_bind_b2Body__GetType_p0 = Module["_emscripten_bind_b2Body__GetType_p0"] = asm["_emscripten_bind_b2Body__GetType_p0"];
var _emscripten_bind_b2Joint__GetCollideConnected_p0 = Module["_emscripten_bind_b2Joint__GetCollideConnected_p0"] = asm["_emscripten_bind_b2Joint__GetCollideConnected_p0"];
var _emscripten_bind_b2FrictionJoint__GetReactionTorque_p1 = Module["_emscripten_bind_b2FrictionJoint__GetReactionTorque_p1"] = asm["_emscripten_bind_b2FrictionJoint__GetReactionTorque_p1"];
var _emscripten_bind_b2PulleyJointDef__get_bodyB_p1 = Module["_emscripten_bind_b2PulleyJointDef__get_bodyB_p1"] = asm["_emscripten_bind_b2PulleyJointDef__get_bodyB_p1"];
var _emscripten_bind_b2FrictionJointDef__set_localAnchorB_p1 = Module["_emscripten_bind_b2FrictionJointDef__set_localAnchorB_p1"] = asm["_emscripten_bind_b2FrictionJointDef__set_localAnchorB_p1"];
var _emscripten_bind_b2FrictionJointDef__get_maxForce_p0 = Module["_emscripten_bind_b2FrictionJointDef__get_maxForce_p0"] = asm["_emscripten_bind_b2FrictionJointDef__get_maxForce_p0"];
var _emscripten_bind_b2WheelJointDef__set_localAnchorA_p1 = Module["_emscripten_bind_b2WheelJointDef__set_localAnchorA_p1"] = asm["_emscripten_bind_b2WheelJointDef__set_localAnchorA_p1"];
var _emscripten_bind_b2FrictionJointDef__get_bodyB_p1 = Module["_emscripten_bind_b2FrictionJointDef__get_bodyB_p1"] = asm["_emscripten_bind_b2FrictionJointDef__get_bodyB_p1"];
var _emscripten_bind_b2FrictionJoint__GetType_p0 = Module["_emscripten_bind_b2FrictionJoint__GetType_p0"] = asm["_emscripten_bind_b2FrictionJoint__GetType_p0"];
var _emscripten_bind_b2PolygonShape__RayCast_p4 = Module["_emscripten_bind_b2PolygonShape__RayCast_p4"] = asm["_emscripten_bind_b2PolygonShape__RayCast_p4"];
var _emscripten_bind_b2GearJoint__GetCollideConnected_p0 = Module["_emscripten_bind_b2GearJoint__GetCollideConnected_p0"] = asm["_emscripten_bind_b2GearJoint__GetCollideConnected_p0"];
var _emscripten_bind_b2CircleShape__ComputeMass_p2 = Module["_emscripten_bind_b2CircleShape__ComputeMass_p2"] = asm["_emscripten_bind_b2CircleShape__ComputeMass_p2"];
var _emscripten_bind_b2Joint__IsActive_p0 = Module["_emscripten_bind_b2Joint__IsActive_p0"] = asm["_emscripten_bind_b2Joint__IsActive_p0"];
var _emscripten_bind_b2MouseJoint__GetFrequency_p0 = Module["_emscripten_bind_b2MouseJoint__GetFrequency_p0"] = asm["_emscripten_bind_b2MouseJoint__GetFrequency_p0"];
var _emscripten_bind_b2MouseJointDef__b2MouseJointDef_p0 = Module["_emscripten_bind_b2MouseJointDef__b2MouseJointDef_p0"] = asm["_emscripten_bind_b2MouseJointDef__b2MouseJointDef_p0"];
var _emscripten_bind_b2Contact__IsEnabled_p0 = Module["_emscripten_bind_b2Contact__IsEnabled_p0"] = asm["_emscripten_bind_b2Contact__IsEnabled_p0"];
var _emscripten_bind_b2PrismaticJointDef__set_bodyB_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_bodyB_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_bodyB_p1"];
var _emscripten_bind_b2Vec2__SetZero_p0 = Module["_emscripten_bind_b2Vec2__SetZero_p0"] = asm["_emscripten_bind_b2Vec2__SetZero_p0"];
var _emscripten_bind_b2Fixture__SetSensor_p1 = Module["_emscripten_bind_b2Fixture__SetSensor_p1"] = asm["_emscripten_bind_b2Fixture__SetSensor_p1"];
var _emscripten_bind_b2Shape__GetType_p0 = Module["_emscripten_bind_b2Shape__GetType_p0"] = asm["_emscripten_bind_b2Shape__GetType_p0"];
var _emscripten_bind_b2WeldJointDef__get_localAnchorB_p0 = Module["_emscripten_bind_b2WeldJointDef__get_localAnchorB_p0"] = asm["_emscripten_bind_b2WeldJointDef__get_localAnchorB_p0"];
var _emscripten_bind_b2DistanceProxy__set_m_vertices_p1 = Module["_emscripten_bind_b2DistanceProxy__set_m_vertices_p1"] = asm["_emscripten_bind_b2DistanceProxy__set_m_vertices_p1"];
var _emscripten_bind_b2PrismaticJoint__GetLocalAnchorA_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetLocalAnchorA_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetLocalAnchorA_p0"];
var _emscripten_bind_b2WheelJointDef__set_motorSpeed_p1 = Module["_emscripten_bind_b2WheelJointDef__set_motorSpeed_p1"] = asm["_emscripten_bind_b2WheelJointDef__set_motorSpeed_p1"];
var _emscripten_bind_b2Contact__Evaluate_p3 = Module["_emscripten_bind_b2Contact__Evaluate_p3"] = asm["_emscripten_bind_b2Contact__Evaluate_p3"];
var _emscripten_bind_b2WheelJointDef__get_localAnchorB_p0 = Module["_emscripten_bind_b2WheelJointDef__get_localAnchorB_p0"] = asm["_emscripten_bind_b2WheelJointDef__get_localAnchorB_p0"];
var _emscripten_bind_b2WeldJoint__GetNext_p0 = Module["_emscripten_bind_b2WeldJoint__GetNext_p0"] = asm["_emscripten_bind_b2WeldJoint__GetNext_p0"];
var _emscripten_bind_b2WeldJoint__GetReactionForce_p1 = Module["_emscripten_bind_b2WeldJoint__GetReactionForce_p1"] = asm["_emscripten_bind_b2WeldJoint__GetReactionForce_p1"];
var _emscripten_bind_b2AABB__Combine_p2 = Module["_emscripten_bind_b2AABB__Combine_p2"] = asm["_emscripten_bind_b2AABB__Combine_p2"];
var _emscripten_bind_b2PulleyJointDef__get_lengthA_p0 = Module["_emscripten_bind_b2PulleyJointDef__get_lengthA_p0"] = asm["_emscripten_bind_b2PulleyJointDef__get_lengthA_p0"];
var _emscripten_bind_b2Shape__get_m_radius_p0 = Module["_emscripten_bind_b2Shape__get_m_radius_p0"] = asm["_emscripten_bind_b2Shape__get_m_radius_p0"];
var _emscripten_bind_b2ChainShape__set_m_count_p1 = Module["_emscripten_bind_b2ChainShape__set_m_count_p1"] = asm["_emscripten_bind_b2ChainShape__set_m_count_p1"];
var _emscripten_bind_b2Contact__ResetFriction_p0 = Module["_emscripten_bind_b2Contact__ResetFriction_p0"] = asm["_emscripten_bind_b2Contact__ResetFriction_p0"];
var _emscripten_bind_b2DynamicTree__GetFatAABB_p1 = Module["_emscripten_bind_b2DynamicTree__GetFatAABB_p1"] = asm["_emscripten_bind_b2DynamicTree__GetFatAABB_p1"];
var _emscripten_bind_b2Body__SetLinearVelocity_p1 = Module["_emscripten_bind_b2Body__SetLinearVelocity_p1"] = asm["_emscripten_bind_b2Body__SetLinearVelocity_p1"];
var _emscripten_bind_b2PrismaticJoint__SetLimits_p2 = Module["_emscripten_bind_b2PrismaticJoint__SetLimits_p2"] = asm["_emscripten_bind_b2PrismaticJoint__SetLimits_p2"];
var _emscripten_bind_b2CircleShape__b2CircleShape_p0 = Module["_emscripten_bind_b2CircleShape__b2CircleShape_p0"] = asm["_emscripten_bind_b2CircleShape__b2CircleShape_p0"];
var _emscripten_bind_b2Color__get_g_p0 = Module["_emscripten_bind_b2Color__get_g_p0"] = asm["_emscripten_bind_b2Color__get_g_p0"];
var _emscripten_bind_b2Fixture__GetBody_p0 = Module["_emscripten_bind_b2Fixture__GetBody_p0"] = asm["_emscripten_bind_b2Fixture__GetBody_p0"];
var _emscripten_bind_b2FrictionJointDef__get_collideConnected_p1 = Module["_emscripten_bind_b2FrictionJointDef__get_collideConnected_p1"] = asm["_emscripten_bind_b2FrictionJointDef__get_collideConnected_p1"];
var _emscripten_bind_b2WheelJointDef__set_maxMotorTorque_p1 = Module["_emscripten_bind_b2WheelJointDef__set_maxMotorTorque_p1"] = asm["_emscripten_bind_b2WheelJointDef__set_maxMotorTorque_p1"];
var _emscripten_bind_b2GearJointDef__get_bodyB_p1 = Module["_emscripten_bind_b2GearJointDef__get_bodyB_p1"] = asm["_emscripten_bind_b2GearJointDef__get_bodyB_p1"];
var _emscripten_bind_b2Vec2__LengthSquared_p0 = Module["_emscripten_bind_b2Vec2__LengthSquared_p0"] = asm["_emscripten_bind_b2Vec2__LengthSquared_p0"];
var _emscripten_bind_b2Contact__GetFixtureA_p0 = Module["_emscripten_bind_b2Contact__GetFixtureA_p0"] = asm["_emscripten_bind_b2Contact__GetFixtureA_p0"];
var _emscripten_bind_b2RevoluteJointDef__set_localAnchorB_p1 = Module["_emscripten_bind_b2RevoluteJointDef__set_localAnchorB_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__set_localAnchorB_p1"];
var _emscripten_bind_b2DistanceJointDef__set_bodyB_p1 = Module["_emscripten_bind_b2DistanceJointDef__set_bodyB_p1"] = asm["_emscripten_bind_b2DistanceJointDef__set_bodyB_p1"];
var _emscripten_bind_b2Transform__SetIdentity_p0 = Module["_emscripten_bind_b2Transform__SetIdentity_p0"] = asm["_emscripten_bind_b2Transform__SetIdentity_p0"];
var _emscripten_bind_b2FrictionJointDef__set_localAnchorA_p1 = Module["_emscripten_bind_b2FrictionJointDef__set_localAnchorA_p1"] = asm["_emscripten_bind_b2FrictionJointDef__set_localAnchorA_p1"];
var _emscripten_bind_b2Body__SetTransform_p2 = Module["_emscripten_bind_b2Body__SetTransform_p2"] = asm["_emscripten_bind_b2Body__SetTransform_p2"];
var _emscripten_bind_b2PulleyJointDef__get_bodyA_p1 = Module["_emscripten_bind_b2PulleyJointDef__get_bodyA_p1"] = asm["_emscripten_bind_b2PulleyJointDef__get_bodyA_p1"];
var _emscripten_bind_b2DistanceJoint__GetReactionTorque_p1 = Module["_emscripten_bind_b2DistanceJoint__GetReactionTorque_p1"] = asm["_emscripten_bind_b2DistanceJoint__GetReactionTorque_p1"];
var _emscripten_bind_b2FrictionJointDef____destroy___p0 = Module["_emscripten_bind_b2FrictionJointDef____destroy___p0"] = asm["_emscripten_bind_b2FrictionJointDef____destroy___p0"];
var _emscripten_bind_b2MouseJointDef__set_maxForce_p1 = Module["_emscripten_bind_b2MouseJointDef__set_maxForce_p1"] = asm["_emscripten_bind_b2MouseJointDef__set_maxForce_p1"];
var _emscripten_bind_b2GearJoint__GetReactionForce_p1 = Module["_emscripten_bind_b2GearJoint__GetReactionForce_p1"] = asm["_emscripten_bind_b2GearJoint__GetReactionForce_p1"];
var _emscripten_bind_b2Vec2__set_y_p1 = Module["_emscripten_bind_b2Vec2__set_y_p1"] = asm["_emscripten_bind_b2Vec2__set_y_p1"];
var _emscripten_bind_b2CircleShape__Clone_p1 = Module["_emscripten_bind_b2CircleShape__Clone_p1"] = asm["_emscripten_bind_b2CircleShape__Clone_p1"];
var _emscripten_bind_b2FrictionJoint__GetNext_p0 = Module["_emscripten_bind_b2FrictionJoint__GetNext_p0"] = asm["_emscripten_bind_b2FrictionJoint__GetNext_p0"];
var _emscripten_bind_b2Color____destroy___p0 = Module["_emscripten_bind_b2Color____destroy___p0"] = asm["_emscripten_bind_b2Color____destroy___p0"];
var _emscripten_bind_b2WeldJoint__GetBodyA_p0 = Module["_emscripten_bind_b2WeldJoint__GetBodyA_p0"] = asm["_emscripten_bind_b2WeldJoint__GetBodyA_p0"];
var _emscripten_bind_b2Fixture__GetRestitution_p0 = Module["_emscripten_bind_b2Fixture__GetRestitution_p0"] = asm["_emscripten_bind_b2Fixture__GetRestitution_p0"];
var _emscripten_bind_b2DistanceJointDef__set_length_p1 = Module["_emscripten_bind_b2DistanceJointDef__set_length_p1"] = asm["_emscripten_bind_b2DistanceJointDef__set_length_p1"];
var _emscripten_bind_b2PrismaticJointDef__get_localAxisA_p0 = Module["_emscripten_bind_b2PrismaticJointDef__get_localAxisA_p0"] = asm["_emscripten_bind_b2PrismaticJointDef__get_localAxisA_p0"];
var _emscripten_bind_b2Color__b2Color_p3 = Module["_emscripten_bind_b2Color__b2Color_p3"] = asm["_emscripten_bind_b2Color__b2Color_p3"];
var _emscripten_bind_b2Body__ApplyForceToCenter_p1 = Module["_emscripten_bind_b2Body__ApplyForceToCenter_p1"] = asm["_emscripten_bind_b2Body__ApplyForceToCenter_p1"];
var _emscripten_bind_b2PrismaticJoint__SetUserData_p1 = Module["_emscripten_bind_b2PrismaticJoint__SetUserData_p1"] = asm["_emscripten_bind_b2PrismaticJoint__SetUserData_p1"];
var _emscripten_bind_b2Color__get_r_p0 = Module["_emscripten_bind_b2Color__get_r_p0"] = asm["_emscripten_bind_b2Color__get_r_p0"];
var _emscripten_bind_b2RevoluteJoint__b2RevoluteJoint_p1 = Module["_emscripten_bind_b2RevoluteJoint__b2RevoluteJoint_p1"] = asm["_emscripten_bind_b2RevoluteJoint__b2RevoluteJoint_p1"];
var _emscripten_bind_b2RevoluteJoint__GetCollideConnected_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetCollideConnected_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetCollideConnected_p0"];
var _emscripten_bind_b2PrismaticJoint__IsActive_p0 = Module["_emscripten_bind_b2PrismaticJoint__IsActive_p0"] = asm["_emscripten_bind_b2PrismaticJoint__IsActive_p0"];
var _emscripten_bind_b2Body__SetFixedRotation_p1 = Module["_emscripten_bind_b2Body__SetFixedRotation_p1"] = asm["_emscripten_bind_b2Body__SetFixedRotation_p1"];
var _emscripten_bind_b2RopeJointDef____destroy___p0 = Module["_emscripten_bind_b2RopeJointDef____destroy___p0"] = asm["_emscripten_bind_b2RopeJointDef____destroy___p0"];
var _emscripten_bind_b2CircleShape____destroy___p0 = Module["_emscripten_bind_b2CircleShape____destroy___p0"] = asm["_emscripten_bind_b2CircleShape____destroy___p0"];
var _emscripten_bind_b2Shape__set_m_radius_p1 = Module["_emscripten_bind_b2Shape__set_m_radius_p1"] = asm["_emscripten_bind_b2Shape__set_m_radius_p1"];
var _emscripten_bind_b2WheelJoint__GetBodyB_p0 = Module["_emscripten_bind_b2WheelJoint__GetBodyB_p0"] = asm["_emscripten_bind_b2WheelJoint__GetBodyB_p0"];
var _emscripten_bind_b2JointDef__get_bodyA_p0 = Module["_emscripten_bind_b2JointDef__get_bodyA_p0"] = asm["_emscripten_bind_b2JointDef__get_bodyA_p0"];
var _emscripten_bind_b2World__GetContactCount_p0 = Module["_emscripten_bind_b2World__GetContactCount_p0"] = asm["_emscripten_bind_b2World__GetContactCount_p0"];
var _emscripten_bind_b2Fixture__b2Fixture_p0 = Module["_emscripten_bind_b2Fixture__b2Fixture_p0"] = asm["_emscripten_bind_b2Fixture__b2Fixture_p0"];
var _emscripten_bind_b2StackAllocator__Allocate_p1 = Module["_emscripten_bind_b2StackAllocator__Allocate_p1"] = asm["_emscripten_bind_b2StackAllocator__Allocate_p1"];
var _emscripten_bind_b2World__GetBodyCount_p0 = Module["_emscripten_bind_b2World__GetBodyCount_p0"] = asm["_emscripten_bind_b2World__GetBodyCount_p0"];
var _emscripten_bind_b2BodyDef__set_awake_p1 = Module["_emscripten_bind_b2BodyDef__set_awake_p1"] = asm["_emscripten_bind_b2BodyDef__set_awake_p1"];
var _emscripten_bind_b2BroadPhase__CreateProxy_p2 = Module["_emscripten_bind_b2BroadPhase__CreateProxy_p2"] = asm["_emscripten_bind_b2BroadPhase__CreateProxy_p2"];
var _emscripten_bind_b2WheelJoint__GetLocalAnchorA_p0 = Module["_emscripten_bind_b2WheelJoint__GetLocalAnchorA_p0"] = asm["_emscripten_bind_b2WheelJoint__GetLocalAnchorA_p0"];
var _emscripten_bind_b2FrictionJointDef__set_bodyB_p1 = Module["_emscripten_bind_b2FrictionJointDef__set_bodyB_p1"] = asm["_emscripten_bind_b2FrictionJointDef__set_bodyB_p1"];
var _emscripten_bind_b2WheelJoint__SetSpringFrequencyHz_p1 = Module["_emscripten_bind_b2WheelJoint__SetSpringFrequencyHz_p1"] = asm["_emscripten_bind_b2WheelJoint__SetSpringFrequencyHz_p1"];
var _emscripten_bind_b2MouseJoint__SetFrequency_p1 = Module["_emscripten_bind_b2MouseJoint__SetFrequency_p1"] = asm["_emscripten_bind_b2MouseJoint__SetFrequency_p1"];
var _emscripten_bind_b2Timer__b2Timer_p0 = Module["_emscripten_bind_b2Timer__b2Timer_p0"] = asm["_emscripten_bind_b2Timer__b2Timer_p0"];
var _emscripten_bind_b2Filter____destroy___p0 = Module["_emscripten_bind_b2Filter____destroy___p0"] = asm["_emscripten_bind_b2Filter____destroy___p0"];
var _emscripten_bind_b2WeldJointDef__get_dampingRatio_p0 = Module["_emscripten_bind_b2WeldJointDef__get_dampingRatio_p0"] = asm["_emscripten_bind_b2WeldJointDef__get_dampingRatio_p0"];
var _emscripten_bind_b2Fixture__GetUserData_p0 = Module["_emscripten_bind_b2Fixture__GetUserData_p0"] = asm["_emscripten_bind_b2Fixture__GetUserData_p0"];
var _emscripten_bind_b2AABB__get_upperBound_p0 = Module["_emscripten_bind_b2AABB__get_upperBound_p0"] = asm["_emscripten_bind_b2AABB__get_upperBound_p0"];
var _emscripten_bind_b2PulleyJoint__Dump_p0 = Module["_emscripten_bind_b2PulleyJoint__Dump_p0"] = asm["_emscripten_bind_b2PulleyJoint__Dump_p0"];
var _emscripten_bind_b2RopeJointDef__get_localAnchorA_p0 = Module["_emscripten_bind_b2RopeJointDef__get_localAnchorA_p0"] = asm["_emscripten_bind_b2RopeJointDef__get_localAnchorA_p0"];
var _emscripten_bind_b2RevoluteJoint__GetBodyA_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetBodyA_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetBodyA_p0"];
var _emscripten_bind_b2CircleShape__get_m_radius_p0 = Module["_emscripten_bind_b2CircleShape__get_m_radius_p0"] = asm["_emscripten_bind_b2CircleShape__get_m_radius_p0"];
var _emscripten_bind_b2DistanceJoint__GetLength_p0 = Module["_emscripten_bind_b2DistanceJoint__GetLength_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetLength_p0"];
var _emscripten_bind_b2BodyDef__set_angularVelocity_p1 = Module["_emscripten_bind_b2BodyDef__set_angularVelocity_p1"] = asm["_emscripten_bind_b2BodyDef__set_angularVelocity_p1"];
var _emscripten_bind_b2Color__get_b_p0 = Module["_emscripten_bind_b2Color__get_b_p0"] = asm["_emscripten_bind_b2Color__get_b_p0"];
var _emscripten_bind_b2BroadPhase__GetProxyCount_p0 = Module["_emscripten_bind_b2BroadPhase__GetProxyCount_p0"] = asm["_emscripten_bind_b2BroadPhase__GetProxyCount_p0"];
var _emscripten_bind_b2RevoluteJoint__SetMotorSpeed_p1 = Module["_emscripten_bind_b2RevoluteJoint__SetMotorSpeed_p1"] = asm["_emscripten_bind_b2RevoluteJoint__SetMotorSpeed_p1"];
var _emscripten_bind_b2WeldJoint__GetReactionTorque_p1 = Module["_emscripten_bind_b2WeldJoint__GetReactionTorque_p1"] = asm["_emscripten_bind_b2WeldJoint__GetReactionTorque_p1"];
var _emscripten_bind_b2GearJoint__SetUserData_p1 = Module["_emscripten_bind_b2GearJoint__SetUserData_p1"] = asm["_emscripten_bind_b2GearJoint__SetUserData_p1"];
var _emscripten_bind_b2PrismaticJoint__GetAnchorB_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetAnchorB_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetAnchorB_p0"];
var _emscripten_bind_b2MouseJointDef__set_target_p1 = Module["_emscripten_bind_b2MouseJointDef__set_target_p1"] = asm["_emscripten_bind_b2MouseJointDef__set_target_p1"];
var _emscripten_bind_b2EdgeShape__ComputeAABB_p3 = Module["_emscripten_bind_b2EdgeShape__ComputeAABB_p3"] = asm["_emscripten_bind_b2EdgeShape__ComputeAABB_p3"];
var _emscripten_bind_b2Body__GetFixtureList_p0 = Module["_emscripten_bind_b2Body__GetFixtureList_p0"] = asm["_emscripten_bind_b2Body__GetFixtureList_p0"];
var _emscripten_bind_b2RopeJoint__SetMaxLength_p1 = Module["_emscripten_bind_b2RopeJoint__SetMaxLength_p1"] = asm["_emscripten_bind_b2RopeJoint__SetMaxLength_p1"];
var _emscripten_bind_b2WheelJointDef__set_localAnchorB_p1 = Module["_emscripten_bind_b2WheelJointDef__set_localAnchorB_p1"] = asm["_emscripten_bind_b2WheelJointDef__set_localAnchorB_p1"];
var _emscripten_bind_b2WheelJoint__GetReactionTorque_p1 = Module["_emscripten_bind_b2WheelJoint__GetReactionTorque_p1"] = asm["_emscripten_bind_b2WheelJoint__GetReactionTorque_p1"];
var _emscripten_bind_b2FrictionJointDef__set_bodyA_p1 = Module["_emscripten_bind_b2FrictionJointDef__set_bodyA_p1"] = asm["_emscripten_bind_b2FrictionJointDef__set_bodyA_p1"];
var _emscripten_bind_b2WheelJoint__GetLocalAnchorB_p0 = Module["_emscripten_bind_b2WheelJoint__GetLocalAnchorB_p0"] = asm["_emscripten_bind_b2WheelJoint__GetLocalAnchorB_p0"];
var _emscripten_bind_b2PrismaticJointDef__set_localAxisA_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_localAxisA_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_localAxisA_p1"];
var _emscripten_bind_b2PrismaticJointDef__set_localAnchorA_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_localAnchorA_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_localAnchorA_p1"];
var _emscripten_bind_b2RevoluteJoint__GetReactionTorque_p1 = Module["_emscripten_bind_b2RevoluteJoint__GetReactionTorque_p1"] = asm["_emscripten_bind_b2RevoluteJoint__GetReactionTorque_p1"];
var _emscripten_bind_b2Joint__GetAnchorB_p0 = Module["_emscripten_bind_b2Joint__GetAnchorB_p0"] = asm["_emscripten_bind_b2Joint__GetAnchorB_p0"];
var _emscripten_bind_b2CircleShape__set_m_radius_p1 = Module["_emscripten_bind_b2CircleShape__set_m_radius_p1"] = asm["_emscripten_bind_b2CircleShape__set_m_radius_p1"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _emscripten_bind_b2World__GetContactManager_p0 = Module["_emscripten_bind_b2World__GetContactManager_p0"] = asm["_emscripten_bind_b2World__GetContactManager_p0"];
var _emscripten_bind_b2WeldJoint__GetLocalAnchorB_p0 = Module["_emscripten_bind_b2WeldJoint__GetLocalAnchorB_p0"] = asm["_emscripten_bind_b2WeldJoint__GetLocalAnchorB_p0"];
var _emscripten_bind_b2Contact__GetFixtureB_p0 = Module["_emscripten_bind_b2Contact__GetFixtureB_p0"] = asm["_emscripten_bind_b2Contact__GetFixtureB_p0"];
var _emscripten_bind_b2Rot__GetYAxis_p0 = Module["_emscripten_bind_b2Rot__GetYAxis_p0"] = asm["_emscripten_bind_b2Rot__GetYAxis_p0"];
var _emscripten_bind_b2RevoluteJointDef__set_upperAngle_p1 = Module["_emscripten_bind_b2RevoluteJointDef__set_upperAngle_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__set_upperAngle_p1"];
var _emscripten_bind_b2Shape__Clone_p1 = Module["_emscripten_bind_b2Shape__Clone_p1"] = asm["_emscripten_bind_b2Shape__Clone_p1"];
var _emscripten_bind_b2PulleyJoint__GetType_p0 = Module["_emscripten_bind_b2PulleyJoint__GetType_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetType_p0"];
var _emscripten_bind_b2AABB__set_lowerBound_p1 = Module["_emscripten_bind_b2AABB__set_lowerBound_p1"] = asm["_emscripten_bind_b2AABB__set_lowerBound_p1"];
var _emscripten_bind_b2PrismaticJointDef__get_motorSpeed_p0 = Module["_emscripten_bind_b2PrismaticJointDef__get_motorSpeed_p0"] = asm["_emscripten_bind_b2PrismaticJointDef__get_motorSpeed_p0"];
var _emscripten_bind_b2BodyDef__set_linearDamping_p1 = Module["_emscripten_bind_b2BodyDef__set_linearDamping_p1"] = asm["_emscripten_bind_b2BodyDef__set_linearDamping_p1"];
var _emscripten_bind_b2BroadPhase__GetTreeBalance_p0 = Module["_emscripten_bind_b2BroadPhase__GetTreeBalance_p0"] = asm["_emscripten_bind_b2BroadPhase__GetTreeBalance_p0"];
var _emscripten_bind_b2AABB__GetExtents_p0 = Module["_emscripten_bind_b2AABB__GetExtents_p0"] = asm["_emscripten_bind_b2AABB__GetExtents_p0"];
var _emscripten_bind_b2PrismaticJointDef__get_bodyB_p1 = Module["_emscripten_bind_b2PrismaticJointDef__get_bodyB_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__get_bodyB_p1"];
var _emscripten_bind_b2WeldJoint__SetFrequency_p1 = Module["_emscripten_bind_b2WeldJoint__SetFrequency_p1"] = asm["_emscripten_bind_b2WeldJoint__SetFrequency_p1"];
var _emscripten_bind_b2FixtureDef__get_density_p0 = Module["_emscripten_bind_b2FixtureDef__get_density_p0"] = asm["_emscripten_bind_b2FixtureDef__get_density_p0"];
var _emscripten_bind_b2Draw__ClearFlags_p1 = Module["_emscripten_bind_b2Draw__ClearFlags_p1"] = asm["_emscripten_bind_b2Draw__ClearFlags_p1"];
var _emscripten_bind_b2WeldJointDef__get_localAnchorA_p0 = Module["_emscripten_bind_b2WeldJointDef__get_localAnchorA_p0"] = asm["_emscripten_bind_b2WeldJointDef__get_localAnchorA_p0"];
var _emscripten_bind_b2PolygonShape__GetType_p0 = Module["_emscripten_bind_b2PolygonShape__GetType_p0"] = asm["_emscripten_bind_b2PolygonShape__GetType_p0"];
var _emscripten_bind_b2World__GetJointList_p0 = Module["_emscripten_bind_b2World__GetJointList_p0"] = asm["_emscripten_bind_b2World__GetJointList_p0"];
var _emscripten_bind_b2BroadPhase__GetUserData_p1 = Module["_emscripten_bind_b2BroadPhase__GetUserData_p1"] = asm["_emscripten_bind_b2BroadPhase__GetUserData_p1"];
var _emscripten_bind_b2Rot__get_c_p0 = Module["_emscripten_bind_b2Rot__get_c_p0"] = asm["_emscripten_bind_b2Rot__get_c_p0"];
var _emscripten_bind_b2World__GetAutoClearForces_p0 = Module["_emscripten_bind_b2World__GetAutoClearForces_p0"] = asm["_emscripten_bind_b2World__GetAutoClearForces_p0"];
var _emscripten_bind_b2Rot__GetAngle_p0 = Module["_emscripten_bind_b2Rot__GetAngle_p0"] = asm["_emscripten_bind_b2Rot__GetAngle_p0"];
var _emscripten_bind_b2AABB__IsValid_p0 = Module["_emscripten_bind_b2AABB__IsValid_p0"] = asm["_emscripten_bind_b2AABB__IsValid_p0"];
var _emscripten_bind_b2PolygonShape__Set_p2 = Module["_emscripten_bind_b2PolygonShape__Set_p2"] = asm["_emscripten_bind_b2PolygonShape__Set_p2"];
var _emscripten_bind_b2FixtureDef__set_isSensor_p1 = Module["_emscripten_bind_b2FixtureDef__set_isSensor_p1"] = asm["_emscripten_bind_b2FixtureDef__set_isSensor_p1"];
var _emscripten_bind_b2World__CreateJoint_p1 = Module["_emscripten_bind_b2World__CreateJoint_p1"] = asm["_emscripten_bind_b2World__CreateJoint_p1"];
var _emscripten_bind_b2WheelJoint__GetDefinition_p1 = Module["_emscripten_bind_b2WheelJoint__GetDefinition_p1"] = asm["_emscripten_bind_b2WheelJoint__GetDefinition_p1"];
var _emscripten_bind_b2Color__set_b_p1 = Module["_emscripten_bind_b2Color__set_b_p1"] = asm["_emscripten_bind_b2Color__set_b_p1"];
var _emscripten_bind_b2PrismaticJointDef__get_referenceAngle_p0 = Module["_emscripten_bind_b2PrismaticJointDef__get_referenceAngle_p0"] = asm["_emscripten_bind_b2PrismaticJointDef__get_referenceAngle_p0"];
var _emscripten_bind_b2Body__GetLocalCenter_p0 = Module["_emscripten_bind_b2Body__GetLocalCenter_p0"] = asm["_emscripten_bind_b2Body__GetLocalCenter_p0"];
var _emscripten_bind_b2WheelJoint__GetLocalAxisA_p0 = Module["_emscripten_bind_b2WheelJoint__GetLocalAxisA_p0"] = asm["_emscripten_bind_b2WheelJoint__GetLocalAxisA_p0"];
var _emscripten_bind_b2Body__SetAngularVelocity_p1 = Module["_emscripten_bind_b2Body__SetAngularVelocity_p1"] = asm["_emscripten_bind_b2Body__SetAngularVelocity_p1"];
var _emscripten_bind_b2World__SetGravity_p1 = Module["_emscripten_bind_b2World__SetGravity_p1"] = asm["_emscripten_bind_b2World__SetGravity_p1"];
var _emscripten_bind_b2CircleShape__TestPoint_p2 = Module["_emscripten_bind_b2CircleShape__TestPoint_p2"] = asm["_emscripten_bind_b2CircleShape__TestPoint_p2"];
var _emscripten_bind_b2Body__SetAwake_p1 = Module["_emscripten_bind_b2Body__SetAwake_p1"] = asm["_emscripten_bind_b2Body__SetAwake_p1"];
var _emscripten_bind_b2Filter__set_categoryBits_p1 = Module["_emscripten_bind_b2Filter__set_categoryBits_p1"] = asm["_emscripten_bind_b2Filter__set_categoryBits_p1"];
var _emscripten_bind_b2DynamicTree__RebuildBottomUp_p0 = Module["_emscripten_bind_b2DynamicTree__RebuildBottomUp_p0"] = asm["_emscripten_bind_b2DynamicTree__RebuildBottomUp_p0"];
var _emscripten_bind_b2PrismaticJointDef__get_collideConnected_p1 = Module["_emscripten_bind_b2PrismaticJointDef__get_collideConnected_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__get_collideConnected_p1"];
var _emscripten_bind_b2World__CreateBody_p1 = Module["_emscripten_bind_b2World__CreateBody_p1"] = asm["_emscripten_bind_b2World__CreateBody_p1"];
var _emscripten_bind_b2JointDef__get_bodyB_p0 = Module["_emscripten_bind_b2JointDef__get_bodyB_p0"] = asm["_emscripten_bind_b2JointDef__get_bodyB_p0"];
var _emscripten_bind_b2ChainShape__get_m_count_p0 = Module["_emscripten_bind_b2ChainShape__get_m_count_p0"] = asm["_emscripten_bind_b2ChainShape__get_m_count_p0"];
var _emscripten_bind_b2PrismaticJoint__GetAnchorA_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetAnchorA_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetAnchorA_p0"];
var _emscripten_bind_b2PulleyJoint__GetRatio_p0 = Module["_emscripten_bind_b2PulleyJoint__GetRatio_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetRatio_p0"];
var _emscripten_bind_b2WheelJointDef__set_localAxisA_p1 = Module["_emscripten_bind_b2WheelJointDef__set_localAxisA_p1"] = asm["_emscripten_bind_b2WheelJointDef__set_localAxisA_p1"];
var _emscripten_bind_b2Draw__DrawCircle_p3 = Module["_emscripten_bind_b2Draw__DrawCircle_p3"] = asm["_emscripten_bind_b2Draw__DrawCircle_p3"];
var _emscripten_bind_b2CircleShape__GetVertex_p1 = Module["_emscripten_bind_b2CircleShape__GetVertex_p1"] = asm["_emscripten_bind_b2CircleShape__GetVertex_p1"];
var _emscripten_bind_b2WeldJoint__GetCollideConnected_p0 = Module["_emscripten_bind_b2WeldJoint__GetCollideConnected_p0"] = asm["_emscripten_bind_b2WeldJoint__GetCollideConnected_p0"];
var _emscripten_bind_b2RevoluteJointDef__get_lowerAngle_p0 = Module["_emscripten_bind_b2RevoluteJointDef__get_lowerAngle_p0"] = asm["_emscripten_bind_b2RevoluteJointDef__get_lowerAngle_p0"];
var _emscripten_bind_b2PulleyJointDef__get_ratio_p0 = Module["_emscripten_bind_b2PulleyJointDef__get_ratio_p0"] = asm["_emscripten_bind_b2PulleyJointDef__get_ratio_p0"];
var _emscripten_bind_b2Joint__GetAnchorA_p0 = Module["_emscripten_bind_b2Joint__GetAnchorA_p0"] = asm["_emscripten_bind_b2Joint__GetAnchorA_p0"];
var _emscripten_bind_b2DistanceProxy__b2DistanceProxy_p0 = Module["_emscripten_bind_b2DistanceProxy__b2DistanceProxy_p0"] = asm["_emscripten_bind_b2DistanceProxy__b2DistanceProxy_p0"];
var _emscripten_bind_b2WheelJoint__IsActive_p0 = Module["_emscripten_bind_b2WheelJoint__IsActive_p0"] = asm["_emscripten_bind_b2WheelJoint__IsActive_p0"];
var _emscripten_bind_b2Transform____destroy___p0 = Module["_emscripten_bind_b2Transform____destroy___p0"] = asm["_emscripten_bind_b2Transform____destroy___p0"];
var _emscripten_bind_b2PolygonShape__ComputeMass_p2 = Module["_emscripten_bind_b2PolygonShape__ComputeMass_p2"] = asm["_emscripten_bind_b2PolygonShape__ComputeMass_p2"];
var _emscripten_bind_b2RopeJointDef__get_bodyA_p1 = Module["_emscripten_bind_b2RopeJointDef__get_bodyA_p1"] = asm["_emscripten_bind_b2RopeJointDef__get_bodyA_p1"];
var _emscripten_bind_b2WheelJoint__b2WheelJoint_p1 = Module["_emscripten_bind_b2WheelJoint__b2WheelJoint_p1"] = asm["_emscripten_bind_b2WheelJoint__b2WheelJoint_p1"];
var _emscripten_bind_b2RopeJoint__GetMaxLength_p0 = Module["_emscripten_bind_b2RopeJoint__GetMaxLength_p0"] = asm["_emscripten_bind_b2RopeJoint__GetMaxLength_p0"];
var _emscripten_bind_b2Draw__DrawTransform_p1 = Module["_emscripten_bind_b2Draw__DrawTransform_p1"] = asm["_emscripten_bind_b2Draw__DrawTransform_p1"];
var _emscripten_bind_b2DistanceJoint__GetType_p0 = Module["_emscripten_bind_b2DistanceJoint__GetType_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetType_p0"];
var _emscripten_bind_b2PolygonShape__get_m_radius_p0 = Module["_emscripten_bind_b2PolygonShape__get_m_radius_p0"] = asm["_emscripten_bind_b2PolygonShape__get_m_radius_p0"];
var _emscripten_bind_b2Fixture__GetFriction_p0 = Module["_emscripten_bind_b2Fixture__GetFriction_p0"] = asm["_emscripten_bind_b2Fixture__GetFriction_p0"];
var _emscripten_bind_b2Body__GetWorld_p0 = Module["_emscripten_bind_b2Body__GetWorld_p0"] = asm["_emscripten_bind_b2Body__GetWorld_p0"];
var _emscripten_bind_b2PolygonShape__b2PolygonShape_p0 = Module["_emscripten_bind_b2PolygonShape__b2PolygonShape_p0"] = asm["_emscripten_bind_b2PolygonShape__b2PolygonShape_p0"];
var _emscripten_bind_b2WeldJointDef__set_frequencyHz_p1 = Module["_emscripten_bind_b2WeldJointDef__set_frequencyHz_p1"] = asm["_emscripten_bind_b2WeldJointDef__set_frequencyHz_p1"];
var _emscripten_bind_b2RevoluteJoint__GetJointAngle_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetJointAngle_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetJointAngle_p0"];
var _emscripten_bind_b2Body__ResetMassData_p0 = Module["_emscripten_bind_b2Body__ResetMassData_p0"] = asm["_emscripten_bind_b2Body__ResetMassData_p0"];
var _emscripten_bind_b2RevoluteJoint__IsActive_p0 = Module["_emscripten_bind_b2RevoluteJoint__IsActive_p0"] = asm["_emscripten_bind_b2RevoluteJoint__IsActive_p0"];
var _emscripten_bind_b2FrictionJoint__SetUserData_p1 = Module["_emscripten_bind_b2FrictionJoint__SetUserData_p1"] = asm["_emscripten_bind_b2FrictionJoint__SetUserData_p1"];
var _emscripten_bind_b2PulleyJoint__GetReactionForce_p1 = Module["_emscripten_bind_b2PulleyJoint__GetReactionForce_p1"] = asm["_emscripten_bind_b2PulleyJoint__GetReactionForce_p1"];
var _emscripten_bind_b2PrismaticJointDef__set_localAnchorB_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_localAnchorB_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_localAnchorB_p1"];
var _emscripten_bind_b2World__SetContinuousPhysics_p1 = Module["_emscripten_bind_b2World__SetContinuousPhysics_p1"] = asm["_emscripten_bind_b2World__SetContinuousPhysics_p1"];
var _emscripten_bind_b2PulleyJoint__GetAnchorA_p0 = Module["_emscripten_bind_b2PulleyJoint__GetAnchorA_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetAnchorA_p0"];
var _emscripten_bind_b2ContactManager__FindNewContacts_p0 = Module["_emscripten_bind_b2ContactManager__FindNewContacts_p0"] = asm["_emscripten_bind_b2ContactManager__FindNewContacts_p0"];
var _emscripten_bind_b2DistanceJointDef__get_localAnchorA_p0 = Module["_emscripten_bind_b2DistanceJointDef__get_localAnchorA_p0"] = asm["_emscripten_bind_b2DistanceJointDef__get_localAnchorA_p0"];
var _emscripten_bind_b2CircleShape__GetVertexCount_p0 = Module["_emscripten_bind_b2CircleShape__GetVertexCount_p0"] = asm["_emscripten_bind_b2CircleShape__GetVertexCount_p0"];
var _emscripten_bind_b2PolygonShape__GetVertex_p1 = Module["_emscripten_bind_b2PolygonShape__GetVertex_p1"] = asm["_emscripten_bind_b2PolygonShape__GetVertex_p1"];
var _emscripten_bind_b2WeldJointDef__get_frequencyHz_p0 = Module["_emscripten_bind_b2WeldJointDef__get_frequencyHz_p0"] = asm["_emscripten_bind_b2WeldJointDef__get_frequencyHz_p0"];
var _emscripten_bind_b2ContactListener__BeginContact_p1 = Module["_emscripten_bind_b2ContactListener__BeginContact_p1"] = asm["_emscripten_bind_b2ContactListener__BeginContact_p1"];
var _emscripten_bind_b2BodyDef__set_gravityScale_p1 = Module["_emscripten_bind_b2BodyDef__set_gravityScale_p1"] = asm["_emscripten_bind_b2BodyDef__set_gravityScale_p1"];
var _emscripten_bind_b2DistanceJoint__GetAnchorA_p0 = Module["_emscripten_bind_b2DistanceJoint__GetAnchorA_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetAnchorA_p0"];
var _emscripten_bind_b2PrismaticJoint__GetLocalAxisA_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetLocalAxisA_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetLocalAxisA_p0"];
var _emscripten_bind_b2ChainShape__Clone_p1 = Module["_emscripten_bind_b2ChainShape__Clone_p1"] = asm["_emscripten_bind_b2ChainShape__Clone_p1"];
var _emscripten_bind_b2GearJointDef__b2GearJointDef_p0 = Module["_emscripten_bind_b2GearJointDef__b2GearJointDef_p0"] = asm["_emscripten_bind_b2GearJointDef__b2GearJointDef_p0"];
var _emscripten_bind_b2GearJoint__GetReactionTorque_p1 = Module["_emscripten_bind_b2GearJoint__GetReactionTorque_p1"] = asm["_emscripten_bind_b2GearJoint__GetReactionTorque_p1"];
var _emscripten_bind_b2Body__ApplyForce_p2 = Module["_emscripten_bind_b2Body__ApplyForce_p2"] = asm["_emscripten_bind_b2Body__ApplyForce_p2"];
var _emscripten_bind_b2ContactEdge__get_contact_p0 = Module["_emscripten_bind_b2ContactEdge__get_contact_p0"] = asm["_emscripten_bind_b2ContactEdge__get_contact_p0"];
var _emscripten_bind_b2GearJointDef__set_bodyB_p1 = Module["_emscripten_bind_b2GearJointDef__set_bodyB_p1"] = asm["_emscripten_bind_b2GearJointDef__set_bodyB_p1"];
var _emscripten_bind_b2RevoluteJointDef__get_enableMotor_p0 = Module["_emscripten_bind_b2RevoluteJointDef__get_enableMotor_p0"] = asm["_emscripten_bind_b2RevoluteJointDef__get_enableMotor_p0"];
var _emscripten_bind_b2RopeJoint____destroy___p0 = Module["_emscripten_bind_b2RopeJoint____destroy___p0"] = asm["_emscripten_bind_b2RopeJoint____destroy___p0"];
var _emscripten_bind_b2WheelJointDef__b2WheelJointDef_p0 = Module["_emscripten_bind_b2WheelJointDef__b2WheelJointDef_p0"] = asm["_emscripten_bind_b2WheelJointDef__b2WheelJointDef_p0"];
var _emscripten_bind_b2DistanceJoint__SetFrequency_p1 = Module["_emscripten_bind_b2DistanceJoint__SetFrequency_p1"] = asm["_emscripten_bind_b2DistanceJoint__SetFrequency_p1"];
var _emscripten_bind_b2PrismaticJointDef__set_lowerTranslation_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_lowerTranslation_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_lowerTranslation_p1"];
var _emscripten_bind_b2PrismaticJointDef__get_bodyA_p1 = Module["_emscripten_bind_b2PrismaticJointDef__get_bodyA_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__get_bodyA_p1"];
var _emscripten_bind_b2FixtureDef__get_friction_p0 = Module["_emscripten_bind_b2FixtureDef__get_friction_p0"] = asm["_emscripten_bind_b2FixtureDef__get_friction_p0"];
var _emscripten_bind_b2ContactEdge__get_next_p0 = Module["_emscripten_bind_b2ContactEdge__get_next_p0"] = asm["_emscripten_bind_b2ContactEdge__get_next_p0"];
var _emscripten_bind_b2RevoluteJoint__GetBodyB_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetBodyB_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetBodyB_p0"];
var _emscripten_bind_b2RevoluteJoint__GetUserData_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetUserData_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetUserData_p0"];
var _emscripten_bind_b2RopeJoint__GetBodyB_p0 = Module["_emscripten_bind_b2RopeJoint__GetBodyB_p0"] = asm["_emscripten_bind_b2RopeJoint__GetBodyB_p0"];
var _emscripten_bind_b2World__Step_p3 = Module["_emscripten_bind_b2World__Step_p3"] = asm["_emscripten_bind_b2World__Step_p3"];
var _emscripten_bind_b2Vec2__set_x_p1 = Module["_emscripten_bind_b2Vec2__set_x_p1"] = asm["_emscripten_bind_b2Vec2__set_x_p1"];
var _emscripten_bind_b2ContactManager__b2ContactManager_p0 = Module["_emscripten_bind_b2ContactManager__b2ContactManager_p0"] = asm["_emscripten_bind_b2ContactManager__b2ContactManager_p0"];
var _emscripten_bind_b2RopeJoint__GetNext_p0 = Module["_emscripten_bind_b2RopeJoint__GetNext_p0"] = asm["_emscripten_bind_b2RopeJoint__GetNext_p0"];
var _emscripten_bind_b2WeldJoint__SetDampingRatio_p1 = Module["_emscripten_bind_b2WeldJoint__SetDampingRatio_p1"] = asm["_emscripten_bind_b2WeldJoint__SetDampingRatio_p1"];
var _emscripten_bind_b2GearJoint__GetAnchorA_p0 = Module["_emscripten_bind_b2GearJoint__GetAnchorA_p0"] = asm["_emscripten_bind_b2GearJoint__GetAnchorA_p0"];
var _emscripten_bind_b2Contact__GetRestitution_p0 = Module["_emscripten_bind_b2Contact__GetRestitution_p0"] = asm["_emscripten_bind_b2Contact__GetRestitution_p0"];
var _emscripten_bind_b2MouseJointDef____destroy___p0 = Module["_emscripten_bind_b2MouseJointDef____destroy___p0"] = asm["_emscripten_bind_b2MouseJointDef____destroy___p0"];
var _emscripten_bind_b2Body__GetTransform_p0 = Module["_emscripten_bind_b2Body__GetTransform_p0"] = asm["_emscripten_bind_b2Body__GetTransform_p0"];
var _emscripten_bind_b2PrismaticJoint__b2PrismaticJoint_p1 = Module["_emscripten_bind_b2PrismaticJoint__b2PrismaticJoint_p1"] = asm["_emscripten_bind_b2PrismaticJoint__b2PrismaticJoint_p1"];
var _emscripten_bind_b2RopeJointDef__get_maxLength_p0 = Module["_emscripten_bind_b2RopeJointDef__get_maxLength_p0"] = asm["_emscripten_bind_b2RopeJointDef__get_maxLength_p0"];
var _emscripten_bind_b2DistanceJoint__GetAnchorB_p0 = Module["_emscripten_bind_b2DistanceJoint__GetAnchorB_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetAnchorB_p0"];
var _emscripten_bind_b2ChainShape__set_m_vertices_p1 = Module["_emscripten_bind_b2ChainShape__set_m_vertices_p1"] = asm["_emscripten_bind_b2ChainShape__set_m_vertices_p1"];
var _emscripten_bind_b2EdgeShape__TestPoint_p2 = Module["_emscripten_bind_b2EdgeShape__TestPoint_p2"] = asm["_emscripten_bind_b2EdgeShape__TestPoint_p2"];
var _emscripten_bind_b2FrictionJoint__GetMaxTorque_p0 = Module["_emscripten_bind_b2FrictionJoint__GetMaxTorque_p0"] = asm["_emscripten_bind_b2FrictionJoint__GetMaxTorque_p0"];
var _emscripten_bind_b2RopeJointDef__b2RopeJointDef_p0 = Module["_emscripten_bind_b2RopeJointDef__b2RopeJointDef_p0"] = asm["_emscripten_bind_b2RopeJointDef__b2RopeJointDef_p0"];
var _emscripten_bind_b2ContactManager__AddPair_p2 = Module["_emscripten_bind_b2ContactManager__AddPair_p2"] = asm["_emscripten_bind_b2ContactManager__AddPair_p2"];
var _emscripten_bind_b2Color__set_g_p1 = Module["_emscripten_bind_b2Color__set_g_p1"] = asm["_emscripten_bind_b2Color__set_g_p1"];
var _emscripten_bind_b2WheelJoint__IsMotorEnabled_p0 = Module["_emscripten_bind_b2WheelJoint__IsMotorEnabled_p0"] = asm["_emscripten_bind_b2WheelJoint__IsMotorEnabled_p0"];
var _emscripten_bind_b2QueryCallback__b2QueryCallback_p0 = Module["_emscripten_bind_b2QueryCallback__b2QueryCallback_p0"] = asm["_emscripten_bind_b2QueryCallback__b2QueryCallback_p0"];
var _emscripten_bind_b2WheelJointDef__get_collideConnected_p1 = Module["_emscripten_bind_b2WheelJointDef__get_collideConnected_p1"] = asm["_emscripten_bind_b2WheelJointDef__get_collideConnected_p1"];
var _emscripten_bind_b2FrictionJoint__Dump_p0 = Module["_emscripten_bind_b2FrictionJoint__Dump_p0"] = asm["_emscripten_bind_b2FrictionJoint__Dump_p0"];
var _emscripten_bind_b2ChainShape__SetPrevVertex_p1 = Module["_emscripten_bind_b2ChainShape__SetPrevVertex_p1"] = asm["_emscripten_bind_b2ChainShape__SetPrevVertex_p1"];
var _emscripten_bind_b2AABB__GetPerimeter_p0 = Module["_emscripten_bind_b2AABB__GetPerimeter_p0"] = asm["_emscripten_bind_b2AABB__GetPerimeter_p0"];
var _emscripten_bind_b2DistanceProxy__set_m_count_p1 = Module["_emscripten_bind_b2DistanceProxy__set_m_count_p1"] = asm["_emscripten_bind_b2DistanceProxy__set_m_count_p1"];
var _emscripten_bind_b2Body__GetLinearVelocityFromWorldPoint_p1 = Module["_emscripten_bind_b2Body__GetLinearVelocityFromWorldPoint_p1"] = asm["_emscripten_bind_b2Body__GetLinearVelocityFromWorldPoint_p1"];
var _emscripten_bind_b2MouseJointDef__set_bodyA_p1 = Module["_emscripten_bind_b2MouseJointDef__set_bodyA_p1"] = asm["_emscripten_bind_b2MouseJointDef__set_bodyA_p1"];
var _emscripten_bind_b2DynamicTree__GetAreaRatio_p0 = Module["_emscripten_bind_b2DynamicTree__GetAreaRatio_p0"] = asm["_emscripten_bind_b2DynamicTree__GetAreaRatio_p0"];
var _emscripten_bind_b2World__QueryAABB_p2 = Module["_emscripten_bind_b2World__QueryAABB_p2"] = asm["_emscripten_bind_b2World__QueryAABB_p2"];
var _emscripten_bind_b2RevoluteJoint__GetUpperLimit_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetUpperLimit_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetUpperLimit_p0"];
var _emscripten_bind_b2PrismaticJoint__GetJointSpeed_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetJointSpeed_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetJointSpeed_p0"];
var _emscripten_bind_b2PulleyJointDef__Initialize_p7 = Module["_emscripten_bind_b2PulleyJointDef__Initialize_p7"] = asm["_emscripten_bind_b2PulleyJointDef__Initialize_p7"];
var _emscripten_bind_b2World__GetTreeQuality_p0 = Module["_emscripten_bind_b2World__GetTreeQuality_p0"] = asm["_emscripten_bind_b2World__GetTreeQuality_p0"];
var _emscripten_bind_b2BodyDef__get_gravityScale_p0 = Module["_emscripten_bind_b2BodyDef__get_gravityScale_p0"] = asm["_emscripten_bind_b2BodyDef__get_gravityScale_p0"];
var _emscripten_bind_b2DistanceJoint__GetBodyA_p0 = Module["_emscripten_bind_b2DistanceJoint__GetBodyA_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetBodyA_p0"];
var _emscripten_bind_b2BroadPhase__DestroyProxy_p1 = Module["_emscripten_bind_b2BroadPhase__DestroyProxy_p1"] = asm["_emscripten_bind_b2BroadPhase__DestroyProxy_p1"];
var _emscripten_bind_b2PulleyJoint____destroy___p0 = Module["_emscripten_bind_b2PulleyJoint____destroy___p0"] = asm["_emscripten_bind_b2PulleyJoint____destroy___p0"];
var _emscripten_bind_b2PulleyJointDef__set_localAnchorA_p1 = Module["_emscripten_bind_b2PulleyJointDef__set_localAnchorA_p1"] = asm["_emscripten_bind_b2PulleyJointDef__set_localAnchorA_p1"];
var _emscripten_bind_b2DistanceJoint__GetLocalAnchorB_p0 = Module["_emscripten_bind_b2DistanceJoint__GetLocalAnchorB_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetLocalAnchorB_p0"];
var _emscripten_bind_b2ChainShape__GetChildEdge_p2 = Module["_emscripten_bind_b2ChainShape__GetChildEdge_p2"] = asm["_emscripten_bind_b2ChainShape__GetChildEdge_p2"];
var _emscripten_bind_b2EdgeShape__b2EdgeShape_p0 = Module["_emscripten_bind_b2EdgeShape__b2EdgeShape_p0"] = asm["_emscripten_bind_b2EdgeShape__b2EdgeShape_p0"];
var _emscripten_bind_b2ContactEdge__set_contact_p1 = Module["_emscripten_bind_b2ContactEdge__set_contact_p1"] = asm["_emscripten_bind_b2ContactEdge__set_contact_p1"];
var _emscripten_bind_b2ChainShape__TestPoint_p2 = Module["_emscripten_bind_b2ChainShape__TestPoint_p2"] = asm["_emscripten_bind_b2ChainShape__TestPoint_p2"];
var _emscripten_bind_b2ChainShape__GetType_p0 = Module["_emscripten_bind_b2ChainShape__GetType_p0"] = asm["_emscripten_bind_b2ChainShape__GetType_p0"];
var _emscripten_bind_b2Fixture__SetFilterData_p1 = Module["_emscripten_bind_b2Fixture__SetFilterData_p1"] = asm["_emscripten_bind_b2Fixture__SetFilterData_p1"];
var _emscripten_bind_b2WheelJoint__GetCollideConnected_p0 = Module["_emscripten_bind_b2WheelJoint__GetCollideConnected_p0"] = asm["_emscripten_bind_b2WheelJoint__GetCollideConnected_p0"];
var _emscripten_bind_b2Body__ApplyAngularImpulse_p1 = Module["_emscripten_bind_b2Body__ApplyAngularImpulse_p1"] = asm["_emscripten_bind_b2Body__ApplyAngularImpulse_p1"];
var _emscripten_bind_b2RevoluteJoint__SetLimits_p2 = Module["_emscripten_bind_b2RevoluteJoint__SetLimits_p2"] = asm["_emscripten_bind_b2RevoluteJoint__SetLimits_p2"];
var _emscripten_bind_b2WheelJoint__SetMotorSpeed_p1 = Module["_emscripten_bind_b2WheelJoint__SetMotorSpeed_p1"] = asm["_emscripten_bind_b2WheelJoint__SetMotorSpeed_p1"];
var _emscripten_bind_b2RevoluteJointDef__get_maxMotorTorque_p0 = Module["_emscripten_bind_b2RevoluteJointDef__get_maxMotorTorque_p0"] = asm["_emscripten_bind_b2RevoluteJointDef__get_maxMotorTorque_p0"];
var _emscripten_bind_b2CircleShape__get_m_p_p0 = Module["_emscripten_bind_b2CircleShape__get_m_p_p0"] = asm["_emscripten_bind_b2CircleShape__get_m_p_p0"];
var _emscripten_bind_b2BodyDef__get_awake_p0 = Module["_emscripten_bind_b2BodyDef__get_awake_p0"] = asm["_emscripten_bind_b2BodyDef__get_awake_p0"];
var _emscripten_bind_b2MouseJoint__GetAnchorB_p0 = Module["_emscripten_bind_b2MouseJoint__GetAnchorB_p0"] = asm["_emscripten_bind_b2MouseJoint__GetAnchorB_p0"];
var _emscripten_bind_b2Body__CreateFixture_p1 = Module["_emscripten_bind_b2Body__CreateFixture_p1"] = asm["_emscripten_bind_b2Body__CreateFixture_p1"];
var _emscripten_bind_b2Body__CreateFixture_p2 = Module["_emscripten_bind_b2Body__CreateFixture_p2"] = asm["_emscripten_bind_b2Body__CreateFixture_p2"];
var _emscripten_bind_b2GearJointDef____destroy___p0 = Module["_emscripten_bind_b2GearJointDef____destroy___p0"] = asm["_emscripten_bind_b2GearJointDef____destroy___p0"];
var _emscripten_bind_b2Fixture__GetDensity_p0 = Module["_emscripten_bind_b2Fixture__GetDensity_p0"] = asm["_emscripten_bind_b2Fixture__GetDensity_p0"];
var _emscripten_bind_b2AABB__get_lowerBound_p0 = Module["_emscripten_bind_b2AABB__get_lowerBound_p0"] = asm["_emscripten_bind_b2AABB__get_lowerBound_p0"];
var _emscripten_bind_b2WeldJoint__GetDampingRatio_p0 = Module["_emscripten_bind_b2WeldJoint__GetDampingRatio_p0"] = asm["_emscripten_bind_b2WeldJoint__GetDampingRatio_p0"];
var _emscripten_bind_b2FrictionJoint__GetReactionForce_p1 = Module["_emscripten_bind_b2FrictionJoint__GetReactionForce_p1"] = asm["_emscripten_bind_b2FrictionJoint__GetReactionForce_p1"];
var _emscripten_bind_b2PolygonShape__set_m_vertexCount_p1 = Module["_emscripten_bind_b2PolygonShape__set_m_vertexCount_p1"] = asm["_emscripten_bind_b2PolygonShape__set_m_vertexCount_p1"];
var _emscripten_bind_b2World__SetContactListener_p1 = Module["_emscripten_bind_b2World__SetContactListener_p1"] = asm["_emscripten_bind_b2World__SetContactListener_p1"];
var _emscripten_bind_b2PulleyJointDef__get_localAnchorB_p0 = Module["_emscripten_bind_b2PulleyJointDef__get_localAnchorB_p0"] = asm["_emscripten_bind_b2PulleyJointDef__get_localAnchorB_p0"];
var _emscripten_bind_b2FixtureDef__set_shape_p1 = Module["_emscripten_bind_b2FixtureDef__set_shape_p1"] = asm["_emscripten_bind_b2FixtureDef__set_shape_p1"];
var _emscripten_bind_b2DistanceJoint__SetDampingRatio_p1 = Module["_emscripten_bind_b2DistanceJoint__SetDampingRatio_p1"] = asm["_emscripten_bind_b2DistanceJoint__SetDampingRatio_p1"];
var _emscripten_bind_b2Joint__Dump_p0 = Module["_emscripten_bind_b2Joint__Dump_p0"] = asm["_emscripten_bind_b2Joint__Dump_p0"];
var _emscripten_bind_b2Shape__TestPoint_p2 = Module["_emscripten_bind_b2Shape__TestPoint_p2"] = asm["_emscripten_bind_b2Shape__TestPoint_p2"];
var _emscripten_bind_b2ChainShape__RayCast_p4 = Module["_emscripten_bind_b2ChainShape__RayCast_p4"] = asm["_emscripten_bind_b2ChainShape__RayCast_p4"];
var _emscripten_bind_b2RopeJoint__SetUserData_p1 = Module["_emscripten_bind_b2RopeJoint__SetUserData_p1"] = asm["_emscripten_bind_b2RopeJoint__SetUserData_p1"];
var _emscripten_bind_b2Transform__get_p_p0 = Module["_emscripten_bind_b2Transform__get_p_p0"] = asm["_emscripten_bind_b2Transform__get_p_p0"];
var _emscripten_bind_b2PulleyJoint__GetLengthA_p0 = Module["_emscripten_bind_b2PulleyJoint__GetLengthA_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetLengthA_p0"];
var _emscripten_bind_b2GearJoint__GetJoint2_p0 = Module["_emscripten_bind_b2GearJoint__GetJoint2_p0"] = asm["_emscripten_bind_b2GearJoint__GetJoint2_p0"];
var _emscripten_bind_b2DistanceJoint__GetBodyB_p0 = Module["_emscripten_bind_b2DistanceJoint__GetBodyB_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetBodyB_p0"];
var _emscripten_bind_b2Body__IsBullet_p0 = Module["_emscripten_bind_b2Body__IsBullet_p0"] = asm["_emscripten_bind_b2Body__IsBullet_p0"];
var _emscripten_bind_b2PrismaticJoint__Dump_p0 = Module["_emscripten_bind_b2PrismaticJoint__Dump_p0"] = asm["_emscripten_bind_b2PrismaticJoint__Dump_p0"];
var _emscripten_bind_b2WeldJointDef____destroy___p0 = Module["_emscripten_bind_b2WeldJointDef____destroy___p0"] = asm["_emscripten_bind_b2WeldJointDef____destroy___p0"];
var _emscripten_bind_b2PrismaticJoint__GetMotorSpeed_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetMotorSpeed_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetMotorSpeed_p0"];
var _emscripten_bind_b2ChainShape__get_m_vertices_p0 = Module["_emscripten_bind_b2ChainShape__get_m_vertices_p0"] = asm["_emscripten_bind_b2ChainShape__get_m_vertices_p0"];
var _emscripten_bind_b2World__SetWarmStarting_p1 = Module["_emscripten_bind_b2World__SetWarmStarting_p1"] = asm["_emscripten_bind_b2World__SetWarmStarting_p1"];
var _emscripten_bind_b2FrictionJoint__GetLocalAnchorA_p0 = Module["_emscripten_bind_b2FrictionJoint__GetLocalAnchorA_p0"] = asm["_emscripten_bind_b2FrictionJoint__GetLocalAnchorA_p0"];
var _emscripten_bind_b2RevoluteJointDef__get_referenceAngle_p0 = Module["_emscripten_bind_b2RevoluteJointDef__get_referenceAngle_p0"] = asm["_emscripten_bind_b2RevoluteJointDef__get_referenceAngle_p0"];
var _emscripten_bind_b2PrismaticJointDef__set_referenceAngle_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_referenceAngle_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_referenceAngle_p1"];
var _emscripten_bind_b2RevoluteJointDef__set_motorSpeed_p1 = Module["_emscripten_bind_b2RevoluteJointDef__set_motorSpeed_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__set_motorSpeed_p1"];
var _emscripten_bind_b2BodyDef__get_angularVelocity_p0 = Module["_emscripten_bind_b2BodyDef__get_angularVelocity_p0"] = asm["_emscripten_bind_b2BodyDef__get_angularVelocity_p0"];
var _emscripten_bind_b2GearJoint__GetNext_p0 = Module["_emscripten_bind_b2GearJoint__GetNext_p0"] = asm["_emscripten_bind_b2GearJoint__GetNext_p0"];
var _emscripten_bind_b2PrismaticJointDef__get_enableLimit_p0 = Module["_emscripten_bind_b2PrismaticJointDef__get_enableLimit_p0"] = asm["_emscripten_bind_b2PrismaticJointDef__get_enableLimit_p0"];
var _emscripten_bind_b2JointDef__get_type_p0 = Module["_emscripten_bind_b2JointDef__get_type_p0"] = asm["_emscripten_bind_b2JointDef__get_type_p0"];
var _emscripten_bind_b2WeldJoint__GetBodyB_p0 = Module["_emscripten_bind_b2WeldJoint__GetBodyB_p0"] = asm["_emscripten_bind_b2WeldJoint__GetBodyB_p0"];
var _emscripten_bind_b2WheelJoint__GetJointTranslation_p0 = Module["_emscripten_bind_b2WheelJoint__GetJointTranslation_p0"] = asm["_emscripten_bind_b2WheelJoint__GetJointTranslation_p0"];
var _emscripten_bind_b2RopeJointDef__set_bodyA_p1 = Module["_emscripten_bind_b2RopeJointDef__set_bodyA_p1"] = asm["_emscripten_bind_b2RopeJointDef__set_bodyA_p1"];
var _emscripten_bind_b2DistanceJointDef__get_localAnchorB_p0 = Module["_emscripten_bind_b2DistanceJointDef__get_localAnchorB_p0"] = asm["_emscripten_bind_b2DistanceJointDef__get_localAnchorB_p0"];
var _emscripten_bind_b2PulleyJoint__GetGroundAnchorB_p0 = Module["_emscripten_bind_b2PulleyJoint__GetGroundAnchorB_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetGroundAnchorB_p0"];
var _emscripten_bind_b2PulleyJointDef__get_groundAnchorB_p0 = Module["_emscripten_bind_b2PulleyJointDef__get_groundAnchorB_p0"] = asm["_emscripten_bind_b2PulleyJointDef__get_groundAnchorB_p0"];
var _emscripten_bind_b2Body__GetPosition_p0 = Module["_emscripten_bind_b2Body__GetPosition_p0"] = asm["_emscripten_bind_b2Body__GetPosition_p0"];
var _emscripten_bind_b2BroadPhase__b2BroadPhase_p0 = Module["_emscripten_bind_b2BroadPhase__b2BroadPhase_p0"] = asm["_emscripten_bind_b2BroadPhase__b2BroadPhase_p0"];
var _emscripten_bind_b2BodyDef__set_userData_p1 = Module["_emscripten_bind_b2BodyDef__set_userData_p1"] = asm["_emscripten_bind_b2BodyDef__set_userData_p1"];
var _emscripten_bind_b2PrismaticJoint__EnableMotor_p1 = Module["_emscripten_bind_b2PrismaticJoint__EnableMotor_p1"] = asm["_emscripten_bind_b2PrismaticJoint__EnableMotor_p1"];
var _emscripten_bind_b2PrismaticJointDef__get_upperTranslation_p0 = Module["_emscripten_bind_b2PrismaticJointDef__get_upperTranslation_p0"] = asm["_emscripten_bind_b2PrismaticJointDef__get_upperTranslation_p0"];
var _emscripten_bind_b2ChainShape__set_m_radius_p1 = Module["_emscripten_bind_b2ChainShape__set_m_radius_p1"] = asm["_emscripten_bind_b2ChainShape__set_m_radius_p1"];
var _emscripten_bind_b2GearJointDef__get_joint2_p0 = Module["_emscripten_bind_b2GearJointDef__get_joint2_p0"] = asm["_emscripten_bind_b2GearJointDef__get_joint2_p0"];
var _emscripten_bind_b2PrismaticJointDef__set_collideConnected_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_collideConnected_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_collideConnected_p1"];
var _emscripten_bind_b2BroadPhase__TestOverlap_p2 = Module["_emscripten_bind_b2BroadPhase__TestOverlap_p2"] = asm["_emscripten_bind_b2BroadPhase__TestOverlap_p2"];
var _emscripten_bind_b2Fixture__SetDensity_p1 = Module["_emscripten_bind_b2Fixture__SetDensity_p1"] = asm["_emscripten_bind_b2Fixture__SetDensity_p1"];
var _emscripten_bind_b2RevoluteJointDef__set_enableLimit_p1 = Module["_emscripten_bind_b2RevoluteJointDef__set_enableLimit_p1"] = asm["_emscripten_bind_b2RevoluteJointDef__set_enableLimit_p1"];
var _emscripten_bind_b2Body__IsAwake_p0 = Module["_emscripten_bind_b2Body__IsAwake_p0"] = asm["_emscripten_bind_b2Body__IsAwake_p0"];
var _emscripten_bind_b2MouseJoint__GetAnchorA_p0 = Module["_emscripten_bind_b2MouseJoint__GetAnchorA_p0"] = asm["_emscripten_bind_b2MouseJoint__GetAnchorA_p0"];
var _emscripten_bind_b2PolygonShape__SetAsBox_p4 = Module["_emscripten_bind_b2PolygonShape__SetAsBox_p4"] = asm["_emscripten_bind_b2PolygonShape__SetAsBox_p4"];
var _emscripten_bind_b2RevoluteJoint__GetReferenceAngle_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetReferenceAngle_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetReferenceAngle_p0"];
var _emscripten_bind_b2GearJointDef__set_joint1_p1 = Module["_emscripten_bind_b2GearJointDef__set_joint1_p1"] = asm["_emscripten_bind_b2GearJointDef__set_joint1_p1"];
var _emscripten_bind_b2Draw__DrawSolidCircle_p4 = Module["_emscripten_bind_b2Draw__DrawSolidCircle_p4"] = asm["_emscripten_bind_b2Draw__DrawSolidCircle_p4"];
var _emscripten_bind_b2World__GetSubStepping_p0 = Module["_emscripten_bind_b2World__GetSubStepping_p0"] = asm["_emscripten_bind_b2World__GetSubStepping_p0"];
var _emscripten_bind_b2Body__SetLinearDamping_p1 = Module["_emscripten_bind_b2Body__SetLinearDamping_p1"] = asm["_emscripten_bind_b2Body__SetLinearDamping_p1"];
var _emscripten_bind_b2Fixture__SetFriction_p1 = Module["_emscripten_bind_b2Fixture__SetFriction_p1"] = asm["_emscripten_bind_b2Fixture__SetFriction_p1"];
var _emscripten_bind_b2Filter__get_groupIndex_p0 = Module["_emscripten_bind_b2Filter__get_groupIndex_p0"] = asm["_emscripten_bind_b2Filter__get_groupIndex_p0"];
var _emscripten_bind_b2FixtureDef__get_isSensor_p0 = Module["_emscripten_bind_b2FixtureDef__get_isSensor_p0"] = asm["_emscripten_bind_b2FixtureDef__get_isSensor_p0"];
var _emscripten_bind_b2PrismaticJoint__GetUpperLimit_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetUpperLimit_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetUpperLimit_p0"];
var _emscripten_bind_b2MouseJoint__GetReactionTorque_p1 = Module["_emscripten_bind_b2MouseJoint__GetReactionTorque_p1"] = asm["_emscripten_bind_b2MouseJoint__GetReactionTorque_p1"];
var _emscripten_bind_b2Vec2__op_mul_p1 = Module["_emscripten_bind_b2Vec2__op_mul_p1"] = asm["_emscripten_bind_b2Vec2__op_mul_p1"];
var _emscripten_bind_b2DistanceProxy__Set_p2 = Module["_emscripten_bind_b2DistanceProxy__Set_p2"] = asm["_emscripten_bind_b2DistanceProxy__Set_p2"];
var _emscripten_bind_b2EdgeShape__Set_p2 = Module["_emscripten_bind_b2EdgeShape__Set_p2"] = asm["_emscripten_bind_b2EdgeShape__Set_p2"];
var _emscripten_bind_b2BodyDef__get_userData_p0 = Module["_emscripten_bind_b2BodyDef__get_userData_p0"] = asm["_emscripten_bind_b2BodyDef__get_userData_p0"];
var _emscripten_bind_b2CircleShape__set_m_p_p1 = Module["_emscripten_bind_b2CircleShape__set_m_p_p1"] = asm["_emscripten_bind_b2CircleShape__set_m_p_p1"];
var _emscripten_bind_b2WheelJoint__GetMaxMotorTorque_p0 = Module["_emscripten_bind_b2WheelJoint__GetMaxMotorTorque_p0"] = asm["_emscripten_bind_b2WheelJoint__GetMaxMotorTorque_p0"];
var _emscripten_bind_b2World__SetContactFilter_p1 = Module["_emscripten_bind_b2World__SetContactFilter_p1"] = asm["_emscripten_bind_b2World__SetContactFilter_p1"];
var _emscripten_bind_b2Body__GetWorldPoint_p1 = Module["_emscripten_bind_b2Body__GetWorldPoint_p1"] = asm["_emscripten_bind_b2Body__GetWorldPoint_p1"];
var _emscripten_bind_b2WheelJointDef__set_dampingRatio_p1 = Module["_emscripten_bind_b2WheelJointDef__set_dampingRatio_p1"] = asm["_emscripten_bind_b2WheelJointDef__set_dampingRatio_p1"];
var _emscripten_bind_b2DistanceJointDef__set_collideConnected_p1 = Module["_emscripten_bind_b2DistanceJointDef__set_collideConnected_p1"] = asm["_emscripten_bind_b2DistanceJointDef__set_collideConnected_p1"];
var _emscripten_bind_b2DistanceProxy__get_m_count_p0 = Module["_emscripten_bind_b2DistanceProxy__get_m_count_p0"] = asm["_emscripten_bind_b2DistanceProxy__get_m_count_p0"];
var _emscripten_bind_b2WeldJointDef__set_dampingRatio_p1 = Module["_emscripten_bind_b2WeldJointDef__set_dampingRatio_p1"] = asm["_emscripten_bind_b2WeldJointDef__set_dampingRatio_p1"];
var _emscripten_bind_b2DistanceJointDef__set_localAnchorB_p1 = Module["_emscripten_bind_b2DistanceJointDef__set_localAnchorB_p1"] = asm["_emscripten_bind_b2DistanceJointDef__set_localAnchorB_p1"];
var _emscripten_bind_b2DistanceJoint__IsActive_p0 = Module["_emscripten_bind_b2DistanceJoint__IsActive_p0"] = asm["_emscripten_bind_b2DistanceJoint__IsActive_p0"];
var _emscripten_bind_b2Joint__GetUserData_p0 = Module["_emscripten_bind_b2Joint__GetUserData_p0"] = asm["_emscripten_bind_b2Joint__GetUserData_p0"];
var _emscripten_bind_b2FrictionJoint__GetCollideConnected_p0 = Module["_emscripten_bind_b2FrictionJoint__GetCollideConnected_p0"] = asm["_emscripten_bind_b2FrictionJoint__GetCollideConnected_p0"];
var _memset = Module["_memset"] = asm["_memset"];
var _emscripten_bind_b2WheelJoint__Dump_p0 = Module["_emscripten_bind_b2WheelJoint__Dump_p0"] = asm["_emscripten_bind_b2WheelJoint__Dump_p0"];
var _emscripten_bind_b2World__GetTreeBalance_p0 = Module["_emscripten_bind_b2World__GetTreeBalance_p0"] = asm["_emscripten_bind_b2World__GetTreeBalance_p0"];
var _emscripten_bind_b2ContactListener__b2ContactListener_p0 = Module["_emscripten_bind_b2ContactListener__b2ContactListener_p0"] = asm["_emscripten_bind_b2ContactListener__b2ContactListener_p0"];
var _emscripten_bind_b2ChainShape__get_m_radius_p0 = Module["_emscripten_bind_b2ChainShape__get_m_radius_p0"] = asm["_emscripten_bind_b2ChainShape__get_m_radius_p0"];
var _emscripten_bind_b2RopeJointDef__set_maxLength_p1 = Module["_emscripten_bind_b2RopeJointDef__set_maxLength_p1"] = asm["_emscripten_bind_b2RopeJointDef__set_maxLength_p1"];
var _emscripten_bind_b2PulleyJointDef__set_bodyB_p1 = Module["_emscripten_bind_b2PulleyJointDef__set_bodyB_p1"] = asm["_emscripten_bind_b2PulleyJointDef__set_bodyB_p1"];
var _emscripten_bind_b2PulleyJointDef__get_groundAnchorA_p0 = Module["_emscripten_bind_b2PulleyJointDef__get_groundAnchorA_p0"] = asm["_emscripten_bind_b2PulleyJointDef__get_groundAnchorA_p0"];
var _emscripten_bind_b2Body__ApplyLinearImpulse_p2 = Module["_emscripten_bind_b2Body__ApplyLinearImpulse_p2"] = asm["_emscripten_bind_b2Body__ApplyLinearImpulse_p2"];
var _emscripten_bind_b2RevoluteJoint__GetMotorSpeed_p0 = Module["_emscripten_bind_b2RevoluteJoint__GetMotorSpeed_p0"] = asm["_emscripten_bind_b2RevoluteJoint__GetMotorSpeed_p0"];
var _emscripten_bind_b2PrismaticJoint__GetUserData_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetUserData_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetUserData_p0"];
var _emscripten_bind_b2BroadPhase__GetTreeHeight_p0 = Module["_emscripten_bind_b2BroadPhase__GetTreeHeight_p0"] = asm["_emscripten_bind_b2BroadPhase__GetTreeHeight_p0"];
var _emscripten_bind_b2Draw__DrawSegment_p3 = Module["_emscripten_bind_b2Draw__DrawSegment_p3"] = asm["_emscripten_bind_b2Draw__DrawSegment_p3"];
var _emscripten_bind_b2Body__IsActive_p0 = Module["_emscripten_bind_b2Body__IsActive_p0"] = asm["_emscripten_bind_b2Body__IsActive_p0"];
var _emscripten_bind_b2Vec2__Set_p2 = Module["_emscripten_bind_b2Vec2__Set_p2"] = asm["_emscripten_bind_b2Vec2__Set_p2"];
var _emscripten_bind_b2PulleyJoint__GetUserData_p0 = Module["_emscripten_bind_b2PulleyJoint__GetUserData_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetUserData_p0"];
var _emscripten_bind_b2ContactEdge__b2ContactEdge_p0 = Module["_emscripten_bind_b2ContactEdge__b2ContactEdge_p0"] = asm["_emscripten_bind_b2ContactEdge__b2ContactEdge_p0"];
var _emscripten_bind_b2ContactManager__get_m_contactList_p0 = Module["_emscripten_bind_b2ContactManager__get_m_contactList_p0"] = asm["_emscripten_bind_b2ContactManager__get_m_contactList_p0"];
var _emscripten_bind_b2Vec3__b2Vec3_p0 = Module["_emscripten_bind_b2Vec3__b2Vec3_p0"] = asm["_emscripten_bind_b2Vec3__b2Vec3_p0"];
var _emscripten_bind_b2PulleyJoint__GetGroundAnchorA_p0 = Module["_emscripten_bind_b2PulleyJoint__GetGroundAnchorA_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetGroundAnchorA_p0"];
var _emscripten_bind_b2World____destroy___p0 = Module["_emscripten_bind_b2World____destroy___p0"] = asm["_emscripten_bind_b2World____destroy___p0"];
var _emscripten_bind_b2Vec2__get_x_p0 = Module["_emscripten_bind_b2Vec2__get_x_p0"] = asm["_emscripten_bind_b2Vec2__get_x_p0"];
var _emscripten_bind_b2PulleyJointDef____destroy___p0 = Module["_emscripten_bind_b2PulleyJointDef____destroy___p0"] = asm["_emscripten_bind_b2PulleyJointDef____destroy___p0"];
var _emscripten_bind_b2FixtureDef____destroy___p0 = Module["_emscripten_bind_b2FixtureDef____destroy___p0"] = asm["_emscripten_bind_b2FixtureDef____destroy___p0"];
var _emscripten_bind_b2EdgeShape__Clone_p1 = Module["_emscripten_bind_b2EdgeShape__Clone_p1"] = asm["_emscripten_bind_b2EdgeShape__Clone_p1"];
var _emscripten_bind_b2Body__GetUserData_p0 = Module["_emscripten_bind_b2Body__GetUserData_p0"] = asm["_emscripten_bind_b2Body__GetUserData_p0"];
var _emscripten_bind_b2Body__SetUserData_p1 = Module["_emscripten_bind_b2Body__SetUserData_p1"] = asm["_emscripten_bind_b2Body__SetUserData_p1"];
var _emscripten_bind_b2FixtureDef__set_friction_p1 = Module["_emscripten_bind_b2FixtureDef__set_friction_p1"] = asm["_emscripten_bind_b2FixtureDef__set_friction_p1"];
var _emscripten_bind_b2GearJoint__Dump_p0 = Module["_emscripten_bind_b2GearJoint__Dump_p0"] = asm["_emscripten_bind_b2GearJoint__Dump_p0"];
var _emscripten_bind_b2PrismaticJoint__SetMotorSpeed_p1 = Module["_emscripten_bind_b2PrismaticJoint__SetMotorSpeed_p1"] = asm["_emscripten_bind_b2PrismaticJoint__SetMotorSpeed_p1"];
var _emscripten_bind_b2DistanceJointDef____destroy___p0 = Module["_emscripten_bind_b2DistanceJointDef____destroy___p0"] = asm["_emscripten_bind_b2DistanceJointDef____destroy___p0"];
var _emscripten_bind_b2FrictionJointDef__Initialize_p3 = Module["_emscripten_bind_b2FrictionJointDef__Initialize_p3"] = asm["_emscripten_bind_b2FrictionJointDef__Initialize_p3"];
var _emscripten_bind_b2GearJoint__b2GearJoint_p1 = Module["_emscripten_bind_b2GearJoint__b2GearJoint_p1"] = asm["_emscripten_bind_b2GearJoint__b2GearJoint_p1"];
var _emscripten_bind_b2Body__SetSleepingAllowed_p1 = Module["_emscripten_bind_b2Body__SetSleepingAllowed_p1"] = asm["_emscripten_bind_b2Body__SetSleepingAllowed_p1"];
var _emscripten_bind_b2DistanceJoint__GetFrequency_p0 = Module["_emscripten_bind_b2DistanceJoint__GetFrequency_p0"] = asm["_emscripten_bind_b2DistanceJoint__GetFrequency_p0"];
var _emscripten_bind_b2PolygonShape__GetVertexCount_p0 = Module["_emscripten_bind_b2PolygonShape__GetVertexCount_p0"] = asm["_emscripten_bind_b2PolygonShape__GetVertexCount_p0"];
var _emscripten_bind_b2PulleyJoint__b2PulleyJoint_p1 = Module["_emscripten_bind_b2PulleyJoint__b2PulleyJoint_p1"] = asm["_emscripten_bind_b2PulleyJoint__b2PulleyJoint_p1"];
var _emscripten_bind_b2MouseJointDef__get_bodyB_p1 = Module["_emscripten_bind_b2MouseJointDef__get_bodyB_p1"] = asm["_emscripten_bind_b2MouseJointDef__get_bodyB_p1"];
var _emscripten_bind_b2ContactManager__set_m_contactList_p1 = Module["_emscripten_bind_b2ContactManager__set_m_contactList_p1"] = asm["_emscripten_bind_b2ContactManager__set_m_contactList_p1"];
var _emscripten_bind_b2MouseJoint__GetNext_p0 = Module["_emscripten_bind_b2MouseJoint__GetNext_p0"] = asm["_emscripten_bind_b2MouseJoint__GetNext_p0"];
var _emscripten_bind_b2Transform__get_q_p0 = Module["_emscripten_bind_b2Transform__get_q_p0"] = asm["_emscripten_bind_b2Transform__get_q_p0"];
var _emscripten_bind_b2DistanceJointDef__get_collideConnected_p1 = Module["_emscripten_bind_b2DistanceJointDef__get_collideConnected_p1"] = asm["_emscripten_bind_b2DistanceJointDef__get_collideConnected_p1"];
var _emscripten_bind_b2WeldJointDef__set_bodyB_p1 = Module["_emscripten_bind_b2WeldJointDef__set_bodyB_p1"] = asm["_emscripten_bind_b2WeldJointDef__set_bodyB_p1"];
var _emscripten_bind_b2DistanceJoint__GetReactionForce_p1 = Module["_emscripten_bind_b2DistanceJoint__GetReactionForce_p1"] = asm["_emscripten_bind_b2DistanceJoint__GetReactionForce_p1"];
var _emscripten_bind_b2FrictionJoint____destroy___p0 = Module["_emscripten_bind_b2FrictionJoint____destroy___p0"] = asm["_emscripten_bind_b2FrictionJoint____destroy___p0"];
var _emscripten_bind_b2PrismaticJoint__IsMotorEnabled_p0 = Module["_emscripten_bind_b2PrismaticJoint__IsMotorEnabled_p0"] = asm["_emscripten_bind_b2PrismaticJoint__IsMotorEnabled_p0"];
var _emscripten_bind_b2CircleShape__ComputeAABB_p3 = Module["_emscripten_bind_b2CircleShape__ComputeAABB_p3"] = asm["_emscripten_bind_b2CircleShape__ComputeAABB_p3"];
var _emscripten_bind_b2RevoluteJointDef__get_enableLimit_p0 = Module["_emscripten_bind_b2RevoluteJointDef__get_enableLimit_p0"] = asm["_emscripten_bind_b2RevoluteJointDef__get_enableLimit_p0"];
var _emscripten_bind_b2GearJoint__GetRatio_p0 = Module["_emscripten_bind_b2GearJoint__GetRatio_p0"] = asm["_emscripten_bind_b2GearJoint__GetRatio_p0"];
var _emscripten_bind_b2BlockAllocator__Allocate_p1 = Module["_emscripten_bind_b2BlockAllocator__Allocate_p1"] = asm["_emscripten_bind_b2BlockAllocator__Allocate_p1"];
var _emscripten_bind_b2GearJointDef__get_joint1_p0 = Module["_emscripten_bind_b2GearJointDef__get_joint1_p0"] = asm["_emscripten_bind_b2GearJointDef__get_joint1_p0"];
var _emscripten_bind_b2AABB__Contains_p1 = Module["_emscripten_bind_b2AABB__Contains_p1"] = asm["_emscripten_bind_b2AABB__Contains_p1"];
var _emscripten_bind_b2GearJointDef__set_ratio_p1 = Module["_emscripten_bind_b2GearJointDef__set_ratio_p1"] = asm["_emscripten_bind_b2GearJointDef__set_ratio_p1"];
var _emscripten_bind_b2ContactManager__Destroy_p1 = Module["_emscripten_bind_b2ContactManager__Destroy_p1"] = asm["_emscripten_bind_b2ContactManager__Destroy_p1"];
var _emscripten_bind_b2RevoluteJointDef__Initialize_p3 = Module["_emscripten_bind_b2RevoluteJointDef__Initialize_p3"] = asm["_emscripten_bind_b2RevoluteJointDef__Initialize_p3"];
var _emscripten_bind_b2BodyDef__set_angle_p1 = Module["_emscripten_bind_b2BodyDef__set_angle_p1"] = asm["_emscripten_bind_b2BodyDef__set_angle_p1"];
var _emscripten_bind_b2PrismaticJointDef__Initialize_p4 = Module["_emscripten_bind_b2PrismaticJointDef__Initialize_p4"] = asm["_emscripten_bind_b2PrismaticJointDef__Initialize_p4"];
var _emscripten_bind_b2Body__GetContactList_p0 = Module["_emscripten_bind_b2Body__GetContactList_p0"] = asm["_emscripten_bind_b2Body__GetContactList_p0"];
var _emscripten_bind_b2RevoluteJoint__EnableLimit_p1 = Module["_emscripten_bind_b2RevoluteJoint__EnableLimit_p1"] = asm["_emscripten_bind_b2RevoluteJoint__EnableLimit_p1"];
var _emscripten_bind_b2Body__GetWorldCenter_p0 = Module["_emscripten_bind_b2Body__GetWorldCenter_p0"] = asm["_emscripten_bind_b2Body__GetWorldCenter_p0"];
var _emscripten_bind_b2ContactManager__get_m_allocator_p0 = Module["_emscripten_bind_b2ContactManager__get_m_allocator_p0"] = asm["_emscripten_bind_b2ContactManager__get_m_allocator_p0"];
var _emscripten_bind_b2DistanceJointDef__set_localAnchorA_p1 = Module["_emscripten_bind_b2DistanceJointDef__set_localAnchorA_p1"] = asm["_emscripten_bind_b2DistanceJointDef__set_localAnchorA_p1"];
var _emscripten_bind_b2BodyDef__set_angularDamping_p1 = Module["_emscripten_bind_b2BodyDef__set_angularDamping_p1"] = asm["_emscripten_bind_b2BodyDef__set_angularDamping_p1"];
var _emscripten_bind_b2MouseJointDef__set_collideConnected_p1 = Module["_emscripten_bind_b2MouseJointDef__set_collideConnected_p1"] = asm["_emscripten_bind_b2MouseJointDef__set_collideConnected_p1"];
var _emscripten_bind_b2Shape__ComputeAABB_p3 = Module["_emscripten_bind_b2Shape__ComputeAABB_p3"] = asm["_emscripten_bind_b2Shape__ComputeAABB_p3"];
var _emscripten_bind_b2Joint__GetReactionTorque_p1 = Module["_emscripten_bind_b2Joint__GetReactionTorque_p1"] = asm["_emscripten_bind_b2Joint__GetReactionTorque_p1"];
var _emscripten_bind_b2WheelJoint__GetType_p0 = Module["_emscripten_bind_b2WheelJoint__GetType_p0"] = asm["_emscripten_bind_b2WheelJoint__GetType_p0"];
var _emscripten_bind_b2Vec3__op_add_p1 = Module["_emscripten_bind_b2Vec3__op_add_p1"] = asm["_emscripten_bind_b2Vec3__op_add_p1"];
var _emscripten_bind_b2Filter__get_categoryBits_p0 = Module["_emscripten_bind_b2Filter__get_categoryBits_p0"] = asm["_emscripten_bind_b2Filter__get_categoryBits_p0"];
var _emscripten_bind_b2Contact__GetFriction_p0 = Module["_emscripten_bind_b2Contact__GetFriction_p0"] = asm["_emscripten_bind_b2Contact__GetFriction_p0"];
var _emscripten_bind_b2CircleShape__GetChildCount_p0 = Module["_emscripten_bind_b2CircleShape__GetChildCount_p0"] = asm["_emscripten_bind_b2CircleShape__GetChildCount_p0"];
var _emscripten_bind_b2Transform__set_p_p1 = Module["_emscripten_bind_b2Transform__set_p_p1"] = asm["_emscripten_bind_b2Transform__set_p_p1"];
var _emscripten_bind_b2Fixture__GetNext_p0 = Module["_emscripten_bind_b2Fixture__GetNext_p0"] = asm["_emscripten_bind_b2Fixture__GetNext_p0"];
var _emscripten_bind_b2BodyDef__set_bullet_p1 = Module["_emscripten_bind_b2BodyDef__set_bullet_p1"] = asm["_emscripten_bind_b2BodyDef__set_bullet_p1"];
var _emscripten_bind_b2Vec3__op_sub_p0 = Module["_emscripten_bind_b2Vec3__op_sub_p0"] = asm["_emscripten_bind_b2Vec3__op_sub_p0"];
var _emscripten_bind_b2ContactManager__Collide_p0 = Module["_emscripten_bind_b2ContactManager__Collide_p0"] = asm["_emscripten_bind_b2ContactManager__Collide_p0"];
var _emscripten_bind_b2FrictionJoint__GetLocalAnchorB_p0 = Module["_emscripten_bind_b2FrictionJoint__GetLocalAnchorB_p0"] = asm["_emscripten_bind_b2FrictionJoint__GetLocalAnchorB_p0"];
var _emscripten_bind_b2ContactManager__get_m_contactListener_p0 = Module["_emscripten_bind_b2ContactManager__get_m_contactListener_p0"] = asm["_emscripten_bind_b2ContactManager__get_m_contactListener_p0"];
var _emscripten_bind_b2World__RayCast_p3 = Module["_emscripten_bind_b2World__RayCast_p3"] = asm["_emscripten_bind_b2World__RayCast_p3"];
var _emscripten_bind_b2WeldJoint__Dump_p0 = Module["_emscripten_bind_b2WeldJoint__Dump_p0"] = asm["_emscripten_bind_b2WeldJoint__Dump_p0"];
var _emscripten_bind_b2PrismaticJointDef__set_enableLimit_p1 = Module["_emscripten_bind_b2PrismaticJointDef__set_enableLimit_p1"] = asm["_emscripten_bind_b2PrismaticJointDef__set_enableLimit_p1"];
var _emscripten_bind_b2EdgeShape__GetType_p0 = Module["_emscripten_bind_b2EdgeShape__GetType_p0"] = asm["_emscripten_bind_b2EdgeShape__GetType_p0"];
var _emscripten_bind_b2RevoluteJoint__GetMotorTorque_p1 = Module["_emscripten_bind_b2RevoluteJoint__GetMotorTorque_p1"] = asm["_emscripten_bind_b2RevoluteJoint__GetMotorTorque_p1"];
var _emscripten_bind_b2Body__DestroyFixture_p1 = Module["_emscripten_bind_b2Body__DestroyFixture_p1"] = asm["_emscripten_bind_b2Body__DestroyFixture_p1"];
var _emscripten_bind_b2RevoluteJoint__SetMaxMotorTorque_p1 = Module["_emscripten_bind_b2RevoluteJoint__SetMaxMotorTorque_p1"] = asm["_emscripten_bind_b2RevoluteJoint__SetMaxMotorTorque_p1"];
var _emscripten_bind_b2MouseJointDef__get_bodyA_p1 = Module["_emscripten_bind_b2MouseJointDef__get_bodyA_p1"] = asm["_emscripten_bind_b2MouseJointDef__get_bodyA_p1"];
var _emscripten_bind_b2DynamicTree__GetHeight_p0 = Module["_emscripten_bind_b2DynamicTree__GetHeight_p0"] = asm["_emscripten_bind_b2DynamicTree__GetHeight_p0"];
var _emscripten_bind_b2ContactManager__get_m_contactCount_p0 = Module["_emscripten_bind_b2ContactManager__get_m_contactCount_p0"] = asm["_emscripten_bind_b2ContactManager__get_m_contactCount_p0"];
var _emscripten_bind_b2BlockAllocator__Free_p2 = Module["_emscripten_bind_b2BlockAllocator__Free_p2"] = asm["_emscripten_bind_b2BlockAllocator__Free_p2"];
var _emscripten_bind_b2GearJoint__SetRatio_p1 = Module["_emscripten_bind_b2GearJoint__SetRatio_p1"] = asm["_emscripten_bind_b2GearJoint__SetRatio_p1"];
var _emscripten_bind_b2BodyDef__get_angle_p0 = Module["_emscripten_bind_b2BodyDef__get_angle_p0"] = asm["_emscripten_bind_b2BodyDef__get_angle_p0"];
var _emscripten_bind_b2PrismaticJoint__GetReferenceAngle_p0 = Module["_emscripten_bind_b2PrismaticJoint__GetReferenceAngle_p0"] = asm["_emscripten_bind_b2PrismaticJoint__GetReferenceAngle_p0"];
var _emscripten_bind_b2WeldJointDef__set_bodyA_p1 = Module["_emscripten_bind_b2WeldJointDef__set_bodyA_p1"] = asm["_emscripten_bind_b2WeldJointDef__set_bodyA_p1"];
var _emscripten_bind_b2PulleyJoint__GetLengthB_p0 = Module["_emscripten_bind_b2PulleyJoint__GetLengthB_p0"] = asm["_emscripten_bind_b2PulleyJoint__GetLengthB_p0"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viifi = Module["dynCall_viifi"] = asm["dynCall_viifi"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_fif = Module["dynCall_fif"] = asm["dynCall_fif"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viifii = Module["dynCall_viifii"] = asm["dynCall_viifii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_viif = Module["dynCall_viif"] = asm["dynCall_viif"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_fiiiif = Module["dynCall_fiiiif"] = asm["dynCall_fiiiif"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };

// Warning: printing of i64 values may be slightly rounded! No deep i64 math used, so precise i64 code not included
var i64Math = null;

// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



